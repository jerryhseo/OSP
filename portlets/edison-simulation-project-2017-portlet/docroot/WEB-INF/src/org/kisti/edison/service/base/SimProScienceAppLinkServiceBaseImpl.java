/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.service.base;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import org.kisti.edison.model.SimProScienceAppLink;
import org.kisti.edison.service.SimProScienceAppLinkService;
import org.kisti.edison.service.persistence.RequestMemberFinder;
import org.kisti.edison.service.persistence.RequestMemberPersistence;
import org.kisti.edison.service.persistence.SimProScienceAppLinkFinder;
import org.kisti.edison.service.persistence.SimProScienceAppLinkPersistence;
import org.kisti.edison.service.persistence.SimulationProjectFinder;
import org.kisti.edison.service.persistence.SimulationProjectPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the sim pro science app link remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link org.kisti.edison.service.impl.SimProScienceAppLinkServiceImpl}.
 * </p>
 *
 * @author edison
 * @see org.kisti.edison.service.impl.SimProScienceAppLinkServiceImpl
 * @see org.kisti.edison.service.SimProScienceAppLinkServiceUtil
 * @generated
 */
public abstract class SimProScienceAppLinkServiceBaseImpl
	extends BaseServiceImpl implements SimProScienceAppLinkService,
		IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link org.kisti.edison.service.SimProScienceAppLinkServiceUtil} to access the sim pro science app link remote service.
	 */

	/**
	 * Returns the request member local service.
	 *
	 * @return the request member local service
	 */
	public org.kisti.edison.service.RequestMemberLocalService getRequestMemberLocalService() {
		return requestMemberLocalService;
	}

	/**
	 * Sets the request member local service.
	 *
	 * @param requestMemberLocalService the request member local service
	 */
	public void setRequestMemberLocalService(
		org.kisti.edison.service.RequestMemberLocalService requestMemberLocalService) {
		this.requestMemberLocalService = requestMemberLocalService;
	}

	/**
	 * Returns the request member remote service.
	 *
	 * @return the request member remote service
	 */
	public org.kisti.edison.service.RequestMemberService getRequestMemberService() {
		return requestMemberService;
	}

	/**
	 * Sets the request member remote service.
	 *
	 * @param requestMemberService the request member remote service
	 */
	public void setRequestMemberService(
		org.kisti.edison.service.RequestMemberService requestMemberService) {
		this.requestMemberService = requestMemberService;
	}

	/**
	 * Returns the request member persistence.
	 *
	 * @return the request member persistence
	 */
	public RequestMemberPersistence getRequestMemberPersistence() {
		return requestMemberPersistence;
	}

	/**
	 * Sets the request member persistence.
	 *
	 * @param requestMemberPersistence the request member persistence
	 */
	public void setRequestMemberPersistence(
		RequestMemberPersistence requestMemberPersistence) {
		this.requestMemberPersistence = requestMemberPersistence;
	}

	/**
	 * Returns the request member finder.
	 *
	 * @return the request member finder
	 */
	public RequestMemberFinder getRequestMemberFinder() {
		return requestMemberFinder;
	}

	/**
	 * Sets the request member finder.
	 *
	 * @param requestMemberFinder the request member finder
	 */
	public void setRequestMemberFinder(RequestMemberFinder requestMemberFinder) {
		this.requestMemberFinder = requestMemberFinder;
	}

	/**
	 * Returns the sim pro science app link local service.
	 *
	 * @return the sim pro science app link local service
	 */
	public org.kisti.edison.service.SimProScienceAppLinkLocalService getSimProScienceAppLinkLocalService() {
		return simProScienceAppLinkLocalService;
	}

	/**
	 * Sets the sim pro science app link local service.
	 *
	 * @param simProScienceAppLinkLocalService the sim pro science app link local service
	 */
	public void setSimProScienceAppLinkLocalService(
		org.kisti.edison.service.SimProScienceAppLinkLocalService simProScienceAppLinkLocalService) {
		this.simProScienceAppLinkLocalService = simProScienceAppLinkLocalService;
	}

	/**
	 * Returns the sim pro science app link remote service.
	 *
	 * @return the sim pro science app link remote service
	 */
	public org.kisti.edison.service.SimProScienceAppLinkService getSimProScienceAppLinkService() {
		return simProScienceAppLinkService;
	}

	/**
	 * Sets the sim pro science app link remote service.
	 *
	 * @param simProScienceAppLinkService the sim pro science app link remote service
	 */
	public void setSimProScienceAppLinkService(
		org.kisti.edison.service.SimProScienceAppLinkService simProScienceAppLinkService) {
		this.simProScienceAppLinkService = simProScienceAppLinkService;
	}

	/**
	 * Returns the sim pro science app link persistence.
	 *
	 * @return the sim pro science app link persistence
	 */
	public SimProScienceAppLinkPersistence getSimProScienceAppLinkPersistence() {
		return simProScienceAppLinkPersistence;
	}

	/**
	 * Sets the sim pro science app link persistence.
	 *
	 * @param simProScienceAppLinkPersistence the sim pro science app link persistence
	 */
	public void setSimProScienceAppLinkPersistence(
		SimProScienceAppLinkPersistence simProScienceAppLinkPersistence) {
		this.simProScienceAppLinkPersistence = simProScienceAppLinkPersistence;
	}

	/**
	 * Returns the sim pro science app link finder.
	 *
	 * @return the sim pro science app link finder
	 */
	public SimProScienceAppLinkFinder getSimProScienceAppLinkFinder() {
		return simProScienceAppLinkFinder;
	}

	/**
	 * Sets the sim pro science app link finder.
	 *
	 * @param simProScienceAppLinkFinder the sim pro science app link finder
	 */
	public void setSimProScienceAppLinkFinder(
		SimProScienceAppLinkFinder simProScienceAppLinkFinder) {
		this.simProScienceAppLinkFinder = simProScienceAppLinkFinder;
	}

	/**
	 * Returns the simulation project local service.
	 *
	 * @return the simulation project local service
	 */
	public org.kisti.edison.service.SimulationProjectLocalService getSimulationProjectLocalService() {
		return simulationProjectLocalService;
	}

	/**
	 * Sets the simulation project local service.
	 *
	 * @param simulationProjectLocalService the simulation project local service
	 */
	public void setSimulationProjectLocalService(
		org.kisti.edison.service.SimulationProjectLocalService simulationProjectLocalService) {
		this.simulationProjectLocalService = simulationProjectLocalService;
	}

	/**
	 * Returns the simulation project remote service.
	 *
	 * @return the simulation project remote service
	 */
	public org.kisti.edison.service.SimulationProjectService getSimulationProjectService() {
		return simulationProjectService;
	}

	/**
	 * Sets the simulation project remote service.
	 *
	 * @param simulationProjectService the simulation project remote service
	 */
	public void setSimulationProjectService(
		org.kisti.edison.service.SimulationProjectService simulationProjectService) {
		this.simulationProjectService = simulationProjectService;
	}

	/**
	 * Returns the simulation project persistence.
	 *
	 * @return the simulation project persistence
	 */
	public SimulationProjectPersistence getSimulationProjectPersistence() {
		return simulationProjectPersistence;
	}

	/**
	 * Sets the simulation project persistence.
	 *
	 * @param simulationProjectPersistence the simulation project persistence
	 */
	public void setSimulationProjectPersistence(
		SimulationProjectPersistence simulationProjectPersistence) {
		this.simulationProjectPersistence = simulationProjectPersistence;
	}

	/**
	 * Returns the simulation project finder.
	 *
	 * @return the simulation project finder
	 */
	public SimulationProjectFinder getSimulationProjectFinder() {
		return simulationProjectFinder;
	}

	/**
	 * Sets the simulation project finder.
	 *
	 * @param simulationProjectFinder the simulation project finder
	 */
	public void setSimulationProjectFinder(
		SimulationProjectFinder simulationProjectFinder) {
		this.simulationProjectFinder = simulationProjectFinder;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return SimProScienceAppLink.class;
	}

	protected String getModelClassName() {
		return SimProScienceAppLink.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = simProScienceAppLinkPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = org.kisti.edison.service.RequestMemberLocalService.class)
	protected org.kisti.edison.service.RequestMemberLocalService requestMemberLocalService;
	@BeanReference(type = org.kisti.edison.service.RequestMemberService.class)
	protected org.kisti.edison.service.RequestMemberService requestMemberService;
	@BeanReference(type = RequestMemberPersistence.class)
	protected RequestMemberPersistence requestMemberPersistence;
	@BeanReference(type = RequestMemberFinder.class)
	protected RequestMemberFinder requestMemberFinder;
	@BeanReference(type = org.kisti.edison.service.SimProScienceAppLinkLocalService.class)
	protected org.kisti.edison.service.SimProScienceAppLinkLocalService simProScienceAppLinkLocalService;
	@BeanReference(type = org.kisti.edison.service.SimProScienceAppLinkService.class)
	protected org.kisti.edison.service.SimProScienceAppLinkService simProScienceAppLinkService;
	@BeanReference(type = SimProScienceAppLinkPersistence.class)
	protected SimProScienceAppLinkPersistence simProScienceAppLinkPersistence;
	@BeanReference(type = SimProScienceAppLinkFinder.class)
	protected SimProScienceAppLinkFinder simProScienceAppLinkFinder;
	@BeanReference(type = org.kisti.edison.service.SimulationProjectLocalService.class)
	protected org.kisti.edison.service.SimulationProjectLocalService simulationProjectLocalService;
	@BeanReference(type = org.kisti.edison.service.SimulationProjectService.class)
	protected org.kisti.edison.service.SimulationProjectService simulationProjectService;
	@BeanReference(type = SimulationProjectPersistence.class)
	protected SimulationProjectPersistence simulationProjectPersistence;
	@BeanReference(type = SimulationProjectFinder.class)
	protected SimulationProjectFinder simulationProjectFinder;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private SimProScienceAppLinkServiceClpInvoker _clpInvoker = new SimProScienceAppLinkServiceClpInvoker();
}