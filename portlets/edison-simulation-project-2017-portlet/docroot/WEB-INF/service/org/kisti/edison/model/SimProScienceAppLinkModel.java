/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.model;

import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.edison.service.persistence.SimProScienceAppLinkPK;

import java.io.Serializable;

/**
 * The base model interface for the SimProScienceAppLink service. Represents a row in the &quot;EDSIMPRO_SimProScienceAppLink&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.model.impl.SimProScienceAppLinkModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.model.impl.SimProScienceAppLinkImpl}.
 * </p>
 *
 * @author edison
 * @see SimProScienceAppLink
 * @see org.kisti.edison.model.impl.SimProScienceAppLinkImpl
 * @see org.kisti.edison.model.impl.SimProScienceAppLinkModelImpl
 * @generated
 */
public interface SimProScienceAppLinkModel extends BaseModel<SimProScienceAppLink> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a sim pro science app link model instance should use the {@link SimProScienceAppLink} interface instead.
	 */

	/**
	 * Returns the primary key of this sim pro science app link.
	 *
	 * @return the primary key of this sim pro science app link
	 */
	public SimProScienceAppLinkPK getPrimaryKey();

	/**
	 * Sets the primary key of this sim pro science app link.
	 *
	 * @param primaryKey the primary key of this sim pro science app link
	 */
	public void setPrimaryKey(SimProScienceAppLinkPK primaryKey);

	/**
	 * Returns the sim pro science app link ID of this sim pro science app link.
	 *
	 * @return the sim pro science app link ID of this sim pro science app link
	 */
	public long getSimProScienceAppLinkId();

	/**
	 * Sets the sim pro science app link ID of this sim pro science app link.
	 *
	 * @param simProScienceAppLinkId the sim pro science app link ID of this sim pro science app link
	 */
	public void setSimProScienceAppLinkId(long simProScienceAppLinkId);

	/**
	 * Returns the simulation project ID of this sim pro science app link.
	 *
	 * @return the simulation project ID of this sim pro science app link
	 */
	public long getSimulationProjectId();

	/**
	 * Sets the simulation project ID of this sim pro science app link.
	 *
	 * @param simulationProjectId the simulation project ID of this sim pro science app link
	 */
	public void setSimulationProjectId(long simulationProjectId);

	/**
	 * Returns the science app ID of this sim pro science app link.
	 *
	 * @return the science app ID of this sim pro science app link
	 */
	public Long getScienceAppId();

	/**
	 * Sets the science app ID of this sim pro science app link.
	 *
	 * @param scienceAppId the science app ID of this sim pro science app link
	 */
	public void setScienceAppId(Long scienceAppId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.model.SimProScienceAppLink simProScienceAppLink);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.model.SimProScienceAppLink> toCacheModel();

	@Override
	public org.kisti.edison.model.SimProScienceAppLink toEscapedModel();

	@Override
	public org.kisti.edison.model.SimProScienceAppLink toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}