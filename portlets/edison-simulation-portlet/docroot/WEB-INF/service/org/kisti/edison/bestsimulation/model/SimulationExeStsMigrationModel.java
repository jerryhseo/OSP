/**
 * Copyright (c) 2016-present EDISON, KISTI. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.bestsimulation.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.edison.bestsimulation.service.persistence.SimulationExeStsMigrationPK;

import java.io.Serializable;

/**
 * The base model interface for the SimulationExeStsMigration service. Represents a row in the &quot;EDSIM_SimulationExeStsMigration&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.bestsimulation.model.impl.SimulationExeStsMigrationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.bestsimulation.model.impl.SimulationExeStsMigrationImpl}.
 * </p>
 *
 * @author EDISON
 * @see SimulationExeStsMigration
 * @see org.kisti.edison.bestsimulation.model.impl.SimulationExeStsMigrationImpl
 * @see org.kisti.edison.bestsimulation.model.impl.SimulationExeStsMigrationModelImpl
 * @generated
 */
public interface SimulationExeStsMigrationModel extends BaseModel<SimulationExeStsMigration> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a simulation exe sts migration model instance should use the {@link SimulationExeStsMigration} interface instead.
	 */

	/**
	 * Returns the primary key of this simulation exe sts migration.
	 *
	 * @return the primary key of this simulation exe sts migration
	 */
	public SimulationExeStsMigrationPK getPrimaryKey();

	/**
	 * Sets the primary key of this simulation exe sts migration.
	 *
	 * @param primaryKey the primary key of this simulation exe sts migration
	 */
	public void setPrimaryKey(SimulationExeStsMigrationPK primaryKey);

	/**
	 * Returns the science app ID of this simulation exe sts migration.
	 *
	 * @return the science app ID of this simulation exe sts migration
	 */
	public long getScienceAppId();

	/**
	 * Sets the science app ID of this simulation exe sts migration.
	 *
	 * @param scienceAppId the science app ID of this simulation exe sts migration
	 */
	public void setScienceAppId(long scienceAppId);

	/**
	 * Returns the group ID of this simulation exe sts migration.
	 *
	 * @return the group ID of this simulation exe sts migration
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this simulation exe sts migration.
	 *
	 * @param groupId the group ID of this simulation exe sts migration
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the submit date of this simulation exe sts migration.
	 *
	 * @return the submit date of this simulation exe sts migration
	 */
	@AutoEscape
	public String getSubmitDate();

	/**
	 * Sets the submit date of this simulation exe sts migration.
	 *
	 * @param submitDate the submit date of this simulation exe sts migration
	 */
	public void setSubmitDate(String submitDate);

	/**
	 * Returns the user cnt of this simulation exe sts migration.
	 *
	 * @return the user cnt of this simulation exe sts migration
	 */
	public long getUserCnt();

	/**
	 * Sets the user cnt of this simulation exe sts migration.
	 *
	 * @param userCnt the user cnt of this simulation exe sts migration
	 */
	public void setUserCnt(long userCnt);

	/**
	 * Returns the job cnt of this simulation exe sts migration.
	 *
	 * @return the job cnt of this simulation exe sts migration
	 */
	public long getJobCnt();

	/**
	 * Sets the job cnt of this simulation exe sts migration.
	 *
	 * @param jobCnt the job cnt of this simulation exe sts migration
	 */
	public void setJobCnt(long jobCnt);

	/**
	 * Returns the runtime of this simulation exe sts migration.
	 *
	 * @return the runtime of this simulation exe sts migration
	 */
	public long getRuntime();

	/**
	 * Sets the runtime of this simulation exe sts migration.
	 *
	 * @param runtime the runtime of this simulation exe sts migration
	 */
	public void setRuntime(long runtime);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.bestsimulation.model.SimulationExeStsMigration simulationExeStsMigration);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.bestsimulation.model.SimulationExeStsMigration> toCacheModel();

	@Override
	public org.kisti.edison.bestsimulation.model.SimulationExeStsMigration toEscapedModel();

	@Override
	public org.kisti.edison.bestsimulation.model.SimulationExeStsMigration toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}