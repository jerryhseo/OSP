/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.virtuallaboratory.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass;
import org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClassModel;
import org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClassSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the VirtualLabScienceAppLinkClass service. Represents a row in the &quot;EDVIR_VirtualLabScienceAppLinkClass&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClassModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VirtualLabScienceAppLinkClassImpl}.
 * </p>
 *
 * @author EDISON
 * @see VirtualLabScienceAppLinkClassImpl
 * @see org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass
 * @see org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClassModel
 * @generated
 */
@JSON(strict = true)
public class VirtualLabScienceAppLinkClassModelImpl extends BaseModelImpl<VirtualLabScienceAppLinkClass>
	implements VirtualLabScienceAppLinkClassModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a virtual lab science app link class model instance should use the {@link org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass} interface instead.
	 */
	public static final String TABLE_NAME = "EDVIR_VirtualLabScienceAppLinkClass";
	public static final Object[][] TABLE_COLUMNS = {
			{ "scienceAppClassSeqNo", Types.BIGINT },
			{ "classId", Types.BIGINT },
			{ "scienceAppSeqNo", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table EDVIR_VirtualLabScienceAppLinkClass (scienceAppClassSeqNo LONG not null primary key,classId LONG,scienceAppSeqNo LONG)";
	public static final String TABLE_SQL_DROP = "drop table EDVIR_VirtualLabScienceAppLinkClass";
	public static final String ORDER_BY_JPQL = " ORDER BY virtualLabScienceAppLinkClass.scienceAppClassSeqNo ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EDVIR_VirtualLabScienceAppLinkClass.scienceAppClassSeqNo ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass"),
			true);
	public static long CLASSID_COLUMN_BITMASK = 1L;
	public static long SCIENCEAPPCLASSSEQNO_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static VirtualLabScienceAppLinkClass toModel(
		VirtualLabScienceAppLinkClassSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		VirtualLabScienceAppLinkClass model = new VirtualLabScienceAppLinkClassImpl();

		model.setScienceAppClassSeqNo(soapModel.getScienceAppClassSeqNo());
		model.setClassId(soapModel.getClassId());
		model.setScienceAppSeqNo(soapModel.getScienceAppSeqNo());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<VirtualLabScienceAppLinkClass> toModels(
		VirtualLabScienceAppLinkClassSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<VirtualLabScienceAppLinkClass> models = new ArrayList<VirtualLabScienceAppLinkClass>(soapModels.length);

		for (VirtualLabScienceAppLinkClassSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass"));

	public VirtualLabScienceAppLinkClassModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _scienceAppClassSeqNo;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setScienceAppClassSeqNo(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _scienceAppClassSeqNo;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return VirtualLabScienceAppLinkClass.class;
	}

	@Override
	public String getModelClassName() {
		return VirtualLabScienceAppLinkClass.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("scienceAppClassSeqNo", getScienceAppClassSeqNo());
		attributes.put("classId", getClassId());
		attributes.put("scienceAppSeqNo", getScienceAppSeqNo());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long scienceAppClassSeqNo = (Long)attributes.get("scienceAppClassSeqNo");

		if (scienceAppClassSeqNo != null) {
			setScienceAppClassSeqNo(scienceAppClassSeqNo);
		}

		Long classId = (Long)attributes.get("classId");

		if (classId != null) {
			setClassId(classId);
		}

		Long scienceAppSeqNo = (Long)attributes.get("scienceAppSeqNo");

		if (scienceAppSeqNo != null) {
			setScienceAppSeqNo(scienceAppSeqNo);
		}
	}

	@JSON
	@Override
	public long getScienceAppClassSeqNo() {
		return _scienceAppClassSeqNo;
	}

	@Override
	public void setScienceAppClassSeqNo(long scienceAppClassSeqNo) {
		_scienceAppClassSeqNo = scienceAppClassSeqNo;
	}

	@JSON
	@Override
	public long getClassId() {
		return _classId;
	}

	@Override
	public void setClassId(long classId) {
		_columnBitmask |= CLASSID_COLUMN_BITMASK;

		if (!_setOriginalClassId) {
			_setOriginalClassId = true;

			_originalClassId = _classId;
		}

		_classId = classId;
	}

	public long getOriginalClassId() {
		return _originalClassId;
	}

	@JSON
	@Override
	public long getScienceAppSeqNo() {
		return _scienceAppSeqNo;
	}

	@Override
	public void setScienceAppSeqNo(long scienceAppSeqNo) {
		_scienceAppSeqNo = scienceAppSeqNo;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			VirtualLabScienceAppLinkClass.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public VirtualLabScienceAppLinkClass toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (VirtualLabScienceAppLinkClass)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		VirtualLabScienceAppLinkClassImpl virtualLabScienceAppLinkClassImpl = new VirtualLabScienceAppLinkClassImpl();

		virtualLabScienceAppLinkClassImpl.setScienceAppClassSeqNo(getScienceAppClassSeqNo());
		virtualLabScienceAppLinkClassImpl.setClassId(getClassId());
		virtualLabScienceAppLinkClassImpl.setScienceAppSeqNo(getScienceAppSeqNo());

		virtualLabScienceAppLinkClassImpl.resetOriginalValues();

		return virtualLabScienceAppLinkClassImpl;
	}

	@Override
	public int compareTo(
		VirtualLabScienceAppLinkClass virtualLabScienceAppLinkClass) {
		long primaryKey = virtualLabScienceAppLinkClass.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof VirtualLabScienceAppLinkClass)) {
			return false;
		}

		VirtualLabScienceAppLinkClass virtualLabScienceAppLinkClass = (VirtualLabScienceAppLinkClass)obj;

		long primaryKey = virtualLabScienceAppLinkClass.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		VirtualLabScienceAppLinkClassModelImpl virtualLabScienceAppLinkClassModelImpl =
			this;

		virtualLabScienceAppLinkClassModelImpl._originalClassId = virtualLabScienceAppLinkClassModelImpl._classId;

		virtualLabScienceAppLinkClassModelImpl._setOriginalClassId = false;

		virtualLabScienceAppLinkClassModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<VirtualLabScienceAppLinkClass> toCacheModel() {
		VirtualLabScienceAppLinkClassCacheModel virtualLabScienceAppLinkClassCacheModel =
			new VirtualLabScienceAppLinkClassCacheModel();

		virtualLabScienceAppLinkClassCacheModel.scienceAppClassSeqNo = getScienceAppClassSeqNo();

		virtualLabScienceAppLinkClassCacheModel.classId = getClassId();

		virtualLabScienceAppLinkClassCacheModel.scienceAppSeqNo = getScienceAppSeqNo();

		return virtualLabScienceAppLinkClassCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{scienceAppClassSeqNo=");
		sb.append(getScienceAppClassSeqNo());
		sb.append(", classId=");
		sb.append(getClassId());
		sb.append(", scienceAppSeqNo=");
		sb.append(getScienceAppSeqNo());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append(
			"org.kisti.edison.virtuallaboratory.model.VirtualLabScienceAppLinkClass");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>scienceAppClassSeqNo</column-name><column-value><![CDATA[");
		sb.append(getScienceAppClassSeqNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classId</column-name><column-value><![CDATA[");
		sb.append(getClassId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>scienceAppSeqNo</column-name><column-value><![CDATA[");
		sb.append(getScienceAppSeqNo());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = VirtualLabScienceAppLinkClass.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			VirtualLabScienceAppLinkClass.class
		};
	private long _scienceAppClassSeqNo;
	private long _classId;
	private long _originalClassId;
	private boolean _setOriginalClassId;
	private long _scienceAppSeqNo;
	private long _columnBitmask;
	private VirtualLabScienceAppLinkClass _escapedModel;
}