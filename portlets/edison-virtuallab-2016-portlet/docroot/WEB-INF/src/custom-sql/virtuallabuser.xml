<?xml version="1.0" encoding="UTF-8"?>

<custom-sql>

	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getListVirtualClassStudentList" >
		<![CDATA[
			SELECT
				B.*,
				(SELECT COUNT(*)
					FROM   
						EDVIR_SurveyQuestions_SurveyAnswers C, 
						EDVIR_SurveyAnswer D
					WHERE  
						C.questionSeqNo = #questionSeqNo# 
					AND 
						C.SurveyAnswerId = D.SurveyAnswerId 
					AND 
						D.userId = B.userId 
					AND 
						D.classId = #classId# 
					AND 
						D.virtualLabId = #virtualLabId#) AS surveyCheck,
				(SELECT IF(count(*) = 0,CONVERT('0(0/0)',char),CONVERT(CONCAT(COUNT(*),'(',SUM(if(AA.jobStatus = 1701011, 1, 0)),'/',SUM(if(AA.jobStatus = 1701012, 1, 0)),')'),char))
					FROM 
						EDSIM_SimulationJob AA INNER JOIN EDSIM_Simulation BB ON AA.simulationUuid = BB.simulationUuid,
						EDVIR_VirtualLabScienceAppLinkClass CC
							INNER JOIN EDVIR_VirtualLabScienceAppLink DD
								ON CC.scienceAppSeqNo = DD.scienceAppSeqNo 
					WHERE 
							BB.userId = B.userId
						AND 
							AA.jobSubmit = 1
						AND
							BB.scienceAppId=DD.scienceAppId
						<isNotEmpty property="classId">
							AND
								A.classId = CC.classId
						</isNotEmpty>
				) AS executeCount
			FROM
				EDVIR_VirtualLabClasses_VirtualLabUsers A
				INNER JOIN EDVIR_VirtualLabUser B ON A.virtualLabUserId = B.virtualLabUserId
				LEFT JOIN User_ C ON B.userId = C.userId
			WHERE
				1=1
			<isNotEmpty property="classId">
				AND
				A.classId = #classId#
			</isNotEmpty>
			<isNotEmpty property="search_parameter">
				AND
				(
				C.screenName like '%@@search_parameter@@%'
				OR
				C.firstName like '%@@search_parameter@@%'
				)
			</isNotEmpty>
			ORDER BY
				B.userStudentNumber DESC
		]]>
	</sql>

	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getCountVirtualClassRegisterUserList" >
		<![CDATA[
			SELECT
				COUNT(case when B.requestSort = "TEMP" then 1 end) tempUserCount,
				COUNT(case when B.requestSort = "CONFIRM" then 1 end) userCount
			FROM
				EDVIR_VirtualLabClasses_VirtualLabUsers A
			INNER JOIN
				EDVIR_VirtualLabUser B ON A.virtualLabUserId = B.virtualLabUserId
			<isNotEmpty property="classId">
			WHERE
				classId = #classId#
			</isNotEmpty>
		]]>
	</sql>

	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getVirtualLabUserInfo" >
		<![CDATA[
			SELECT
				A.*
			FROM
				EDVIR_VirtualLabUser A
				INNER JOIN EDVIR_VirtualLabClasses_VirtualLabUsers B ON A.virtualLabUserId = B.virtualLabUserId
			WHERE
				1=1
				<isNotEmpty property="userId">
				AND
				A.userId = #userId#
				</isNotEmpty>
				<isNotEmpty property="classId">
				AND
				B.classId = #classId#
				</isNotEmpty>
		]]>
	</sql>

	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getStudentCount" >
		<![CDATA[
			SELECT
				COUNT(*) AS studentCount
			FROM
				EDVIR_VirtualLab A
				INNER JOIN EDVIR_VirtualLabs_VirtualLabClasses B ON A.virtualLabId = B.virtualLabId
				INNER JOIN EDVIR_VirtualLabClass C ON B.classId = C.classId
				INNER JOIN EDVIR_VirtualLabClasses_VirtualLabUsers D ON C.classId = D.classId
				INNER JOIN EDVIR_VirtualLabUser E ON E.virtualLabUserId = D.virtualLabUserId
			WHERE
				(
				requestSort = 'CONFIRM'
				OR requestSort = 'TEMP'
				)
				<isNotEmpty property="virtualLabId">
				AND
				A.virtualLabId = #virtualLabId#
				</isNotEmpty>
				<isNotEmpty property="classId">
				AND
				C.classId = #classId#
				</isNotEmpty>
		]]>
	</sql>
	
	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getUserGroupClassUser" >
		<![CDATA[
			SELECT 
				labUser.virtualLabUserId,
				lab.groupId,
				class.classId,
				labUser.userId
			FROM 
				EDVIR_VirtualLabUser labUser
				INNER JOIN EDVIR_VirtualLabClasses_VirtualLabUsers classLabUserMapping ON labUser.virtualLabUserId = classLabUserMapping.virtualLabUserId
				INNER JOIN EDVIR_VirtualLabClass class ON classLabUserMapping.classId = class.classId
				INNER JOIN EDVIR_VirtualLabs_VirtualLabClasses labClassMapping ON class.classId = labClassMapping.classId
				INNER JOIN EDVIR_VirtualLab lab ON labClassMapping.virtualLabId = lab.virtualLabId
			WHERE labUser.userId = #userId# AND lab.groupId = #groupId#
		]]>
	</sql>
	
	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getVirtualLabClassUserIds" >
		<![CDATA[
			SELECT
				GROUP_CONCAT(userId SEPARATOR ',') AS virtualLabUserIds
			FROM 
				EDVIR_VirtualLabClasses_VirtualLabUsers EVLCVLU,
				EDVIR_VirtualLabUser EVLU
			WHERE
				EVLCVLU.virtualLabUserId = EVLU.virtualLabUserId
				AND EVLCVLU.classId = #classId#
		]]>
	</sql>
	
	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getVirtualLabClassScienceAppIds" >
		<![CDATA[
			SELECT
				GROUP_CONCAT(scienceAppId SEPARATOR ',') AS scienceAppIds
			FROM
				EDVIR_VirtualLabScienceAppLink EVLSAL,
				EDVIR_VirtualLabScienceAppLinkClass EVLSALC
			WHERE
				EVLSAL.scienceAppSeqNo = EVLSALC.scienceAppSeqNo
				AND EVLSAL.virtualLabId = #virtualLabId#
				AND EVLSALC.classId = #classId#
		]]>
	</sql>
	
	<sql id="org.kisti.edison.service.persistence.virtualLabUser.getVirtualClassStudentManagementList" >
		<![CDATA[
			SELECT 
				VLCUSR.virtualLabUserId,
				VLCUSR.userId,
				VLCUSR.userStudentNumber,
				VLCUSR.authRole,
				VLCUSR.userUseYn,
				VLCUSR.requestSort,
				VLCUSR.processNote,
				VLCUSR.processDate,
				VLCUSR.createDt,
				VLCUSR.updateDt,
				IFNULL(SURVEY.surveyCheck, '0') AS surveyCheck,
				IFNULL(SIM.executeCount, '0(0/0)') AS executeCount
			FROM 
				(
					SELECT 
						EVLU.virtualLabUserId AS virtualLabUserId,
						USER.userId AS userId,
						EVLU.userStudentNumber AS userStudentNumber,
						EVLU.authRole AS authRole,
						EVLU.userUseYn AS userUseYn,
						EVLU.requestSort AS requestSort,
						EVLU.processNote AS processNote,
						EVLU.processDate AS processDate,
						EVLU.createDt AS createDt,
						EVLU.updateDt AS updateDt
					FROM 
						User_ USER,
						EDVIR_VirtualLabUser EVLU,
						EDVIR_VirtualLabClasses_VirtualLabUsers EVLCVLU
					WHERE 
						USER.userId IN (@@userIds@@)
						AND USER.userId = EVLU.userId
						AND EVLU.virtualLabUserId = EVLCVLU.virtualLabUserId
						<isNotEmpty property="classId">
							AND EVLCVLU.classId = #classId#
						</isNotEmpty>
						<isNotEmpty property="search_parameter">
							AND (
								USER.screenName like '%@@search_parameter@@%'
								OR
								USER.firstName like '%@@search_parameter@@%'
							)
						</isNotEmpty>
				) VLCUSR
				LEFT OUTER JOIN
				(
					SELECT
						ESA.userId as userId,
						COUNT(*) AS surveyCheck
					FROM
						EDVIR_SurveyAnswer ESA,
						EDVIR_SurveyQuestions_SurveyAnswers ESQSA
					WHERE
						ESA.SurveyAnswerId = ESQSA.SurveyAnswerId
						AND ESQSA.questionSeqNo = #questionSeqNo#
						AND ESA.virtualLabId = #virtualLabId#
						AND ESA.classId = #classId#
				) SURVEY
				ON VLCUSR.userId = SURVEY.userId
				LEFT OUTER JOIN
				(
					SELECT
						SIM.userId,
						IF(COUNT(*) = 0,
							CONVERT('0(0/0)', CHAR),
							CONVERT(
								CONCAT(
									COUNT(*), 
									'(',
									SUM(IF(JOB.jobStatus = 1701011, 1, 0)),
									'/',
									SUM(IF(JOB.jobStatus = 1701012, 1, 0)),
									')'
								), 
								CHAR
							)
						)
							AS executeCount
					FROM
						EDSIM_Simulation SIM, EDSIM_SimulationJob JOB
					WHERE
						SIM.userId IN (@@userIds@@)
						AND SIM.scienceAppId IN (@@scienceAppIds@@)
						AND SIM.simulationUuid = JOB.simulationUuid
						AND JOB.jobSubmit = 1
					GROUP BY SIM.userId
				) SIM
				ON VLCUSR.userId = SIM.userId
			WHERE 
				1=1
			ORDER BY VLCUSR.userStudentNumber DESC
		]]>
	</sql>
	
</custom-sql>