/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.eturb.dbservice.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import org.kisti.eturb.dbservice.service.persistence.SimulationPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Simulation service. Represents a row in the &quot;ETURB_Simulation&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.eturb.dbservice.model.impl.SimulationModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.eturb.dbservice.model.impl.SimulationImpl}.
 * </p>
 *
 * @author EDISON
 * @see Simulation
 * @see org.kisti.eturb.dbservice.model.impl.SimulationImpl
 * @see org.kisti.eturb.dbservice.model.impl.SimulationModelImpl
 * @generated
 */
public interface SimulationModel extends BaseModel<Simulation> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a simulation model instance should use the {@link Simulation} interface instead.
	 */

	/**
	 * Returns the primary key of this simulation.
	 *
	 * @return the primary key of this simulation
	 */
	public SimulationPK getPrimaryKey();

	/**
	 * Sets the primary key of this simulation.
	 *
	 * @param primaryKey the primary key of this simulation
	 */
	public void setPrimaryKey(SimulationPK primaryKey);

	/**
	 * Returns the project ID of this simulation.
	 *
	 * @return the project ID of this simulation
	 */
	public long getProjectId();

	/**
	 * Sets the project ID of this simulation.
	 *
	 * @param projectId the project ID of this simulation
	 */
	public void setProjectId(long projectId);

	/**
	 * Returns the execute ID of this simulation.
	 *
	 * @return the execute ID of this simulation
	 */
	@AutoEscape
	public String getExecuteId();

	/**
	 * Sets the execute ID of this simulation.
	 *
	 * @param executeId the execute ID of this simulation
	 */
	public void setExecuteId(String executeId);

	/**
	 * Returns the execute data structure of this simulation.
	 *
	 * @return the execute data structure of this simulation
	 */
	@AutoEscape
	public String getExecuteDataStructure();

	/**
	 * Sets the execute data structure of this simulation.
	 *
	 * @param executeDataStructure the execute data structure of this simulation
	 */
	public void setExecuteDataStructure(String executeDataStructure);

	/**
	 * Returns the execute date of this simulation.
	 *
	 * @return the execute date of this simulation
	 */
	public Date getExecuteDate();

	/**
	 * Sets the execute date of this simulation.
	 *
	 * @param executeDate the execute date of this simulation
	 */
	public void setExecuteDate(Date executeDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(org.kisti.eturb.dbservice.model.Simulation simulation);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.eturb.dbservice.model.Simulation> toCacheModel();

	@Override
	public org.kisti.eturb.dbservice.model.Simulation toEscapedModel();

	@Override
	public org.kisti.eturb.dbservice.model.Simulation toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}