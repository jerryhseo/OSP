/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.science.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ScienceAppCompile service. Represents a row in the &quot;EDAPP_ScienceAppCompile&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link org.kisti.edison.science.model.impl.ScienceAppCompileModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link org.kisti.edison.science.model.impl.ScienceAppCompileImpl}.
 * </p>
 *
 * @author EDISON
 * @see ScienceAppCompile
 * @see org.kisti.edison.science.model.impl.ScienceAppCompileImpl
 * @see org.kisti.edison.science.model.impl.ScienceAppCompileModelImpl
 * @generated
 */
public interface ScienceAppCompileModel extends BaseModel<ScienceAppCompile> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a science app compile model instance should use the {@link ScienceAppCompile} interface instead.
	 */

	/**
	 * Returns the primary key of this science app compile.
	 *
	 * @return the primary key of this science app compile
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this science app compile.
	 *
	 * @param primaryKey the primary key of this science app compile
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the science app ID of this science app compile.
	 *
	 * @return the science app ID of this science app compile
	 */
	public long getScienceAppId();

	/**
	 * Sets the science app ID of this science app compile.
	 *
	 * @param scienceAppId the science app ID of this science app compile
	 */
	public void setScienceAppId(long scienceAppId);

	/**
	 * Returns the user ID of this science app compile.
	 *
	 * @return the user ID of this science app compile
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this science app compile.
	 *
	 * @param userId the user ID of this science app compile
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this science app compile.
	 *
	 * @return the user uuid of this science app compile
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this science app compile.
	 *
	 * @param userUuid the user uuid of this science app compile
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the compile url of this science app compile.
	 *
	 * @return the compile url of this science app compile
	 */
	@AutoEscape
	public String getCompileUrl();

	/**
	 * Sets the compile url of this science app compile.
	 *
	 * @param compileUrl the compile url of this science app compile
	 */
	public void setCompileUrl(String compileUrl);

	/**
	 * Returns the result of this science app compile.
	 *
	 * @return the result of this science app compile
	 */
	@AutoEscape
	public String getResult();

	/**
	 * Sets the result of this science app compile.
	 *
	 * @param result the result of this science app compile
	 */
	public void setResult(String result);

	/**
	 * Returns the create date of this science app compile.
	 *
	 * @return the create date of this science app compile
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this science app compile.
	 *
	 * @param createDate the create date of this science app compile
	 */
	public void setCreateDate(Date createDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		org.kisti.edison.science.model.ScienceAppCompile scienceAppCompile);

	@Override
	public int hashCode();

	@Override
	public CacheModel<org.kisti.edison.science.model.ScienceAppCompile> toCacheModel();

	@Override
	public org.kisti.edison.science.model.ScienceAppCompile toEscapedModel();

	@Override
	public org.kisti.edison.science.model.ScienceAppCompile toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}