/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package kisti.edison.challenge.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.StagedGroupedModel;
import com.liferay.portal.model.WorkflowedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the ChallengeEvaluationManagement service. Represents a row in the &quot;challenge_ChallengeEvaluationManagement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link kisti.edison.challenge.model.impl.ChallengeEvaluationManagementModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link kisti.edison.challenge.model.impl.ChallengeEvaluationManagementImpl}.
 * </p>
 *
 * @author KYJ
 * @see ChallengeEvaluationManagement
 * @see kisti.edison.challenge.model.impl.ChallengeEvaluationManagementImpl
 * @see kisti.edison.challenge.model.impl.ChallengeEvaluationManagementModelImpl
 * @generated
 */
public interface ChallengeEvaluationManagementModel extends BaseModel<ChallengeEvaluationManagement>,
	StagedGroupedModel, WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a challenge evaluation management model instance should use the {@link ChallengeEvaluationManagement} interface instead.
	 */

	/**
	 * Returns the primary key of this challenge evaluation management.
	 *
	 * @return the primary key of this challenge evaluation management
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this challenge evaluation management.
	 *
	 * @param primaryKey the primary key of this challenge evaluation management
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this challenge evaluation management.
	 *
	 * @return the uuid of this challenge evaluation management
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this challenge evaluation management.
	 *
	 * @param uuid the uuid of this challenge evaluation management
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the challenge evaluation management ID of this challenge evaluation management.
	 *
	 * @return the challenge evaluation management ID of this challenge evaluation management
	 */
	public long getChallengeEvaluationManagementId();

	/**
	 * Sets the challenge evaluation management ID of this challenge evaluation management.
	 *
	 * @param challengeEvaluationManagementId the challenge evaluation management ID of this challenge evaluation management
	 */
	public void setChallengeEvaluationManagementId(
		long challengeEvaluationManagementId);

	/**
	 * Returns the group ID of this challenge evaluation management.
	 *
	 * @return the group ID of this challenge evaluation management
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this challenge evaluation management.
	 *
	 * @param groupId the group ID of this challenge evaluation management
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this challenge evaluation management.
	 *
	 * @return the company ID of this challenge evaluation management
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this challenge evaluation management.
	 *
	 * @param companyId the company ID of this challenge evaluation management
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this challenge evaluation management.
	 *
	 * @return the user ID of this challenge evaluation management
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this challenge evaluation management.
	 *
	 * @param userId the user ID of this challenge evaluation management
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this challenge evaluation management.
	 *
	 * @return the user uuid of this challenge evaluation management
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this challenge evaluation management.
	 *
	 * @param userUuid the user uuid of this challenge evaluation management
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this challenge evaluation management.
	 *
	 * @return the user name of this challenge evaluation management
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this challenge evaluation management.
	 *
	 * @param userName the user name of this challenge evaluation management
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this challenge evaluation management.
	 *
	 * @return the create date of this challenge evaluation management
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this challenge evaluation management.
	 *
	 * @param createDate the create date of this challenge evaluation management
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this challenge evaluation management.
	 *
	 * @return the modified date of this challenge evaluation management
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this challenge evaluation management.
	 *
	 * @param modifiedDate the modified date of this challenge evaluation management
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this challenge evaluation management.
	 *
	 * @return the status of this challenge evaluation management
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this challenge evaluation management.
	 *
	 * @param status the status of this challenge evaluation management
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this challenge evaluation management.
	 *
	 * @return the status by user ID of this challenge evaluation management
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this challenge evaluation management.
	 *
	 * @param statusByUserId the status by user ID of this challenge evaluation management
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this challenge evaluation management.
	 *
	 * @return the status by user uuid of this challenge evaluation management
	 * @throws SystemException if a system exception occurred
	 */
	@Override
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this challenge evaluation management.
	 *
	 * @param statusByUserUuid the status by user uuid of this challenge evaluation management
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this challenge evaluation management.
	 *
	 * @return the status by user name of this challenge evaluation management
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this challenge evaluation management.
	 *
	 * @param statusByUserName the status by user name of this challenge evaluation management
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this challenge evaluation management.
	 *
	 * @return the status date of this challenge evaluation management
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this challenge evaluation management.
	 *
	 * @param statusDate the status date of this challenge evaluation management
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns the assessment item of this challenge evaluation management.
	 *
	 * @return the assessment item of this challenge evaluation management
	 */
	public String getAssessmentItem();

	/**
	 * Returns the localized assessment item of this challenge evaluation management in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized assessment item of this challenge evaluation management
	 */
	@AutoEscape
	public String getAssessmentItem(Locale locale);

	/**
	 * Returns the localized assessment item of this challenge evaluation management in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized assessment item of this challenge evaluation management. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getAssessmentItem(Locale locale, boolean useDefault);

	/**
	 * Returns the localized assessment item of this challenge evaluation management in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized assessment item of this challenge evaluation management
	 */
	@AutoEscape
	public String getAssessmentItem(String languageId);

	/**
	 * Returns the localized assessment item of this challenge evaluation management in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized assessment item of this challenge evaluation management
	 */
	@AutoEscape
	public String getAssessmentItem(String languageId, boolean useDefault);

	@AutoEscape
	public String getAssessmentItemCurrentLanguageId();

	@AutoEscape
	public String getAssessmentItemCurrentValue();

	/**
	 * Returns a map of the locales and localized assessment items of this challenge evaluation management.
	 *
	 * @return the locales and localized assessment items of this challenge evaluation management
	 */
	public Map<Locale, String> getAssessmentItemMap();

	/**
	 * Sets the assessment item of this challenge evaluation management.
	 *
	 * @param assessmentItem the assessment item of this challenge evaluation management
	 */
	public void setAssessmentItem(String assessmentItem);

	/**
	 * Sets the localized assessment item of this challenge evaluation management in the language.
	 *
	 * @param assessmentItem the localized assessment item of this challenge evaluation management
	 * @param locale the locale of the language
	 */
	public void setAssessmentItem(String assessmentItem, Locale locale);

	/**
	 * Sets the localized assessment item of this challenge evaluation management in the language, and sets the default locale.
	 *
	 * @param assessmentItem the localized assessment item of this challenge evaluation management
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setAssessmentItem(String assessmentItem, Locale locale,
		Locale defaultLocale);

	public void setAssessmentItemCurrentLanguageId(String languageId);

	/**
	 * Sets the localized assessment items of this challenge evaluation management from the map of locales and localized assessment items.
	 *
	 * @param assessmentItemMap the locales and localized assessment items of this challenge evaluation management
	 */
	public void setAssessmentItemMap(Map<Locale, String> assessmentItemMap);

	/**
	 * Sets the localized assessment items of this challenge evaluation management from the map of locales and localized assessment items, and sets the default locale.
	 *
	 * @param assessmentItemMap the locales and localized assessment items of this challenge evaluation management
	 * @param defaultLocale the default locale
	 */
	public void setAssessmentItemMap(Map<Locale, String> assessmentItemMap,
		Locale defaultLocale);

	/**
	 * Returns the distribution of this challenge evaluation management.
	 *
	 * @return the distribution of this challenge evaluation management
	 */
	public double getDistribution();

	/**
	 * Sets the distribution of this challenge evaluation management.
	 *
	 * @param distribution the distribution of this challenge evaluation management
	 */
	public void setDistribution(double distribution);

	/**
	 * Returns the child challenge ID of this challenge evaluation management.
	 *
	 * @return the child challenge ID of this challenge evaluation management
	 */
	public long getChildChallengeId();

	/**
	 * Sets the child challenge ID of this challenge evaluation management.
	 *
	 * @param childChallengeId the child challenge ID of this challenge evaluation management
	 */
	public void setChildChallengeId(long childChallengeId);

	/**
	 * @deprecated As of 6.1.0, replaced by {@link #isApproved()}
	 */
	@Override
	public boolean getApproved();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is approved.
	 *
	 * @return <code>true</code> if this challenge evaluation management is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is denied.
	 *
	 * @return <code>true</code> if this challenge evaluation management is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is a draft.
	 *
	 * @return <code>true</code> if this challenge evaluation management is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is expired.
	 *
	 * @return <code>true</code> if this challenge evaluation management is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is inactive.
	 *
	 * @return <code>true</code> if this challenge evaluation management is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is incomplete.
	 *
	 * @return <code>true</code> if this challenge evaluation management is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is pending.
	 *
	 * @return <code>true</code> if this challenge evaluation management is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this challenge evaluation management is scheduled.
	 *
	 * @return <code>true</code> if this challenge evaluation management is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(
		kisti.edison.challenge.model.ChallengeEvaluationManagement challengeEvaluationManagement);

	@Override
	public int hashCode();

	@Override
	public CacheModel<kisti.edison.challenge.model.ChallengeEvaluationManagement> toCacheModel();

	@Override
	public kisti.edison.challenge.model.ChallengeEvaluationManagement toEscapedModel();

	@Override
	public kisti.edison.challenge.model.ChallengeEvaluationManagement toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}