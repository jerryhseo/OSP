/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.kisti.edison.search.service.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.kisti.edison.search.service.model.SearchCondition;
import org.kisti.edison.search.service.model.SearchConditionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SearchCondition service. Represents a row in the &quot;EDSEARCH_SearchCondition&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.kisti.edison.search.service.model.SearchConditionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SearchConditionImpl}.
 * </p>
 *
 * @author yjpark
 * @see SearchConditionImpl
 * @see org.kisti.edison.search.service.model.SearchCondition
 * @see org.kisti.edison.search.service.model.SearchConditionModel
 * @generated
 */
public class SearchConditionModelImpl extends BaseModelImpl<SearchCondition>
	implements SearchConditionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a search condition model instance should use the {@link org.kisti.edison.search.service.model.SearchCondition} interface instead.
	 */
	public static final String TABLE_NAME = "EDSEARCH_SearchCondition";
	public static final Object[][] TABLE_COLUMNS = {
			{ "id_", Types.BIGINT },
			{ "searchKeyword", Types.VARCHAR },
			{ "areaScienceApp", Types.BOOLEAN },
			{ "areaContents", Types.BOOLEAN },
			{ "areaSimulationProject", Types.BOOLEAN },
			{ "areaScienceData", Types.BOOLEAN },
			{ "parentCategory", Types.BOOLEAN },
			{ "categoryId", Types.BIGINT },
			{ "companyGroupId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "currentPage", Types.INTEGER },
			{ "listSize", Types.INTEGER },
			{ "blockSize", Types.INTEGER },
			{ "classnote", Types.BOOLEAN },
			{ "manual", Types.BOOLEAN },
			{ "reference", Types.BOOLEAN },
			{ "advanced", Types.BOOLEAN },
			{ "sortOrder", Types.VARCHAR },
			{ "sortField", Types.VARCHAR },
			{ "Solver", Types.BOOLEAN },
			{ "Converter", Types.BOOLEAN },
			{ "Editor", Types.BOOLEAN },
			{ "Analyzer", Types.BOOLEAN }
		};
	public static final String TABLE_SQL_CREATE = "create table EDSEARCH_SearchCondition (id_ LONG not null primary key,searchKeyword VARCHAR(75) null,areaScienceApp BOOLEAN,areaContents BOOLEAN,areaSimulationProject BOOLEAN,areaScienceData BOOLEAN,parentCategory BOOLEAN,categoryId LONG,companyGroupId LONG,groupId LONG,currentPage INTEGER,listSize INTEGER,blockSize INTEGER,classnote BOOLEAN,manual BOOLEAN,reference BOOLEAN,advanced BOOLEAN,sortOrder VARCHAR(75) null,sortField VARCHAR(75) null,Solver BOOLEAN,Converter BOOLEAN,Editor BOOLEAN,Analyzer BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table EDSEARCH_SearchCondition";
	public static final String ORDER_BY_JPQL = " ORDER BY searchCondition.id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EDSEARCH_SearchCondition.id_ ASC";
	public static final String DATA_SOURCE = "noDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.kisti.edison.search.service.model.SearchCondition"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.kisti.edison.search.service.model.SearchCondition"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.kisti.edison.search.service.model.SearchCondition"));

	public SearchConditionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return SearchCondition.class;
	}

	@Override
	public String getModelClassName() {
		return SearchCondition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("id", getId());
		attributes.put("searchKeyword", getSearchKeyword());
		attributes.put("areaScienceApp", getAreaScienceApp());
		attributes.put("areaContents", getAreaContents());
		attributes.put("areaSimulationProject", getAreaSimulationProject());
		attributes.put("areaScienceData", getAreaScienceData());
		attributes.put("parentCategory", getParentCategory());
		attributes.put("categoryId", getCategoryId());
		attributes.put("companyGroupId", getCompanyGroupId());
		attributes.put("groupId", getGroupId());
		attributes.put("currentPage", getCurrentPage());
		attributes.put("listSize", getListSize());
		attributes.put("blockSize", getBlockSize());
		attributes.put("classnote", getClassnote());
		attributes.put("manual", getManual());
		attributes.put("reference", getReference());
		attributes.put("advanced", getAdvanced());
		attributes.put("sortOrder", getSortOrder());
		attributes.put("sortField", getSortField());
		attributes.put("Solver", getSolver());
		attributes.put("Converter", getConverter());
		attributes.put("Editor", getEditor());
		attributes.put("Analyzer", getAnalyzer());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long id = (Long)attributes.get("id");

		if (id != null) {
			setId(id);
		}

		String searchKeyword = (String)attributes.get("searchKeyword");

		if (searchKeyword != null) {
			setSearchKeyword(searchKeyword);
		}

		Boolean areaScienceApp = (Boolean)attributes.get("areaScienceApp");

		if (areaScienceApp != null) {
			setAreaScienceApp(areaScienceApp);
		}

		Boolean areaContents = (Boolean)attributes.get("areaContents");

		if (areaContents != null) {
			setAreaContents(areaContents);
		}

		Boolean areaSimulationProject = (Boolean)attributes.get(
				"areaSimulationProject");

		if (areaSimulationProject != null) {
			setAreaSimulationProject(areaSimulationProject);
		}

		Boolean areaScienceData = (Boolean)attributes.get("areaScienceData");

		if (areaScienceData != null) {
			setAreaScienceData(areaScienceData);
		}

		Boolean parentCategory = (Boolean)attributes.get("parentCategory");

		if (parentCategory != null) {
			setParentCategory(parentCategory);
		}

		Long categoryId = (Long)attributes.get("categoryId");

		if (categoryId != null) {
			setCategoryId(categoryId);
		}

		Long companyGroupId = (Long)attributes.get("companyGroupId");

		if (companyGroupId != null) {
			setCompanyGroupId(companyGroupId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Integer currentPage = (Integer)attributes.get("currentPage");

		if (currentPage != null) {
			setCurrentPage(currentPage);
		}

		Integer listSize = (Integer)attributes.get("listSize");

		if (listSize != null) {
			setListSize(listSize);
		}

		Integer blockSize = (Integer)attributes.get("blockSize");

		if (blockSize != null) {
			setBlockSize(blockSize);
		}

		Boolean classnote = (Boolean)attributes.get("classnote");

		if (classnote != null) {
			setClassnote(classnote);
		}

		Boolean manual = (Boolean)attributes.get("manual");

		if (manual != null) {
			setManual(manual);
		}

		Boolean reference = (Boolean)attributes.get("reference");

		if (reference != null) {
			setReference(reference);
		}

		Boolean advanced = (Boolean)attributes.get("advanced");

		if (advanced != null) {
			setAdvanced(advanced);
		}

		String sortOrder = (String)attributes.get("sortOrder");

		if (sortOrder != null) {
			setSortOrder(sortOrder);
		}

		String sortField = (String)attributes.get("sortField");

		if (sortField != null) {
			setSortField(sortField);
		}

		Boolean Solver = (Boolean)attributes.get("Solver");

		if (Solver != null) {
			setSolver(Solver);
		}

		Boolean Converter = (Boolean)attributes.get("Converter");

		if (Converter != null) {
			setConverter(Converter);
		}

		Boolean Editor = (Boolean)attributes.get("Editor");

		if (Editor != null) {
			setEditor(Editor);
		}

		Boolean Analyzer = (Boolean)attributes.get("Analyzer");

		if (Analyzer != null) {
			setAnalyzer(Analyzer);
		}
	}

	@Override
	public long getId() {
		return _id;
	}

	@Override
	public void setId(long id) {
		_id = id;
	}

	@Override
	public String getSearchKeyword() {
		if (_searchKeyword == null) {
			return StringPool.BLANK;
		}
		else {
			return _searchKeyword;
		}
	}

	@Override
	public void setSearchKeyword(String searchKeyword) {
		_searchKeyword = searchKeyword;
	}

	@Override
	public boolean getAreaScienceApp() {
		return _areaScienceApp;
	}

	@Override
	public boolean isAreaScienceApp() {
		return _areaScienceApp;
	}

	@Override
	public void setAreaScienceApp(boolean areaScienceApp) {
		_areaScienceApp = areaScienceApp;
	}

	@Override
	public boolean getAreaContents() {
		return _areaContents;
	}

	@Override
	public boolean isAreaContents() {
		return _areaContents;
	}

	@Override
	public void setAreaContents(boolean areaContents) {
		_areaContents = areaContents;
	}

	@Override
	public boolean getAreaSimulationProject() {
		return _areaSimulationProject;
	}

	@Override
	public boolean isAreaSimulationProject() {
		return _areaSimulationProject;
	}

	@Override
	public void setAreaSimulationProject(boolean areaSimulationProject) {
		_areaSimulationProject = areaSimulationProject;
	}

	@Override
	public boolean getAreaScienceData() {
		return _areaScienceData;
	}

	@Override
	public boolean isAreaScienceData() {
		return _areaScienceData;
	}

	@Override
	public void setAreaScienceData(boolean areaScienceData) {
		_areaScienceData = areaScienceData;
	}

	@Override
	public boolean getParentCategory() {
		return _parentCategory;
	}

	@Override
	public boolean isParentCategory() {
		return _parentCategory;
	}

	@Override
	public void setParentCategory(boolean parentCategory) {
		_parentCategory = parentCategory;
	}

	@Override
	public long getCategoryId() {
		return _categoryId;
	}

	@Override
	public void setCategoryId(long categoryId) {
		_categoryId = categoryId;
	}

	@Override
	public long getCompanyGroupId() {
		return _companyGroupId;
	}

	@Override
	public void setCompanyGroupId(long companyGroupId) {
		_companyGroupId = companyGroupId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public int getCurrentPage() {
		return _currentPage;
	}

	@Override
	public void setCurrentPage(int currentPage) {
		_currentPage = currentPage;
	}

	@Override
	public int getListSize() {
		return _listSize;
	}

	@Override
	public void setListSize(int listSize) {
		_listSize = listSize;
	}

	@Override
	public int getBlockSize() {
		return _blockSize;
	}

	@Override
	public void setBlockSize(int blockSize) {
		_blockSize = blockSize;
	}

	@Override
	public boolean getClassnote() {
		return _classnote;
	}

	@Override
	public boolean isClassnote() {
		return _classnote;
	}

	@Override
	public void setClassnote(boolean classnote) {
		_classnote = classnote;
	}

	@Override
	public boolean getManual() {
		return _manual;
	}

	@Override
	public boolean isManual() {
		return _manual;
	}

	@Override
	public void setManual(boolean manual) {
		_manual = manual;
	}

	@Override
	public boolean getReference() {
		return _reference;
	}

	@Override
	public boolean isReference() {
		return _reference;
	}

	@Override
	public void setReference(boolean reference) {
		_reference = reference;
	}

	@Override
	public boolean getAdvanced() {
		return _advanced;
	}

	@Override
	public boolean isAdvanced() {
		return _advanced;
	}

	@Override
	public void setAdvanced(boolean advanced) {
		_advanced = advanced;
	}

	@Override
	public String getSortOrder() {
		if (_sortOrder == null) {
			return StringPool.BLANK;
		}
		else {
			return _sortOrder;
		}
	}

	@Override
	public void setSortOrder(String sortOrder) {
		_sortOrder = sortOrder;
	}

	@Override
	public String getSortField() {
		if (_sortField == null) {
			return StringPool.BLANK;
		}
		else {
			return _sortField;
		}
	}

	@Override
	public void setSortField(String sortField) {
		_sortField = sortField;
	}

	@Override
	public boolean getSolver() {
		return _Solver;
	}

	@Override
	public boolean isSolver() {
		return _Solver;
	}

	@Override
	public void setSolver(boolean Solver) {
		_Solver = Solver;
	}

	@Override
	public boolean getConverter() {
		return _Converter;
	}

	@Override
	public boolean isConverter() {
		return _Converter;
	}

	@Override
	public void setConverter(boolean Converter) {
		_Converter = Converter;
	}

	@Override
	public boolean getEditor() {
		return _Editor;
	}

	@Override
	public boolean isEditor() {
		return _Editor;
	}

	@Override
	public void setEditor(boolean Editor) {
		_Editor = Editor;
	}

	@Override
	public boolean getAnalyzer() {
		return _Analyzer;
	}

	@Override
	public boolean isAnalyzer() {
		return _Analyzer;
	}

	@Override
	public void setAnalyzer(boolean Analyzer) {
		_Analyzer = Analyzer;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			SearchCondition.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public SearchCondition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (SearchCondition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SearchConditionImpl searchConditionImpl = new SearchConditionImpl();

		searchConditionImpl.setId(getId());
		searchConditionImpl.setSearchKeyword(getSearchKeyword());
		searchConditionImpl.setAreaScienceApp(getAreaScienceApp());
		searchConditionImpl.setAreaContents(getAreaContents());
		searchConditionImpl.setAreaSimulationProject(getAreaSimulationProject());
		searchConditionImpl.setAreaScienceData(getAreaScienceData());
		searchConditionImpl.setParentCategory(getParentCategory());
		searchConditionImpl.setCategoryId(getCategoryId());
		searchConditionImpl.setCompanyGroupId(getCompanyGroupId());
		searchConditionImpl.setGroupId(getGroupId());
		searchConditionImpl.setCurrentPage(getCurrentPage());
		searchConditionImpl.setListSize(getListSize());
		searchConditionImpl.setBlockSize(getBlockSize());
		searchConditionImpl.setClassnote(getClassnote());
		searchConditionImpl.setManual(getManual());
		searchConditionImpl.setReference(getReference());
		searchConditionImpl.setAdvanced(getAdvanced());
		searchConditionImpl.setSortOrder(getSortOrder());
		searchConditionImpl.setSortField(getSortField());
		searchConditionImpl.setSolver(getSolver());
		searchConditionImpl.setConverter(getConverter());
		searchConditionImpl.setEditor(getEditor());
		searchConditionImpl.setAnalyzer(getAnalyzer());

		searchConditionImpl.resetOriginalValues();

		return searchConditionImpl;
	}

	@Override
	public int compareTo(SearchCondition searchCondition) {
		long primaryKey = searchCondition.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof SearchCondition)) {
			return false;
		}

		SearchCondition searchCondition = (SearchCondition)obj;

		long primaryKey = searchCondition.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<SearchCondition> toCacheModel() {
		SearchConditionCacheModel searchConditionCacheModel = new SearchConditionCacheModel();

		searchConditionCacheModel.id = getId();

		searchConditionCacheModel.searchKeyword = getSearchKeyword();

		String searchKeyword = searchConditionCacheModel.searchKeyword;

		if ((searchKeyword != null) && (searchKeyword.length() == 0)) {
			searchConditionCacheModel.searchKeyword = null;
		}

		searchConditionCacheModel.areaScienceApp = getAreaScienceApp();

		searchConditionCacheModel.areaContents = getAreaContents();

		searchConditionCacheModel.areaSimulationProject = getAreaSimulationProject();

		searchConditionCacheModel.areaScienceData = getAreaScienceData();

		searchConditionCacheModel.parentCategory = getParentCategory();

		searchConditionCacheModel.categoryId = getCategoryId();

		searchConditionCacheModel.companyGroupId = getCompanyGroupId();

		searchConditionCacheModel.groupId = getGroupId();

		searchConditionCacheModel.currentPage = getCurrentPage();

		searchConditionCacheModel.listSize = getListSize();

		searchConditionCacheModel.blockSize = getBlockSize();

		searchConditionCacheModel.classnote = getClassnote();

		searchConditionCacheModel.manual = getManual();

		searchConditionCacheModel.reference = getReference();

		searchConditionCacheModel.advanced = getAdvanced();

		searchConditionCacheModel.sortOrder = getSortOrder();

		String sortOrder = searchConditionCacheModel.sortOrder;

		if ((sortOrder != null) && (sortOrder.length() == 0)) {
			searchConditionCacheModel.sortOrder = null;
		}

		searchConditionCacheModel.sortField = getSortField();

		String sortField = searchConditionCacheModel.sortField;

		if ((sortField != null) && (sortField.length() == 0)) {
			searchConditionCacheModel.sortField = null;
		}

		searchConditionCacheModel.Solver = getSolver();

		searchConditionCacheModel.Converter = getConverter();

		searchConditionCacheModel.Editor = getEditor();

		searchConditionCacheModel.Analyzer = getAnalyzer();

		return searchConditionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(47);

		sb.append("{id=");
		sb.append(getId());
		sb.append(", searchKeyword=");
		sb.append(getSearchKeyword());
		sb.append(", areaScienceApp=");
		sb.append(getAreaScienceApp());
		sb.append(", areaContents=");
		sb.append(getAreaContents());
		sb.append(", areaSimulationProject=");
		sb.append(getAreaSimulationProject());
		sb.append(", areaScienceData=");
		sb.append(getAreaScienceData());
		sb.append(", parentCategory=");
		sb.append(getParentCategory());
		sb.append(", categoryId=");
		sb.append(getCategoryId());
		sb.append(", companyGroupId=");
		sb.append(getCompanyGroupId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", currentPage=");
		sb.append(getCurrentPage());
		sb.append(", listSize=");
		sb.append(getListSize());
		sb.append(", blockSize=");
		sb.append(getBlockSize());
		sb.append(", classnote=");
		sb.append(getClassnote());
		sb.append(", manual=");
		sb.append(getManual());
		sb.append(", reference=");
		sb.append(getReference());
		sb.append(", advanced=");
		sb.append(getAdvanced());
		sb.append(", sortOrder=");
		sb.append(getSortOrder());
		sb.append(", sortField=");
		sb.append(getSortField());
		sb.append(", Solver=");
		sb.append(getSolver());
		sb.append(", Converter=");
		sb.append(getConverter());
		sb.append(", Editor=");
		sb.append(getEditor());
		sb.append(", Analyzer=");
		sb.append(getAnalyzer());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(73);

		sb.append("<model><model-name>");
		sb.append("org.kisti.edison.search.service.model.SearchCondition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>id</column-name><column-value><![CDATA[");
		sb.append(getId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>searchKeyword</column-name><column-value><![CDATA[");
		sb.append(getSearchKeyword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>areaScienceApp</column-name><column-value><![CDATA[");
		sb.append(getAreaScienceApp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>areaContents</column-name><column-value><![CDATA[");
		sb.append(getAreaContents());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>areaSimulationProject</column-name><column-value><![CDATA[");
		sb.append(getAreaSimulationProject());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>areaScienceData</column-name><column-value><![CDATA[");
		sb.append(getAreaScienceData());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentCategory</column-name><column-value><![CDATA[");
		sb.append(getParentCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>categoryId</column-name><column-value><![CDATA[");
		sb.append(getCategoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyGroupId</column-name><column-value><![CDATA[");
		sb.append(getCompanyGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currentPage</column-name><column-value><![CDATA[");
		sb.append(getCurrentPage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>listSize</column-name><column-value><![CDATA[");
		sb.append(getListSize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>blockSize</column-name><column-value><![CDATA[");
		sb.append(getBlockSize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classnote</column-name><column-value><![CDATA[");
		sb.append(getClassnote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>manual</column-name><column-value><![CDATA[");
		sb.append(getManual());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reference</column-name><column-value><![CDATA[");
		sb.append(getReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>advanced</column-name><column-value><![CDATA[");
		sb.append(getAdvanced());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sortOrder</column-name><column-value><![CDATA[");
		sb.append(getSortOrder());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sortField</column-name><column-value><![CDATA[");
		sb.append(getSortField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Solver</column-name><column-value><![CDATA[");
		sb.append(getSolver());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Converter</column-name><column-value><![CDATA[");
		sb.append(getConverter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Editor</column-name><column-value><![CDATA[");
		sb.append(getEditor());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>Analyzer</column-name><column-value><![CDATA[");
		sb.append(getAnalyzer());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SearchCondition.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			SearchCondition.class
		};
	private long _id;
	private String _searchKeyword;
	private boolean _areaScienceApp;
	private boolean _areaContents;
	private boolean _areaSimulationProject;
	private boolean _areaScienceData;
	private boolean _parentCategory;
	private long _categoryId;
	private long _companyGroupId;
	private long _groupId;
	private int _currentPage;
	private int _listSize;
	private int _blockSize;
	private boolean _classnote;
	private boolean _manual;
	private boolean _reference;
	private boolean _advanced;
	private String _sortOrder;
	private String _sortField;
	private boolean _Solver;
	private boolean _Converter;
	private boolean _Editor;
	private boolean _Analyzer;
	private SearchCondition _escapedModel;
}