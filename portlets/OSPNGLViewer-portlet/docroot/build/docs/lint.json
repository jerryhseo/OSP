[
  {
    "name": "VolumeColormaker#positionColor",
    "filePath": "src/color/volume-colormaker.js",
    "lines": [
      {
        "lineNumber": 85,
        "line": "    /**\r"
      },
      {
        "lineNumber": 86,
        "line": "     * return the color for coordinates in space\r"
      },
      {
        "lineNumber": 87,
        "line": "     * @param  {Vector3} coords - xyz coordinates\r"
      },
      {
        "lineNumber": 88,
        "line": "     * @return {Integer} hex coords color\r"
      },
      {
        "lineNumber": 89,
        "line": "     */\r"
      },
      {
        "lineNumber": 90,
        "line": "  positionColor (/* coords */) {}\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "coords"
    ]
  },
  {
    "name": "closer",
    "filePath": "src/controls/picking-proxy.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Picking Proxy\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function closer (x, a, b) {\r"
      }
    ],
    "codeParams": [
      "x",
      "a",
      "b"
    ],
    "docParams": []
  },
  {
    "name": "Grid",
    "filePath": "src/geometry/grid.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Grid\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function Grid (length, width, height, DataCtor, elemSize) {\r"
      }
    ],
    "codeParams": [
      "length",
      "width",
      "height",
      "DataCtor",
      "elemSize"
    ],
    "docParams": []
  },
  {
    "name": "Shape#addLabel",
    "filePath": "src/geometry/shape.js",
    "lines": [
      {
        "lineNumber": 326,
        "line": "  /**\r"
      },
      {
        "lineNumber": 327,
        "line": "   * Deprecated, use `.addText`\r"
      },
      {
        "lineNumber": 328,
        "line": "   */\r"
      },
      {
        "lineNumber": 329,
        "line": "  addLabel (position, color, size, text) {\r"
      }
    ],
    "codeParams": [
      "position",
      "color",
      "size",
      "text"
    ],
    "docParams": []
  },
  {
    "name": "SpatialHash",
    "filePath": "src/geometry/spatial-hash.js",
    "lines": [
      {
        "lineNumber": 6,
        "line": "// import { Debug, Log } from \"../globals.js\";\r"
      },
      {
        "lineNumber": 7,
        "line": "\r"
      },
      {
        "lineNumber": 8,
        "line": "function SpatialHash (atomStore, boundingBox) {\r"
      }
    ],
    "codeParams": [
      "atomStore",
      "boundingBox"
    ],
    "docParams": []
  },
  {
    "name": "degToRad",
    "filePath": "src/math/math-utils.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Math Utils\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function degToRad (deg) {\r"
      }
    ],
    "codeParams": [
      "deg"
    ],
    "docParams": []
  },
  {
    "name": "getAngleData",
    "filePath": "src/representation/angle-representation.js",
    "lines": [
      {
        "lineNumber": 258,
        "line": "/**\r"
      },
      {
        "lineNumber": 259,
        "line": " * Converts triple positions into data required to build various buffers.\r"
      },
      {
        "lineNumber": 260,
        "line": " */\r"
      },
      {
        "lineNumber": 261,
        "line": "function getAngleData (position, params) {\r"
      }
    ],
    "codeParams": [
      "position",
      "params"
    ],
    "docParams": []
  },
  {
    "name": "getDihedralData",
    "filePath": "src/representation/dihedral-representation.js",
    "lines": [
      {
        "lineNumber": 220,
        "line": "/**\r"
      },
      {
        "lineNumber": 221,
        "line": " * Build the data required to create {Buffer} objects, given positions\r"
      },
      {
        "lineNumber": 222,
        "line": " * @param  {Float32Array} atomPosition 3*4*nDihedral array of coordinates\r"
      },
      {
        "lineNumber": 223,
        "line": " * @return {Object}              Arrays for building buffers\r"
      },
      {
        "lineNumber": 224,
        "line": " */\r"
      },
      {
        "lineNumber": 225,
        "line": "function getDihedralData (position, params) {\r"
      }
    ],
    "codeParams": [
      "position",
      "params"
    ],
    "docParams": [
      "atomPosition"
    ]
  },
  {
    "name": "KeyBehavior#_onKeydown",
    "filePath": "src/stage/key-behavior.js",
    "lines": [
      {
        "lineNumber": 35,
        "line": "  /**\r"
      },
      {
        "lineNumber": 36,
        "line": "   * handle key down\r"
      },
      {
        "lineNumber": 37,
        "line": "   * @param  {Event} event - key event\r"
      },
      {
        "lineNumber": 38,
        "line": "   * @return {undefined}\r"
      },
      {
        "lineNumber": 39,
        "line": "   */\r"
      },
      {
        "lineNumber": 40,
        "line": "  _onKeydown (/* event */) {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "event"
    ]
  },
  {
    "name": "KeyBehavior#_onKeyup",
    "filePath": "src/stage/key-behavior.js",
    "lines": [
      {
        "lineNumber": 44,
        "line": "  /**\r"
      },
      {
        "lineNumber": 45,
        "line": "   * handle key up\r"
      },
      {
        "lineNumber": 46,
        "line": "   * @param  {Event} event - key event\r"
      },
      {
        "lineNumber": 47,
        "line": "   * @return {undefined}\r"
      },
      {
        "lineNumber": 48,
        "line": "   */\r"
      },
      {
        "lineNumber": 49,
        "line": "  _onKeyup (/* event */) {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "event"
    ]
  },
  {
    "name": "ResidueType#calculateRings",
    "filePath": "src/store/residue-type.js",
    "lines": [
      {
        "lineNumber": 375,
        "line": "  /**\r"
      },
      {
        "lineNumber": 376,
        "line": "   * Calculates ring atoms within a residue\r"
      },
      {
        "lineNumber": 377,
        "line": "   * Adaptation of RDKit's fastFindRings method by G. Landrum:\r"
      },
      {
        "lineNumber": 378,
        "line": "   * https://github.com/rdkit/rdkit/blob/master/Code/GraphMol/FindRings.cpp\r"
      },
      {
        "lineNumber": 379,
        "line": "   *\r"
      },
      {
        "lineNumber": 380,
        "line": "   * @param {ResidueProxy} r   - The residue for which we are to find rings\r"
      },
      {
        "lineNumber": 381,
        "line": "   * @return {Object} ringData - contains ringFlags (1/0) and rings\r"
      },
      {
        "lineNumber": 382,
        "line": "   *                             (nested array)\r"
      },
      {
        "lineNumber": 383,
        "line": "   *\r"
      },
      {
        "lineNumber": 384,
        "line": "   * Note this method finds all ring atoms, but in cases of fused or\r"
      },
      {
        "lineNumber": 385,
        "line": "   * connected rings will not detect all rings.\r"
      },
      {
        "lineNumber": 386,
        "line": "   * The resulting rings object will provide 'a ring' for each ring atom\r"
      },
      {
        "lineNumber": 387,
        "line": "   * but which ring depends on atom order and connectivity\r"
      },
      {
        "lineNumber": 388,
        "line": "   *\r"
      },
      {
        "lineNumber": 389,
        "line": "   * @return {undefined}\r"
      },
      {
        "lineNumber": 390,
        "line": "   */\r"
      },
      {
        "lineNumber": 391,
        "line": "  calculateRings () {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "r"
    ]
  },
  {
    "name": "Store#copyWithin",
    "filePath": "src/store/store.js",
    "lines": [
      {
        "lineNumber": 129,
        "line": "  /**\r"
      },
      {
        "lineNumber": 130,
        "line": "   * Copy data within this store\r"
      },
      {
        "lineNumber": 131,
        "line": "   * @param  {Integer} thisOffset - offset to start copying to\r"
      },
      {
        "lineNumber": 132,
        "line": "   * @param  {Integer} otherOffset - offset to start copying from\r"
      },
      {
        "lineNumber": 133,
        "line": "   * @param  {Integer} length - number of entries to copy\r"
      },
      {
        "lineNumber": 134,
        "line": "   * @return {undefined}\r"
      },
      {
        "lineNumber": 135,
        "line": "   */\r"
      },
      {
        "lineNumber": 136,
        "line": "  copyWithin (offsetTarget, offsetSource, length) {\r"
      }
    ],
    "codeParams": [
      "offsetTarget",
      "offsetSource",
      "length"
    ],
    "docParams": [
      "thisOffset",
      "otherOffset",
      "length"
    ]
  },
  {
    "name": "StructureBuilder",
    "filePath": "src/structure/structure-builder.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Structure Builder\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function StructureBuilder (structure) {\r"
      }
    ],
    "codeParams": [
      "structure"
    ],
    "docParams": []
  },
  {
    "name": "BitArray#setBits",
    "filePath": "src/utils/bitarray.js",
    "lines": [
      {
        "lineNumber": 136,
        "line": "    /**\r"
      },
      {
        "lineNumber": 137,
        "line": "     * Set bits at all given indices\r"
      },
      {
        "lineNumber": 138,
        "line": "     * @param {...Integer} arguments - indices\r"
      },
      {
        "lineNumber": 139,
        "line": "     * @return {Boolean} this object\r"
      },
      {
        "lineNumber": 140,
        "line": "     */\r"
      },
      {
        "lineNumber": 141,
        "line": "  setBits () {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "arguments"
    ]
  },
  {
    "name": "BitArray#clearBits",
    "filePath": "src/utils/bitarray.js",
    "lines": [
      {
        "lineNumber": 151,
        "line": "    /**\r"
      },
      {
        "lineNumber": 152,
        "line": "     * Clear bits at all given indices\r"
      },
      {
        "lineNumber": 153,
        "line": "     * @param {...Integer} arguments - indices\r"
      },
      {
        "lineNumber": 154,
        "line": "     * @return {Boolean} this object\r"
      },
      {
        "lineNumber": 155,
        "line": "     */\r"
      },
      {
        "lineNumber": 156,
        "line": "  clearBits () {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "arguments"
    ]
  },
  {
    "name": "BitArray#isSet",
    "filePath": "src/utils/bitarray.js",
    "lines": [
      {
        "lineNumber": 260,
        "line": "    /**\r"
      },
      {
        "lineNumber": 261,
        "line": "     * Test if bits at all given indices are set\r"
      },
      {
        "lineNumber": 262,
        "line": "     * @param {...Integer} arguments - indices\r"
      },
      {
        "lineNumber": 263,
        "line": "     * @return {Boolean} test result\r"
      },
      {
        "lineNumber": 264,
        "line": "     */\r"
      },
      {
        "lineNumber": 265,
        "line": "  isSet () {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "arguments"
    ]
  },
  {
    "name": "BitArray#isClear",
    "filePath": "src/utils/bitarray.js",
    "lines": [
      {
        "lineNumber": 275,
        "line": "    /**\r"
      },
      {
        "lineNumber": 276,
        "line": "     * Test if bits at all given indices are clear\r"
      },
      {
        "lineNumber": 277,
        "line": "     * @param {...Integer} arguments - indices\r"
      },
      {
        "lineNumber": 278,
        "line": "     * @return {Boolean} test result\r"
      },
      {
        "lineNumber": 279,
        "line": "     */\r"
      },
      {
        "lineNumber": 280,
        "line": "  isClear () {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "arguments"
    ]
  },
  {
    "name": "Picker#getObject",
    "filePath": "src/utils/picker.js",
    "lines": [
      {
        "lineNumber": 38,
        "line": "  /**\r"
      },
      {
        "lineNumber": 39,
        "line": "   * Get object data\r"
      },
      {
        "lineNumber": 40,
        "line": "   * @abstract\r"
      },
      {
        "lineNumber": 41,
        "line": "   * @param  {Integer} pid - the picking id\r"
      },
      {
        "lineNumber": 42,
        "line": "   * @return {Object} the object data\r"
      },
      {
        "lineNumber": 43,
        "line": "   */\r"
      },
      {
        "lineNumber": 44,
        "line": "  getObject (/* pid */) {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "pid"
    ]
  },
  {
    "name": "Picker#_getPosition",
    "filePath": "src/utils/picker.js",
    "lines": [
      {
        "lineNumber": 58,
        "line": "  /**\r"
      },
      {
        "lineNumber": 59,
        "line": "   * Get object position\r"
      },
      {
        "lineNumber": 60,
        "line": "   * @abstract\r"
      },
      {
        "lineNumber": 61,
        "line": "   * @param  {Integer} pid - the picking id\r"
      },
      {
        "lineNumber": 62,
        "line": "   * @return {Vector3} the object position\r"
      },
      {
        "lineNumber": 63,
        "line": "   */\r"
      },
      {
        "lineNumber": 64,
        "line": "  _getPosition (/* pid */) {\r"
      }
    ],
    "codeParams": [],
    "docParams": [
      "pid"
    ]
  },
  {
    "name": "Queue",
    "filePath": "src/utils/queue.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Queue\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function Queue (fn, argList) {\r"
      }
    ],
    "codeParams": [
      "fn",
      "argList"
    ],
    "docParams": []
  },
  {
    "name": "TiledRenderer",
    "filePath": "src/viewer/tiled-renderer.js",
    "lines": [
      {
        "lineNumber": 0,
        "line": "/**\r"
      },
      {
        "lineNumber": 1,
        "line": " * @file Tiled Renderer\r"
      },
      {
        "lineNumber": 2,
        "line": " * @author Alexander Rose <alexander.rose@weirdbyte.de>\r"
      },
      {
        "lineNumber": 3,
        "line": " * @private\r"
      },
      {
        "lineNumber": 4,
        "line": " */\r"
      },
      {
        "lineNumber": 5,
        "line": "\r"
      },
      {
        "lineNumber": 6,
        "line": "function TiledRenderer (renderer, camera, viewer, params) {\r"
      }
    ],
    "codeParams": [
      "renderer",
      "camera",
      "viewer",
      "params"
    ],
    "docParams": []
  }
]