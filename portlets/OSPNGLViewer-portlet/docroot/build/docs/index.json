[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/align/align-utils.js",
    "content": "/**\r\n * @file Align Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Selection from '../selection/selection.js'\r\nimport Alignment from './alignment.js'\r\nimport Superposition from './superposition.js'\r\n\r\n/**\r\n * Perform structural superposition of two structures,\r\n * optionally guided by a sequence alignment\r\n * @param  {Structure|StructureView} s1 - structure 1 which is superposed onto structure 2\r\n * @param  {Structure|StructureView} s2 - structure 2 onto which structure 1 is superposed\r\n * @param  {Boolean} [align] - guide the superposition by a sequence alignment\r\n * @param  {String} [sele1] - selection string for structure 1\r\n * @param  {String} [sele2] - selection string for structure 2\r\n * @return {undefined}\r\n */\r\nfunction superpose (s1, s2, align, sele1, sele2) {\r\n  align = defaults(align, false)\r\n  sele1 = defaults(sele1, '')\r\n  sele2 = defaults(sele2, '')\r\n\r\n  var i, j, n, atoms1, atoms2\r\n\r\n  if (align) {\r\n    var _s1 = s1\r\n    var _s2 = s2\r\n\r\n    if (sele1 && sele2) {\r\n      _s1 = s1.getView(new Selection(sele1))\r\n      _s2 = s2.getView(new Selection(sele2))\r\n    }\r\n\r\n    var seq1 = _s1.getSequence()\r\n    var seq2 = _s2.getSequence()\r\n\r\n    // Log.log( seq1.join(\"\") );\r\n    // Log.log( seq2.join(\"\") );\r\n\r\n    var ali = new Alignment(seq1.join(''), seq2.join(''))\r\n\r\n    ali.calc()\r\n    ali.trace()\r\n\r\n    // Log.log( \"superpose alignment score\", ali.score );\r\n\r\n    // Log.log( ali.ali1 );\r\n    // Log.log( ali.ali2 );\r\n\r\n    var l, _i, _j, x, y\r\n    i = 0\r\n    j = 0\r\n    n = ali.ali1.length\r\n    var aliIdx1 = []\r\n    var aliIdx2 = []\r\n\r\n    for (l = 0; l < n; ++l) {\r\n      x = ali.ali1[ l ]\r\n      y = ali.ali2[ l ]\r\n\r\n      _i = 0\r\n      _j = 0\r\n\r\n      if (x === '-') {\r\n        aliIdx2[ j ] = false\r\n      } else {\r\n        aliIdx2[ j ] = true\r\n        _i = 1\r\n      }\r\n\r\n      if (y === '-') {\r\n        aliIdx1[ i ] = false\r\n      } else {\r\n        aliIdx1[ i ] = true\r\n        _j = 1\r\n      }\r\n\r\n      i += _i\r\n      j += _j\r\n    }\r\n\r\n    // Log.log( i, j );\r\n\r\n    // Log.log( aliIdx1 );\r\n    // Log.log( aliIdx2 );\r\n\r\n    var _atoms1 = []\r\n    var _atoms2 = []\r\n    var ap1 = _s1.getAtomProxy()\r\n    var ap2 = _s2.getAtomProxy()\r\n\r\n    i = 0\r\n    _s1.eachResidue(function (r) {\r\n      if (r.traceAtomIndex === undefined ||\r\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\r\n\r\n      if (aliIdx1[ i ]) {\r\n        ap1.index = r.getAtomIndexByName('CA')\r\n        _atoms1.push(ap1.x, ap1.y, ap1.z)\r\n      }\r\n      i += 1\r\n    })\r\n\r\n    i = 0\r\n    _s2.eachResidue(function (r) {\r\n      if (r.traceAtomIndex === undefined ||\r\n            r.traceAtomIndex !== r.getAtomIndexByName('CA')) return\r\n\r\n      if (aliIdx2[ i ]) {\r\n        ap2.index = r.getAtomIndexByName('CA')\r\n        _atoms2.push(ap2.x, ap2.y, ap2.z)\r\n      }\r\n      i += 1\r\n    })\r\n\r\n    atoms1 = new Float32Array(_atoms1)\r\n    atoms2 = new Float32Array(_atoms2)\r\n  } else {\r\n    var sviewCa1 = s1.getView(new Selection(sele1 + ' and .CA'))\r\n    var sviewCa2 = s2.getView(new Selection(sele2 + ' and .CA'))\r\n\r\n    atoms1 = sviewCa1\r\n    atoms2 = sviewCa2\r\n  }\r\n\r\n  var superpose = new Superposition(atoms1, atoms2)\r\n  superpose.transform(s1)\r\n  s1.refreshPosition()\r\n}\r\n\r\nexport {\r\n  superpose\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/align/align-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "superpose",
    "memberof": "src/align/align-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/align/align-utils.js~superpose",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/align/align-utils.js",
    "importStyle": "{superpose}",
    "description": "Perform structural superposition of two structures,\noptionally guided by a sequence alignment",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure",
          "StructureView"
        ],
        "spread": false,
        "optional": false,
        "name": "s1",
        "description": "structure 1 which is superposed onto structure 2"
      },
      {
        "nullable": null,
        "types": [
          "Structure",
          "StructureView"
        ],
        "spread": false,
        "optional": false,
        "name": "s2",
        "description": "structure 2 onto which structure 1 is superposed"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "align",
        "description": "guide the superposition by a sequence alignment"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "sele1",
        "description": "selection string for structure 1"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "sele2",
        "description": "selection string for structure 2"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/align/alignment.js",
    "content": "/**\r\n * @file Alignment\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals.js'\r\n\r\n// const nucleotides = 'ACTG';\r\nconst aminoacidsX = 'ACDEFGHIKLMNPQRSTVWY'\r\nconst aminoacids = 'ARNDCQEGHILKMFPSTWYVBZ?'\r\n\r\nconst blosum62x = [\r\n  [4, 0, -2, -1, -2, 0, -2, -1, -1, -1, -1, -2, -1, -1, -1, 1, 0, 0, -3, -2],        // A\r\n  [0, 9, -3, -4, -2, -3, -3, -1, -3, -1, -1, -3, -3, -3, -3, -1, -1, -1, -2, -2],    // C\r\n  [-2, -3, 6, 2, -3, -1, -1, -3, -1, -4, -3, 1, -1, 0, -2, 0, -1, -3, -4, -3],       // D\r\n  [-1, -4, 2, 5, -3, -2, 0, -3, 1, -3, -2, 0, -1, 2, 0, 0, -1, -2, -3, -2],          // E\r\n  [-2, -2, -3, -3, 6, -3, -1, 0, -3, 0, 0, -3, -4, -3, -3, -2, -2, -1, 1, 3],        // F\r\n  [0, -3, -1, -2, -3, 6, -2, -4, -2, -4, -3, 0, -2, -2, -2, 0, -2, -3, -2, -3],      // G\r\n  [-2, -3, -1, 0, -1, -2, 8, -3, -1, -3, -2, 1, -2, 0, 0, -1, -2, -3, -2, 2],        // H\r\n  [-1, -1, -3, -3, 0, -4, -3, 4, -3, 2, 1, -3, -3, -3, -3, -2, -1, 3, -3, -1],       // I\r\n  [-1, -3, -1, 1, -3, -2, -1, -3, 5, -2, -1, 0, -1, 1, 2, 0, -1, -2, -3, -2],        // K\r\n  [-1, -1, -4, -3, 0, -4, -3, 2, -2, 4, 2, -3, -3, -2, -2, -2, -1, 1, -2, -1],       // L\r\n  [-1, -1, -3, -2, 0, -3, -2, 1, -1, 2, 5, -2, -2, 0, -1, -1, -1, 1, -1, -1],        // M\r\n  [-2, -3, 1, 0, -3, 0, 1, -3, 0, -3, -2, 6, -2, 0, 0, 1, 0, -3, -4, -2],            // N\r\n  [-1, -3, -1, -1, -4, -2, -2, -3, -1, -3, -2, -2, 7, -1, -2, -1, -1, -2, -4, -3],   // P\r\n  [-1, -3, 0, 2, -3, -2, 0, -3, 1, -2, 0, 0, -1, 5, 1, 0, -1, -2, -2, -1],           // Q\r\n  [-1, -3, -2, 0, -3, -2, 0, -3, 2, -2, -1, 0, -2, 1, 5, -1, -1, -3, -3, -2],        // R\r\n  [1, -1, 0, 0, -2, 0, -1, -2, 0, -2, -1, 1, -1, 0, -1, 4, 1, -2, -3, -2],           // S\r\n  [0, -1, -1, -1, -2, -2, -2, -1, -1, -1, -1, 0, -1, -1, -1, 1, 5, 0, -2, -2],       // T\r\n  [0, -1, -3, -2, -1, -3, -3, 3, -2, 1, 1, -3, -2, -2, -3, -2, 0, 4, -3, -1],        // V\r\n  [-3, -2, -4, -3, 1, -2, -2, -3, -3, -2, -1, -4, -4, -2, -3, -3, -2, -3, 11, 2],    // W\r\n  [-2, -2, -3, -2, 3, -3, 2, -1, -2, -1, -1, -2, -3, -1, -2, -2, -2, -1, 2, 7]       // Y\r\n]\r\n\r\nconst blosum62 = [\r\n  // A  R  N  D  C  Q  E  G  H  I  L  K  M  F  P  S  T  W  Y  V  B  Z  X\r\n  [4, -1, -2, -2, 0, -1, -1, 0, -2, -1, -1, -1, -1, -2, -1, 1, 0, -3, -2, 0, -2, -1, 0], // A\r\n  [-1, 5, 0, -2, -3, 1, 0, -2, 0, -3, -2, 2, -1, -3, -2, -1, -1, -3, -2, -3, -1, 0, -1], // R\r\n  [-2, 0, 6, 1, -3, 0, 0, 0, 1, -3, -3, 0, -2, -3, -2, 1, 0, -4, -2, -3, 3, 0, -1], // N\r\n  [-2, -2, 1, 6, -3, 0, 2, -1, -1, -3, -4, -1, -3, -3, -1, 0, -1, -4, -3, -3, 4, 1, -1], // D\r\n  [0, -3, -3, -3, 9, -3, -4, -3, -3, -1, -1, -3, -1, -2, -3, -1, -1, -2, -2, -1, -3, -3, -2], // C\r\n  [-1, 1, 0, 0, -3, 5, 2, -2, 0, -3, -2, 1, 0, -3, -1, 0, -1, -2, -1, -2, 0, 3, -1], // Q\r\n  [-1, 0, 0, 2, -4, 2, 5, -2, 0, -3, -3, 1, -2, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // E\r\n  [0, -2, 0, -1, -3, -2, -2, 6, -2, -4, -4, -2, -3, -3, -2, 0, -2, -2, -3, -3, -1, -2, -1], // G\r\n  [-2, 0, 1, -1, -3, 0, 0, -2, 8, -3, -3, -1, -2, -1, -2, -1, -2, -2, 2, -3, 0, 0, -1], // H\r\n  [-1, -3, -3, -3, -1, -3, -3, -4, -3, 4, 2, -3, 1, 0, -3, -2, -1, -3, -1, 3, -3, -3, -1], // I\r\n  [-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4, -2, 2, 0, -3, -2, -1, -2, -1, 1, -4, -3, -1], // L\r\n  [-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5, -1, -3, -1, 0, -1, -3, -2, -2, 0, 1, -1], // K\r\n  [-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5, 0, -2, -1, -1, -1, -1, 1, -3, -1, -1], // M\r\n  [-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6, -4, -2, -2, 1, 3, -1, -3, -3, -1], // F\r\n  [-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7, -1, -1, -4, -3, -2, -2, -1, -2], // P\r\n  [1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, 4, 1, -3, -2, -2, 0, 0, 0], // S\r\n  [0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5, -2, -2, 0, -1, -1, 0], // T\r\n  [-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11, 2, -3, -4, -3, -2], // W\r\n  [-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7, -1, -3, -2, -1], // Y\r\n  [0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4, -3, -2, -1], // V\r\n  [-2, -1, 3, 4, -3, 0, 1, -1, 0, -3, -4, 0, -3, -3, -2, 0, -1, -4, -3, -3, 4, 1, -1], // B\r\n  [-1, 0, 0, 1, -3, 3, 4, -2, 0, -3, -3, 1, -1, -3, -1, 0, -1, -3, -2, -2, 1, 4, -1], // Z\r\n  [0, -1, -1, -1, -2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -2, 0, 0, -2, -1, -1, -1, -1, -1]  // X\r\n]\r\n\r\nfunction prepareMatrix (cellNames, mat) {\r\n  let j\r\n  let i = 0\r\n  const matDict = {}\r\n  mat.forEach(function (row) {\r\n    j = 0\r\n    const rowDict = {}\r\n    row.forEach(function (elm) {\r\n      rowDict[ cellNames[ j++ ] ] = elm\r\n    })\r\n    matDict[ cellNames[ i++ ] ] = rowDict\r\n  })\r\n  return matDict\r\n}\r\n\r\nconst SubstitutionMatrices = (function () {\r\n  return {\r\n    blosum62: prepareMatrix(aminoacids, blosum62),\r\n    blosum62x: prepareMatrix(aminoacidsX, blosum62x)\r\n  }\r\n}())\r\n\r\nclass Alignment {\r\n  constructor (seq1, seq2, gapPenalty, gapExtensionPenalty, substMatrix) {\r\n    // TODO try encoding seqs as integers and use array subst matrix, maybe faster\r\n\r\n    this.seq1 = seq1\r\n    this.seq2 = seq2\r\n\r\n    this.gapPenalty = gapPenalty || -10\r\n    this.gapExtensionPenalty = gapExtensionPenalty || -1\r\n    this.substMatrix = substMatrix || 'blosum62'\r\n\r\n    if (this.substMatrix) {\r\n      this.substMatrix = SubstitutionMatrices[ this.substMatrix ]\r\n    }\r\n  }\r\n\r\n  initMatrices () {\r\n    this.n = this.seq1.length\r\n    this.m = this.seq2.length\r\n\r\n    // Log.log(this.n, this.m);\r\n\r\n    this.score = undefined\r\n    this.ali = ''\r\n\r\n    this.S = []\r\n    this.V = []\r\n    this.H = []\r\n\r\n    var i, j\r\n\r\n    for (i = 0; i <= this.n; ++i) {\r\n      this.S[ i ] = []\r\n      this.V[ i ] = []\r\n      this.H[ i ] = []\r\n\r\n      for (j = 0; j <= this.m; ++j) {\r\n        this.S[ i ][ j ] = 0\r\n        this.V[ i ][ j ] = 0\r\n        this.H[ i ][ j ] = 0\r\n      }\r\n    }\r\n\r\n    for (i = 0; i <= this.n; ++i) {\r\n      this.S[ i ][ 0 ] = this.gap(0)\r\n      this.H[ i ][ 0 ] = -Infinity\r\n    }\r\n\r\n    for (j = 0; j <= this.m; ++j) {\r\n      this.S[ 0 ][ j ] = this.gap(0)\r\n      this.V[ 0 ][ j ] = -Infinity\r\n    }\r\n\r\n    this.S[ 0 ][ 0 ] = 0\r\n\r\n    // Log.log(this.S, this.V, this.H);\r\n  }\r\n\r\n  gap (len) {\r\n    return this.gapPenalty + len * this.gapExtensionPenalty\r\n  }\r\n\r\n  makeScoreFn () {\r\n    var seq1 = this.seq1\r\n    var seq2 = this.seq2\r\n\r\n    var substMatrix = this.substMatrix\r\n\r\n    var c1, c2\r\n\r\n    if (substMatrix) {\r\n      return function score (i, j) {\r\n        c1 = seq1[ i ]\r\n        c2 = seq2[ j ]\r\n\r\n        try {\r\n          return substMatrix[ c1 ][ c2 ]\r\n        } catch (e) {\r\n          return -4\r\n        }\r\n      }\r\n    } else {\r\n      Log.warn('Alignment: no subst matrix')\r\n\r\n      return function scoreNoSubstMat (i, j) {\r\n        c1 = seq1[ i ]\r\n        c2 = seq2[ j ]\r\n\r\n        return c1 === c2 ? 5 : -3\r\n      }\r\n    }\r\n  }\r\n\r\n  calc () {\r\n    if (Debug) Log.time('Alignment.calc')\r\n\r\n    this.initMatrices()\r\n\r\n    var gap0 = this.gap(0)\r\n    var scoreFn = this.makeScoreFn()\r\n    var gapExtensionPenalty = this.gapExtensionPenalty\r\n\r\n    var V = this.V\r\n    var H = this.H\r\n    var S = this.S\r\n\r\n    var n = this.n\r\n    var m = this.m\r\n\r\n    var Vi1, Si1, Vi, Hi, Si\r\n\r\n    var i, j\r\n\r\n    for (i = 1; i <= n; ++i) {\r\n      Si1 = S[ i - 1 ]\r\n      Vi1 = V[ i - 1 ]\r\n\r\n      Vi = V[ i ]\r\n      Hi = H[ i ]\r\n      Si = S[ i ]\r\n\r\n      for (j = 1; j <= m; ++j) {\r\n        Vi[j] = Math.max(\r\n          Si1[ j ] + gap0,\r\n          Vi1[ j ] + gapExtensionPenalty\r\n        )\r\n\r\n        Hi[j] = Math.max(\r\n          Si[ j - 1 ] + gap0,\r\n          Hi[ j - 1 ] + gapExtensionPenalty\r\n        )\r\n\r\n        Si[j] = Math.max(\r\n          Si1[ j - 1 ] + scoreFn(i - 1, j - 1), // match\r\n          Vi[ j ], // del\r\n          Hi[ j ]  // ins\r\n        )\r\n      }\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Alignment.calc')\r\n\r\n    if (Debug) Log.log(this.S, this.V, this.H)\r\n  }\r\n\r\n  trace () {\r\n    if (Debug) Log.time('Alignment.trace')\r\n\r\n    this.ali1 = ''\r\n    this.ali2 = ''\r\n\r\n    const scoreFn = this.makeScoreFn()\r\n\r\n    let i = this.n\r\n    let j = this.m\r\n    let mat\r\n\r\n    if (this.S[i][j] >= this.V[i][j]) {\r\n      mat = 'S'\r\n      this.score = this.S[i][j]\r\n    } else if (this.V[i][j] >= this.H[i][j]) {\r\n      mat = 'V'\r\n      this.score = this.V[i][j]\r\n    } else {\r\n      mat = 'H'\r\n      this.score = this.H[i][j]\r\n    }\r\n\r\n    if (Debug) Log.log('Alignment: SCORE', this.score)\r\n    if (Debug) Log.log('Alignment: S, V, H', this.S[i][j], this.V[i][j], this.H[i][j])\r\n\r\n    while (i > 0 && j > 0) {\r\n      if (mat === 'S') {\r\n        if (this.S[i][j] === this.S[i - 1][j - 1] + scoreFn(i - 1, j - 1)) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --i\r\n          --j\r\n          mat = 'S'\r\n        } else if (this.S[i][j] === this.V[i][j]) {\r\n          mat = 'V'\r\n        } else if (this.S[i][j] === this.H[i][j]) {\r\n          mat = 'H'\r\n        } else {\r\n          // Log.debug('Alignment: S');\r\n          --i\r\n          --j\r\n        }\r\n      } else if (mat === 'V') {\r\n        if (this.V[i][j] === this.V[i - 1][j] + this.gapExtensionPenalty) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = '-' + this.ali2\r\n          --i\r\n          mat = 'V'\r\n        } else if (this.V[i][j] === this.S[i - 1][j] + this.gap(0)) {\r\n          this.ali1 = this.seq1[i - 1] + this.ali1\r\n          this.ali2 = '-' + this.ali2\r\n          --i\r\n          mat = 'S'\r\n        } else {\r\n          // Log.debug('Alignment: V');\r\n          --i\r\n        }\r\n      } else if (mat === 'H') {\r\n        if (this.H[i][j] === this.H[i][j - 1] + this.gapExtensionPenalty) {\r\n          this.ali1 = '-' + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --j\r\n          mat = 'H'\r\n        } else if (this.H[i][j] === this.S[i][j - 1] + this.gap(0)) {\r\n          this.ali1 = '-' + this.ali1\r\n          this.ali2 = this.seq2[j - 1] + this.ali2\r\n          --j\r\n          mat = 'S'\r\n        } else {\r\n          // Log.debug('Alignment: H');\r\n          --j\r\n        }\r\n      } else {\r\n        Log.error('Alignment: no matrix')\r\n      }\r\n    }\r\n\r\n    while (i > 0) {\r\n      this.ali1 = this.seq1[ i - 1 ] + this.ali1\r\n      this.ali2 = '-' + this.ali2\r\n      --i\r\n    }\r\n\r\n    while (j > 0) {\r\n      this.ali1 = '-' + this.ali1\r\n      this.ali2 = this.seq2[ j - 1 ] + this.ali2\r\n      --j\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Alignment.trace')\r\n\r\n    if (Debug) Log.log([this.ali1, this.ali2])\r\n  }\r\n}\r\n\r\nexport default Alignment\r\n",
    "static": true,
    "longname": "D:/nglLib/src/align/alignment.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "aminoacidsX",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~aminoacidsX",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "aminoacids",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~aminoacids",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "blosum62x",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~blosum62x",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "blosum62",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~blosum62",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "prepareMatrix",
    "memberof": "src/align/alignment.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/align/alignment.js~prepareMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "SubstitutionMatrices",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~SubstitutionMatrices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "class",
    "name": "Alignment",
    "memberof": "src/align/alignment.js",
    "static": true,
    "longname": "src/align/alignment.js~Alignment",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/align/alignment.js",
    "importStyle": "Alignment",
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 58,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 59,
    "kind": "member",
    "name": "seq1",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#seq1",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "seq2",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#seq2",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "gapPenalty",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#gapPenalty",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "gapExtensionPenalty",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#gapExtensionPenalty",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "substMatrix",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#substMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "initMatrices",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#initMatrices",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "n",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#n",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "m",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#m",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "score",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#score",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "ali",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#ali",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "S",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#S",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "V",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#V",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "H",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#H",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "gap",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#gap",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "makeScoreFn",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#makeScoreFn",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "calc",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#calc",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "trace",
    "memberof": "src/align/alignment.js~Alignment",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/alignment.js~Alignment#trace",
    "access": "public",
    "description": null,
    "lineNumber": 230,
    "undocument": true
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "ali1",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#ali1",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "ali2",
    "memberof": "src/align/alignment.js~Alignment",
    "static": false,
    "longname": "src/align/alignment.js~Alignment#ali2",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true
  },
  {
    "__docId__": 96,
    "kind": "file",
    "name": "src/align/superposition.js",
    "content": "/**\r\n * @file Superposition\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport {\r\n    Matrix, svd, meanRows, subRows, addRows, transpose,\r\n    multiplyABt, invert3x3, multiply3x3, mat3x3determinant\r\n} from '../math/matrix-utils.js'\r\n\r\nclass Superposition {\r\n  constructor (atoms1, atoms2) {\r\n    // allocate & init data structures\r\n\r\n    var n1\r\n    if (typeof atoms1.eachAtom === 'function') {\r\n      n1 = atoms1.atomCount\r\n    } else if (atoms1 instanceof Float32Array) {\r\n      n1 = atoms1.length / 3\r\n    }\r\n\r\n    var n2\r\n    if (typeof atoms2.eachAtom === 'function') {\r\n      n2 = atoms2.atomCount\r\n    } else if (atoms1 instanceof Float32Array) {\r\n      n2 = atoms2.length / 3\r\n    }\r\n\r\n    var n = Math.min(n1, n2)\r\n\r\n    var coords1 = new Matrix(3, n)\r\n    var coords2 = new Matrix(3, n)\r\n\r\n    this.coords1t = new Matrix(n, 3)\r\n    this.coords2t = new Matrix(n, 3)\r\n\r\n    this.A = new Matrix(3, 3)\r\n    this.W = new Matrix(1, 3)\r\n    this.U = new Matrix(3, 3)\r\n    this.V = new Matrix(3, 3)\r\n    this.VH = new Matrix(3, 3)\r\n    this.R = new Matrix(3, 3)\r\n\r\n    this.tmp = new Matrix(3, 3)\r\n    this.c = new Matrix(3, 3)\r\n    this.c.data.set([ 1, 0, 0, 0, 1, 0, 0, 0, -1 ])\r\n\r\n    // prep coords\r\n\r\n    this.prepCoords(atoms1, coords1, n)\r\n    this.prepCoords(atoms2, coords2, n)\r\n\r\n    // superpose\r\n\r\n    this._superpose(coords1, coords2)\r\n  }\r\n\r\n  _superpose (coords1, coords2) {\r\n    this.mean1 = meanRows(coords1)\r\n    this.mean2 = meanRows(coords2)\r\n\r\n    subRows(coords1, this.mean1)\r\n    subRows(coords2, this.mean2)\r\n\r\n    transpose(this.coords1t, coords1)\r\n    transpose(this.coords2t, coords2)\r\n\r\n    multiplyABt(this.A, this.coords2t, this.coords1t)\r\n\r\n    svd(this.A, this.W, this.U, this.V)\r\n\r\n    invert3x3(this.V, this.VH)\r\n    multiply3x3(this.R, this.U, this.VH)\r\n\r\n    if (mat3x3determinant(this.R) < 0.0) {\r\n      if (Debug) Log.log('R not a right handed system')\r\n\r\n      multiply3x3(this.tmp, this.c, this.VH)\r\n      multiply3x3(this.R, this.U, this.tmp)\r\n    }\r\n  }\r\n\r\n  prepCoords (atoms, coords, n) {\r\n    var i = 0\r\n    var n3 = n * 3\r\n    var cd = coords.data\r\n\r\n    if (typeof atoms.eachAtom === 'function') {\r\n      atoms.eachAtom(function (a) {\r\n        if (i < n3) {\r\n          cd[ i + 0 ] = a.x\r\n          cd[ i + 1 ] = a.y\r\n          cd[ i + 2 ] = a.z\r\n\r\n          i += 3\r\n        }\r\n      })\r\n    } else if (atoms instanceof Float32Array) {\r\n      cd.set(atoms.subarray(0, n3))\r\n    } else {\r\n      Log.warn('prepCoords: input type unknown')\r\n    }\r\n  }\r\n\r\n  transform (atoms) {\r\n    // allocate data structures\r\n\r\n    var n\r\n    if (typeof atoms.eachAtom === 'function') {\r\n      n = atoms.atomCount\r\n    } else if (atoms instanceof Float32Array) {\r\n      n = atoms.length / 3\r\n    }\r\n\r\n    var coords = new Matrix(3, n)\r\n    var tmp = new Matrix(n, 3)\r\n\r\n    // prep coords\r\n\r\n    this.prepCoords(atoms, coords, n)\r\n\r\n    // do transform\r\n\r\n    subRows(coords, this.mean1)\r\n    multiplyABt(tmp, this.R, coords)\r\n    transpose(coords, tmp)\r\n    addRows(coords, this.mean2)\r\n\r\n    var i = 0\r\n    var cd = coords.data\r\n\r\n    if (typeof atoms.eachAtom === 'function') {\r\n      atoms.eachAtom(function (a) {\r\n        a.x = cd[ i + 0 ]\r\n        a.y = cd[ i + 1 ]\r\n        a.z = cd[ i + 2 ]\r\n\r\n        i += 3\r\n      })\r\n    } else if (atoms instanceof Float32Array) {\r\n      atoms.set(cd.subarray(0, n * 3))\r\n    } else {\r\n      Log.warn('transform: input type unknown')\r\n    }\r\n  }\r\n}\r\n\r\nexport default Superposition\r\n",
    "static": true,
    "longname": "D:/nglLib/src/align/superposition.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 97,
    "kind": "class",
    "name": "Superposition",
    "memberof": "src/align/superposition.js",
    "static": true,
    "longname": "src/align/superposition.js~Superposition",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/align/superposition.js",
    "importStyle": "Superposition",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 98,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/align/superposition.js~Superposition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/superposition.js~Superposition#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "coords1t",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#coords1t",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "coords2t",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#coords2t",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "A",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#A",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 102,
    "kind": "member",
    "name": "W",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#W",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "U",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#U",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 104,
    "kind": "member",
    "name": "V",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#V",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "member",
    "name": "VH",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#VH",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "R",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#R",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 107,
    "kind": "member",
    "name": "tmp",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#tmp",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 108,
    "kind": "member",
    "name": "c",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#c",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_superpose",
    "memberof": "src/align/superposition.js~Superposition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/superposition.js~Superposition#_superpose",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 110,
    "kind": "member",
    "name": "mean1",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#mean1",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 111,
    "kind": "member",
    "name": "mean2",
    "memberof": "src/align/superposition.js~Superposition",
    "static": false,
    "longname": "src/align/superposition.js~Superposition#mean2",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "prepCoords",
    "memberof": "src/align/superposition.js~Superposition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/superposition.js~Superposition#prepCoords",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "transform",
    "memberof": "src/align/superposition.js~Superposition",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/align/superposition.js~Superposition#transform",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/animation/animation.js",
    "content": "/**\r\n * @file Animation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion } from '../../lib/three.es6.js'\r\n\r\nimport { defaults, ensureVector3, ensureQuaternion } from '../utils.js'\r\nimport { lerp, smoothstep } from '../math/math-utils.js'\r\n\r\n/**\r\n * Animation. Base animation class.\r\n * @interface\r\n */\r\nclass Animation {\r\n  constructor (duration, controls, ...args) {\r\n    this.duration = defaults(duration, 1000)\r\n    this.controls = controls\r\n\r\n    this.startTime = window.performance.now()\r\n    this.pausedTime = -1\r\n    this.elapsedDuration = 0\r\n    this.pausedDuration = 0\r\n    this.ignoreGlobalToggle = false\r\n\r\n    this._paused = false\r\n    this._resolveList = []\r\n\r\n    ;this._init(...args)\r\n  }\r\n\r\n    /**\r\n     * True when animation has finished\r\n     * @type {Boolean}\r\n     */\r\n  get done () {\r\n    return this.alpha === 1\r\n  }\r\n\r\n    /**\r\n     * True when animation is paused\r\n     * @type {Boolean}\r\n     */\r\n  get paused () {\r\n    return this._paused\r\n  }\r\n\r\n    /**\r\n     * init animation\r\n     * @abstract\r\n     * @return {undefined}\r\n     */\r\n  _init () {}\r\n\r\n    /**\r\n     * called on every tick\r\n     * @abstract\r\n     * @return {undefined}\r\n     */\r\n  _tick () {}\r\n\r\n  tick (stats) {\r\n    if (this._paused) return\r\n\r\n    this.elapsedDuration = stats.currentTime - this.startTime - this.pausedDuration\r\n\r\n    if (this.duration === 0) {\r\n      this.alpha = 1\r\n    } else {\r\n      this.alpha = smoothstep(0, 1, this.elapsedDuration / this.duration)\r\n    }\r\n\r\n    this._tick(stats)\r\n\r\n    if (this.done) {\r\n      this._resolveList.forEach(resolve => resolve())\r\n    }\r\n\r\n    return this.done\r\n  }\r\n\r\n    /**\r\n     * Pause animation\r\n     * @param {Boolean} [hold] - put animation on a hold which\r\n     *                           must be release before it can be resumed\r\n     * @return {undefined}\r\n     */\r\n  pause (hold) {\r\n    if (hold) this._hold = true\r\n\r\n    if (this.pausedTime === -1) {\r\n      this.pausedTime = window.performance.now()\r\n    }\r\n    this._paused = true\r\n  }\r\n\r\n    /**\r\n     * Resume animation\r\n     * @param {Boolean} [releaseHold] - release a hold on the animation\r\n     * @return {undefined}\r\n     */\r\n  resume (releaseHold) {\r\n    if (!releaseHold && this._hold) return\r\n\r\n    this.pausedDuration += window.performance.now() - this.pausedTime\r\n    this._paused = false\r\n    this._hold = false\r\n    this.pausedTime = -1\r\n  }\r\n\r\n    /**\r\n     * Toggle animation\r\n     * @return {undefined}\r\n     */\r\n  toggle () {\r\n    if (this._paused) {\r\n      this.resume()\r\n    } else {\r\n      this.pause()\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Promise-like interface\r\n     * @param  {Function} callback - a callback\r\n     * @return {Promise} a promise\r\n     */\r\n  then (callback) {\r\n    let p\r\n\r\n    if (this.done) {\r\n      p = Promise.resolve()\r\n    } else {\r\n      p = new Promise(resolve => this._resolveList.push(resolve))\r\n    }\r\n\r\n    return p.then(callback)\r\n  }\r\n}\r\n\r\n/**\r\n * Spin animation. Spin around an axis.\r\n */\r\nclass SpinAnimation extends Animation {\r\n  constructor (duration, ...args) {\r\n    super(defaults(duration, Infinity), ...args)\r\n  }\r\n\r\n  _init (axis, angle) {\r\n    if (Array.isArray(axis)) {\r\n      this.axis = new Vector3().fromArray(axis)\r\n    } else {\r\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\r\n    }\r\n    this.angle = defaults(angle, 0.01)\r\n  }\r\n\r\n  _tick (stats) {\r\n    if (!this.axis || !this.angle) return\r\n\r\n    this.controls.spin(\r\n      this.axis, this.angle * stats.lastDuration / 16\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Rock animation. Rock around an axis.\r\n */\r\nclass RockAnimation extends Animation {\r\n  constructor (duration, ...args) {\r\n    super(defaults(duration, Infinity), ...args)\r\n  }\r\n\r\n  _init (axis, angleStep, angleEnd) {\r\n    if (Array.isArray(axis)) {\r\n      this.axis = new Vector3().fromArray(axis)\r\n    } else {\r\n      this.axis = defaults(axis, new Vector3(0, 1, 0))\r\n    }\r\n    this.angleStep = defaults(angleStep, 0.01)\r\n    this.angleEnd = defaults(angleEnd, 0.2)\r\n\r\n    this.angleSum = 0\r\n    this.direction = 1\r\n  }\r\n\r\n  _tick (stats) {\r\n    if (!this.axis || !this.angleStep || !this.angleEnd) return\r\n\r\n    const alpha = smoothstep(\r\n      0, 1, Math.abs(this.angleSum) / this.angleEnd\r\n    )\r\n    const angle = this.angleStep * this.direction * (1.1 - alpha)\r\n\r\n    this.controls.spin(\r\n      this.axis, angle * stats.lastDuration / 16\r\n    )\r\n\r\n    this.angleSum += this.angleStep\r\n\r\n    if (this.angleSum >= this.angleEnd) {\r\n      this.direction *= -1\r\n      this.angleSum = -this.angleEnd\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Move animation. Move from one position to another.\r\n */\r\nclass MoveAnimation extends Animation {\r\n  _init (moveFrom, moveTo) {\r\n    this.moveFrom = ensureVector3(defaults(moveFrom, new Vector3()))\r\n    this.moveTo = ensureVector3(defaults(moveTo, new Vector3()))\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this.controls.position.lerpVectors(\r\n      this.moveFrom, this.moveTo, this.alpha\r\n    ).negate()\r\n    this.controls.changed()\r\n  }\r\n}\r\n\r\n/**\r\n * Zoom animation. Gradually change the zoom level.\r\n */\r\nclass ZoomAnimation extends Animation {\r\n  _init (zoomFrom, zoomTo) {\r\n    this.zoomFrom = zoomFrom\r\n    this.zoomTo = zoomTo\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this.controls.distance(lerp(this.zoomFrom, this.zoomTo, this.alpha))\r\n  }\r\n}\r\n\r\n/**\r\n * Rotate animation. Rotate from one orientation to another.\r\n */\r\nclass RotateAnimation extends Animation {\r\n  _init (rotateFrom, rotateTo) {\r\n    this.rotateFrom = ensureQuaternion(rotateFrom)\r\n    this.rotateTo = ensureQuaternion(rotateTo)\r\n\r\n    this._currentRotation = new Quaternion()\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this._currentRotation\r\n        .copy(this.rotateFrom)\r\n        .slerp(this.rotateTo, this.alpha)\r\n\r\n    this.controls.rotate(this._currentRotation)\r\n  }\r\n}\r\n\r\n/**\r\n * Value animation. Call callback with interpolated value.\r\n */\r\nclass ValueAnimation extends Animation {\r\n  _init (valueFrom, valueTo, callback) {\r\n    this.valueFrom = valueFrom\r\n    this.valueTo = valueTo\r\n\r\n    this.callback = callback\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    this.callback(lerp(this.valueFrom, this.valueTo, this.alpha))\r\n  }\r\n}\r\n\r\n/**\r\n * Timeout animation. Call callback after duration.\r\n */\r\nclass TimeoutAnimation extends Animation {\r\n  _init (callback) {\r\n    this.callback = callback\r\n  }\r\n\r\n  _tick (/* stats */) {\r\n    if (this.alpha === 1) this.callback()\r\n  }\r\n}\r\n\r\n/**\r\n * Animation list.\r\n */\r\nclass AnimationList {\r\n  constructor (list) {\r\n    this._list = list || []\r\n    this._resolveList = []\r\n  }\r\n\r\n    /**\r\n     * True when all animations have finished\r\n     * @type {Boolean}\r\n     */\r\n  get done () {\r\n    return this._list.every(animation => {\r\n      return animation.done\r\n    })\r\n  }\r\n\r\n    /**\r\n     * Promise-like interface\r\n     * @param  {Function} callback - a callback\r\n     * @return {Promise} a promise\r\n     */\r\n  then (callback) {\r\n    let p\r\n\r\n    if (this.done) {\r\n      p = Promise.resolve()\r\n    } else {\r\n      p = new Promise(resolve => {\r\n        this._resolveList.push(resolve)\r\n        this._list.forEach(animation => {\r\n          animation.then(() => {\r\n            this._resolveList.forEach(callback => {\r\n              callback()\r\n            })\r\n            this._resolveList.length = 0\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    return p.then(callback)\r\n  }\r\n}\r\n\r\nexport {\r\n  Animation,\r\n  SpinAnimation,\r\n  RockAnimation,\r\n  MoveAnimation,\r\n  ZoomAnimation,\r\n  RotateAnimation,\r\n  ValueAnimation,\r\n  TimeoutAnimation,\r\n  AnimationList\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/animation/animation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "class",
    "name": "Animation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~Animation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{Animation}",
    "description": "Animation. Base animation class.",
    "lineNumber": 16,
    "interface": true
  },
  {
    "__docId__": 116,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "duration",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#duration",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "controls",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#controls",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "startTime",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#startTime",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "pausedTime",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#pausedTime",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "elapsedDuration",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#elapsedDuration",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "pausedDuration",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#pausedDuration",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "ignoreGlobalToggle",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#ignoreGlobalToggle",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "_paused",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#_paused",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "_resolveList",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#_resolveList",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "done",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#done",
    "access": "public",
    "description": "True when animation has finished",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "paused",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#paused",
    "access": "public",
    "description": "True when animation is paused",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#_init",
    "access": "private",
    "description": "init animation",
    "lineNumber": 54,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#_tick",
    "access": "private",
    "description": "called on every tick",
    "lineNumber": 61,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "abstract": true
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "tick",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#tick",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "alpha",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#alpha",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "pause",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#pause",
    "access": "public",
    "description": "Pause animation",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "hold",
        "description": "put animation on a hold which\n                          must be release before it can be resumed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "_hold",
    "memberof": "src/animation/animation.js~Animation",
    "static": false,
    "longname": "src/animation/animation.js~Animation#_hold",
    "access": "private",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 138,
    "kind": "method",
    "name": "resume",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#resume",
    "access": "public",
    "description": "Resume animation",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "releaseHold",
        "description": "release a hold on the animation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#toggle",
    "access": "public",
    "description": "Toggle animation",
    "lineNumber": 116,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "then",
    "memberof": "src/animation/animation.js~Animation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~Animation#then",
    "access": "public",
    "description": "Promise-like interface",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "a callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "a promise"
    }
  },
  {
    "__docId__": 145,
    "kind": "class",
    "name": "SpinAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~SpinAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{SpinAnimation}",
    "description": "Spin animation. Spin around an axis.",
    "lineNumber": 145,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 146,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/animation/animation.js~SpinAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~SpinAnimation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~SpinAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~SpinAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 150,
    "undocument": true
  },
  {
    "__docId__": 148,
    "kind": "member",
    "name": "axis",
    "memberof": "src/animation/animation.js~SpinAnimation",
    "static": false,
    "longname": "src/animation/animation.js~SpinAnimation#axis",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "angle",
    "memberof": "src/animation/animation.js~SpinAnimation",
    "static": false,
    "longname": "src/animation/animation.js~SpinAnimation#angle",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true
  },
  {
    "__docId__": 151,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~SpinAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~SpinAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 159,
    "undocument": true
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "RockAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~RockAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{RockAnimation}",
    "description": "Rock animation. Rock around an axis.",
    "lineNumber": 171,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 153,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/animation/animation.js~RockAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true
  },
  {
    "__docId__": 154,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~RockAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "axis",
    "memberof": "src/animation/animation.js~RockAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#axis",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "angleStep",
    "memberof": "src/animation/animation.js~RockAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#angleStep",
    "access": "public",
    "description": null,
    "lineNumber": 182,
    "undocument": true
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "angleEnd",
    "memberof": "src/animation/animation.js~RockAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#angleEnd",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "angleSum",
    "memberof": "src/animation/animation.js~RockAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#angleSum",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "direction",
    "memberof": "src/animation/animation.js~RockAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#direction",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true
  },
  {
    "__docId__": 161,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~RockAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~RockAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 189,
    "undocument": true
  },
  {
    "__docId__": 165,
    "kind": "class",
    "name": "MoveAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~MoveAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{MoveAnimation}",
    "description": "Move animation. Move from one position to another.",
    "lineNumber": 213,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~MoveAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~MoveAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 214,
    "undocument": true
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "moveFrom",
    "memberof": "src/animation/animation.js~MoveAnimation",
    "static": false,
    "longname": "src/animation/animation.js~MoveAnimation#moveFrom",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "moveTo",
    "memberof": "src/animation/animation.js~MoveAnimation",
    "static": false,
    "longname": "src/animation/animation.js~MoveAnimation#moveTo",
    "access": "public",
    "description": null,
    "lineNumber": 216,
    "undocument": true
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~MoveAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~MoveAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 219,
    "undocument": true
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "ZoomAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~ZoomAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{ZoomAnimation}",
    "description": "Zoom animation. Gradually change the zoom level.",
    "lineNumber": 230,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~ZoomAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~ZoomAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 231,
    "undocument": true
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "zoomFrom",
    "memberof": "src/animation/animation.js~ZoomAnimation",
    "static": false,
    "longname": "src/animation/animation.js~ZoomAnimation#zoomFrom",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "zoomTo",
    "memberof": "src/animation/animation.js~ZoomAnimation",
    "static": false,
    "longname": "src/animation/animation.js~ZoomAnimation#zoomTo",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~ZoomAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~ZoomAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 236,
    "undocument": true
  },
  {
    "__docId__": 175,
    "kind": "class",
    "name": "RotateAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~RotateAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{RotateAnimation}",
    "description": "Rotate animation. Rotate from one orientation to another.",
    "lineNumber": 244,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 176,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~RotateAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~RotateAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 245,
    "undocument": true
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "rotateFrom",
    "memberof": "src/animation/animation.js~RotateAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RotateAnimation#rotateFrom",
    "access": "public",
    "description": null,
    "lineNumber": 246,
    "undocument": true
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "rotateTo",
    "memberof": "src/animation/animation.js~RotateAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RotateAnimation#rotateTo",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "_currentRotation",
    "memberof": "src/animation/animation.js~RotateAnimation",
    "static": false,
    "longname": "src/animation/animation.js~RotateAnimation#_currentRotation",
    "access": "private",
    "description": null,
    "lineNumber": 249,
    "undocument": true
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~RotateAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~RotateAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 252,
    "undocument": true
  },
  {
    "__docId__": 181,
    "kind": "class",
    "name": "ValueAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~ValueAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{ValueAnimation}",
    "description": "Value animation. Call callback with interpolated value.",
    "lineNumber": 264,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~ValueAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~ValueAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 265,
    "undocument": true
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "valueFrom",
    "memberof": "src/animation/animation.js~ValueAnimation",
    "static": false,
    "longname": "src/animation/animation.js~ValueAnimation#valueFrom",
    "access": "public",
    "description": null,
    "lineNumber": 266,
    "undocument": true
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "valueTo",
    "memberof": "src/animation/animation.js~ValueAnimation",
    "static": false,
    "longname": "src/animation/animation.js~ValueAnimation#valueTo",
    "access": "public",
    "description": null,
    "lineNumber": 267,
    "undocument": true
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "callback",
    "memberof": "src/animation/animation.js~ValueAnimation",
    "static": false,
    "longname": "src/animation/animation.js~ValueAnimation#callback",
    "access": "public",
    "description": null,
    "lineNumber": 269,
    "undocument": true
  },
  {
    "__docId__": 186,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~ValueAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~ValueAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 272,
    "undocument": true
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "TimeoutAnimation",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~TimeoutAnimation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{TimeoutAnimation}",
    "description": "Timeout animation. Call callback after duration.",
    "lineNumber": 280,
    "interface": false,
    "extends": [
      "Animation"
    ]
  },
  {
    "__docId__": 188,
    "kind": "method",
    "name": "_init",
    "memberof": "src/animation/animation.js~TimeoutAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~TimeoutAnimation#_init",
    "access": "private",
    "description": null,
    "lineNumber": 281,
    "undocument": true
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "callback",
    "memberof": "src/animation/animation.js~TimeoutAnimation",
    "static": false,
    "longname": "src/animation/animation.js~TimeoutAnimation#callback",
    "access": "public",
    "description": null,
    "lineNumber": 282,
    "undocument": true
  },
  {
    "__docId__": 190,
    "kind": "method",
    "name": "_tick",
    "memberof": "src/animation/animation.js~TimeoutAnimation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~TimeoutAnimation#_tick",
    "access": "private",
    "description": null,
    "lineNumber": 285,
    "undocument": true
  },
  {
    "__docId__": 191,
    "kind": "class",
    "name": "AnimationList",
    "memberof": "src/animation/animation.js",
    "static": true,
    "longname": "src/animation/animation.js~AnimationList",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/animation/animation.js",
    "importStyle": "{AnimationList}",
    "description": "Animation list.",
    "lineNumber": 293,
    "interface": false
  },
  {
    "__docId__": 192,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/animation/animation.js~AnimationList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~AnimationList#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 294,
    "undocument": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "_list",
    "memberof": "src/animation/animation.js~AnimationList",
    "static": false,
    "longname": "src/animation/animation.js~AnimationList#_list",
    "access": "private",
    "description": null,
    "lineNumber": 295,
    "undocument": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "_resolveList",
    "memberof": "src/animation/animation.js~AnimationList",
    "static": false,
    "longname": "src/animation/animation.js~AnimationList#_resolveList",
    "access": "private",
    "description": null,
    "lineNumber": 296,
    "undocument": true
  },
  {
    "__docId__": 195,
    "kind": "get",
    "name": "done",
    "memberof": "src/animation/animation.js~AnimationList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~AnimationList#done",
    "access": "public",
    "description": "True when all animations have finished",
    "lineNumber": 303,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "method",
    "name": "then",
    "memberof": "src/animation/animation.js~AnimationList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/animation/animation.js~AnimationList#then",
    "access": "public",
    "description": "Promise-like interface",
    "lineNumber": 314,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "a callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "a promise"
    }
  },
  {
    "__docId__": 197,
    "kind": "file",
    "name": "src/buffer/arrow-buffer.js",
    "content": "/**\r\n * @file Arrow Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, Group } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Buffer from './buffer.js'\r\nimport CylinderBuffer from './cylinder-buffer.js'\r\nimport ConeBuffer from './cone-buffer.js'\r\nimport GeometryGroup from '../viewer/geometry-group.js'\r\n\r\n/**\r\n * Arrow buffer. Draws arrows made from a cylinder and a cone.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var arrowBuffer = new ArrowBuffer( {\r\n *     position1: new Float32Array( [ 0, 0, 0 ] ),\r\n *     position2: new Float32Array( [ 10, 1, 1 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n */\r\nclass ArrowBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position1 - from positions\r\n     * @param {Float32Array} data.position2 - to positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n  constructor (data, params) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 1.5)\r\n    this.wireframe = defaults(p.wireframe, false)\r\n\r\n    this.splitPosition = new Float32Array(d.position1.length)\r\n    this.cylinderRadius = new Float32Array(d.radius.length)\r\n\r\n    var attr = this.makeAttributes(d)\r\n    var bufferParams = {\r\n      radialSegments: defaults(p.radialSegments, 50),\r\n      openEnded: defaults(p.openEnded, false),\r\n      disableImpostor: defaults(p.disableImpostor, false)\r\n    }\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n            attr.cylinder, bufferParams\r\n        )\r\n    this.coneBuffer = new ConeBuffer(\r\n            attr.cone, bufferParams\r\n        )\r\n\r\n    this.geometry = new GeometryGroup([\r\n      this.cylinderBuffer.geometry,\r\n      this.coneBuffer.geometry\r\n    ])\r\n\r\n    this.group = new Group()\r\n    this.wireframeGroup = new Group()\r\n    this.pickingGroup = new Group()\r\n\r\n        // requires Group objects to be present\r\n    this.matrix = defaults(p.matrix, new Matrix4())\r\n\r\n    this.picking = d.picking\r\n  }\r\n\r\n  set matrix (m) {\r\n    Buffer.prototype.setMatrix.call(this, m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking\r\n  }\r\n\r\n  makeAttributes (data) {\r\n    const splitPosition = this.splitPosition\r\n    const cylinderRadius = this.cylinderRadius\r\n\r\n    const aspectRatio = this.aspectRatio\r\n\r\n    let i, il\r\n    const cylinder = {}\r\n    const cone = {}\r\n\r\n    if (data.radius) {\r\n      for (i = 0, il = cylinderRadius.length; i < il; ++i) {\r\n        cylinderRadius[ i ] = data.radius[ i ] / aspectRatio\r\n      }\r\n      cylinder.radius = cylinderRadius\r\n      cone.radius = data.radius\r\n    }\r\n\r\n    if (data.position1 && data.position2) {\r\n      var vFrom = new Vector3()\r\n      var vTo = new Vector3()\r\n      var vDir = new Vector3()\r\n      var vSplit = new Vector3()\r\n      for (i = 0, il = splitPosition.length; i < il; i += 3) {\r\n        vFrom.fromArray(data.position1, i)\r\n        vTo.fromArray(data.position2, i)\r\n        vDir.subVectors(vFrom, vTo)\r\n        var fullLength = vDir.length()\r\n        var coneLength = cylinderRadius[ i / 3 ] * aspectRatio * 2\r\n        var length = Math.min(fullLength, coneLength)\r\n        vDir.setLength(length)\r\n        vSplit.copy(vTo).add(vDir)\r\n        vSplit.toArray(splitPosition, i)\r\n      }\r\n      cylinder.position1 = data.position1\r\n      cylinder.position2 = splitPosition\r\n      cone.position1 = splitPosition\r\n      cone.position2 = data.position2\r\n    }\r\n\r\n    if (data.color) {\r\n      cylinder.color = data.color\r\n      cylinder.color2 = data.color\r\n      cone.color = data.color\r\n    }\r\n\r\n    return {\r\n      cylinder: cylinder,\r\n      cone: cone\r\n    }\r\n  }\r\n\r\n  getMesh (picking) {\r\n    return new Group().add(\r\n            this.cylinderBuffer.getMesh(picking),\r\n            this.coneBuffer.getMesh(picking)\r\n        )\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    return new Group().add(\r\n            this.cylinderBuffer.getWireframeMesh(),\r\n            this.coneBuffer.getWireframeMesh()\r\n        )\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return new Group().add(\r\n            this.cylinderBuffer.getPickingMesh(),\r\n            this.coneBuffer.getPickingMesh()\r\n        )\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var attr = this.makeAttributes(data)\r\n\r\n    this.cylinderBuffer.setAttributes(attr.cylinder)\r\n    this.coneBuffer.setAttributes(attr.cone)\r\n  }\r\n\r\n    /**\r\n     * Set buffer parameters\r\n     * @param {BufferParameters} params - buffer parameters object\r\n     * @return {undefined}\r\n     */\r\n  setParameters (params) {\r\n    params = Object.assign({}, params)\r\n\r\n    if (params && params.matrix !== undefined) {\r\n      this.matrix = params.matrix\r\n    }\r\n    delete params.matrix\r\n\r\n    if (params && params.wireframe !== undefined) {\r\n      this.wireframe = params.wireframe\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    this.cylinderBuffer.setParameters(params)\r\n    this.coneBuffer.setParameters(params)\r\n  }\r\n\r\n  setVisibility () {\r\n    Buffer.prototype.setVisibility.apply(this, arguments)\r\n  }\r\n\r\n  dispose () {\r\n    this.cylinderBuffer.dispose()\r\n    this.coneBuffer.dispose()\r\n  }\r\n}\r\n\r\nBufferRegistry.add('arrow', ArrowBuffer)\r\n\r\nexport default ArrowBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/arrow-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 198,
    "kind": "class",
    "name": "ArrowBuffer",
    "memberof": "src/buffer/arrow-buffer.js",
    "static": true,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/arrow-buffer.js",
    "importStyle": "ArrowBuffer",
    "description": "Arrow buffer. Draws arrows made from a cylinder and a cone.",
    "examples": [
      "var arrowBuffer = new ArrowBuffer( {\n    position1: new Float32Array( [ 0, 0, 0 ] ),\n    position2: new Float32Array( [ 10, 1, 1 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    radius: new Float32Array( [ 1 ] )\n} );"
    ],
    "lineNumber": 28,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 199,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "aspectRatio",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#aspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "wireframe",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "splitPosition",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#splitPosition",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "cylinderRadius",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#cylinderRadius",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "cylinderBuffer",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#cylinderBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 205,
    "kind": "member",
    "name": "coneBuffer",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#coneBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 206,
    "kind": "member",
    "name": "geometry",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#geometry",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "group",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#group",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "wireframeGroup",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#wireframeGroup",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "pickingGroup",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#pickingGroup",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 211,
    "kind": "member",
    "name": "picking",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#picking",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 212,
    "kind": "set",
    "name": "matrix",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 213,
    "kind": "get",
    "name": "matrix",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 214,
    "kind": "get",
    "name": "pickable",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#pickable",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "makeAttributes",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#makeAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "getMesh",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#getMesh",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "getWireframeMesh",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#getWireframeMesh",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "getPickingMesh",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#getPickingMesh",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#setParameters",
    "access": "public",
    "description": "Set buffer parameters",
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "buffer parameters object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/buffer/arrow-buffer.js~ArrowBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/arrow-buffer.js~ArrowBuffer#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/buffer/box-buffer.js",
    "content": "/**\r\n * @file Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BoxBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\n/**\r\n * Box buffer. Draws boxes.\r\n *\r\n * @example\r\n * var boxBuffer = new BoxBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass BoxBuffer extends GeometryBuffer {\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const geo = new BoxBufferGeometry(1, 1, 1)\r\n\r\n    super(data, p, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    target.fromArray(this._heightAxis, i3)\r\n    up.fromArray(this._depthAxis, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nBufferRegistry.add('box', BoxBuffer)\r\n\r\nexport default BoxBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/box-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/box-buffer.js",
    "static": true,
    "longname": "src/buffer/box-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/box-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 227,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/box-buffer.js",
    "static": true,
    "longname": "src/buffer/box-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/box-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 228,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/box-buffer.js",
    "static": true,
    "longname": "src/buffer/box-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/box-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 229,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/box-buffer.js",
    "static": true,
    "longname": "src/buffer/box-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/box-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 230,
    "kind": "class",
    "name": "BoxBuffer",
    "memberof": "src/buffer/box-buffer.js",
    "static": true,
    "longname": "src/buffer/box-buffer.js~BoxBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/box-buffer.js",
    "importStyle": "BoxBuffer",
    "description": "Box buffer. Draws boxes.",
    "examples": [
      "var boxBuffer = new BoxBuffer({\n  position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n  size: new Float32Array([ 2, 1.5 ]),\n  heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n  depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n})"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 231,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "_size",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#_size",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "_heightAxis",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#_heightAxis",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "_depthAxis",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#_depthAxis",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 237,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/box-buffer.js~BoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/box-buffer.js~BoxBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "src/buffer/buffer.js",
    "content": "/**\r\n * @file Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    Color, Vector3, Matrix4,\r\n    FrontSide, BackSide, DoubleSide, VertexColors, NoBlending,\r\n    BufferGeometry, BufferAttribute,\r\n    UniformsUtils, UniformsLib,\r\n    Group, LineSegments, Points, Mesh,\r\n    ShaderMaterial\r\n} from '../../lib/three.es6.js'\r\n\r\nimport { Log } from '../globals.js'\r\nimport { defaults, getTypedArray, getUintArray } from '../utils.js'\r\nimport { getShader } from '../shader/shader-utils.js'\r\n\r\n/**\r\n * Buffer parameter object.\r\n * @typedef {Object} BufferParameters - buffer parameters\r\n * @property {Boolean} opaqueBack - render back-side opaque\r\n * @property {Boolean} dullInterior - render back-side with dull lighting\r\n * @property {String} side - which triangle sides to render, \"front\" front-side,\r\n *                            \"back\" back-side, \"double\" front- and back-side\r\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Boolean} depthWrite - depth write\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Boolean} flatShaded - render flat shaded\r\n * @property {Boolean} wireframe - render as wireframe\r\n * @property {Float} roughness - how rough the material is, between 0 and 1\r\n * @property {Float} metalness - how metallic the material is, between 0 and 1\r\n * @property {Color} diffuse - diffuse color for lighting\r\n * @property {Boolean} forceTransparent - force the material to allow transparency\r\n * @property {Matrix4} matrix - additional transformation matrix\r\n * @property {Boolean} disablePicking - disable picking\r\n */\r\n\r\nfunction getThreeSide (side) {\r\n  if (side === 'front') {\r\n    return FrontSide\r\n  } else if (side === 'back') {\r\n    return BackSide\r\n  } else if (side === 'double') {\r\n    return DoubleSide\r\n  } else {\r\n    return DoubleSide\r\n  }\r\n}\r\n\r\nconst itemSize = {\r\n  'f': 1, 'v2': 2, 'v3': 3, 'c': 3\r\n}\r\n\r\nfunction setObjectMatrix (object, matrix) {\r\n  object.matrix.copy(matrix)\r\n  object.matrix.decompose(object.position, object.quaternion, object.scale)\r\n  object.matrixWorldNeedsUpdate = true\r\n}\r\n\r\n/**\r\n * Buffer class. Base class for buffers.\r\n * @interface\r\n */\r\nclass Buffer {\r\n  /**\r\n   * @param {Object} data - attribute object\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.index - triangle indices\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} params - parameters object\r\n   */\r\n  constructor (data, params) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    this.opaqueBack = defaults(p.opaqueBack, false)\r\n    this.dullInterior = defaults(p.dullInterior, false)\r\n    this.side = defaults(p.side, 'double')\r\n    this.opacity = defaults(p.opacity, 1.0)\r\n    this.depthWrite = defaults(p.depthWrite, true)\r\n    this.clipNear = defaults(p.clipNear, 0)\r\n    this.clipRadius = defaults(p.clipRadius, 0)\r\n    this.clipCenter = defaults(p.clipCenter, new Vector3())\r\n    this.flatShaded = defaults(p.flatShaded, false)\r\n    this.background = defaults(p.background, false)\r\n    this.wireframe = defaults(p.wireframe, false)\r\n    this.roughness = defaults(p.roughness, 0.4)\r\n    this.metalness = defaults(p.metalness, 0.0)\r\n    this.diffuse = defaults(p.diffuse, 0xffffff)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.disablePicking = defaults(p.disablePicking, false)\r\n\r\n    this.geometry = new BufferGeometry()\r\n\r\n    this.indexVersion = 0\r\n    this.wireframeIndexVersion = -1\r\n\r\n    this.uniforms = UniformsUtils.merge([\r\n      UniformsLib.common,\r\n      {\r\n        fogColor: { value: null },\r\n        fogNear: { value: 0.0 },\r\n        fogFar: { value: 0.0 },\r\n        opacity: { value: this.opacity },\r\n        nearClip: { value: 0.0 },\r\n        clipRadius: { value: this.clipRadius },\r\n        clipCenter: { value: this.clipCenter }\r\n      },\r\n      {\r\n        emissive: { value: new Color(0x000000) },\r\n        roughness: { value: this.roughness },\r\n        metalness: { value: this.metalness }\r\n      },\r\n      UniformsLib.ambient,\r\n      UniformsLib.lights\r\n    ])\r\n\r\n    this.uniforms.diffuse.value.set(this.diffuse)\r\n\r\n    this.pickingUniforms = {\r\n      nearClip: { value: 0.0 },\r\n      objectId: { value: 0 },\r\n      opacity: { value: this.opacity }\r\n    }\r\n\r\n    this.group = new Group()\r\n    this.wireframeGroup = new Group()\r\n    this.pickingGroup = new Group()\r\n\r\n    // requires Group objects to be present\r\n    this.matrix = defaults(p.matrix, new Matrix4())\r\n\r\n    //\r\n\r\n    const position = d.position || d.position1\r\n    this._positionDataSize = position ? position.length / 3 : 0\r\n\r\n    this.addAttributes({\r\n      position: { type: 'v3', value: d.position },\r\n      color: { type: 'c', value: d.color },\r\n      primitiveId: { type: 'f', value: d.primitiveId }\r\n    })\r\n\r\n    if (d.index) {\r\n      this.initIndex(d.index)\r\n    }\r\n    this.picking = d.picking\r\n\r\n    this.makeWireframeGeometry()\r\n  }\r\n\r\n  get parameters () {\r\n    return {\r\n      opaqueBack: { updateShader: true },\r\n      dullInterior: { updateShader: true },\r\n      side: { updateShader: true, property: true },\r\n      opacity: { uniform: true },\r\n      depthWrite: { property: true },\r\n      clipNear: { updateShader: true, property: true },\r\n      clipRadius: { updateShader: true, property: true, uniform: true },\r\n      clipCenter: { uniform: true },\r\n      flatShaded: { updateShader: true },\r\n      background: { updateShader: true },\r\n      wireframe: { updateVisibility: true },\r\n      roughness: { uniform: true },\r\n      metalness: { uniform: true },\r\n      diffuse: { uniform: true },\r\n      matrix: {}\r\n    }\r\n  }\r\n\r\n  set matrix (m) {\r\n    this.setMatrix(m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get transparent () {\r\n    return this.opacity < 1 || this.forceTransparent\r\n  }\r\n\r\n  get size () {\r\n    return this._positionDataSize\r\n  }\r\n\r\n  get attributeSize () {\r\n    return this.size\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking && !this.disablePicking\r\n  }\r\n\r\n  get dynamic () { return true }\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  get vertexShader () {}\r\n\r\n  /**\r\n   * @abstract\r\n   */\r\n  get fragmentShader () {}\r\n\r\n  setMatrix (m) {\r\n    setObjectMatrix(this.group, m)\r\n    setObjectMatrix(this.wireframeGroup, m)\r\n    setObjectMatrix(this.pickingGroup, m)\r\n  }\r\n\r\n  initIndex (index) {\r\n    this.geometry.setIndex(\r\n            new BufferAttribute(index, 1)\r\n        )\r\n    this.geometry.getIndex().setDynamic(this.dynamic)\r\n  }\r\n\r\n  makeMaterial () {\r\n    const side = getThreeSide(this.side)\r\n\r\n    const m = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: this.transparent,\r\n      depthWrite: this.depthWrite,\r\n      lights: true,\r\n      fog: true,\r\n      side: side\r\n    })\r\n    m.vertexColors = VertexColors\r\n    m.extensions.derivatives = this.flatShaded\r\n    m.extensions.fragDepth = this.isImpostor\r\n    m.clipNear = this.clipNear\r\n\r\n    const wm = new ShaderMaterial({\r\n      uniforms: this.uniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: this.transparent,\r\n      depthWrite: this.depthWrite,\r\n      lights: false,\r\n      fog: true,\r\n      side: side\r\n    })\r\n    wm.vertexColors = VertexColors\r\n    wm.clipNear = this.clipNear\r\n\r\n    const pm = new ShaderMaterial({\r\n      uniforms: this.pickingUniforms,\r\n      vertexShader: '',\r\n      fragmentShader: '',\r\n      depthTest: true,\r\n      transparent: false,\r\n      depthWrite: this.depthWrite,\r\n      lights: false,\r\n      fog: false,\r\n      side: side,\r\n      blending: NoBlending\r\n    })\r\n    pm.vertexColors = VertexColors\r\n    pm.extensions.fragDepth = this.isImpostor\r\n    pm.clipNear = this.clipNear\r\n\r\n    this.material = m\r\n    this.wireframeMaterial = wm\r\n    this.pickingMaterial = pm\r\n\r\n    // also sets vertexShader/fragmentShader\r\n    this.updateShader()\r\n  }\r\n\r\n  makeWireframeGeometry () {\r\n    this.makeWireframeIndex()\r\n\r\n    const geometry = this.geometry\r\n    const wireframeIndex = this.wireframeIndex\r\n    const wireframeGeometry = new BufferGeometry()\r\n\r\n    wireframeGeometry.attributes = geometry.attributes\r\n    if (wireframeIndex) {\r\n      wireframeGeometry.setIndex(\r\n                new BufferAttribute(wireframeIndex, 1)\r\n                    .setDynamic(this.dynamic)\r\n            )\r\n      wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\r\n    }\r\n\r\n    this.wireframeGeometry = wireframeGeometry\r\n  }\r\n\r\n  makeWireframeIndex () {\r\n    const edges = []\r\n\r\n    function checkEdge (a, b) {\r\n      if (a > b) {\r\n        const tmp = a\r\n        a = b\r\n        b = tmp\r\n      }\r\n\r\n      const list = edges[ a ]\r\n\r\n      if (list === undefined) {\r\n        edges[ a ] = [ b ]\r\n        return true\r\n      } else if (!list.includes(b)) {\r\n        list.push(b)\r\n        return true\r\n      }\r\n\r\n      return false\r\n    }\r\n\r\n    const geometry = this.geometry\r\n    const index = geometry.index\r\n\r\n    if (!this.wireframe) {\r\n      this.wireframeIndex = new Uint16Array(0)\r\n      this.wireframeIndexCount = 0\r\n    } else if (index) {\r\n      const array = index.array\r\n      let n = array.length\r\n      if (geometry.drawRange.count !== Infinity) {\r\n        n = geometry.drawRange.count\r\n      }\r\n      let wireframeIndex\r\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n        wireframeIndex = this.wireframeIndex\r\n      } else {\r\n        const count = geometry.attributes.position.count\r\n        wireframeIndex = getUintArray(n * 2, count)\r\n      }\r\n\r\n      let j = 0\r\n      edges.length = 0\r\n\r\n      for (let i = 0; i < n; i += 3) {\r\n        const a = array[ i + 0 ]\r\n        const b = array[ i + 1 ]\r\n        const c = array[ i + 2 ]\r\n\r\n        if (checkEdge(a, b)) {\r\n          wireframeIndex[ j + 0 ] = a\r\n          wireframeIndex[ j + 1 ] = b\r\n          j += 2\r\n        }\r\n        if (checkEdge(b, c)) {\r\n          wireframeIndex[ j + 0 ] = b\r\n          wireframeIndex[ j + 1 ] = c\r\n          j += 2\r\n        }\r\n        if (checkEdge(c, a)) {\r\n          wireframeIndex[ j + 0 ] = c\r\n          wireframeIndex[ j + 1 ] = a\r\n          j += 2\r\n        }\r\n      }\r\n\r\n      this.wireframeIndex = wireframeIndex\r\n      this.wireframeIndexCount = j\r\n      this.wireframeIndexVersion = this.indexVersion\r\n    } else {\r\n      const n = geometry.attributes.position.count\r\n\r\n      let wireframeIndex\r\n      if (this.wireframeIndex && this.wireframeIndex.length > n * 2) {\r\n        wireframeIndex = this.wireframeIndex\r\n      } else {\r\n        wireframeIndex = getUintArray(n * 2, n)\r\n      }\r\n\r\n      for (let i = 0, j = 0; i < n; i += 3) {\r\n        wireframeIndex[ j + 0 ] = i\r\n        wireframeIndex[ j + 1 ] = i + 1\r\n        wireframeIndex[ j + 2 ] = i + 1\r\n        wireframeIndex[ j + 3 ] = i + 2\r\n        wireframeIndex[ j + 4 ] = i + 2\r\n        wireframeIndex[ j + 5 ] = i\r\n\r\n        j += 6\r\n      }\r\n\r\n      this.wireframeIndex = wireframeIndex\r\n      this.wireframeIndexCount = n * 2\r\n      this.wireframeIndexVersion = this.indexVersion\r\n    }\r\n  }\r\n\r\n  updateWireframeIndex () {\r\n    this.wireframeGeometry.setDrawRange(0, Infinity)\r\n    if (this.wireframeIndexVersion < this.indexVersion) this.makeWireframeIndex()\r\n\r\n    if (this.wireframeIndex.length > this.wireframeGeometry.index.array.length) {\r\n      this.wireframeGeometry.setIndex(\r\n        new BufferAttribute(this.wireframeIndex, 1).setDynamic(this.dynamic)\r\n      )\r\n    } else {\r\n      const index = this.wireframeGeometry.getIndex()\r\n      index.set(this.wireframeIndex)\r\n      index.needsUpdate = this.wireframeIndexCount > 0\r\n      index.updateRange.count = this.wireframeIndexCount\r\n    }\r\n\r\n    this.wireframeGeometry.setDrawRange(0, this.wireframeIndexCount)\r\n  }\r\n\r\n  getRenderOrder () {\r\n    let renderOrder = 0\r\n\r\n    if (this.isText) {\r\n      renderOrder = 1\r\n    } else if (this.transparent) {\r\n      if (this.isSurface) {\r\n        renderOrder = 3\r\n      } else {\r\n        renderOrder = 2\r\n      }\r\n    }\r\n\r\n    return renderOrder\r\n  }\r\n\r\n  _getMesh (materialName) {\r\n    if (!this.material) this.makeMaterial()\r\n\r\n    const g = this.geometry\r\n    const m = this[ materialName ]\r\n\r\n    let mesh\r\n\r\n    if (this.isLine) {\r\n      mesh = new LineSegments(g, m)\r\n    } else if (this.isPoint) {\r\n      mesh = new Points(g, m)\r\n      if (this.sortParticles) mesh.sortParticles = true\r\n    } else {\r\n      mesh = new Mesh(g, m)\r\n    }\r\n\r\n    mesh.frustumCulled = false\r\n    mesh.renderOrder = this.getRenderOrder()\r\n\r\n    return mesh\r\n  }\r\n\r\n  getMesh () {\r\n    return this._getMesh('material')\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    let mesh\r\n\r\n    if (!this.material) this.makeMaterial()\r\n    if (!this.wireframeGeometry) this.makeWireframeGeometry()\r\n\r\n    mesh = new LineSegments(\r\n      this.wireframeGeometry, this.wireframeMaterial\r\n    )\r\n\r\n    mesh.frustumCulled = false\r\n    mesh.renderOrder = this.getRenderOrder()\r\n\r\n    return mesh\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return this._getMesh('pickingMaterial')\r\n  }\r\n\r\n  getShader (name, type) {\r\n    return getShader(name, this.getDefines(type))\r\n  }\r\n\r\n  getVertexShader (type) {\r\n    return this.getShader(this.vertexShader, type)\r\n  }\r\n\r\n  getFragmentShader (type) {\r\n    return this.getShader(this.fragmentShader, type)\r\n  }\r\n\r\n  getDefines (type) {\r\n    const defines = {}\r\n\r\n    if (this.clipNear) {\r\n      defines.NEAR_CLIP = 1\r\n    }\r\n\r\n    if (this.clipRadius) {\r\n      defines.RADIUS_CLIP = 1\r\n    }\r\n\r\n    if (type === 'picking') {\r\n      defines.PICKING = 1\r\n    } else {\r\n      if (type === 'background' || this.background) {\r\n        defines.NOLIGHT = 1\r\n      }\r\n      if (this.flatShaded) {\r\n        defines.FLAT_SHADED = 1\r\n      }\r\n      if (this.opaqueBack) {\r\n        defines.OPAQUE_BACK = 1\r\n      }\r\n      if (this.dullInterior) {\r\n        defines.DULL_INTERIOR = 1\r\n      }\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  getParameters () {\r\n    const params = {}\r\n\r\n    for (let name in this.parameters) {\r\n      params[ name ] = this[ name ]\r\n    }\r\n\r\n    return params\r\n  }\r\n\r\n  addUniforms (uniforms) {\r\n    this.uniforms = UniformsUtils.merge(\r\n      [ this.uniforms, uniforms ]\r\n    )\r\n\r\n    this.pickingUniforms = UniformsUtils.merge(\r\n      [ this.pickingUniforms, uniforms ]\r\n    )\r\n  }\r\n\r\n  addAttributes (attributes) {\r\n    for (let name in attributes) {\r\n      let buf\r\n      const a = attributes[ name ]\r\n      const arraySize = this.attributeSize * itemSize[ a.type ]\r\n\r\n      if (a.value) {\r\n        if (arraySize !== a.value.length) {\r\n          Log.error('attribute value has wrong length', name)\r\n        }\r\n\r\n        buf = a.value\r\n      } else {\r\n        buf = getTypedArray('float32', arraySize)\r\n      }\r\n\r\n      this.geometry.addAttribute(\r\n        name,\r\n        new BufferAttribute(buf, itemSize[ a.type ]).setDynamic(this.dynamic)\r\n      )\r\n    }\r\n  }\r\n\r\n  updateRenderOrder () {\r\n    const renderOrder = this.getRenderOrder()\r\n    function setRenderOrder (mesh) {\r\n      mesh.renderOrder = renderOrder\r\n    }\r\n\r\n    this.group.children.forEach(setRenderOrder)\r\n    if (this.pickingGroup) {\r\n      this.pickingGroup.children.forEach(setRenderOrder)\r\n    }\r\n  }\r\n\r\n  updateShader () {\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    m.vertexShader = this.getVertexShader()\r\n    m.fragmentShader = this.getFragmentShader()\r\n    m.needsUpdate = true\r\n\r\n    wm.vertexShader = this.getShader('Line.vert')\r\n    wm.fragmentShader = this.getShader('Line.frag')\r\n    wm.needsUpdate = true\r\n\r\n    pm.vertexShader = this.getVertexShader('picking')\r\n    pm.fragmentShader = this.getFragmentShader('picking')\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Set buffer parameters\r\n   * @param {BufferParameters} params - buffer parameters object\r\n   * @return {undefined}\r\n   */\r\n  setParameters (params) {\r\n    if (!params) return\r\n\r\n    const p = params\r\n    const tp = this.parameters\r\n\r\n    const propertyData = {}\r\n    const uniformData = {}\r\n    let doShaderUpdate = false\r\n    let doVisibilityUpdate = false\r\n\r\n    for (let name in p) {\r\n      const value = p[ name ]\r\n\r\n      if (value === undefined) continue\r\n      if (tp[ name ] === undefined) continue\r\n\r\n      this[ name ] = value\r\n\r\n      if (tp[ name ].property) {\r\n        if (tp[ name ].property !== true) {\r\n          propertyData[ tp[ name ].property ] = value\r\n        } else {\r\n          propertyData[ name ] = value\r\n        }\r\n      }\r\n\r\n      if (tp[ name ].uniform) {\r\n        if (tp[ name ].uniform !== true) {\r\n          uniformData[ tp[ name ].uniform ] = value\r\n        } else {\r\n          uniformData[ name ] = value\r\n        }\r\n      }\r\n\r\n      if (tp[ name ].updateShader) {\r\n        doShaderUpdate = true\r\n      }\r\n\r\n      if (tp[ name ].updateVisibility) {\r\n        doVisibilityUpdate = true\r\n      }\r\n\r\n      if (this.dynamic && name === 'wireframe' && value === true) {\r\n        this.updateWireframeIndex()\r\n      }\r\n\r\n      if (name === 'flatShaded') {\r\n        this.material.extensions.derivatives = this.flatShaded\r\n      }\r\n\r\n      if (name === 'forceTransparent') {\r\n        propertyData.transparent = this.transparent\r\n      }\r\n    }\r\n\r\n    this.setProperties(propertyData)\r\n    this.setUniforms(uniformData)\r\n    if (doShaderUpdate) this.updateShader()\r\n    if (doVisibilityUpdate) this.setVisibility(this.visible)\r\n  }\r\n\r\n  /**\r\n   * Sets buffer attributes\r\n   * @param {Object} data - An object where the keys are the attribute names\r\n   *      and the values are the attribute data.\r\n   * @example\r\n   * var buffer = new Buffer();\r\n   * buffer.setAttributes({ attrName: attrData });\r\n   */\r\n  setAttributes (data) {\r\n    const geometry = this.geometry\r\n    const attributes = geometry.attributes\r\n\r\n    for (let name in data) {\r\n      if (name === 'picking') continue\r\n\r\n      const array = data[ name ]\r\n      const length = array.length\r\n\r\n      if (name === 'index') {\r\n        const index = geometry.getIndex()\r\n        geometry.setDrawRange(0, Infinity)\r\n\r\n        if (length > index.array.length) {\r\n          geometry.setIndex(\r\n            new BufferAttribute(array, 1).setDynamic(this.dynamic)\r\n          )\r\n        } else {\r\n          index.set(array)\r\n          index.needsUpdate = length > 0\r\n          index.updateRange.count = length\r\n          geometry.setDrawRange(0, length)\r\n        }\r\n\r\n        this.indexVersion++\r\n        if (this.wireframe) this.updateWireframeIndex()\r\n      } else {\r\n        const attribute = attributes[ name ]\r\n\r\n        if (length > attribute.array.length) {\r\n          geometry.addAttribute(\r\n            name,\r\n            new BufferAttribute(array, attribute.itemSize)\r\n              .setDynamic(this.dynamic)\r\n          )\r\n        } else {\r\n          attributes[ name ].set(array)\r\n          attributes[ name ].needsUpdate = length > 0\r\n          attributes[ name ].updateRange.count = length\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setUniforms (data) {\r\n    if (!data) return\r\n\r\n    const u = this.material.uniforms\r\n    const wu = this.wireframeMaterial.uniforms\r\n    const pu = this.pickingMaterial.uniforms\r\n\r\n    for (let name in data) {\r\n      if (name === 'opacity') {\r\n        this.setProperties({ transparent: this.transparent })\r\n      }\r\n\r\n      if (u[ name ] !== undefined) {\r\n        if (u[ name ].value.isVector3) {\r\n          u[ name ].value.copy(data[ name ])\r\n        } else if (u[ name ].value.set) {\r\n          u[ name ].value.set(data[ name ])\r\n        } else {\r\n          u[ name ].value = data[ name ]\r\n        }\r\n      }\r\n\r\n      if (wu[ name ] !== undefined) {\r\n        if (wu[ name ].value.isVector3) {\r\n          wu[ name ].value.copy(data[ name ])\r\n        } else if (wu[ name ].value.set) {\r\n          wu[ name ].value.set(data[ name ])\r\n        } else {\r\n          wu[ name ].value = data[ name ]\r\n        }\r\n      }\r\n\r\n      if (pu[ name ] !== undefined) {\r\n        if (pu[ name ].value.isVector3) {\r\n          pu[ name ].value.copy(data[ name ])\r\n        } else if (pu[ name ].value.set) {\r\n          pu[ name ].value.set(data[ name ])\r\n        } else {\r\n          pu[ name ].value = data[ name ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProperties (data) {\r\n    if (!data) return\r\n\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    for (let name in data) {\r\n      let value = data[ name ]\r\n\r\n      if (name === 'transparent') {\r\n        this.updateRenderOrder()\r\n      } else if (name === 'side') {\r\n        value = getThreeSide(value)\r\n      }\r\n\r\n      if (m[ name ] !== undefined) {\r\n        m[ name ] = value\r\n      }\r\n\r\n      if (wm[ name ] !== undefined) {\r\n        wm[ name ] = value\r\n      }\r\n\r\n      if (pm[ name ] !== undefined) {\r\n        pm[ name ] = value\r\n      }\r\n    }\r\n\r\n    m.needsUpdate = true\r\n    wm.needsUpdate = true\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  /**\r\n   * Set buffer visibility\r\n   * @param {Boolean} value - visibility value\r\n   * @return {undefined}\r\n   */\r\n  setVisibility (value) {\r\n    this.visible = value\r\n\r\n    if (this.wireframe) {\r\n      this.group.visible = false\r\n      this.wireframeGroup.visible = value\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = false\r\n      }\r\n    } else {\r\n      this.group.visible = value\r\n      this.wireframeGroup.visible = false\r\n      if (this.pickable) {\r\n        this.pickingGroup.visible = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Free buffer resources\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    if (this.material) this.material.dispose()\r\n    if (this.wireframeMaterial) this.wireframeMaterial.dispose()\r\n    if (this.pickingMaterial) this.pickingMaterial.dispose()\r\n\r\n    this.geometry.dispose()\r\n    if (this.wireframeGeometry) this.wireframeGeometry.dispose()\r\n  }\r\n}\r\n\r\nexport default Buffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "typedef",
    "name": "BufferParameters",
    "memberof": "src/buffer/buffer.js",
    "static": true,
    "longname": "src/buffer/buffer.js~BufferParameters",
    "access": "public",
    "description": "Buffer parameter object.",
    "lineNumber": 41,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opaqueBack",
        "description": "render back-side opaque"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "dullInterior",
        "description": "render back-side with dull lighting"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "side",
        "description": "which triangle sides to render, \"front\" front-side,\n                           \"back\" back-side, \"double\" front- and back-side"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "translucency: 1 is fully opaque, 0 is fully transparent"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "depthWrite",
        "description": "depth write"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "clipNear",
        "description": "position of camera near/front clipping plane\n                               in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flatShaded",
        "description": "render flat shaded"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wireframe",
        "description": "render as wireframe"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "roughness",
        "description": "how rough the material is, between 0 and 1"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "metalness",
        "description": "how metallic the material is, between 0 and 1"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "diffuse",
        "description": "diffuse color for lighting"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "forceTransparent",
        "description": "force the material to allow transparency"
      },
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "additional transformation matrix"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "disablePicking",
        "description": "disable picking"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BufferParameters"
    }
  },
  {
    "__docId__": 240,
    "kind": "variable",
    "name": "itemSize",
    "memberof": "src/buffer/buffer.js",
    "static": true,
    "longname": "src/buffer/buffer.js~itemSize",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "setObjectMatrix",
    "memberof": "src/buffer/buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/buffer.js~setObjectMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 242,
    "kind": "class",
    "name": "Buffer",
    "memberof": "src/buffer/buffer.js",
    "static": true,
    "longname": "src/buffer/buffer.js~Buffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/buffer.js",
    "importStyle": "Buffer",
    "description": "Buffer class. Base class for buffers.",
    "lineNumber": 67,
    "interface": true
  },
  {
    "__docId__": 243,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.index",
        "description": "triangle indices"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "opaqueBack",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#opaqueBack",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "dullInterior",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#dullInterior",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "side",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#side",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "opacity",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#opacity",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "depthWrite",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#depthWrite",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 249,
    "kind": "member",
    "name": "clipNear",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#clipNear",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 250,
    "kind": "member",
    "name": "clipRadius",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#clipRadius",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 251,
    "kind": "member",
    "name": "clipCenter",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#clipCenter",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 252,
    "kind": "member",
    "name": "flatShaded",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#flatShaded",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "background",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#background",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "wireframe",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "roughness",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#roughness",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "metalness",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#metalness",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 257,
    "kind": "member",
    "name": "diffuse",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#diffuse",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "forceTransparent",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#forceTransparent",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "disablePicking",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#disablePicking",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "geometry",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#geometry",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "indexVersion",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#indexVersion",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "wireframeIndexVersion",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeIndexVersion",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "uniforms",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#uniforms",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "pickingUniforms",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#pickingUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "group",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#group",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "wireframeGroup",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeGroup",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "pickingGroup",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#pickingGroup",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "_positionDataSize",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#_positionDataSize",
    "access": "private",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "picking",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#picking",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 271,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true
  },
  {
    "__docId__": 272,
    "kind": "set",
    "name": "matrix",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 273,
    "kind": "get",
    "name": "matrix",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true
  },
  {
    "__docId__": 274,
    "kind": "get",
    "name": "transparent",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#transparent",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true
  },
  {
    "__docId__": 275,
    "kind": "get",
    "name": "size",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#size",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true
  },
  {
    "__docId__": 276,
    "kind": "get",
    "name": "attributeSize",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#attributeSize",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 277,
    "kind": "get",
    "name": "pickable",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#pickable",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true
  },
  {
    "__docId__": 278,
    "kind": "get",
    "name": "dynamic",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#dynamic",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true
  },
  {
    "__docId__": 279,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#vertexShader",
    "access": "public",
    "description": "",
    "lineNumber": 204,
    "abstract": true
  },
  {
    "__docId__": 280,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#fragmentShader",
    "access": "public",
    "description": "",
    "lineNumber": 209,
    "abstract": true
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "setMatrix",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "initIndex",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#initIndex",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "makeMaterial",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#makeMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "material",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#material",
    "access": "public",
    "description": null,
    "lineNumber": 273,
    "undocument": true
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "wireframeMaterial",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 274,
    "undocument": true
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "pickingMaterial",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#pickingMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 275,
    "undocument": true
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "makeWireframeGeometry",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#makeWireframeGeometry",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true
  },
  {
    "__docId__": 288,
    "kind": "member",
    "name": "wireframeGeometry",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeGeometry",
    "access": "public",
    "description": null,
    "lineNumber": 297,
    "undocument": true
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "makeWireframeIndex",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#makeWireframeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 300,
    "undocument": true
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "wireframeIndex",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 327,
    "undocument": true
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "wireframeIndexCount",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#wireframeIndexCount",
    "access": "public",
    "description": null,
    "lineNumber": 328,
    "undocument": true
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "updateWireframeIndex",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#updateWireframeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 398,
    "undocument": true
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "getRenderOrder",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getRenderOrder",
    "access": "public",
    "description": null,
    "lineNumber": 416,
    "undocument": true
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "_getMesh",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#_getMesh",
    "access": "private",
    "description": null,
    "lineNumber": 432,
    "undocument": true
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "getMesh",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getMesh",
    "access": "public",
    "description": null,
    "lineNumber": 455,
    "undocument": true
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "getWireframeMesh",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getWireframeMesh",
    "access": "public",
    "description": null,
    "lineNumber": 459,
    "undocument": true
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "getPickingMesh",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getPickingMesh",
    "access": "public",
    "description": null,
    "lineNumber": 475,
    "undocument": true
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "getShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getShader",
    "access": "public",
    "description": null,
    "lineNumber": 479,
    "undocument": true
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "getVertexShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getVertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 483,
    "undocument": true
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "getFragmentShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getFragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 487,
    "undocument": true
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "getDefines",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getDefines",
    "access": "public",
    "description": null,
    "lineNumber": 491,
    "undocument": true
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "getParameters",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 522,
    "undocument": true
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "addUniforms",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#addUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 532,
    "undocument": true
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "addAttributes",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#addAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 542,
    "undocument": true
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "updateRenderOrder",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#updateRenderOrder",
    "access": "public",
    "description": null,
    "lineNumber": 565,
    "undocument": true
  },
  {
    "__docId__": 314,
    "kind": "method",
    "name": "updateShader",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#updateShader",
    "access": "public",
    "description": null,
    "lineNumber": 577,
    "undocument": true
  },
  {
    "__docId__": 315,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setParameters",
    "access": "public",
    "description": "Set buffer parameters",
    "lineNumber": 600,
    "params": [
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "buffer parameters object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 617,
    "undocument": true
  },
  {
    "__docId__": 317,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setAttributes",
    "access": "public",
    "description": "Sets buffer attributes",
    "examples": [
      "var buffer = new Buffer();\nbuffer.setAttributes({ attrName: attrData });"
    ],
    "lineNumber": 670,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "An object where the keys are the attribute names\n     and the values are the attribute data."
      }
    ]
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "setUniforms",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 715,
    "undocument": true
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "setProperties",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setProperties",
    "access": "public",
    "description": null,
    "lineNumber": 759,
    "undocument": true
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#setVisibility",
    "access": "public",
    "description": "Set buffer visibility",
    "lineNumber": 798,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "visibility value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "visible",
    "memberof": "src/buffer/buffer.js~Buffer",
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#visible",
    "access": "public",
    "description": null,
    "lineNumber": 799,
    "undocument": true
  },
  {
    "__docId__": 322,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/buffer/buffer.js~Buffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/buffer.js~Buffer#dispose",
    "access": "public",
    "description": "Free buffer resources",
    "lineNumber": 820,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "src/buffer/cone-buffer.js",
    "content": "/**\r\n * @file Cone Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport ConeGeometryBuffer from './conegeometry-buffer.js'\r\n\r\n/**\r\n * Cone buffer. Returns a {@link ConeGeometryBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var coneBuffer = new ConeBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ConeBuffer {\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data, params) {\r\n    return new ConeGeometryBuffer(data, params)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('cone', ConeBuffer)\r\n\r\nexport default ConeBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/cone-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "class",
    "name": "ConeBuffer",
    "memberof": "src/buffer/cone-buffer.js",
    "static": true,
    "longname": "src/buffer/cone-buffer.js~ConeBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/cone-buffer.js",
    "importStyle": "ConeBuffer",
    "description": "Cone buffer. Returns a {@link ConeGeometryBuffer}",
    "examples": [
      "var coneBuffer = new ConeBuffer({\n  position1: new Float32Array([ 0, 0, 0 ]),\n  position2: new Float32Array([ 1, 1, 1 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  color2: new Float32Array([ 0, 1, 0 ]),\n  radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 23,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 325,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/cone-buffer.js~ConeBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cone-buffer.js~ConeBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "src/buffer/conegeometry-buffer.js",
    "content": "/**\r\n * @file Cone Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, ConeBufferGeometry } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { calculateCenterArray } from '../math/array-utils.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst eye = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3(0, 1, 0)\r\n\r\n/**\r\n * Cone geometry buffer.\r\n *\r\n * @example\r\n * var coneGeometryBuffer = new ConeGeometryBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass ConeGeometryBuffer extends GeometryBuffer {\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n\r\n    const radialSegments = defaults(p.radialSegments, 60)\r\n    const openEnded = defaults(p.openEnded, false)\r\n    const matrix = new Matrix4().makeRotationX(-Math.PI / 2)\r\n\r\n    const geo = new ConeBufferGeometry(\r\n      1,  // radius\r\n      1,  // height\r\n      radialSegments,  // radialSegments\r\n      1,  // heightSegments\r\n      openEnded  // openEnded\r\n    )\r\n    geo.applyMatrix(matrix)\r\n\r\n    const position = new Float32Array(data.position1.length)\r\n\r\n    super({\r\n      position: position,\r\n      color: data.color,\r\n      picking: data.picking\r\n    }, p, geo)\r\n\r\n    this._position = position\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    eye.fromArray(this._position1, i3)\r\n    target.fromArray(this._position2, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, eye.distanceTo(target))\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.position1 && data.position2) {\r\n      calculateCenterArray(data.position1, data.position2, this._position)\r\n      this._position1 = data.position1\r\n      this._position2 = data.position2\r\n      data.position = this._position\r\n    }\r\n    if (data.radius) this._radius = data.radius\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nexport default ConeGeometryBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/conegeometry-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/conegeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/conegeometry-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/conegeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/conegeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/conegeometry-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/conegeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 329,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/conegeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/conegeometry-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/conegeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/conegeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/conegeometry-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/conegeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 331,
    "kind": "class",
    "name": "ConeGeometryBuffer",
    "memberof": "src/buffer/conegeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/conegeometry-buffer.js",
    "importStyle": "ConeGeometryBuffer",
    "description": "Cone geometry buffer.",
    "examples": [
      "var coneGeometryBuffer = new ConeGeometryBuffer({\n  position1: new Float32Array([ 0, 0, 0 ]),\n  position2: new Float32Array([ 1, 1, 1 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  color2: new Float32Array([ 0, 1, 0 ]),\n  radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 30,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 332,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 333,
    "kind": "member",
    "name": "_position",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#_position",
    "access": "private",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "_position1",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#_position1",
    "access": "private",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "_position2",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#_position2",
    "access": "private",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "_radius",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#_radius",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 339,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/conegeometry-buffer.js~ConeGeometryBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 340,
    "kind": "file",
    "name": "src/buffer/contour-buffer.js",
    "content": "/**\r\n * @file Contour Buffer\r\n * @author Fred ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport Buffer from './buffer.js'\r\n\r\n/**\r\n * Contour buffer. A buffer that draws lines (instead of triangle meshes).\r\n */\r\nclass ContourBuffer extends Buffer {\r\n  get isLine () { return true }\r\n  get vertexShader () { return 'Line.vert' }\r\n  get fragmentShader () { return 'Line.frag' }\r\n}\r\n\r\nexport default ContourBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/contour-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "class",
    "name": "ContourBuffer",
    "memberof": "src/buffer/contour-buffer.js",
    "static": true,
    "longname": "src/buffer/contour-buffer.js~ContourBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/contour-buffer.js",
    "importStyle": "ContourBuffer",
    "description": "Contour buffer. A buffer that draws lines (instead of triangle meshes).",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 342,
    "kind": "get",
    "name": "isLine",
    "memberof": "src/buffer/contour-buffer.js~ContourBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/contour-buffer.js~ContourBuffer#isLine",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 343,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/contour-buffer.js~ContourBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/contour-buffer.js~ContourBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 344,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/contour-buffer.js~ContourBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/contour-buffer.js~ContourBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 345,
    "kind": "file",
    "name": "src/buffer/cylinder-buffer.js",
    "content": "/**\r\n * @file Cylinder Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals.js'\r\nimport CylinderGeometryBuffer from './cylindergeometry-buffer.js'\r\nimport CylinderImpostorBuffer from './cylinderimpostor-buffer.js'\r\n\r\n/**\r\n * Cylinder buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link CylinderImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var cylinderBuffer = new CylinderBuffer( {\r\n *     position1: new Float32Array( [ 0, 0, 0 ] ),\r\n *     position2: new Float32Array( [ 1, 1, 1 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     color2: new Float32Array( [ 0, 1, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n */\r\nclass CylinderBuffer {\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - from colors\r\n   * @param {Float32Array} [data.color2] - to colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   * @return {CylinderGeometryBuffer|CylinderImpostorBuffer} the buffer object\r\n   */\r\n  constructor (data, params) {\r\n    if (!data.color2) {\r\n      data.color2 = data.color\r\n    }\r\n\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      return new CylinderGeometryBuffer(data, params)\r\n    } else {\r\n      return new CylinderImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\nBufferRegistry.add('cylinder', CylinderBuffer)\r\n\r\nexport default CylinderBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/cylinder-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "class",
    "name": "CylinderBuffer",
    "memberof": "src/buffer/cylinder-buffer.js",
    "static": true,
    "longname": "src/buffer/cylinder-buffer.js~CylinderBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/cylinder-buffer.js",
    "importStyle": "CylinderBuffer",
    "description": "Cylinder buffer. Depending on the value {@link ExtensionFragDepth} and\n`params.disableImpostor` the constructor returns either a\n{@link CylinderGeometryBuffer} or a {@link CylinderImpostorBuffer}",
    "examples": [
      "var cylinderBuffer = new CylinderBuffer( {\n    position1: new Float32Array( [ 0, 0, 0 ] ),\n    position2: new Float32Array( [ 1, 1, 1 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    color2: new Float32Array( [ 0, 1, 0 ] ),\n    radius: new Float32Array( [ 1 ] )\n} );"
    ],
    "lineNumber": 26,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 347,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/cylinder-buffer.js~CylinderBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinder-buffer.js~CylinderBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": true,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CylinderGeometryBuffer",
        "CylinderImpostorBuffer"
      ],
      "spread": false,
      "description": "the buffer object"
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "src/buffer/cylindergeometry-buffer.js",
    "content": "/**\r\n * @file Cylinder Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3, CylinderBufferGeometry } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { calculateCenterArray, serialBlockArray } from '../math/array-utils.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst eye = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3(0, 1, 0)\r\n\r\n/**\r\n * Cylinder geometry buffer.\r\n *\r\n * @example\r\n * var cylinderGeometryBuffer = new CylinderGeometryBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderGeometryBuffer extends GeometryBuffer {\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position1 - from positions\r\n   * @param {Float32Array} data.position2 - to positions\r\n   * @param {Float32Array} data.color - from colors\r\n   * @param {Float32Array} data.color2 - to colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   */\r\n  constructor (data, params) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    const radialSegments = defaults(p.radialSegments, 10)\r\n    const openEnded = defaults(p.openEnded, true)\r\n    const matrix = new Matrix4().makeRotationX(Math.PI / 2)\r\n\r\n    const geo = new CylinderBufferGeometry(\r\n      1,  // radiusTop,\r\n      1,  // radiusBottom,\r\n      1,  // height,\r\n      radialSegments,  // radialSegments,\r\n      1,  // heightSegments,\r\n      openEnded  // openEnded\r\n    )\r\n    geo.applyMatrix(matrix)\r\n\r\n    const n = d.position1.length\r\n    const m = d.radius.length\r\n\r\n    //\r\n\r\n    const geoLength = geo.attributes.position.array.length / 3\r\n    const count = n / 3\r\n    const primitiveId = new Float32Array(count * 2 * geoLength)\r\n    serialBlockArray(count, geoLength, 0, primitiveId)\r\n    serialBlockArray(count, geoLength, count * geoLength, primitiveId)\r\n\r\n    //\r\n\r\n    const position = new Float32Array(n * 2)\r\n    const color = new Float32Array(n * 2)\r\n\r\n    super({\r\n      position: position,\r\n      color: color,\r\n      primitiveId: primitiveId,\r\n      picking: d.picking\r\n    }, p, geo)\r\n\r\n    this.__center = new Float32Array(n)\r\n\r\n    this._position = position\r\n    this._color = color\r\n    this._from = new Float32Array(n * 2)\r\n    this._to = new Float32Array(n * 2)\r\n    this._radius = new Float32Array(m * 2)\r\n\r\n    this.setAttributes(d, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    eye.fromArray(this._from, i3)\r\n    target.fromArray(this._to, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, eye.distanceTo(target))\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    const meshData = {}\r\n\r\n    if (data.position1 && data.position2) {\r\n      calculateCenterArray(\r\n        data.position1, data.position2, this.__center\r\n      )\r\n      calculateCenterArray(\r\n        data.position1, this.__center, this._position\r\n      )\r\n      calculateCenterArray(\r\n        this.__center, data.position2, this._position, data.position1.length\r\n      )\r\n      this._from.set(data.position1)\r\n      this._from.set(this.__center, data.position1.length)\r\n      this._to.set(this.__center)\r\n      this._to.set(data.position2, this.__center.length)\r\n      meshData.position = this._position\r\n    }\r\n\r\n    if (data.color && data.color2) {\r\n      this._color.set(data.color)\r\n      this._color.set(data.color2, data.color.length)\r\n      meshData.color = this._color\r\n    }\r\n\r\n    if (data.radius) {\r\n      this._radius.set(data.radius)\r\n      this._radius.set(data.radius, data.radius.length)\r\n      meshData.radius = this._radius\r\n    }\r\n\r\n    super.setAttributes(meshData, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nexport default CylinderGeometryBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/cylindergeometry-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/cylindergeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/cylindergeometry-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/cylindergeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 350,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/cylindergeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/cylindergeometry-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/cylindergeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 351,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/cylindergeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/cylindergeometry-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/cylindergeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/cylindergeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/cylindergeometry-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/cylindergeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 353,
    "kind": "class",
    "name": "CylinderGeometryBuffer",
    "memberof": "src/buffer/cylindergeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/cylindergeometry-buffer.js",
    "importStyle": "CylinderGeometryBuffer",
    "description": "Cylinder geometry buffer.",
    "examples": [
      "var cylinderGeometryBuffer = new CylinderGeometryBuffer({\n  position1: new Float32Array([ 0, 0, 0 ]),\n  position2: new Float32Array([ 1, 1, 1 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  color2: new Float32Array([ 0, 1, 0 ]),\n  radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 30,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 354,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 355,
    "kind": "member",
    "name": "__center",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#__center",
    "access": "private",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 356,
    "kind": "member",
    "name": "_position",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#_position",
    "access": "private",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 357,
    "kind": "member",
    "name": "_color",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#_color",
    "access": "private",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 358,
    "kind": "member",
    "name": "_from",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#_from",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 359,
    "kind": "member",
    "name": "_to",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#_to",
    "access": "private",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 360,
    "kind": "member",
    "name": "_radius",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#_radius",
    "access": "private",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 361,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 362,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 363,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylindergeometry-buffer.js~CylinderGeometryBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true
  },
  {
    "__docId__": 364,
    "kind": "file",
    "name": "src/buffer/cylinderimpostor-buffer.js",
    "content": "/**\r\n * @file Cylinder Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/CylinderImpostor.vert'\r\nimport '../shader/CylinderImpostor.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport MappedAlignedBoxBuffer from './mappedalignedbox-buffer.js'\r\n\r\n/**\r\n * Cylinder impostor buffer.\r\n *\r\n * @example\r\n * var cylinderimpostorBuffer = new CylinderImpostorBuffer({\r\n *     position1: new Float32Array([ 0, 0, 0 ]),\r\n *     position2: new Float32Array([ 1, 1, 1 ]),\r\n *     color: new Float32Array([ 1, 0, 0 ]),\r\n *     color2: new Float32Array([ 0, 1, 0 ]),\r\n *     radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass CylinderImpostorBuffer extends MappedAlignedBoxBuffer {\r\n  /**\r\n   * make cylinder impostor buffer\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position1 - from positions\r\n   * @param  {Float32Array} data.position2 - to positions\r\n   * @param  {Float32Array} data.color - from colors\r\n   * @param  {Float32Array} data.color2 - to colors\r\n   * @param  {Float32Array} data.radius - radii\r\n   * @param  {Picker} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    super(data, params)\r\n\r\n    var p = params || {}\r\n\r\n    this.openEnded = defaults(p.openEnded, false)\r\n\r\n    this.addUniforms({\r\n      'modelViewMatrixInverse': { value: new Matrix4() },\r\n      'ortho': { value: 0.0 }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null },\r\n      'radius': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      openEnded: { updateShader: true }\r\n\r\n    }, super.parameters)\r\n  }\r\n\r\n  getDefines (type) {\r\n    var defines = MappedAlignedBoxBuffer.prototype.getDefines.call(this, type)\r\n\r\n    if (!this.openEnded) {\r\n      defines.CAP = 1\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  get isImpostor () { return true }\r\n  get vertexShader () { return 'CylinderImpostor.vert' }\r\n  get fragmentShader () { return 'CylinderImpostor.frag' }\r\n}\r\n\r\nexport default CylinderImpostorBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/cylinderimpostor-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "class",
    "name": "CylinderImpostorBuffer",
    "memberof": "src/buffer/cylinderimpostor-buffer.js",
    "static": true,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/cylinderimpostor-buffer.js",
    "importStyle": "CylinderImpostorBuffer",
    "description": "Cylinder impostor buffer.",
    "examples": [
      "var cylinderimpostorBuffer = new CylinderImpostorBuffer({\n    position1: new Float32Array([ 0, 0, 0 ]),\n    position2: new Float32Array([ 1, 1, 1 ]),\n    color: new Float32Array([ 1, 0, 0 ]),\n    color2: new Float32Array([ 0, 1, 0 ]),\n    radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 27,
    "interface": false,
    "extends": [
      "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer"
    ]
  },
  {
    "__docId__": 366,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#constructor",
    "access": "public",
    "description": "make cylinder impostor buffer",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": false,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 367,
    "kind": "member",
    "name": "openEnded",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#openEnded",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 368,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 369,
    "kind": "method",
    "name": "getDefines",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#getDefines",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 370,
    "kind": "get",
    "name": "isImpostor",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#isImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 371,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 372,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/cylinderimpostor-buffer.js~CylinderImpostorBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "src/buffer/doublesided-buffer.js",
    "content": "/**\r\n * @file Double Sided Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Group } from '../../lib/three.es6.js'\r\n\r\nimport Buffer from './buffer.js'\r\n\r\nfunction setVisibilityTrue (m) { m.visible = true }\r\nfunction setVisibilityFalse (m) { m.visible = false }\r\n\r\n/**\r\n * A double-sided mesh buffer. Takes a buffer and renders the front and\r\n * the back as seperate objects to avoid some artifacts when rendering\r\n * transparent meshes. Also allows to render the back of a mesh opaque\r\n * while the front is transparent.\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n * var doubleSidedBuffer = new DoubleSidedBuffer( sphereGeometryBuffer );\r\n */\r\nclass DoubleSidedBuffer {\r\n    /**\r\n     * Create a double sided buffer\r\n     * @param  {Buffer} buffer - the buffer to be rendered double-sided\r\n     */\r\n  constructor (buffer) {\r\n    this.size = buffer.size\r\n    this.side = buffer.side\r\n    this.wireframe = buffer.wireframe\r\n    this.visible = buffer.visible\r\n    this.geometry = buffer.geometry\r\n    this.picking = buffer.picking\r\n    this.background = buffer.background\r\n    this.disablePicking = buffer.disablePicking\r\n\r\n    this.group = new Group()\r\n    this.wireframeGroup = new Group()\r\n    this.pickingGroup = new Group()\r\n\r\n        // requires Group objects to be present\r\n    this.matrix = buffer.matrix\r\n\r\n    this.frontMeshes = []\r\n    this.backMeshes = []\r\n\r\n    var frontBuffer = buffer\r\n    var backBuffer = new buffer.constructor()\r\n\r\n    frontBuffer.makeMaterial()\r\n    backBuffer.makeMaterial()\r\n\r\n    backBuffer.picking = buffer.picking\r\n    backBuffer.geometry = buffer.geometry\r\n    backBuffer.wireframeGeometry = buffer.wireframeGeometry\r\n    backBuffer.setParameters(buffer.getParameters())\r\n    backBuffer.updateShader()\r\n\r\n    frontBuffer.setParameters({\r\n      side: 'front'\r\n    })\r\n    backBuffer.setParameters({\r\n      side: 'back',\r\n      opacity: backBuffer.opacity\r\n    })\r\n\r\n    this.buffer = buffer\r\n    this.frontBuffer = frontBuffer\r\n    this.backBuffer = backBuffer\r\n  }\r\n\r\n  set matrix (m) {\r\n    Buffer.prototype.setMatrix.call(this, m)\r\n  }\r\n  get matrix () {\r\n    return this.group.matrix.clone()\r\n  }\r\n\r\n  get pickable () {\r\n    return !!this.picking && !this.disablePicking\r\n  }\r\n\r\n  getMesh (picking) {\r\n    var front, back\r\n\r\n    if (picking) {\r\n      back = this.backBuffer.getPickingMesh()\r\n      front = this.frontBuffer.getPickingMesh()\r\n    } else {\r\n      back = this.backBuffer.getMesh()\r\n      front = this.frontBuffer.getMesh()\r\n    }\r\n\r\n    this.frontMeshes.push(front)\r\n    this.backMeshes.push(back)\r\n\r\n    this.setParameters({ side: this.side })\r\n\r\n    return new Group().add(back, front)\r\n  }\r\n\r\n  getWireframeMesh () {\r\n    return this.buffer.getWireframeMesh()\r\n  }\r\n\r\n  getPickingMesh () {\r\n    return this.getMesh(true)\r\n  }\r\n\r\n  setAttributes (data) {\r\n    this.buffer.setAttributes(data)\r\n  }\r\n\r\n  setParameters (data) {\r\n    data = Object.assign({}, data)\r\n\r\n    if (data.side === 'front') {\r\n      this.frontMeshes.forEach(setVisibilityTrue)\r\n      this.backMeshes.forEach(setVisibilityFalse)\r\n    } else if (data.side === 'back') {\r\n      this.frontMeshes.forEach(setVisibilityFalse)\r\n      this.backMeshes.forEach(setVisibilityTrue)\r\n    } else if (data.side === 'double') {\r\n      this.frontMeshes.forEach(setVisibilityTrue)\r\n      this.backMeshes.forEach(setVisibilityTrue)\r\n    }\r\n\r\n    if (data.matrix !== undefined) {\r\n      this.matrix = data.matrix\r\n    }\r\n    delete data.matrix\r\n\r\n    if (data.side !== undefined) {\r\n      this.side = data.side\r\n    }\r\n    delete data.side\r\n\r\n    this.frontBuffer.setParameters(data)\r\n\r\n    if (data.wireframe !== undefined) {\r\n      this.wireframe = data.wireframe\r\n      this.setVisibility(this.visible)\r\n    }\r\n    delete data.wireframe\r\n\r\n    this.backBuffer.setParameters(data)\r\n  }\r\n\r\n  dispose () {\r\n    this.frontBuffer.dispose()\r\n    this.backBuffer.dispose()\r\n  }\r\n}\r\n\r\nDoubleSidedBuffer.prototype.setVisibility = Buffer.prototype.setVisibility\r\n\r\nexport default DoubleSidedBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/doublesided-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "function",
    "name": "setVisibilityTrue",
    "memberof": "src/buffer/doublesided-buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/doublesided-buffer.js~setVisibilityTrue",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/doublesided-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "setVisibilityFalse",
    "memberof": "src/buffer/doublesided-buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/doublesided-buffer.js~setVisibilityFalse",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/doublesided-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 376,
    "kind": "class",
    "name": "DoubleSidedBuffer",
    "memberof": "src/buffer/doublesided-buffer.js",
    "static": true,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/doublesided-buffer.js",
    "importStyle": "DoubleSidedBuffer",
    "description": "A double-sided mesh buffer. Takes a buffer and renders the front and\nthe back as seperate objects to avoid some artifacts when rendering\ntransparent meshes. Also allows to render the back of a mesh opaque\nwhile the front is transparent.",
    "examples": [
      "var sphereGeometryBuffer = new SphereGeometryBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    radius: new Float32Array( [ 1 ] )\n} );\nvar doubleSidedBuffer = new DoubleSidedBuffer( sphereGeometryBuffer );"
    ],
    "lineNumber": 29,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 377,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#constructor",
    "access": "public",
    "description": "Create a double sided buffer",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "the buffer to be rendered double-sided"
      }
    ]
  },
  {
    "__docId__": 378,
    "kind": "member",
    "name": "size",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#size",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 379,
    "kind": "member",
    "name": "side",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#side",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 380,
    "kind": "member",
    "name": "wireframe",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 381,
    "kind": "member",
    "name": "visible",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#visible",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 382,
    "kind": "member",
    "name": "geometry",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#geometry",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 383,
    "kind": "member",
    "name": "picking",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#picking",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 384,
    "kind": "member",
    "name": "background",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#background",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 385,
    "kind": "member",
    "name": "disablePicking",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#disablePicking",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "group",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#group",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "wireframeGroup",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#wireframeGroup",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "pickingGroup",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#pickingGroup",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 390,
    "kind": "member",
    "name": "frontMeshes",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#frontMeshes",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 391,
    "kind": "member",
    "name": "backMeshes",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#backMeshes",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "buffer",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#buffer",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 393,
    "kind": "member",
    "name": "frontBuffer",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#frontBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "backBuffer",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#backBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 395,
    "kind": "set",
    "name": "matrix",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 396,
    "kind": "get",
    "name": "matrix",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 397,
    "kind": "get",
    "name": "pickable",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#pickable",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "getMesh",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#getMesh",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 399,
    "kind": "method",
    "name": "getWireframeMesh",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#getWireframeMesh",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true
  },
  {
    "__docId__": 400,
    "kind": "method",
    "name": "getPickingMesh",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#getPickingMesh",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 401,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 402,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 406,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/doublesided-buffer.js~DoubleSidedBuffer#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true
  },
  {
    "__docId__": 407,
    "kind": "file",
    "name": "src/buffer/ellipsoid-buffer.js",
    "content": "/**\r\n * @file Ellipsoid Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport EllipsoidGeometryBuffer from './ellipsoidgeometry-buffer.js'\r\n\r\n/**\r\n * Ellipsoid buffer. Returns an {@link EllipsoidGeometryBuffer}\r\n *\r\n * @example\r\n * var ellipsoidBuffer = new EllipsoidBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] ),\r\n *     majorAxis: new Float32Array( [ 1, 1, 0 ] ),\r\n *     minorAxis: new Float32Array( [ 0.5, 0, 0.5 ] ),\r\n * } );\r\n */\r\nclass EllipsoidBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - center positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Float32Array} data.majorAxis - major axis vectors, length defines radius in major direction\r\n     * @param {Float32Array} data.minorAxis - minor axis vectors, length defines radius in minor direction\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n  constructor (data, params) {\r\n    return new EllipsoidGeometryBuffer(data, params)\r\n  }\r\n}\r\n\r\nBufferRegistry.add('ellipsoid', EllipsoidBuffer)\r\n\r\nexport default EllipsoidBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/ellipsoid-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 408,
    "kind": "class",
    "name": "EllipsoidBuffer",
    "memberof": "src/buffer/ellipsoid-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoid-buffer.js~EllipsoidBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/ellipsoid-buffer.js",
    "importStyle": "EllipsoidBuffer",
    "description": "Ellipsoid buffer. Returns an {@link EllipsoidGeometryBuffer}",
    "examples": [
      "var ellipsoidBuffer = new EllipsoidBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    radius: new Float32Array( [ 1 ] ),\n    majorAxis: new Float32Array( [ 1, 1, 0 ] ),\n    minorAxis: new Float32Array( [ 0.5, 0, 0.5 ] ),\n} );"
    ],
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 409,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/ellipsoid-buffer.js~EllipsoidBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ellipsoid-buffer.js~EllipsoidBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "center positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.majorAxis",
        "description": "major axis vectors, length defines radius in major direction"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.minorAxis",
        "description": "minor axis vectors, length defines radius in minor direction"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 410,
    "kind": "file",
    "name": "src/buffer/ellipsoidgeometry-buffer.js",
    "content": "/**\r\n * @file Ellipsoid Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { IcosahedronBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\n/**\r\n * Ellipsoid geometry buffer. Draws ellipsoids.\r\n *\r\n * @example\r\n * var ellipsoidGeometryBuffer = new EllipsoidGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass EllipsoidGeometryBuffer extends GeometryBuffer {\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const detail = defaults(p.sphereDetail, 2)\r\n    const geo = new IcosahedronBufferGeometry(1, detail)\r\n\r\n    super(data, p, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    target.fromArray(this._majorAxis, i3)\r\n    up.fromArray(this._minorAxis, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._radius[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.radius) this._radius = data.radius\r\n    if (data.majorAxis) this._majorAxis = data.majorAxis\r\n    if (data.minorAxis) this._minorAxis = data.minorAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nexport default EllipsoidGeometryBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/ellipsoidgeometry-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 411,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/ellipsoidgeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 412,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/ellipsoidgeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/ellipsoidgeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 414,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/ellipsoidgeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 415,
    "kind": "class",
    "name": "EllipsoidGeometryBuffer",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/ellipsoidgeometry-buffer.js",
    "importStyle": "EllipsoidGeometryBuffer",
    "description": "Ellipsoid geometry buffer. Draws ellipsoids.",
    "examples": [
      "var ellipsoidGeometryBuffer = new EllipsoidGeometryBuffer({\n  position: new Float32Array([ 0, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  radius: new Float32Array([ 1 ]),\n  majorAxis: new Float32Array([ 1, 1, 0 ]),\n  minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\n});"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 416,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 417,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 418,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 419,
    "kind": "member",
    "name": "_radius",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#_radius",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 420,
    "kind": "member",
    "name": "_majorAxis",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#_majorAxis",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 421,
    "kind": "member",
    "name": "_minorAxis",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#_minorAxis",
    "access": "private",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 422,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ellipsoidgeometry-buffer.js~EllipsoidGeometryBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "src/buffer/geometry-buffer.js",
    "content": "/**\r\n * @file Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Matrix3 } from '../../lib/three.es6.js'\r\n\r\nimport { getUintArray } from '../utils.js'\r\nimport { serialBlockArray } from '../math/array-utils.js'\r\nimport { applyMatrix3toVector3array, applyMatrix4toVector3array } from '../math/vector-utils.js'\r\nimport MeshBuffer from './mesh-buffer.js'\r\n\r\nconst matrix = new Matrix4()\r\nconst normalMatrix = new Matrix3()\r\n\r\n/**\r\n * Geometry buffer. Base class for geometry-based buffers. Used to draw\r\n * geometry primitives given a mesh.\r\n * @interface\r\n */\r\nclass GeometryBuffer extends MeshBuffer {\r\n  /**\r\n   * @param {Object} data - buffer data\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} [params] - parameters object\r\n   * @param {BufferGeometry} geo - geometry object\r\n   */\r\n  constructor (data, params, geo) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    const geoPosition = geo.attributes.position.array\r\n    const geoNormal = geo.attributes.normal.array\r\n    const geoIndex = geo.index ? geo.index.array : undefined\r\n\r\n    const n = d.position.length / 3\r\n    const m = geoPosition.length / 3\r\n\r\n    const size = n * m\r\n\r\n    const meshPosition = new Float32Array(size * 3)\r\n    const meshNormal = new Float32Array(size * 3)\r\n    const meshColor = new Float32Array(size * 3)\r\n\r\n    let meshIndex\r\n    if (geoIndex) {\r\n      meshIndex = getUintArray(n * geoIndex.length, size)\r\n    }\r\n\r\n    super({\r\n      position: meshPosition,\r\n      color: meshColor,\r\n      index: meshIndex,\r\n      normal: meshNormal,\r\n      primitiveId: d.primitiveId || serialBlockArray(n, m),\r\n      picking: d.picking\r\n    }, p)\r\n\r\n    this.setAttributes(d)\r\n\r\n    this.geoPosition = geoPosition\r\n    this.geoNormal = geoNormal\r\n    this.geoIndex = geoIndex\r\n\r\n    this.positionCount = n\r\n    this.geoPositionCount = m\r\n\r\n    this.transformedGeoPosition = new Float32Array(m * 3)\r\n    this.transformedGeoNormal = new Float32Array(m * 3)\r\n\r\n    this.meshPosition = meshPosition\r\n    this.meshColor = meshColor\r\n    this.meshIndex = meshIndex\r\n    this.meshNormal = meshNormal\r\n\r\n    this.meshIndex = meshIndex\r\n    this.makeIndex()\r\n  }\r\n\r\n  applyPositionTransform () {}\r\n\r\n  setAttributes (data, initNormals) {\r\n    const attributes = this.geometry.attributes\r\n\r\n    let position, color\r\n    let geoPosition, geoNormal\r\n    let transformedGeoPosition, transformedGeoNormal\r\n    let meshPosition, meshColor, meshNormal\r\n\r\n    const updateNormals = this.updateNormals\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      geoPosition = this.geoPosition\r\n      meshPosition = this.meshPosition\r\n      transformedGeoPosition = this.transformedGeoPosition\r\n      attributes.position.needsUpdate = true\r\n      if (updateNormals || initNormals) {\r\n        geoNormal = this.geoNormal\r\n        meshNormal = this.meshNormal\r\n        transformedGeoNormal = this.transformedGeoNormal\r\n        attributes.normal.needsUpdate = true\r\n      }\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      meshColor = this.meshColor\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    const n = this.positionCount\r\n    const m = this.geoPositionCount\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      let j, l\r\n      const k = i * m * 3\r\n      const i3 = i * 3\r\n\r\n      if (position) {\r\n        transformedGeoPosition.set(geoPosition)\r\n        matrix.makeTranslation(\r\n          position[ i3 ], position[ i3 + 1 ], position[ i3 + 2 ]\r\n        )\r\n        this.applyPositionTransform(matrix, i, i3)\r\n        applyMatrix4toVector3array(matrix.elements, transformedGeoPosition)\r\n\r\n        meshPosition.set(transformedGeoPosition, k)\r\n\r\n        if (updateNormals) {\r\n          transformedGeoNormal.set(geoNormal)\r\n          normalMatrix.getNormalMatrix(matrix)\r\n          applyMatrix3toVector3array(normalMatrix.elements, transformedGeoNormal)\r\n\r\n          meshNormal.set(transformedGeoNormal, k)\r\n        } else if (initNormals) {\r\n          meshNormal.set(geoNormal, k)\r\n        }\r\n      }\r\n\r\n      if (color) {\r\n        for (j = 0; j < m; ++j) {\r\n          l = k + 3 * j\r\n\r\n          meshColor[ l ] = color[ i3 ]\r\n          meshColor[ l + 1 ] = color[ i3 + 1 ]\r\n          meshColor[ l + 2 ] = color[ i3 + 2 ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    const geoIndex = this.geoIndex\r\n    const meshIndex = this.meshIndex\r\n\r\n    if (!geoIndex) return\r\n\r\n    const n = this.positionCount\r\n    const m = this.geoPositionCount\r\n    const o = geoIndex.length / 3\r\n\r\n    const o3 = o * 3\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const j = i * o3\r\n      const q = j + o3\r\n\r\n      meshIndex.set(geoIndex, j)\r\n      for (let p = j; p < q; ++p) meshIndex[ p ] += i * m\r\n    }\r\n  }\r\n\r\n  get updateNormals () { return false }\r\n}\r\n\r\nexport default GeometryBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/geometry-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "variable",
    "name": "matrix",
    "memberof": "src/buffer/geometry-buffer.js",
    "static": true,
    "longname": "src/buffer/geometry-buffer.js~matrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/geometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 425,
    "kind": "variable",
    "name": "normalMatrix",
    "memberof": "src/buffer/geometry-buffer.js",
    "static": true,
    "longname": "src/buffer/geometry-buffer.js~normalMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/geometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 426,
    "kind": "class",
    "name": "GeometryBuffer",
    "memberof": "src/buffer/geometry-buffer.js",
    "static": true,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/geometry-buffer.js",
    "importStyle": "GeometryBuffer",
    "description": "Geometry buffer. Base class for geometry-based buffers. Used to draw\ngeometry primitives given a mesh.",
    "lineNumber": 22,
    "interface": true,
    "extends": [
      "src/buffer/mesh-buffer.js~MeshBuffer"
    ]
  },
  {
    "__docId__": 427,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      },
      {
        "nullable": null,
        "types": [
          "BufferGeometry"
        ],
        "spread": false,
        "optional": false,
        "name": "geo",
        "description": "geometry object"
      }
    ]
  },
  {
    "__docId__": 428,
    "kind": "member",
    "name": "geoPosition",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#geoPosition",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 429,
    "kind": "member",
    "name": "geoNormal",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#geoNormal",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 430,
    "kind": "member",
    "name": "geoIndex",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#geoIndex",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 431,
    "kind": "member",
    "name": "positionCount",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#positionCount",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 432,
    "kind": "member",
    "name": "geoPositionCount",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#geoPositionCount",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 433,
    "kind": "member",
    "name": "transformedGeoPosition",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#transformedGeoPosition",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 434,
    "kind": "member",
    "name": "transformedGeoNormal",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#transformedGeoNormal",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 435,
    "kind": "member",
    "name": "meshPosition",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#meshPosition",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "meshColor",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#meshColor",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "meshIndex",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#meshIndex",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 438,
    "kind": "member",
    "name": "meshNormal",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#meshNormal",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 440,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 441,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 442,
    "kind": "method",
    "name": "makeIndex",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#makeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true
  },
  {
    "__docId__": 443,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/geometry-buffer.js~GeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/geometry-buffer.js~GeometryBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 444,
    "kind": "file",
    "name": "src/buffer/hyperballstick-buffer.js",
    "content": "/**\r\n * @file Hyperball Stick Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ExtensionFragDepth } from '../globals.js'\r\nimport { calculateMinArray } from '../math/array-utils.js'\r\nimport CylinderGeometryBuffer from './cylindergeometry-buffer.js'\r\nimport HyperballStickImpostorBuffer from './hyperballstickimpostor-buffer.js'\r\n\r\n/**\r\n * Hyperball stick buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link CylinderGeometryBuffer} or a {@link HyperballStickImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var hyperballStickBuffer = new HyperballStickBuffer( {\r\n *     position1: new Float32Array( [ 0, 0, 0 ] ),\r\n *     position2: new Float32Array( [ 2, 2, 2 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     color2: new Float32Array( [ 0, 1, 0 ] ),\r\n *     radius1: new Float32Array( [ 1 ] ),\r\n *     radius2: new Float32Array( [ 2 ] )\r\n * } );\r\n */\r\nclass HyperballStickBuffer {\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position1 - from positions\r\n   * @param  {Float32Array} data.position2 - to positions\r\n   * @param  {Float32Array} data.color - from colors\r\n   * @param  {Float32Array} data.color2 - to colors\r\n   * @param  {Float32Array} data.radius - from radii\r\n   * @param  {Float32Array} data.radius2 - to radii\r\n   * @param  {Float32Array} data.picking - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      data.radius = calculateMinArray(data.radius, data.radius2)\r\n      return new CylinderGeometryBuffer(data, params)\r\n    } else {\r\n      return new HyperballStickImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\nexport default HyperballStickBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/hyperballstick-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "class",
    "name": "HyperballStickBuffer",
    "memberof": "src/buffer/hyperballstick-buffer.js",
    "static": true,
    "longname": "src/buffer/hyperballstick-buffer.js~HyperballStickBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/hyperballstick-buffer.js",
    "importStyle": "HyperballStickBuffer",
    "description": "Hyperball stick buffer. Depending on the value {@link ExtensionFragDepth} and\n`params.disableImpostor` the constructor returns either a\n{@link CylinderGeometryBuffer} or a {@link HyperballStickImpostorBuffer}",
    "examples": [
      "var hyperballStickBuffer = new HyperballStickBuffer( {\n    position1: new Float32Array( [ 0, 0, 0 ] ),\n    position2: new Float32Array( [ 2, 2, 2 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    color2: new Float32Array( [ 0, 1, 0 ] ),\n    radius1: new Float32Array( [ 1 ] ),\n    radius2: new Float32Array( [ 2 ] )\n} );"
    ],
    "lineNumber": 28,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 446,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/hyperballstick-buffer.js~HyperballStickBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstick-buffer.js~HyperballStickBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "from radii"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius2",
        "description": "to radii"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/buffer/hyperballstickimpostor-buffer.js",
    "content": "/**\r\n * @file Hyperball Stick Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/HyperballStickImpostor.vert'\r\nimport '../shader/HyperballStickImpostor.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport MappedBoxBuffer from './mappedbox-buffer.js'\r\n\r\n/**\r\n * Hyperball stick impostor buffer.\r\n *\r\n * @example\r\n * var hyperballStickImpostorBuffer = new HyperballStickImpostorBuffer( {\r\n *     position1: new Float32Array( [ 0, 0, 0 ] ),\r\n *     position2: new Float32Array( [ 2, 2, 2 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     color2: new Float32Array( [ 0, 1, 0 ] ),\r\n *     radius1: new Float32Array( [ 1 ] ),\r\n *     radius2: new Float32Array( [ 2 ] )\r\n * } );\r\n */\r\nclass HyperballStickImpostorBuffer extends MappedBoxBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position1 - from positions\r\n     * @param  {Float32Array} data.position2 - to positions\r\n     * @param  {Float32Array} data.color - from colors\r\n     * @param  {Float32Array} data.color2 - to colors\r\n     * @param  {Float32Array} data.radius1 - from radii\r\n     * @param  {Float32Array} data.radius2 - to radii\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    super(data, params)\r\n\r\n    var d = data || {}\r\n    var p = params || {}\r\n\r\n    var shrink = defaults(p.shrink, 0.14)\r\n\r\n    this.addUniforms({\r\n      'modelViewProjectionMatrix': { value: new Matrix4() },\r\n      'modelViewProjectionMatrixInverse': { value: new Matrix4() },\r\n      'modelViewMatrixInverseTranspose': { value: new Matrix4() },\r\n      'shrink': { value: shrink }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null },\r\n      'radius': { type: 'f', value: null },\r\n      'radius2': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(d)\r\n\r\n    this.makeMapping()\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      shrink: { uniform: true }\r\n\r\n    }, super.parameters)\r\n  }\r\n\r\n  get isImpostor () { return true }\r\n  get vertexShader () { return 'HyperballStickImpostor.vert' }\r\n  get fragmentShader () { return 'HyperballStickImpostor.frag' }\r\n}\r\n\r\nexport default HyperballStickImpostorBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/hyperballstickimpostor-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "class",
    "name": "HyperballStickImpostorBuffer",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js",
    "static": true,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/hyperballstickimpostor-buffer.js",
    "importStyle": "HyperballStickImpostorBuffer",
    "description": "Hyperball stick impostor buffer.",
    "examples": [
      "var hyperballStickImpostorBuffer = new HyperballStickImpostorBuffer( {\n    position1: new Float32Array( [ 0, 0, 0 ] ),\n    position2: new Float32Array( [ 2, 2, 2 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    color2: new Float32Array( [ 0, 1, 0 ] ),\n    radius1: new Float32Array( [ 1 ] ),\n    radius2: new Float32Array( [ 2 ] )\n} );"
    ],
    "lineNumber": 28,
    "interface": false,
    "extends": [
      "src/buffer/mappedbox-buffer.js~MappedBoxBuffer"
    ]
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius1",
        "description": "from radii"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius2",
        "description": "to radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": false,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 450,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 451,
    "kind": "get",
    "name": "isImpostor",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer#isImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 452,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 453,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/hyperballstickimpostor-buffer.js~HyperballStickImpostorBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 454,
    "kind": "file",
    "name": "src/buffer/image-buffer.js",
    "content": "/**\r\n * @file Image Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    Vector2, BufferAttribute, DataTexture,\r\n    NormalBlending, NearestFilter, LinearFilter\r\n} from '../../lib/three.es6.js'\r\n\r\nimport '../shader/Image.vert'\r\nimport '../shader/Image.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Buffer from './buffer.js'\r\n\r\nconst quadIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\nconst quadUvs = new Float32Array([\r\n  0, 1,\r\n  0, 0,\r\n  1, 1,\r\n  1, 0\r\n])\r\n\r\n/**\r\n * Image buffer. Draw a single image. Optionally interpolate.\r\n */\r\nclass ImageBuffer extends Buffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - image position\r\n     * @param {Float32Array} data.imageData - image data, rgba channels\r\n     * @param {Float32Array} data.width - image width\r\n     * @param {Float32Array} data.height - image height\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} [params] - parameters object\r\n     */\r\n  constructor (data, params) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    super({\r\n      position: d.position,\r\n      index: quadIndices,\r\n      picking: d.picking\r\n    }, p)\r\n\r\n    this.forceTransparent = true\r\n    this.filter = defaults(p.filter, 'nearest')\r\n\r\n    const tex = new DataTexture(d.imageData, d.width, d.height)\r\n    tex.flipY = true\r\n    this.tex = tex\r\n\r\n    var n = d.imageData.length\r\n    const pickingData = new Uint8Array(n)\r\n    for (let i = 0; i < n; i += 4) {\r\n      const j = i / 4\r\n      pickingData[ i ] = j >> 16 & 255\r\n      pickingData[ i + 1 ] = j >> 8 & 255\r\n      pickingData[ i + 2 ] = j & 255\r\n    }\r\n\r\n    const pickingTex = new DataTexture(pickingData, d.width, d.height)\r\n    pickingTex.flipY = true\r\n    pickingTex.minFilter = NearestFilter\r\n    pickingTex.magFilter = NearestFilter\r\n    this.pickingTex = pickingTex\r\n\r\n    this.addUniforms({\r\n      'map': { value: tex },\r\n      'pickingMap': { value: pickingTex },\r\n      'mapSize': { value: new Vector2(d.width, d.height) }\r\n    })\r\n\r\n    this.geometry.addAttribute('uv', new BufferAttribute(quadUvs, 2))\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      filter: { updateShader: true, uniform: true }\r\n\r\n    }, super.parameters)\r\n  }\r\n\r\n  getDefines (type) {\r\n    const defines = super.getDefines(type)\r\n\r\n    if (this.filter.startsWith('cubic')) {\r\n      defines.CUBIC_INTERPOLATION = 1\r\n      if (this.filter.endsWith('bspline')) {\r\n        defines.BSPLINE_FILTER = 1\r\n      } else if (this.filter.endsWith('catmulrom')) {\r\n        defines.CATMULROM_FILTER = 1\r\n      } else if (this.filter.endsWith('mitchell')) {\r\n        defines.MITCHELL_FILTER = 1\r\n      }\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  updateTexture () {\r\n    const tex = this.tex\r\n\r\n    if (this.filter.startsWith('cubic')) {\r\n      tex.minFilter = NearestFilter\r\n      tex.magFilter = NearestFilter\r\n    } else if (this.filter === 'linear') {\r\n      tex.minFilter = LinearFilter\r\n      tex.magFilter = LinearFilter\r\n    } else {  // this.filter === \"nearest\"\r\n      tex.minFilter = NearestFilter\r\n      tex.magFilter = NearestFilter\r\n    }\r\n\r\n    tex.needsUpdate = true\r\n    this.pickingTex.needsUpdate = true\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n    this.updateTexture()\r\n\r\n    const m = this.material\r\n    m.uniforms.map.value = this.tex\r\n    m.blending = NormalBlending\r\n    m.needsUpdate = true\r\n\r\n    const wm = this.wireframeMaterial\r\n    wm.uniforms.map.value = this.tex\r\n    wm.blending = NormalBlending\r\n    wm.needsUpdate = true\r\n\r\n    const pm = this.pickingMaterial\r\n    pm.uniforms.map.value = this.tex\r\n    pm.uniforms.pickingMap.value = this.pickingTex\r\n    pm.blending = NormalBlending\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  setUniforms (data) {\r\n    if (data && data.filter !== undefined) {\r\n      this.updateTexture()\r\n      data.map = this.tex\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n\r\n  get vertexShader () { return 'Image.vert' }\r\n  get fragmentShader () { return 'Image.frag' }\r\n}\r\n\r\nexport default ImageBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/image-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 455,
    "kind": "variable",
    "name": "quadIndices",
    "memberof": "src/buffer/image-buffer.js",
    "static": true,
    "longname": "src/buffer/image-buffer.js~quadIndices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/image-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 456,
    "kind": "variable",
    "name": "quadUvs",
    "memberof": "src/buffer/image-buffer.js",
    "static": true,
    "longname": "src/buffer/image-buffer.js~quadUvs",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/image-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 457,
    "kind": "class",
    "name": "ImageBuffer",
    "memberof": "src/buffer/image-buffer.js",
    "static": true,
    "longname": "src/buffer/image-buffer.js~ImageBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/image-buffer.js",
    "importStyle": "ImageBuffer",
    "description": "Image buffer. Draw a single image. Optionally interpolate.",
    "lineNumber": 33,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 458,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "image position"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.imageData",
        "description": "image data, rgba channels"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.width",
        "description": "image width"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.height",
        "description": "image height"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "forceTransparent",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#forceTransparent",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "filter",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#filter",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 461,
    "kind": "member",
    "name": "tex",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#tex",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 462,
    "kind": "member",
    "name": "pickingTex",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#pickingTex",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 463,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 464,
    "kind": "method",
    "name": "getDefines",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#getDefines",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 465,
    "kind": "method",
    "name": "updateTexture",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#updateTexture",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true
  },
  {
    "__docId__": 466,
    "kind": "method",
    "name": "makeMaterial",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#makeMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 467,
    "kind": "method",
    "name": "setUniforms",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#setUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true
  },
  {
    "__docId__": 468,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true
  },
  {
    "__docId__": 469,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/image-buffer.js~ImageBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/image-buffer.js~ImageBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 470,
    "kind": "file",
    "name": "src/buffer/line-buffer.js",
    "content": "/**\r\n * @file Line Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport Buffer from './buffer.js'\r\n\r\n/**\r\n * Line buffer. Draws lines with a fixed width in pixels.\r\n *\r\n * @example\r\n * var lineBuffer = new LineBuffer( {\r\n *     position1: new Float32Array( [ 0, 0, 0 ] ),\r\n *     position2: new Float32Array( [ 1, 1, 1 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     color2: new Float32Array( [ 0, 1, 0 ] )\r\n * } );\r\n */\r\nclass LineBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position1 - from positions\r\n     * @param  {Float32Array} data.position2 - to positions\r\n     * @param  {Float32Array} data.color - from colors\r\n     * @param  {Float32Array} data.color2 - to colors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var size = data.position1.length / 3\r\n    var attrSize = size * 4\r\n\r\n    super({\r\n      position: new Float32Array(attrSize * 3),\r\n      color: new Float32Array(attrSize * 3)\r\n    }, params)\r\n\r\n    this.setAttributes(data)\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var position1, position2, color, color2\r\n    var aPosition, aColor\r\n\r\n    var attributes = this.geometry.attributes\r\n\r\n    if (data.position1 && data.position2) {\r\n      position1 = data.position1\r\n      position2 = data.position2\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.color && data.color2) {\r\n      color = data.color\r\n      color2 = data.color2\r\n      aColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    var n = this.size\r\n\r\n    var i, j\r\n    var x, y, z, x1, y1, z1, x2, y2, z2\r\n\r\n    for (var v = 0; v < n; v++) {\r\n      j = v * 3\r\n      i = v * 4 * 3\r\n\r\n      if (position1 && position2) {\r\n        x1 = position1[ j ]\r\n        y1 = position1[ j + 1 ]\r\n        z1 = position1[ j + 2 ]\r\n\r\n        x2 = position2[ j ]\r\n        y2 = position2[ j + 1 ]\r\n        z2 = position2[ j + 2 ]\r\n\r\n        x = (x1 + x2) / 2.0\r\n        y = (y1 + y2) / 2.0\r\n        z = (z1 + z2) / 2.0\r\n\r\n        aPosition[ i ] = x1\r\n        aPosition[ i + 1 ] = y1\r\n        aPosition[ i + 2 ] = z1\r\n        aPosition[ i + 3 ] = x\r\n        aPosition[ i + 4 ] = y\r\n        aPosition[ i + 5 ] = z\r\n\r\n        aPosition[ i + 6 ] = x\r\n        aPosition[ i + 7 ] = y\r\n        aPosition[ i + 8 ] = z\r\n        aPosition[ i + 9 ] = x2\r\n        aPosition[ i + 10 ] = y2\r\n        aPosition[ i + 11 ] = z2\r\n      }\r\n\r\n      if (color && color2) {\r\n        aColor[ i ] = aColor[ i + 3 ] = color[ j ]\r\n        aColor[ i + 1 ] = aColor[ i + 4 ] = color[ j + 1 ]\r\n        aColor[ i + 2 ] = aColor[ i + 5 ] = color[ j + 2 ]\r\n\r\n        aColor[ i + 6 ] = aColor[ i + 9 ] = color2[ j ]\r\n        aColor[ i + 7 ] = aColor[ i + 10 ] = color2[ j + 1 ]\r\n        aColor[ i + 8 ] = aColor[ i + 11 ] = color2[ j + 2 ]\r\n      }\r\n    }\r\n  }\r\n\r\n  get isLine () { return true }\r\n  get vertexShader () { return 'Line.vert' }\r\n  get fragmentShader () { return 'Line.frag' }\r\n}\r\n\r\nexport default LineBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/line-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 471,
    "kind": "class",
    "name": "LineBuffer",
    "memberof": "src/buffer/line-buffer.js",
    "static": true,
    "longname": "src/buffer/line-buffer.js~LineBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/line-buffer.js",
    "importStyle": "LineBuffer",
    "description": "Line buffer. Draws lines with a fixed width in pixels.",
    "examples": [
      "var lineBuffer = new LineBuffer( {\n    position1: new Float32Array( [ 0, 0, 0 ] ),\n    position2: new Float32Array( [ 1, 1, 1 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    color2: new Float32Array( [ 0, 1, 0 ] )\n} );"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 472,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/line-buffer.js~LineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/line-buffer.js~LineBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 473,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/line-buffer.js~LineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/line-buffer.js~LineBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 474,
    "kind": "get",
    "name": "isLine",
    "memberof": "src/buffer/line-buffer.js~LineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/line-buffer.js~LineBuffer#isLine",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 475,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/line-buffer.js~LineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/line-buffer.js~LineBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 476,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/line-buffer.js~LineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/line-buffer.js~LineBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 477,
    "kind": "file",
    "name": "src/buffer/mapped-buffer.js",
    "content": "/**\r\n * @file Mapped Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Buffer from './buffer.js'\r\n\r\nimport { getUintArray } from '../utils.js'\r\nimport { calculateCenterArray, serialArray } from '../math/array-utils.js'\r\n\r\n/**\r\n * Mapped buffer. Sends mapping attribute to the GPU and repeats data in\r\n * others attributes. Used to render imposters.\r\n * @interface\r\n */\r\nclass MappedBuffer extends Buffer {\r\n  constructor (data, params) {\r\n    super(data, params)\r\n\r\n    this.index = getUintArray(this.indexSize, this.attributeSize)\r\n    this.makeIndex()\r\n    this.initIndex(this.index, 1)\r\n\r\n    this.addAttributes({\r\n      'mapping': { type: this.mappingType, value: null }\r\n    })\r\n\r\n    this.setAttributes({ primitiveId: serialArray(this.size) })\r\n  }\r\n\r\n  get attributeSize () {\r\n    return this.size * this.mappingSize\r\n  }\r\n\r\n  get indexSize () {\r\n    return this.size * this.mappingIndicesSize\r\n  }\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mapping () {}\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mappingIndices () {}\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mappingIndicesSize () {}\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mappingType () {}\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mappingSize () {}\r\n\r\n    /**\r\n     * @abstract\r\n     */\r\n  get mappingItemSize () {}\r\n\r\n  addAttributes (attributes) {\r\n    var nullValueAttributes = {}\r\n    for (var name in attributes) {\r\n      var a = attributes[ name ]\r\n      nullValueAttributes[ name ] = {\r\n        type: a.type,\r\n        value: null\r\n      }\r\n    }\r\n\r\n    super.addAttributes(nullValueAttributes)\r\n  }\r\n\r\n  getAttributeIndex (dataIndex) {\r\n    return dataIndex * 3 * this.mappingSize\r\n  }\r\n\r\n  setAttributes (data) {\r\n    if (data && !data.position && data.position1 && data.position2) {\r\n      data.position = calculateCenterArray(data.position1, data.position2)\r\n    }\r\n\r\n    var size = this.size\r\n    var mappingSize = this.mappingSize\r\n    var attributes = this.geometry.attributes\r\n\r\n    var a, d, itemSize, array, n, i, j\r\n\r\n    for (var name in data) {\r\n      if (name === 'index' || name === 'picking') continue\r\n\r\n      d = data[ name ]\r\n      a = attributes[ name ]\r\n      itemSize = a.itemSize\r\n      array = a.array\r\n\r\n      for (var k = 0; k < size; ++k) {\r\n        n = k * itemSize\r\n        i = n * mappingSize\r\n\r\n        for (var l = 0; l < mappingSize; ++l) {\r\n          j = i + (itemSize * l)\r\n\r\n          for (var m = 0; m < itemSize; ++m) {\r\n            array[ j + m ] = d[ n + m ]\r\n          }\r\n        }\r\n      }\r\n\r\n      a.needsUpdate = true\r\n    }\r\n  }\r\n\r\n  makeMapping () {\r\n    var size = this.size\r\n    var mapping = this.mapping\r\n    var mappingSize = this.mappingSize\r\n    var mappingItemSize = this.mappingItemSize\r\n\r\n    var aMapping = this.geometry.attributes.mapping.array\r\n\r\n    for (var v = 0; v < size; v++) {\r\n      aMapping.set(mapping, v * mappingItemSize * mappingSize)\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    var size = this.size\r\n    var mappingSize = this.mappingSize\r\n    var mappingIndices = this.mappingIndices\r\n    var mappingIndicesSize = this.mappingIndicesSize\r\n\r\n    var index = this.index\r\n\r\n    var ix, it\r\n\r\n    for (var v = 0; v < size; v++) {\r\n      ix = v * mappingIndicesSize\r\n      it = v * mappingSize\r\n\r\n      index.set(mappingIndices, ix)\r\n\r\n      for (var s = 0; s < mappingIndicesSize; ++s) {\r\n        index[ ix + s ] += it\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default MappedBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/mapped-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 478,
    "kind": "class",
    "name": "MappedBuffer",
    "memberof": "src/buffer/mapped-buffer.js",
    "static": true,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/mapped-buffer.js",
    "importStyle": "MappedBuffer",
    "description": "Mapped buffer. Sends mapping attribute to the GPU and repeats data in\nothers attributes. Used to render imposters.",
    "lineNumber": 17,
    "interface": true,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 479,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "index",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#index",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 481,
    "kind": "get",
    "name": "attributeSize",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#attributeSize",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 482,
    "kind": "get",
    "name": "indexSize",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#indexSize",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 483,
    "kind": "get",
    "name": "mapping",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mapping",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "abstract": true
  },
  {
    "__docId__": 484,
    "kind": "get",
    "name": "mappingIndices",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mappingIndices",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "abstract": true
  },
  {
    "__docId__": 485,
    "kind": "get",
    "name": "mappingIndicesSize",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mappingIndicesSize",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "abstract": true
  },
  {
    "__docId__": 486,
    "kind": "get",
    "name": "mappingType",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mappingType",
    "access": "public",
    "description": "",
    "lineNumber": 58,
    "abstract": true
  },
  {
    "__docId__": 487,
    "kind": "get",
    "name": "mappingSize",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mappingSize",
    "access": "public",
    "description": "",
    "lineNumber": 63,
    "abstract": true
  },
  {
    "__docId__": 488,
    "kind": "get",
    "name": "mappingItemSize",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#mappingItemSize",
    "access": "public",
    "description": "",
    "lineNumber": 68,
    "abstract": true
  },
  {
    "__docId__": 489,
    "kind": "method",
    "name": "addAttributes",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#addAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 490,
    "kind": "method",
    "name": "getAttributeIndex",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#getAttributeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 491,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 492,
    "kind": "method",
    "name": "makeMapping",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#makeMapping",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true
  },
  {
    "__docId__": 493,
    "kind": "method",
    "name": "makeIndex",
    "memberof": "src/buffer/mapped-buffer.js~MappedBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mapped-buffer.js~MappedBuffer#makeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 494,
    "kind": "file",
    "name": "src/buffer/mappedalignedbox-buffer.js",
    "content": "/**\r\n * @file Mapped Aligned Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport MappedBuffer from './mapped-buffer.js'\r\n\r\nconst mapping = new Float32Array([\r\n  -1.0, 1.0, -1.0,\r\n  -1.0, -1.0, -1.0,\r\n  1.0, 1.0, -1.0,\r\n  1.0, 1.0, 1.0,\r\n  1.0, -1.0, -1.0,\r\n  1.0, -1.0, 1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 4, 2,\r\n  2, 4, 3,\r\n  4, 5, 3\r\n])\r\n\r\n/**\r\n * Mapped Aligned box buffer. Draws boxes where one side is always screen-space aligned.\r\n * Used to render cylinder imposters.\r\n * @interface\r\n */\r\nclass MappedAlignedBoxBuffer extends MappedBuffer {\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 12 }\r\n  get mappingType () { return 'v3' }\r\n  get mappingSize () { return 6 }\r\n  get mappingItemSize () { return 3 }\r\n}\r\n\r\nexport default MappedAlignedBoxBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/mappedalignedbox-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 495,
    "kind": "variable",
    "name": "mapping",
    "memberof": "src/buffer/mappedalignedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedalignedbox-buffer.js~mapping",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedalignedbox-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 496,
    "kind": "variable",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedalignedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedalignedbox-buffer.js~mappingIndices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedalignedbox-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 497,
    "kind": "class",
    "name": "MappedAlignedBoxBuffer",
    "memberof": "src/buffer/mappedalignedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/mappedalignedbox-buffer.js",
    "importStyle": "MappedAlignedBoxBuffer",
    "description": "Mapped Aligned box buffer. Draws boxes where one side is always screen-space aligned.\nUsed to render cylinder imposters.",
    "lineNumber": 30,
    "interface": true,
    "extends": [
      "src/buffer/mapped-buffer.js~MappedBuffer"
    ]
  },
  {
    "__docId__": 498,
    "kind": "get",
    "name": "mapping",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mapping",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 499,
    "kind": "get",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mappingIndices",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 500,
    "kind": "get",
    "name": "mappingIndicesSize",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mappingIndicesSize",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 501,
    "kind": "get",
    "name": "mappingType",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mappingType",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 502,
    "kind": "get",
    "name": "mappingSize",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mappingSize",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 503,
    "kind": "get",
    "name": "mappingItemSize",
    "memberof": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedalignedbox-buffer.js~MappedAlignedBoxBuffer#mappingItemSize",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "src/buffer/mappedbox-buffer.js",
    "content": "/**\r\n * @file Mapped Box Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport MappedBuffer from './mapped-buffer.js'\r\n\r\nconst mapping = new Float32Array([\r\n  -1.0, -1.0, -1.0,\r\n  1.0, -1.0, -1.0,\r\n  1.0, -1.0, 1.0,\r\n  -1.0, -1.0, 1.0,\r\n  -1.0, 1.0, -1.0,\r\n  1.0, 1.0, -1.0,\r\n  1.0, 1.0, 1.0,\r\n  -1.0, 1.0, 1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  0, 2, 3,\r\n  1, 5, 6,\r\n  1, 6, 2,\r\n  4, 6, 5,\r\n  4, 7, 6,\r\n  0, 7, 4,\r\n  0, 3, 7,\r\n  0, 5, 1,\r\n  0, 4, 5,\r\n  3, 2, 6,\r\n  3, 6, 7\r\n])\r\n\r\n/**\r\n * Mapped Box buffer. Draws boxes. Used to render general imposters.\r\n * @interface\r\n */\r\nclass MappedBoxBuffer extends MappedBuffer {\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 36 }\r\n  get mappingType () { return 'v3' }\r\n  get mappingSize () { return 8 }\r\n  get mappingItemSize () { return 3 }\r\n}\r\n\r\nexport default MappedBoxBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/mappedbox-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "variable",
    "name": "mapping",
    "memberof": "src/buffer/mappedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedbox-buffer.js~mapping",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedbox-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 506,
    "kind": "variable",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedbox-buffer.js~mappingIndices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedbox-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 507,
    "kind": "class",
    "name": "MappedBoxBuffer",
    "memberof": "src/buffer/mappedbox-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/mappedbox-buffer.js",
    "importStyle": "MappedBoxBuffer",
    "description": "Mapped Box buffer. Draws boxes. Used to render general imposters.",
    "lineNumber": 39,
    "interface": true,
    "extends": [
      "src/buffer/mapped-buffer.js~MappedBuffer"
    ]
  },
  {
    "__docId__": 508,
    "kind": "get",
    "name": "mapping",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mapping",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 509,
    "kind": "get",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mappingIndices",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 510,
    "kind": "get",
    "name": "mappingIndicesSize",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mappingIndicesSize",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 511,
    "kind": "get",
    "name": "mappingType",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mappingType",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 512,
    "kind": "get",
    "name": "mappingSize",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mappingSize",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 513,
    "kind": "get",
    "name": "mappingItemSize",
    "memberof": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedbox-buffer.js~MappedBoxBuffer#mappingItemSize",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 514,
    "kind": "file",
    "name": "src/buffer/mappedquad-buffer.js",
    "content": "/**\r\n * @file Mapped Quad Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport MappedBuffer from './mapped-buffer.js'\r\n\r\nconst mapping = new Float32Array([\r\n  -1.0, 1.0,\r\n  -1.0, -1.0,\r\n  1.0, 1.0,\r\n  1.0, -1.0\r\n])\r\n\r\nconst mappingIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\n/**\r\n * Mapped Quad buffer. Draws screen-aligned quads. Used to render impostors.\r\n * @interface\r\n */\r\nclass MappedQuadBuffer extends MappedBuffer {\r\n  get mapping () { return mapping }\r\n  get mappingIndices () { return mappingIndices }\r\n  get mappingIndicesSize () { return 6 }\r\n  get mappingType () { return 'v2' }\r\n  get mappingSize () { return 4 }\r\n  get mappingItemSize () { return 2 }\r\n}\r\n\r\nexport default MappedQuadBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/mappedquad-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 515,
    "kind": "variable",
    "name": "mapping",
    "memberof": "src/buffer/mappedquad-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedquad-buffer.js~mapping",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedquad-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 516,
    "kind": "variable",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedquad-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedquad-buffer.js~mappingIndices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/mappedquad-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 517,
    "kind": "class",
    "name": "MappedQuadBuffer",
    "memberof": "src/buffer/mappedquad-buffer.js",
    "static": true,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/mappedquad-buffer.js",
    "importStyle": "MappedQuadBuffer",
    "description": "Mapped Quad buffer. Draws screen-aligned quads. Used to render impostors.",
    "lineNumber": 25,
    "interface": true,
    "extends": [
      "src/buffer/mapped-buffer.js~MappedBuffer"
    ]
  },
  {
    "__docId__": 518,
    "kind": "get",
    "name": "mapping",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mapping",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 519,
    "kind": "get",
    "name": "mappingIndices",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mappingIndices",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 520,
    "kind": "get",
    "name": "mappingIndicesSize",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mappingIndicesSize",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 521,
    "kind": "get",
    "name": "mappingType",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mappingType",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 522,
    "kind": "get",
    "name": "mappingSize",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mappingSize",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 523,
    "kind": "get",
    "name": "mappingItemSize",
    "memberof": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mappedquad-buffer.js~MappedQuadBuffer#mappingItemSize",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 524,
    "kind": "file",
    "name": "src/buffer/mesh-buffer.js",
    "content": "/**\r\n * @file Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Mesh.vert'\r\nimport '../shader/Mesh.frag'\r\n\r\nimport { serialArray } from '../math/array-utils.js'\r\nimport Buffer from './buffer.js'\r\n\r\n/**\r\n * Mesh buffer. Draws a triangle mesh.\r\n *\r\n * @example\r\n * var meshBuffer = new MeshBuffer( {\r\n *     position: new Float32Array(\r\n *         [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ]\r\n *     ),\r\n *     color: new Float32Array(\r\n *         [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n *     )\r\n * } );\r\n */\r\nclass MeshBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} [data.index] - triangle indices\r\n     * @param  {Float32Array} [data.normal] - radii\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var d = data || {}\r\n\r\n    if (!d.primitiveId && d.position) {\r\n      d.primitiveId = serialArray(d.position.length / 3)\r\n    }\r\n\r\n    super(d, params)\r\n\r\n    this.addAttributes({\r\n      'normal': { type: 'v3', value: d.normal }\r\n    })\r\n\r\n    if (d.normal === undefined) {\r\n      this.geometry.computeVertexNormals()\r\n    }\r\n  }\r\n\r\n  get vertexShader () { return 'Mesh.vert' }\r\n  get fragmentShader () { return 'Mesh.frag' }\r\n}\r\n\r\nexport default MeshBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/mesh-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 525,
    "kind": "class",
    "name": "MeshBuffer",
    "memberof": "src/buffer/mesh-buffer.js",
    "static": true,
    "longname": "src/buffer/mesh-buffer.js~MeshBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/mesh-buffer.js",
    "importStyle": "MeshBuffer",
    "description": "Mesh buffer. Draws a triangle mesh.",
    "examples": [
      "var meshBuffer = new MeshBuffer( {\n    position: new Float32Array(\n        [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ]\n    ),\n    color: new Float32Array(\n        [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\n    )\n} );"
    ],
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 526,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/mesh-buffer.js~MeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mesh-buffer.js~MeshBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": true,
        "name": "data.index",
        "description": "triangle indices"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": true,
        "name": "data.normal",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 527,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/mesh-buffer.js~MeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mesh-buffer.js~MeshBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 528,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/mesh-buffer.js~MeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/mesh-buffer.js~MeshBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 529,
    "kind": "file",
    "name": "src/buffer/octahedron-buffer.js",
    "content": "/**\r\n * @file Octahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { OctahedronBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\n/**\r\n * Octahedron buffer. Draws octahedrons.\r\n *\r\n * @example\r\n * var octahedronBuffer = new OctahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass OctahedronBuffer extends GeometryBuffer {\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const geo = new OctahedronBufferGeometry(1, 0)\r\n\r\n    super(data, p, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    target.fromArray(this._heightAxis, i3)\r\n    up.fromArray(this._depthAxis, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nBufferRegistry.add('octahedron', OctahedronBuffer)\r\n\r\nexport default OctahedronBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/octahedron-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 530,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/octahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/octahedron-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/octahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 531,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/octahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/octahedron-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/octahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 532,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/octahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/octahedron-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/octahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 533,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/octahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/octahedron-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/octahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 534,
    "kind": "class",
    "name": "OctahedronBuffer",
    "memberof": "src/buffer/octahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/octahedron-buffer.js",
    "importStyle": "OctahedronBuffer",
    "description": "Octahedron buffer. Draws octahedrons.",
    "examples": [
      "var octahedronBuffer = new OctahedronBuffer({\n  position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n  size: new Float32Array([ 2, 1.5 ]),\n  heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n  depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n})"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 535,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 537,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 538,
    "kind": "member",
    "name": "_size",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#_size",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 539,
    "kind": "member",
    "name": "_heightAxis",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#_heightAxis",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 540,
    "kind": "member",
    "name": "_depthAxis",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#_depthAxis",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 541,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/octahedron-buffer.js~OctahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/octahedron-buffer.js~OctahedronBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 542,
    "kind": "file",
    "name": "src/buffer/point-buffer.js",
    "content": "/**\r\n * @file Point Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { DataTexture } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/Point.vert'\r\nimport '../shader/Point.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { serialArray } from '../math/array-utils.js'\r\nimport { smoothstep } from '../math/math-utils.js'\r\nimport Buffer from './buffer.js'\r\n\r\nfunction distance (x0, y0, x1, y1) {\r\n  var dx = x1 - x0\r\n  var dy = y1 - y0\r\n  return Math.sqrt(dx * dx + dy * dy)\r\n}\r\n\r\nfunction makePointTexture (params) {\r\n  const p = params || {}\r\n\r\n  const width = defaults(p.width, 256)\r\n  const height = defaults(p.height, 256)\r\n  const center = [ width / 2, height / 2 ]\r\n  const radius = Math.min(width / 2, height / 2)\r\n  const delta = defaults(p.delta, 1 / (radius + 1)) * radius\r\n\r\n  let x = 0\r\n  let y = 0\r\n  const data = new Uint8Array(width * height * 4)\r\n\r\n  for (let i = 0, il = data.length; i < il; i += 4) {\r\n    const dist = distance(x, y, center[ 0 ], center[ 1 ])\r\n    const value = 1 - smoothstep(radius - delta, radius, dist)\r\n\r\n    data[ i ] = value * 255\r\n    data[ i + 1 ] = value * 255\r\n    data[ i + 2 ] = value * 255\r\n    data[ i + 3 ] = value * 255\r\n\r\n    if (++x === width) {\r\n      x = 0\r\n      y++\r\n    }\r\n  }\r\n\r\n  const tex = new DataTexture(data, width, height)\r\n  tex.needsUpdate = true\r\n\r\n  return tex\r\n}\r\n\r\n/**\r\n * Point buffer. Draws points. Optionally textured.\r\n *\r\n * @example\r\n * var pointBuffer = new PointBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] )\r\n * } );\r\n */\r\nclass PointBuffer extends Buffer {\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    const d = data || {}\r\n    const p = params || {}\r\n\r\n    if (!d.primitiveId) {\r\n      d.primitiveId = serialArray(d.position.length / 3)\r\n    }\r\n\r\n    super(d, p)\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\r\n    this.sortParticles = defaults(p.sortParticles, false)\r\n    this.alphaTest = defaults(p.alphaTest, 0.5)\r\n    this.useTexture = defaults(p.useTexture, false)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\r\n\r\n    this.addUniforms({\r\n      'size': { value: this.pointSize },\r\n      'canvasHeight': { value: 1.0 },\r\n      'pixelRatio': { value: 1.0 },\r\n      'map': { value: null }\r\n    })\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      pointSize: { uniform: 'size' },\r\n      sizeAttenuation: { updateShader: true },\r\n      sortParticles: {},\r\n      alphaTest: { updateShader: true },\r\n      useTexture: { updateShader: true },\r\n      forceTransparent: {},\r\n      edgeBleach: { uniform: true }\r\n\r\n    }, super.parameters)\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n\r\n    this.makeTexture()\r\n\r\n    const m = this.material\r\n    const wm = this.wireframeMaterial\r\n    const pm = this.pickingMaterial\r\n\r\n    m.uniforms.map.value = this.tex\r\n    m.needsUpdate = true\r\n\r\n    wm.uniforms.map.value = this.tex\r\n    wm.needsUpdate = true\r\n\r\n    pm.uniforms.map.value = this.tex\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  makeTexture () {\r\n    if (this.tex) this.tex.dispose()\r\n    this.tex = makePointTexture({ delta: this.edgeBleach })\r\n  }\r\n\r\n  getDefines (type) {\r\n    const defines = super.getDefines(type)\r\n\r\n    if (this.sizeAttenuation) {\r\n      defines.USE_SIZEATTENUATION = 1\r\n    }\r\n\r\n    if (this.useTexture) {\r\n      defines.USE_MAP = 1\r\n    }\r\n\r\n    if (this.alphaTest > 0 && this.alphaTest <= 1) {\r\n      defines.ALPHATEST = this.alphaTest.toPrecision(2)\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  setUniforms (data) {\r\n    if (data && data.edgeBleach !== undefined) {\r\n      this.makeTexture()\r\n      data.map = this.tex\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n\r\n  dispose () {\r\n    super.dispose()\r\n\r\n    if (this.tex) this.tex.dispose()\r\n  }\r\n\r\n  get isPoint () { return true }\r\n  get vertexShader () { return 'Point.vert' }\r\n  get fragmentShader () { return 'Point.frag' }\r\n}\r\n\r\nexport default PointBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/point-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 543,
    "kind": "function",
    "name": "distance",
    "memberof": "src/buffer/point-buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/point-buffer.js~distance",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/point-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 544,
    "kind": "function",
    "name": "makePointTexture",
    "memberof": "src/buffer/point-buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/point-buffer.js~makePointTexture",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/point-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 545,
    "kind": "class",
    "name": "PointBuffer",
    "memberof": "src/buffer/point-buffer.js",
    "static": true,
    "longname": "src/buffer/point-buffer.js~PointBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/point-buffer.js",
    "importStyle": "PointBuffer",
    "description": "Point buffer. Draws points. Optionally textured.",
    "examples": [
      "var pointBuffer = new PointBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] )\n} );"
    ],
    "lineNumber": 66,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 546,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 547,
    "kind": "member",
    "name": "pointSize",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#pointSize",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 548,
    "kind": "member",
    "name": "sizeAttenuation",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#sizeAttenuation",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 549,
    "kind": "member",
    "name": "sortParticles",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#sortParticles",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 550,
    "kind": "member",
    "name": "alphaTest",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#alphaTest",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 551,
    "kind": "member",
    "name": "useTexture",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#useTexture",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 552,
    "kind": "member",
    "name": "forceTransparent",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#forceTransparent",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 553,
    "kind": "member",
    "name": "edgeBleach",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#edgeBleach",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 554,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 555,
    "kind": "method",
    "name": "makeMaterial",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#makeMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 556,
    "kind": "method",
    "name": "makeTexture",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#makeTexture",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 557,
    "kind": "member",
    "name": "tex",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#tex",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "getDefines",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#getDefines",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "setUniforms",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#setUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true
  },
  {
    "__docId__": 561,
    "kind": "get",
    "name": "isPoint",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#isPoint",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 562,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true
  },
  {
    "__docId__": 563,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/point-buffer.js~PointBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/point-buffer.js~PointBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "src/buffer/ribbon-buffer.js",
    "content": "/**\r\n * @file Ribbon Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Ribbon.vert'\r\n\r\nimport { getUintArray } from '../utils.js'\r\nimport { serialArray } from '../math/array-utils.js'\r\nimport MeshBuffer from './mesh-buffer.js'\r\n\r\nconst quadIndices = new Uint16Array([\r\n  0, 1, 2,\r\n  1, 3, 2\r\n])\r\n\r\n/**\r\n * Ribbon buffer. Draws a thin ribbon.\r\n */\r\nclass RibbonBuffer extends MeshBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.normal - normals\r\n     * @param  {Float32Array} data.dir - binormals\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var d = data || {}\r\n\r\n    var n = (d.position.length / 3) - 1\r\n    var n4 = n * 4\r\n    var x = n4 * 3\r\n\r\n    var meshPosition = new Float32Array(x)\r\n    var meshColor = new Float32Array(x)\r\n    var meshNormal = new Float32Array(x)\r\n    var meshIndex = getUintArray(x, x / 3)\r\n\r\n    super({\r\n      position: meshPosition,\r\n      color: meshColor,\r\n      index: meshIndex,\r\n      normal: meshNormal,\r\n      picking: d.picking\r\n    }, params)\r\n\r\n    this.addAttributes({\r\n      'dir': { type: 'v3', value: new Float32Array(x) }\r\n    })\r\n    this.addAttributes({\r\n      'size': { type: 'f', value: new Float32Array(n4) }\r\n    })\r\n\r\n    d.primitiveId = serialArray(n)\r\n    this.setAttributes(d)\r\n\r\n    this.meshIndex = meshIndex\r\n    this.makeIndex()\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var n4 = this.size\r\n    var n = n4 / 4\r\n\r\n    var attributes = this.geometry.attributes\r\n\r\n    var position, normal, size, dir, color, primitiveId\r\n    var aPosition, aNormal, aSize, aDir, aColor, aPrimitiveId\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.normal) {\r\n      normal = data.normal\r\n      aNormal = attributes.normal.array\r\n      attributes.normal.needsUpdate = true\r\n    }\r\n\r\n    if (data.size) {\r\n      size = data.size\r\n      aSize = attributes.size.array\r\n      attributes.size.needsUpdate = true\r\n    }\r\n\r\n    if (data.dir) {\r\n      dir = data.dir\r\n      aDir = attributes.dir.array\r\n      attributes.dir.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      aColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (data.primitiveId) {\r\n      primitiveId = data.primitiveId\r\n      aPrimitiveId = attributes.primitiveId.array\r\n      attributes.primitiveId.needsUpdate = true\r\n    }\r\n\r\n    var v, i, k, p, l, v3\r\n    var currSize\r\n    var prevSize = size ? size[ 0 ] : null\r\n\r\n    for (v = 0; v < n; ++v) {\r\n      v3 = v * 3\r\n      k = v * 3 * 4\r\n      l = v * 4\r\n\r\n      if (position) {\r\n        aPosition[ k ] = aPosition[ k + 3 ] = position[ v3 ]\r\n        aPosition[ k + 1 ] = aPosition[ k + 4 ] = position[ v3 + 1 ]\r\n        aPosition[ k + 2 ] = aPosition[ k + 5 ] = position[ v3 + 2 ]\r\n\r\n        aPosition[ k + 6 ] = aPosition[ k + 9 ] = position[ v3 + 3 ]\r\n        aPosition[ k + 7 ] = aPosition[ k + 10 ] = position[ v3 + 4 ]\r\n        aPosition[ k + 8 ] = aPosition[ k + 11 ] = position[ v3 + 5 ]\r\n      }\r\n\r\n      if (normal) {\r\n        aNormal[ k ] = aNormal[ k + 3 ] = -normal[ v3 ]\r\n        aNormal[ k + 1 ] = aNormal[ k + 4 ] = -normal[ v3 + 1 ]\r\n        aNormal[ k + 2 ] = aNormal[ k + 5 ] = -normal[ v3 + 2 ]\r\n\r\n        aNormal[ k + 6 ] = aNormal[ k + 9 ] = -normal[ v3 + 3 ]\r\n        aNormal[ k + 7 ] = aNormal[ k + 10 ] = -normal[ v3 + 4 ]\r\n        aNormal[ k + 8 ] = aNormal[ k + 11 ] = -normal[ v3 + 5 ]\r\n      }\r\n\r\n      for (i = 0; i < 4; ++i) {\r\n        p = k + 3 * i\r\n\r\n        if (color) {\r\n          aColor[ p ] = color[ v3 ]\r\n          aColor[ p + 1 ] = color[ v3 + 1 ]\r\n          aColor[ p + 2 ] = color[ v3 + 2 ]\r\n        }\r\n\r\n        if (primitiveId) {\r\n          aPrimitiveId[ l + i ] = primitiveId[ v ]\r\n        }\r\n      }\r\n\r\n      if (size) {\r\n        currSize = size[ v ]\r\n\r\n        if (prevSize !== size[ v ]) {\r\n          aSize[ l ] = prevSize\r\n          aSize[ l + 1 ] = prevSize\r\n          aSize[ l + 2 ] = currSize\r\n          aSize[ l + 3 ] = currSize\r\n        } else {\r\n          aSize[ l ] = currSize\r\n          aSize[ l + 1 ] = currSize\r\n          aSize[ l + 2 ] = currSize\r\n          aSize[ l + 3 ] = currSize\r\n        }\r\n\r\n        prevSize = currSize\r\n      }\r\n\r\n      if (dir) {\r\n        aDir[ k ] = dir[ v3 ]\r\n        aDir[ k + 1 ] = dir[ v3 + 1 ]\r\n        aDir[ k + 2 ] = dir[ v3 + 2 ]\r\n\r\n        aDir[ k + 3 ] = -dir[ v3 ]\r\n        aDir[ k + 4 ] = -dir[ v3 + 1 ]\r\n        aDir[ k + 5 ] = -dir[ v3 + 2 ]\r\n\r\n        aDir[ k + 6 ] = dir[ v3 + 3 ]\r\n        aDir[ k + 7 ] = dir[ v3 + 4 ]\r\n        aDir[ k + 8 ] = dir[ v3 + 5 ]\r\n\r\n        aDir[ k + 9 ] = -dir[ v3 + 3 ]\r\n        aDir[ k + 10 ] = -dir[ v3 + 4 ]\r\n        aDir[ k + 11 ] = -dir[ v3 + 5 ]\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    var meshIndex = this.meshIndex\r\n    var n = meshIndex.length / 4 / 3\r\n\r\n    var s, v, ix, it\r\n\r\n    for (v = 0; v < n; ++v) {\r\n      ix = v * 6\r\n      it = v * 4\r\n\r\n      meshIndex.set(quadIndices, ix)\r\n      for (s = 0; s < 6; ++s) {\r\n        meshIndex[ ix + s ] += it\r\n      }\r\n    }\r\n  }\r\n\r\n  get vertexShader () { return 'Ribbon.vert' }\r\n}\r\n\r\nexport default RibbonBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/ribbon-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "variable",
    "name": "quadIndices",
    "memberof": "src/buffer/ribbon-buffer.js",
    "static": true,
    "longname": "src/buffer/ribbon-buffer.js~quadIndices",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/ribbon-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 566,
    "kind": "class",
    "name": "RibbonBuffer",
    "memberof": "src/buffer/ribbon-buffer.js",
    "static": true,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/ribbon-buffer.js",
    "importStyle": "RibbonBuffer",
    "description": "Ribbon buffer. Draws a thin ribbon.",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/buffer/mesh-buffer.js~MeshBuffer"
    ]
  },
  {
    "__docId__": 567,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.normal",
        "description": "normals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.dir",
        "description": "binormals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.size",
        "description": "sizes"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": false,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 568,
    "kind": "member",
    "name": "meshIndex",
    "memberof": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "static": false,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer#meshIndex",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 569,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 570,
    "kind": "method",
    "name": "makeIndex",
    "memberof": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer#makeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 571,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/ribbon-buffer.js~RibbonBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/ribbon-buffer.js~RibbonBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true
  },
  {
    "__docId__": 572,
    "kind": "file",
    "name": "src/buffer/sphere-buffer.js",
    "content": "/**\r\n * @file Sphere Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { BufferRegistry, ExtensionFragDepth } from '../globals.js'\r\nimport SphereGeometryBuffer from './spheregeometry-buffer.js'\r\nimport SphereImpostorBuffer from './sphereimpostor-buffer.js'\r\n\r\n/**\r\n * Sphere buffer. Depending on the value {@link ExtensionFragDepth} and\r\n * `params.disableImpostor` the constructor returns either a\r\n * {@link SphereGeometryBuffer} or a {@link SphereImpostorBuffer}\r\n * @implements {Buffer}\r\n *\r\n * @example\r\n * var sphereBuffer = new SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n */\r\nclass SphereBuffer {\r\n    /**\r\n     * @param {Object} data - buffer data\r\n     * @param {Float32Array} data.position - positions\r\n     * @param {Float32Array} data.color - colors\r\n     * @param {Float32Array} data.radius - radii\r\n     * @param {Picker} [data.picking] - picking ids\r\n     * @param {BufferParameters} params - parameters object\r\n     * @return {SphereGeometryBuffer|SphereImpostorBuffer} the buffer object\r\n     */\r\n  constructor (data, params) {\r\n    if (!ExtensionFragDepth || (params && params.disableImpostor)) {\r\n      return new SphereGeometryBuffer(data, params)\r\n    } else {\r\n      return new SphereImpostorBuffer(data, params)\r\n    }\r\n  }\r\n}\r\n\r\nBufferRegistry.add('sphere', SphereBuffer)\r\n\r\nexport default SphereBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/sphere-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 573,
    "kind": "class",
    "name": "SphereBuffer",
    "memberof": "src/buffer/sphere-buffer.js",
    "static": true,
    "longname": "src/buffer/sphere-buffer.js~SphereBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/sphere-buffer.js",
    "importStyle": "SphereBuffer",
    "description": "Sphere buffer. Depending on the value {@link ExtensionFragDepth} and\n`params.disableImpostor` the constructor returns either a\n{@link SphereGeometryBuffer} or a {@link SphereImpostorBuffer}",
    "examples": [
      "var sphereBuffer = new SphereBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    radius: new Float32Array( [ 1 ] )\n} );"
    ],
    "lineNumber": 24,
    "interface": false,
    "implements": [
      "Buffer"
    ]
  },
  {
    "__docId__": 574,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/sphere-buffer.js~SphereBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/sphere-buffer.js~SphereBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "buffer data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SphereGeometryBuffer",
        "SphereImpostorBuffer"
      ],
      "spread": false,
      "description": "the buffer object"
    }
  },
  {
    "__docId__": 575,
    "kind": "file",
    "name": "src/buffer/spheregeometry-buffer.js",
    "content": "/**\r\n * @file Sphere Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { IcosahedronBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\n\r\n/**\r\n * Sphere geometry buffer.\r\n *\r\n * @example\r\n * var sphereGeometryBuffer = new SphereGeometryBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereGeometryBuffer extends GeometryBuffer {\r\n  /**\r\n   * @param {Object} data - attribute object\r\n   * @param {Float32Array} data.position - positions\r\n   * @param {Float32Array} data.color - colors\r\n   * @param {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const detail = defaults(p.sphereDetail, 1)\r\n    const geo = new IcosahedronBufferGeometry(1, detail)\r\n\r\n    super(data, p, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i) {\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, r)\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.radius) this._radius = data.radius\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n}\r\n\r\nexport default SphereGeometryBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/spheregeometry-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 576,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/spheregeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/spheregeometry-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/spheregeometry-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 577,
    "kind": "class",
    "name": "SphereGeometryBuffer",
    "memberof": "src/buffer/spheregeometry-buffer.js",
    "static": true,
    "longname": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/spheregeometry-buffer.js",
    "importStyle": "SphereGeometryBuffer",
    "description": "Sphere geometry buffer.",
    "examples": [
      "var sphereGeometryBuffer = new SphereGeometryBuffer({\n  position: new Float32Array([ 0, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 578,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 579,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 580,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 581,
    "kind": "member",
    "name": "_radius",
    "memberof": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer",
    "static": false,
    "longname": "src/buffer/spheregeometry-buffer.js~SphereGeometryBuffer#_radius",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 582,
    "kind": "file",
    "name": "src/buffer/sphereimpostor-buffer.js",
    "content": "/**\r\n * @file Sphere Impostor Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/SphereImpostor.vert'\r\nimport '../shader/SphereImpostor.frag'\r\n\r\nimport MappedQuadBuffer from './mappedquad-buffer.js'\r\n\r\n/**\r\n * Sphere impostor buffer.\r\n *\r\n * @example\r\n * var sphereImpostorBuffer = new SphereImpostorBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ])\r\n * });\r\n */\r\nclass SphereImpostorBuffer extends MappedQuadBuffer {\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position - positions\r\n   * @param  {Float32Array} data.color - colors\r\n   * @param  {Float32Array} data.radius - radii\r\n   * @param {Picker} [data.picking] - picking ids\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    super(data, params)\r\n\r\n    this.addUniforms({\r\n      'projectionMatrixInverse': { value: new Matrix4() },\r\n      'ortho': { value: 0.0 }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'radius': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n\r\n  get isImpostor () { return true }\r\n  get vertexShader () { return 'SphereImpostor.vert' }\r\n  get fragmentShader () { return 'SphereImpostor.frag' }\r\n}\r\n\r\nexport default SphereImpostorBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/sphereimpostor-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 583,
    "kind": "class",
    "name": "SphereImpostorBuffer",
    "memberof": "src/buffer/sphereimpostor-buffer.js",
    "static": true,
    "longname": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/sphereimpostor-buffer.js",
    "importStyle": "SphereImpostorBuffer",
    "description": "Sphere impostor buffer.",
    "examples": [
      "var sphereImpostorBuffer = new SphereImpostorBuffer({\n  position: new Float32Array([ 0, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  radius: new Float32Array([ 1 ])\n});"
    ],
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/buffer/mappedquad-buffer.js~MappedQuadBuffer"
    ]
  },
  {
    "__docId__": 584,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.radius",
        "description": "radii"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 585,
    "kind": "get",
    "name": "isImpostor",
    "memberof": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer#isImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 586,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 587,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/sphereimpostor-buffer.js~SphereImpostorBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 588,
    "kind": "file",
    "name": "src/buffer/surface-buffer.js",
    "content": "/**\r\n * @file Surface Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport MeshBuffer from './mesh-buffer.js'\r\n\r\n/**\r\n * Surface buffer. Like a {@link MeshBuffer}, but with `.isSurface` set to `true`.\r\n */\r\nclass SurfaceBuffer extends MeshBuffer {\r\n  get isSurface () { return true }\r\n}\r\n\r\nexport default SurfaceBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/surface-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 589,
    "kind": "class",
    "name": "SurfaceBuffer",
    "memberof": "src/buffer/surface-buffer.js",
    "static": true,
    "longname": "src/buffer/surface-buffer.js~SurfaceBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/surface-buffer.js",
    "importStyle": "SurfaceBuffer",
    "description": "Surface buffer. Like a {@link MeshBuffer}, but with `.isSurface` set to `true`.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/buffer/mesh-buffer.js~MeshBuffer"
    ]
  },
  {
    "__docId__": 590,
    "kind": "get",
    "name": "isSurface",
    "memberof": "src/buffer/surface-buffer.js~SurfaceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/surface-buffer.js~SurfaceBuffer#isSurface",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 591,
    "kind": "file",
    "name": "src/buffer/tetrahedron-buffer.js",
    "content": "/**\r\n * @file Tetrahedron Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { TetrahedronBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\n/**\r\n * Tetrahedron buffer. Draws tetrahedrons.\r\n *\r\n * @example\r\n * var tetrahedronBuffer = new TetrahedronBuffer({\r\n *   position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\r\n *   size: new Float32Array([ 2, 1.5 ]),\r\n *   heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\r\n *   depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\r\n * })\r\n */\r\nclass TetrahedronBuffer extends GeometryBuffer {\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const geo = new TetrahedronBufferGeometry(1, 0)\r\n\r\n    super(data, p, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    target.fromArray(this._heightAxis, i3)\r\n    up.fromArray(this._depthAxis, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    scale.set(this._size[ i ], up.length(), target.length())\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.size) this._size = data.size\r\n    if (data.heightAxis) this._heightAxis = data.heightAxis\r\n    if (data.depthAxis) this._depthAxis = data.depthAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nBufferRegistry.add('tetrahedron', TetrahedronBuffer)\r\n\r\nexport default TetrahedronBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/tetrahedron-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 592,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/tetrahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/tetrahedron-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tetrahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 593,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/tetrahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/tetrahedron-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tetrahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 594,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/tetrahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/tetrahedron-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tetrahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 595,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/tetrahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/tetrahedron-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tetrahedron-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 596,
    "kind": "class",
    "name": "TetrahedronBuffer",
    "memberof": "src/buffer/tetrahedron-buffer.js",
    "static": true,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/tetrahedron-buffer.js",
    "importStyle": "TetrahedronBuffer",
    "description": "Tetrahedron buffer. Draws tetrahedrons.",
    "examples": [
      "var tetrahedronBuffer = new TetrahedronBuffer({\n  position: new Float32Array([ 0, 3, 0, -2, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 1, 0, 1, 0 ]),\n  size: new Float32Array([ 2, 1.5 ]),\n  heightAxis: new Float32Array([ 0, 1, 1, 0, 2, 0 ]),\n  depthAxis: new Float32Array([ 1, 0, 1, 0, 0, 2 ])\n})"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 597,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 598,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 599,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "_size",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#_size",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 601,
    "kind": "member",
    "name": "_heightAxis",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#_heightAxis",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "_depthAxis",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#_depthAxis",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 603,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tetrahedron-buffer.js~TetrahedronBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 604,
    "kind": "file",
    "name": "src/buffer/text-buffer.js",
    "content": "/**\r\n * @file Text Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, CanvasTexture } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/SDFFont.vert'\r\nimport '../shader/SDFFont.frag'\r\n\r\nimport { Browser, BufferRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport MappedQuadBuffer from './mappedquad-buffer.js'\r\nimport { IgnorePicker } from '../utils/picker.js'\r\n\r\nconst TextAtlasCache = {}\r\n\r\nfunction getTextAtlas (params) {\r\n  const hash = JSON.stringify(params)\r\n  if (TextAtlasCache[ hash ] === undefined) {\r\n    TextAtlasCache[ hash ] = new TextAtlas(params)\r\n  }\r\n  return TextAtlasCache[ hash ]\r\n}\r\n\r\nclass TextAtlas {\r\n  constructor (params) {\r\n        // adapted from https://github.com/unconed/mathbox\r\n        // MIT License Copyright (C) 2013+ Steven Wittens and contributors\r\n\r\n    const p = Object.assign({}, params)\r\n\r\n    this.font = defaults(p.font, [ 'sans-serif' ])\r\n    this.size = defaults(p.size, 36)\r\n    this.style = defaults(p.style, 'normal')\r\n    this.variant = defaults(p.variant, 'normal')\r\n    this.weight = defaults(p.weight, 'normal')\r\n    this.outline = defaults(p.outline, 0)\r\n    this.width = defaults(p.width, 2048)\r\n    this.height = defaults(p.height, 2048)\r\n\r\n    this.gamma = 1\r\n    if (typeof navigator !== 'undefined') {\r\n      const ua = navigator.userAgent\r\n      if (ua.match(/Chrome/) && ua.match(/OS X/)) {\r\n        this.gamma = 0.5\r\n      }\r\n    }\r\n\r\n    this.mapped = {}\r\n    this.scratchW = 0\r\n    this.scratchH = 0\r\n    this.currentX = 0\r\n    this.currentY = 0\r\n\r\n    this.build()\r\n    this.populate()\r\n\r\n    this.texture = new CanvasTexture(this.canvas2)\r\n    this.texture.flipY = false\r\n    this.texture.needsUpdate = true\r\n  }\r\n\r\n  build () {\r\n        // Prepare line-height with room for outline and descenders/ascenders\r\n    const lineHeight = this.size + 2 * this.outline + Math.round(this.size / 4)\r\n    const maxWidth = this.width / 4\r\n\r\n        // Prepare scratch canvas\r\n    const canvas = document.createElement('canvas')\r\n    canvas.width = maxWidth\r\n    canvas.height = lineHeight\r\n\r\n    const ctx = canvas.getContext('2d')\r\n    ctx.font = this.style + ' ' + this.variant + ' ' + this.weight + ' ' + this.size + 'px ' + this.font\r\n    ctx.fillStyle = '#FF0000'\r\n    ctx.textAlign = 'left'\r\n    ctx.textBaseline = 'bottom'\r\n    ctx.lineJoin = 'round'\r\n\r\n    const colors = []\r\n    const dilate = this.outline * 3\r\n    for (let i = 0; i < dilate; ++i) {\r\n            // 8 rgb levels = 1 step = .5 pixel increase\r\n      const val = Math.max(0, -i * 8 + 128 - (!i) * 8)\r\n      const hex = ('00' + val.toString(16)).slice(-2)\r\n      colors.push('#' + hex + hex + hex)\r\n    }\r\n    const scratch = new Uint8Array(maxWidth * lineHeight * 2)\r\n\r\n    this.canvas = canvas\r\n    this.context = ctx\r\n    this.lineHeight = lineHeight\r\n    this.maxWidth = maxWidth\r\n    this.colors = colors\r\n    this.scratch = scratch\r\n\r\n    this.data = new Uint8Array(this.width * this.height * 4)\r\n\r\n    this.canvas2 = document.createElement('canvas')\r\n    this.canvas2.width = this.width\r\n    this.canvas2.height = this.height\r\n    this.context2 = this.canvas2.getContext('2d')\r\n  }\r\n\r\n  map (text) {\r\n    if (this.mapped[ text ] === undefined) {\r\n      this.draw(text)\r\n\r\n      if (this.currentX + this.scratchW > this.width) {\r\n        this.currentX = 0\r\n        this.currentY += this.scratchH\r\n      }\r\n      if (this.currentY + this.scratchH > this.height) {\r\n        console.warn('canvas to small')\r\n      }\r\n\r\n      this.mapped[ text ] = {\r\n        x: this.currentX,\r\n        y: this.currentY,\r\n        w: this.scratchW,\r\n        h: this.scratchH\r\n      }\r\n\r\n      this.context2.drawImage(\r\n                this.canvas,\r\n                0, 0,\r\n                this.scratchW, this.scratchH,\r\n                this.currentX, this.currentY,\r\n                this.scratchW, this.scratchH\r\n            )\r\n\r\n      this.currentX += this.scratchW\r\n    }\r\n\r\n    return this.mapped[ text ]\r\n  }\r\n\r\n  get (text) {\r\n    return this.mapped[ text ] || this.placeholder\r\n  }\r\n\r\n  draw (text) {\r\n    const h = this.lineHeight\r\n    const o = this.outline\r\n    const ctx = this.context\r\n    const dst = this.scratch\r\n    const max = this.maxWidth\r\n    const colors = this.colors\r\n\r\n        // Bottom aligned, take outline into account\r\n    const x = o\r\n    const y = h - this.outline\r\n\r\n        // Measure text\r\n    const m = ctx.measureText(text)\r\n    const w = Math.min(max, Math.ceil(m.width + 2 * x + 1))\r\n\r\n        // Clear scratch area\r\n    ctx.clearRect(0, 0, w, h)\r\n\r\n    let i, il, j, imageData, data\r\n\r\n    if (this.outline === 0) {\r\n      ctx.fillText(text, x, y)\r\n      imageData = ctx.getImageData(0, 0, w, h)\r\n      data = imageData.data\r\n\r\n      j = 3  // Skip to alpha channel\r\n      for (i = 0, il = data.length / 4; i < il; ++i) {\r\n        dst[ i ] = data[ j ]\r\n        j += 4\r\n      }\r\n    } else {\r\n      ctx.globalCompositeOperation = 'source-over'\r\n            // Draw strokes of decreasing width to create\r\n            // nested outlines (absolute distance)\r\n      for (i = o + 1; i > 0; --i) {\r\n                // Eliminate odd strokes once past > 1px,\r\n                // don't need the detail\r\n        j = i > 1 ? i * 2 - 2 : i\r\n        ctx.strokeStyle = colors[ j - 1 ]\r\n        ctx.lineWidth = j\r\n        ctx.strokeText(text, x, y)\r\n      }\r\n      ctx.globalCompositeOperation = 'multiply'\r\n      ctx.fillStyle = '#FF00FF'\r\n      ctx.fillText(text, x, y)\r\n      imageData = ctx.getImageData(0, 0, w, h)\r\n      data = imageData.data\r\n\r\n      j = 0\r\n      const gamma = this.gamma\r\n      for (i = 0, il = data.length / 4; i < il; ++i) {\r\n                // Get value + mask\r\n        const a = data[ j ]\r\n        let mask = a ? data[ j + 1 ] / a : 1\r\n        if (gamma === 0.5) {\r\n          mask = Math.sqrt(mask)\r\n        }\r\n        mask = Math.min(1, Math.max(0, mask))\r\n\r\n                // Blend between positive/outside and negative/inside\r\n        const b = 256 - a\r\n        const c = b + (a - b) * mask\r\n\r\n                // Clamp (slight expansion to hide errors around the transition)\r\n        dst[ i ] = Math.max(0, Math.min(255, c + 2))\r\n        data[ j + 3 ] = dst[ i ]\r\n        j += 4\r\n      }\r\n    }\r\n\r\n    ctx.putImageData(imageData, 0, 0)\r\n    this.scratchW = w\r\n    this.scratchH = h\r\n  }\r\n\r\n  populate () {\r\n        // Replacement Character\r\n    this.placeholder = this.map(String.fromCharCode(0xFFFD))\r\n\r\n        // Basic Latin\r\n    for (let i = 0x0000; i < 0x007F; ++i) {\r\n      this.map(String.fromCharCode(i))\r\n    }\r\n\r\n        // Latin-1 Supplement\r\n    for (let i = 0x0080; i < 0x00FF; ++i) {\r\n      this.map(String.fromCharCode(i))\r\n    }\r\n\r\n        // Greek and Coptic\r\n    for (let i = 0x0370; i < 0x03FF; ++i) {\r\n      this.map(String.fromCharCode(i))\r\n    }\r\n\r\n        // Cyrillic\r\n    for (let i = 0x0400; i < 0x04FF; ++i) {\r\n      this.map(String.fromCharCode(i))\r\n    }\r\n\r\n        // Angstrom Sign\r\n    this.map(String.fromCharCode(0x212B))\r\n  }\r\n}\r\n\r\n/**\r\n * Text buffer parameter object.\r\n * @typedef {Object} TextBufferParameters - text buffer parameters\r\n *\r\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {String} labelType - type of the label, one of:\r\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\r\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\r\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\r\n *                                 `labelText` list is used.\r\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\r\n *                                   to take effect\r\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\r\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\r\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\r\n * @property {Boolean} sdf - use \"signed distance field\"-based rendering for sharper edges\r\n * @property {Float} xOffset - offset in x-direction\r\n * @property {Float} yOffset - offset in y-direction\r\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\r\n * @property {String} attachment - attachment of the label, one of:\r\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\r\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\r\n *                                 \"top-left\", \"top-center\", \"top-right\"\r\n * @property {Boolean} showBorder - show border/outline\r\n * @property {Color} borderColor - color of the border/outline\r\n * @property {Float} borderWidth - width of the border/outline\r\n * @property {Boolean} showBackground - show background rectangle\r\n * @property {Color} backgroundColor - color of the background\r\n * @property {Float} backgroundMargin - width of the background\r\n * @property {Float} backgroundOpacity - opacity of the background\r\n */\r\n\r\n/**\r\n * Text buffer. Renders screen-aligned text strings.\r\n *\r\n * @example\r\n * var textBuffer = new TextBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     size: new Float32Array( [ 2 ] ),\r\n *     text: [ \"Hello\" ]\r\n * } );\r\n */\r\nclass TextBuffer extends MappedQuadBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {String[]} data.text - text strings\r\n     * @param  {TextBufferParameters} params - parameters object\r\n     */\r\n  constructor (data, params) {\r\n    var d = data || {}\r\n    var p = params || {}\r\n\r\n    p.forceTransparent = true\r\n\r\n    var n = d.position.length / 3\r\n    var charCount = 0\r\n    for (var i = 0; i < n; ++i) {\r\n      charCount += d.text[ i ].length\r\n    }\r\n\r\n    var count = charCount\r\n    if (p.showBackground) count += n\r\n\r\n    super({\r\n      position: new Float32Array(count * 3),\r\n      color: new Float32Array(count * 3),\r\n      picking: new IgnorePicker()\r\n    }, p)\r\n\r\n    this.fontFamily = defaults(p.fontFamily, 'sans-serif')\r\n    this.fontStyle = defaults(p.fontStyle, 'normal')\r\n    this.fontWeight = defaults(p.fontWeight, 'bold')\r\n    this.fontSize = defaults(p.fontSize, 48)\r\n    this.sdf = defaults(p.sdf, Browser === 'Chrome')\r\n    this.xOffset = defaults(p.xOffset, 0.0)\r\n    this.yOffset = defaults(p.yOffset, 0.0)\r\n    this.zOffset = defaults(p.zOffset, 0.5)\r\n    this.attachment = defaults(p.attachment, 'bottom-left')\r\n    this.showBorder = defaults(p.showBorder, false)\r\n    this.borderColor = defaults(p.borderColor, 'lightgrey')\r\n    this.borderWidth = defaults(p.borderWidth, 0.15)\r\n    this.showBackground = defaults(p.showBackground, false)\r\n    this.backgroundColor = defaults(p.backgroundColor, 'lightgrey')\r\n    this.backgroundMargin = defaults(p.backgroundMargin, 0.5)\r\n    this.backgroundOpacity = defaults(p.backgroundOpacity, 1.0)\r\n\r\n    this.text = d.text\r\n    this.positionCount = n\r\n\r\n    this.addUniforms({\r\n      'fontTexture': { value: null },\r\n      'xOffset': { value: this.xOffset },\r\n      'yOffset': { value: this.yOffset },\r\n      'zOffset': { value: this.zOffset },\r\n      'ortho': { value: false },\r\n      'showBorder': { value: this.showBorder },\r\n      'borderColor': { value: new Color(this.borderColor) },\r\n      'borderWidth': { value: this.borderWidth },\r\n      'backgroundColor': { value: new Color(this.backgroundColor) },\r\n      'backgroundOpacity': { value: this.backgroundOpacity }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'inputTexCoord': { type: 'v2', value: null },\r\n      'inputSize': { type: 'f', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n\r\n    this.makeTexture()\r\n    this.makeMapping()\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      fontFamily: { uniform: true },\r\n      fontStyle: { uniform: true },\r\n      fontWeight: { uniform: true },\r\n      fontSize: { uniform: true },\r\n      sdf: { updateShader: true, uniform: true },\r\n      xOffset: { uniform: true },\r\n      yOffset: { uniform: true },\r\n      zOffset: { uniform: true },\r\n      showBorder: { uniform: true },\r\n      borderColor: { uniform: true },\r\n      borderWidth: { uniform: true },\r\n      backgroundColor: { uniform: true },\r\n      backgroundOpacity: { uniform: true }\r\n\r\n    }, super.parameters, {\r\n\r\n      flatShaded: undefined\r\n\r\n    })\r\n  }\r\n\r\n  makeMaterial () {\r\n    super.makeMaterial()\r\n\r\n    const tex = this.texture\r\n\r\n    const m = this.material\r\n    m.extensions.derivatives = true\r\n    m.lights = false\r\n    m.uniforms.fontTexture.value = tex\r\n    m.needsUpdate = true\r\n\r\n    const wm = this.wireframeMaterial\r\n    wm.extensions.derivatives = true\r\n    wm.lights = false\r\n    wm.uniforms.fontTexture.value = tex\r\n    wm.needsUpdate = true\r\n\r\n    const pm = this.pickingMaterial\r\n    pm.extensions.derivatives = true\r\n    pm.lights = false\r\n    pm.uniforms.fontTexture.value = tex\r\n    pm.needsUpdate = true\r\n  }\r\n\r\n  setAttributes (data) {\r\n    let position, size, color\r\n    let aPosition, inputSize, aColor\r\n\r\n    const text = this.text\r\n    const attributes = this.geometry.attributes\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.size) {\r\n      size = data.size\r\n      inputSize = attributes.inputSize.array\r\n      attributes.inputSize.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      aColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    const n = this.positionCount\r\n\r\n    let j, o\r\n    let iCharAll = 0\r\n    let txt, iChar, nChar\r\n\r\n    for (let v = 0; v < n; ++v) {\r\n      o = 3 * v\r\n      txt = text[ v ]\r\n      nChar = txt.length\r\n      if (this.showBackground) nChar += 1\r\n\r\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n        for (let m = 0; m < 4; m++) {\r\n          j = iCharAll * 4 * 3 + (3 * m)\r\n\r\n          if (position) {\r\n            aPosition[ j ] = position[ o ]\r\n            aPosition[ j + 1 ] = position[ o + 1 ]\r\n            aPosition[ j + 2 ] = position[ o + 2 ]\r\n          }\r\n\r\n          if (size) {\r\n            inputSize[ (iCharAll * 4) + m ] = size[ v ]\r\n          }\r\n\r\n          if (color) {\r\n            aColor[ j ] = color[ o ]\r\n            aColor[ j + 1 ] = color[ o + 1 ]\r\n            aColor[ j + 2 ] = color[ o + 2 ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  makeTexture () {\r\n    this.textAtlas = getTextAtlas({\r\n      font: [ this.fontFamily ],\r\n      style: this.fontStyle,\r\n      weight: this.fontWeight,\r\n      size: this.fontSize,\r\n      outline: this.sdf ? 5 : 0\r\n    })\r\n\r\n    this.texture = this.textAtlas.texture\r\n  }\r\n\r\n  makeMapping () {\r\n    const ta = this.textAtlas\r\n    const text = this.text\r\n    const attachment = this.attachment\r\n    const margin = (ta.lineHeight * this.backgroundMargin * 0.1) - 10\r\n\r\n    const inputTexCoord = this.geometry.attributes.inputTexCoord.array\r\n    const inputMapping = this.geometry.attributes.mapping.array\r\n\r\n    const n = this.positionCount\r\n    let iCharAll = 0\r\n    let c, i, txt, xadvance, iChar, nChar, xShift, yShift\r\n\r\n    for (let v = 0; v < n; ++v) {\r\n      txt = text[ v ]\r\n      xadvance = 0\r\n      nChar = txt.length\r\n\r\n            // calculate width\r\n      for (iChar = 0; iChar < nChar; ++iChar) {\r\n        c = ta.get(txt[ iChar ])\r\n        xadvance += c.w - 2 * ta.outline\r\n      }\r\n\r\n            // attachment\r\n      if (attachment.startsWith('top')) {\r\n        yShift = ta.lineHeight / 1.25\r\n      } else if (attachment.startsWith('middle')) {\r\n        yShift = ta.lineHeight / 2.5\r\n      } else {\r\n        yShift = 0  // \"bottom\"\r\n      }\r\n      if (attachment.endsWith('right')) {\r\n        xShift = xadvance\r\n      } else if (attachment.endsWith('center')) {\r\n        xShift = xadvance / 2\r\n      } else {\r\n        xShift = 0  // \"left\"\r\n      }\r\n      xShift += ta.outline\r\n      yShift += ta.outline\r\n\r\n            // background\r\n      if (this.showBackground) {\r\n        i = iCharAll * 2 * 4\r\n        inputMapping[ i + 0 ] = -ta.lineHeight / 6 - xShift - margin  // top left\r\n        inputMapping[ i + 1 ] = ta.lineHeight - yShift + margin\r\n        inputMapping[ i + 2 ] = -ta.lineHeight / 6 - xShift - margin  // bottom left\r\n        inputMapping[ i + 3 ] = 0 - yShift - margin\r\n        inputMapping[ i + 4 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.outline + margin  // top right\r\n        inputMapping[ i + 5 ] = ta.lineHeight - yShift + margin\r\n        inputMapping[ i + 6 ] = xadvance + ta.lineHeight / 6 - xShift + 2 * ta.outline + margin  // bottom right\r\n        inputMapping[ i + 7 ] = 0 - yShift - margin\r\n        inputTexCoord[ i + 0 ] = 10\r\n        inputTexCoord[ i + 2 ] = 10\r\n        inputTexCoord[ i + 4 ] = 10\r\n        inputTexCoord[ i + 6 ] = 10\r\n        iCharAll += 1\r\n      }\r\n\r\n      xadvance = 0\r\n\r\n      for (iChar = 0; iChar < nChar; ++iChar, ++iCharAll) {\r\n        c = ta.get(txt[ iChar ])\r\n        i = iCharAll * 2 * 4\r\n\r\n        inputMapping[ i + 0 ] = xadvance - xShift  // top left\r\n        inputMapping[ i + 1 ] = c.h - yShift\r\n        inputMapping[ i + 2 ] = xadvance - xShift  // bottom left\r\n        inputMapping[ i + 3 ] = 0 - yShift\r\n        inputMapping[ i + 4 ] = xadvance + c.w - xShift  // top right\r\n        inputMapping[ i + 5 ] = c.h - yShift\r\n        inputMapping[ i + 6 ] = xadvance + c.w - xShift  // bottom right\r\n        inputMapping[ i + 7 ] = 0 - yShift\r\n\r\n        const texWidth = ta.width\r\n        const texHeight = ta.height\r\n\r\n        const texCoords = [\r\n          c.x / texWidth, c.y / texHeight,             // top left\r\n          c.x / texWidth, (c.y + c.h) / texHeight,       // bottom left\r\n          (c.x + c.w) / texWidth, c.y / texHeight,       // top right\r\n          (c.x + c.w) / texWidth, (c.y + c.h) / texHeight  // bottom right\r\n        ]\r\n        inputTexCoord.set(texCoords, i)\r\n\r\n        xadvance += c.w - 2 * ta.outline\r\n      }\r\n    }\r\n\r\n    this.geometry.attributes.inputTexCoord.needsUpdate = true\r\n    this.geometry.attributes.mapping.needsUpdate = true\r\n  }\r\n\r\n  getDefines (type) {\r\n    const defines = super.getDefines(type)\r\n\r\n    if (this.sdf) {\r\n      defines.SDF = 1\r\n    }\r\n\r\n    return defines\r\n  }\r\n\r\n  setUniforms (data) {\r\n    if (data && (\r\n                data.fontFamily !== undefined ||\r\n                data.fontStyle !== undefined ||\r\n                data.fontWeight !== undefined ||\r\n                data.fontSize !== undefined ||\r\n                data.sdf !== undefined\r\n            )\r\n        ) {\r\n      this.makeTexture()\r\n      this.makeMapping()\r\n      this.texture.needsUpdate = true\r\n      data.fontTexture = this.texture\r\n    }\r\n\r\n    super.setUniforms(data)\r\n  }\r\n\r\n  set wireframe (value) {}\r\n  get wireframe () { return false }\r\n\r\n  get isText () { return true }\r\n  get vertexShader () { return 'SDFFont.vert' }\r\n  get fragmentShader () { return 'SDFFont.frag' }\r\n}\r\n\r\nBufferRegistry.add('text', TextBuffer)\r\n\r\nexport default TextBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/text-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 605,
    "kind": "variable",
    "name": "TextAtlasCache",
    "memberof": "src/buffer/text-buffer.js",
    "static": true,
    "longname": "src/buffer/text-buffer.js~TextAtlasCache",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/text-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 606,
    "kind": "function",
    "name": "getTextAtlas",
    "memberof": "src/buffer/text-buffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/buffer/text-buffer.js~getTextAtlas",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/text-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 607,
    "kind": "class",
    "name": "TextAtlas",
    "memberof": "src/buffer/text-buffer.js",
    "static": true,
    "longname": "src/buffer/text-buffer.js~TextAtlas",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/text-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 608,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 609,
    "kind": "member",
    "name": "font",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#font",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 610,
    "kind": "member",
    "name": "size",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#size",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 611,
    "kind": "member",
    "name": "style",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#style",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 612,
    "kind": "member",
    "name": "variant",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#variant",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 613,
    "kind": "member",
    "name": "weight",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#weight",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 614,
    "kind": "member",
    "name": "outline",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#outline",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 615,
    "kind": "member",
    "name": "width",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#width",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 616,
    "kind": "member",
    "name": "height",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#height",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 617,
    "kind": "member",
    "name": "gamma",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#gamma",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 619,
    "kind": "member",
    "name": "mapped",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#mapped",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 620,
    "kind": "member",
    "name": "scratchW",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#scratchW",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 621,
    "kind": "member",
    "name": "scratchH",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#scratchH",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 622,
    "kind": "member",
    "name": "currentX",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#currentX",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 623,
    "kind": "member",
    "name": "currentY",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#currentY",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 624,
    "kind": "member",
    "name": "texture",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#texture",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 625,
    "kind": "method",
    "name": "build",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#build",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 626,
    "kind": "member",
    "name": "canvas",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#canvas",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 627,
    "kind": "member",
    "name": "context",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#context",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 628,
    "kind": "member",
    "name": "lineHeight",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#lineHeight",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 629,
    "kind": "member",
    "name": "maxWidth",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#maxWidth",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 630,
    "kind": "member",
    "name": "colors",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#colors",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 631,
    "kind": "member",
    "name": "scratch",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#scratch",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 632,
    "kind": "member",
    "name": "data",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#data",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 633,
    "kind": "member",
    "name": "canvas2",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#canvas2",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 634,
    "kind": "member",
    "name": "context2",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#context2",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true
  },
  {
    "__docId__": 635,
    "kind": "method",
    "name": "map",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#map",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 639,
    "kind": "method",
    "name": "get",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#get",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 640,
    "kind": "method",
    "name": "draw",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#draw",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 643,
    "kind": "method",
    "name": "populate",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#populate",
    "access": "public",
    "description": null,
    "lineNumber": 220,
    "undocument": true
  },
  {
    "__docId__": 644,
    "kind": "member",
    "name": "placeholder",
    "memberof": "src/buffer/text-buffer.js~TextAtlas",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextAtlas#placeholder",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "undocument": true
  },
  {
    "__docId__": 645,
    "kind": "typedef",
    "name": "TextBufferParameters",
    "memberof": "src/buffer/text-buffer.js",
    "static": true,
    "longname": "src/buffer/text-buffer.js~TextBufferParameters",
    "access": "public",
    "description": "Text buffer parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "translucency: 1 is fully opaque, 0 is fully transparent"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "clipNear",
        "description": "position of camera near/front clipping plane\n                               in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "labelType",
        "description": "type of the label, one of:\n                                \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\n                                \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\n                                \"res\", \"text\", \"qualified\". When set to \"text\", the\n                                `labelText` list is used."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "labelText",
        "description": "list of label strings, must set `labelType` to \"text\"\n                                  to take effect"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontFamily",
        "description": "font family, one of: \"sans-serif\", \"monospace\", \"serif\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontStyle",
        "description": "font style, \"normal\" or \"italic\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontWeight",
        "description": "font weight, \"normal\" or \"bold\""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "use \"signed distance field\"-based rendering for sharper edges"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "xOffset",
        "description": "offset in x-direction"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "yOffset",
        "description": "offset in y-direction"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "zOffset",
        "description": "offset in z-direction (i.e. in camera direction)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "attachment",
        "description": "attachment of the label, one of:\n                                \"bottom-left\", \"bottom-center\", \"bottom-right\",\n                                \"middle-left\", \"middle-center\", \"middle-right\",\n                                \"top-left\", \"top-center\", \"top-right\""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "showBorder",
        "description": "show border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "borderColor",
        "description": "color of the border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "borderWidth",
        "description": "width of the border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "showBackground",
        "description": "show background rectangle"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundColor",
        "description": "color of the background"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundMargin",
        "description": "width of the background"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundOpacity",
        "description": "opacity of the background"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TextBufferParameters"
    }
  },
  {
    "__docId__": 646,
    "kind": "class",
    "name": "TextBuffer",
    "memberof": "src/buffer/text-buffer.js",
    "static": true,
    "longname": "src/buffer/text-buffer.js~TextBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/text-buffer.js",
    "importStyle": "TextBuffer",
    "description": "Text buffer. Renders screen-aligned text strings.",
    "examples": [
      "var textBuffer = new TextBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    size: new Float32Array( [ 2 ] ),\n    text: [ \"Hello\" ]\n} );"
    ],
    "lineNumber": 294,
    "interface": false,
    "extends": [
      "src/buffer/mappedquad-buffer.js~MappedQuadBuffer"
    ]
  },
  {
    "__docId__": 647,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 303,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.size",
        "description": "sizes"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "data.text",
        "description": "text strings"
      },
      {
        "nullable": null,
        "types": [
          "TextBufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 648,
    "kind": "member",
    "name": "fontFamily",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#fontFamily",
    "access": "public",
    "description": null,
    "lineNumber": 324,
    "undocument": true
  },
  {
    "__docId__": 649,
    "kind": "member",
    "name": "fontStyle",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#fontStyle",
    "access": "public",
    "description": null,
    "lineNumber": 325,
    "undocument": true
  },
  {
    "__docId__": 650,
    "kind": "member",
    "name": "fontWeight",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#fontWeight",
    "access": "public",
    "description": null,
    "lineNumber": 326,
    "undocument": true
  },
  {
    "__docId__": 651,
    "kind": "member",
    "name": "fontSize",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#fontSize",
    "access": "public",
    "description": null,
    "lineNumber": 327,
    "undocument": true
  },
  {
    "__docId__": 652,
    "kind": "member",
    "name": "sdf",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#sdf",
    "access": "public",
    "description": null,
    "lineNumber": 328,
    "undocument": true
  },
  {
    "__docId__": 653,
    "kind": "member",
    "name": "xOffset",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#xOffset",
    "access": "public",
    "description": null,
    "lineNumber": 329,
    "undocument": true
  },
  {
    "__docId__": 654,
    "kind": "member",
    "name": "yOffset",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#yOffset",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true
  },
  {
    "__docId__": 655,
    "kind": "member",
    "name": "zOffset",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#zOffset",
    "access": "public",
    "description": null,
    "lineNumber": 331,
    "undocument": true
  },
  {
    "__docId__": 656,
    "kind": "member",
    "name": "attachment",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#attachment",
    "access": "public",
    "description": null,
    "lineNumber": 332,
    "undocument": true
  },
  {
    "__docId__": 657,
    "kind": "member",
    "name": "showBorder",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#showBorder",
    "access": "public",
    "description": null,
    "lineNumber": 333,
    "undocument": true
  },
  {
    "__docId__": 658,
    "kind": "member",
    "name": "borderColor",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#borderColor",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true
  },
  {
    "__docId__": 659,
    "kind": "member",
    "name": "borderWidth",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#borderWidth",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true
  },
  {
    "__docId__": 660,
    "kind": "member",
    "name": "showBackground",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#showBackground",
    "access": "public",
    "description": null,
    "lineNumber": 336,
    "undocument": true
  },
  {
    "__docId__": 661,
    "kind": "member",
    "name": "backgroundColor",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#backgroundColor",
    "access": "public",
    "description": null,
    "lineNumber": 337,
    "undocument": true
  },
  {
    "__docId__": 662,
    "kind": "member",
    "name": "backgroundMargin",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#backgroundMargin",
    "access": "public",
    "description": null,
    "lineNumber": 338,
    "undocument": true
  },
  {
    "__docId__": 663,
    "kind": "member",
    "name": "backgroundOpacity",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#backgroundOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 339,
    "undocument": true
  },
  {
    "__docId__": 664,
    "kind": "member",
    "name": "text",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#text",
    "access": "public",
    "description": null,
    "lineNumber": 341,
    "undocument": true
  },
  {
    "__docId__": 665,
    "kind": "member",
    "name": "positionCount",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#positionCount",
    "access": "public",
    "description": null,
    "lineNumber": 342,
    "undocument": true
  },
  {
    "__docId__": 666,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 368,
    "undocument": true
  },
  {
    "__docId__": 667,
    "kind": "method",
    "name": "makeMaterial",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#makeMaterial",
    "access": "public",
    "description": null,
    "lineNumber": 392,
    "undocument": true
  },
  {
    "__docId__": 668,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 416,
    "undocument": true
  },
  {
    "__docId__": 669,
    "kind": "method",
    "name": "makeTexture",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#makeTexture",
    "access": "public",
    "description": null,
    "lineNumber": 477,
    "undocument": true
  },
  {
    "__docId__": 670,
    "kind": "member",
    "name": "textAtlas",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#textAtlas",
    "access": "public",
    "description": null,
    "lineNumber": 478,
    "undocument": true
  },
  {
    "__docId__": 671,
    "kind": "member",
    "name": "texture",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#texture",
    "access": "public",
    "description": null,
    "lineNumber": 486,
    "undocument": true
  },
  {
    "__docId__": 672,
    "kind": "method",
    "name": "makeMapping",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#makeMapping",
    "access": "public",
    "description": null,
    "lineNumber": 489,
    "undocument": true
  },
  {
    "__docId__": 673,
    "kind": "method",
    "name": "getDefines",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#getDefines",
    "access": "public",
    "description": null,
    "lineNumber": 583,
    "undocument": true
  },
  {
    "__docId__": 674,
    "kind": "method",
    "name": "setUniforms",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#setUniforms",
    "access": "public",
    "description": null,
    "lineNumber": 593,
    "undocument": true
  },
  {
    "__docId__": 675,
    "kind": "set",
    "name": "wireframe",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 611,
    "undocument": true
  },
  {
    "__docId__": 676,
    "kind": "get",
    "name": "wireframe",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 612,
    "undocument": true
  },
  {
    "__docId__": 677,
    "kind": "get",
    "name": "isText",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#isText",
    "access": "public",
    "description": null,
    "lineNumber": 614,
    "undocument": true
  },
  {
    "__docId__": 678,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 615,
    "undocument": true
  },
  {
    "__docId__": 679,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/text-buffer.js~TextBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/text-buffer.js~TextBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 616,
    "undocument": true
  },
  {
    "__docId__": 680,
    "kind": "file",
    "name": "src/buffer/torus-buffer.js",
    "content": "/**\r\n * @file Tetrahedron Geometry Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { TorusBufferGeometry, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport GeometryBuffer from './geometry-buffer.js'\r\n\r\nconst scale = new Vector3()\r\nconst target = new Vector3()\r\nconst up = new Vector3()\r\nconst eye = new Vector3(0, 0, 0)\r\n\r\n/**\r\n * Torus geometry buffer. Draws torii.\r\n *\r\n * @example\r\n * var torusBuffer = new TorusBuffer({\r\n *   position: new Float32Array([ 0, 0, 0 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   radius: new Float32Array([ 1 ]),\r\n *   majorAxis: new Float32Array([ 1, 1, 0 ]),\r\n *   minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\r\n * });\r\n */\r\nclass TorusBuffer extends GeometryBuffer {\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    const radiusRatio = defaults(p.radiusRatio, 0.2)\r\n    const radialSegments = defaults(p.radialSegments, 16)\r\n    const tubularSegments = defaults(p.tubularSegments, 32)\r\n    const geo = new TorusBufferGeometry(\r\n      1, radiusRatio, radialSegments, tubularSegments\r\n    )\r\n\r\n    super(data, params, geo)\r\n\r\n    this.setAttributes(data, true)\r\n  }\r\n\r\n  applyPositionTransform (matrix, i, i3) {\r\n    target.fromArray(this._majorAxis, i3)\r\n    up.fromArray(this._minorAxis, i3)\r\n    matrix.lookAt(eye, target, up)\r\n\r\n    const r = this._radius[ i ]\r\n    scale.set(r, r, r)\r\n    matrix.scale(scale)\r\n  }\r\n\r\n  setAttributes (data, initNormals) {\r\n    if (data.radius) this._radius = data.radius\r\n    if (data.majorAxis) this._majorAxis = data.majorAxis\r\n    if (data.minorAxis) this._minorAxis = data.minorAxis\r\n\r\n    super.setAttributes(data, initNormals)\r\n  }\r\n\r\n  get updateNormals () { return true }\r\n}\r\n\r\nBufferRegistry.add('torus', TorusBuffer)\r\n\r\nexport default TorusBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/torus-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 681,
    "kind": "variable",
    "name": "scale",
    "memberof": "src/buffer/torus-buffer.js",
    "static": true,
    "longname": "src/buffer/torus-buffer.js~scale",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/torus-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 682,
    "kind": "variable",
    "name": "target",
    "memberof": "src/buffer/torus-buffer.js",
    "static": true,
    "longname": "src/buffer/torus-buffer.js~target",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/torus-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 683,
    "kind": "variable",
    "name": "up",
    "memberof": "src/buffer/torus-buffer.js",
    "static": true,
    "longname": "src/buffer/torus-buffer.js~up",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/torus-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 684,
    "kind": "variable",
    "name": "eye",
    "memberof": "src/buffer/torus-buffer.js",
    "static": true,
    "longname": "src/buffer/torus-buffer.js~eye",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/torus-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 685,
    "kind": "class",
    "name": "TorusBuffer",
    "memberof": "src/buffer/torus-buffer.js",
    "static": true,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/torus-buffer.js",
    "importStyle": "TorusBuffer",
    "description": "Torus geometry buffer. Draws torii.",
    "examples": [
      "var torusBuffer = new TorusBuffer({\n  position: new Float32Array([ 0, 0, 0 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  radius: new Float32Array([ 1 ]),\n  majorAxis: new Float32Array([ 1, 1, 0 ]),\n  minorAxis: new Float32Array([ 0.5, 0, 0.5 ]),\n});"
    ],
    "lineNumber": 30,
    "interface": false,
    "extends": [
      "src/buffer/geometry-buffer.js~GeometryBuffer"
    ]
  },
  {
    "__docId__": 686,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 687,
    "kind": "method",
    "name": "applyPositionTransform",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#applyPositionTransform",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 688,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 689,
    "kind": "member",
    "name": "_radius",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#_radius",
    "access": "private",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 690,
    "kind": "member",
    "name": "_majorAxis",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#_majorAxis",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 691,
    "kind": "member",
    "name": "_minorAxis",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#_minorAxis",
    "access": "private",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 692,
    "kind": "get",
    "name": "updateNormals",
    "memberof": "src/buffer/torus-buffer.js~TorusBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/torus-buffer.js~TorusBuffer#updateNormals",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 693,
    "kind": "file",
    "name": "src/buffer/trace-buffer.js",
    "content": "/**\r\n * @file Trace Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport { Log } from '../globals.js'\r\nimport Buffer from './buffer.js'\r\n\r\n/**\r\n * Trace buffer. Draws a series of lines.\r\n */\r\nclass TraceBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var d = data || {}\r\n    var p = params || {}\r\n\r\n    var n = d.position.length / 3\r\n    var n1 = n - 1\r\n\r\n    var linePosition = new Float32Array(n1 * 3 * 2)\r\n    var lineColor = new Float32Array(n1 * 3 * 2)\r\n\r\n    super({\r\n      position: linePosition,\r\n      color: lineColor\r\n    }, p)\r\n\r\n    this.setAttributes(data)\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var position, color\r\n    var linePosition, lineColor\r\n\r\n    var attributes = this.geometry.attributes\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      linePosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      lineColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (!position && !color) {\r\n      Log.warn('TraceBuffer.prototype.setAttributes no data')\r\n      return\r\n    }\r\n\r\n    var v, v2\r\n    var n = this.size\r\n    var n1 = n - 1\r\n\r\n    for (var i = 0; i < n1; ++i) {\r\n      v = 3 * i\r\n      v2 = 3 * i * 2\r\n\r\n      if (position) {\r\n        linePosition[ v2 ] = position[ v ]\r\n        linePosition[ v2 + 1 ] = position[ v + 1 ]\r\n        linePosition[ v2 + 2 ] = position[ v + 2 ]\r\n\r\n        linePosition[ v2 + 3 ] = position[ v + 3 ]\r\n        linePosition[ v2 + 4 ] = position[ v + 4 ]\r\n        linePosition[ v2 + 5 ] = position[ v + 5 ]\r\n      }\r\n\r\n      if (color) {\r\n        lineColor[ v2 ] = color[ v ]\r\n        lineColor[ v2 + 1 ] = color[ v + 1 ]\r\n        lineColor[ v2 + 2 ] = color[ v + 2 ]\r\n\r\n        lineColor[ v2 + 3 ] = color[ v + 3 ]\r\n        lineColor[ v2 + 4 ] = color[ v + 4 ]\r\n        lineColor[ v2 + 5 ] = color[ v + 5 ]\r\n      }\r\n    }\r\n  }\r\n\r\n  get isLine () { return true }\r\n  get vertexShader () { return 'Line.vert' }\r\n  get fragmentShader () { return 'Line.frag' }\r\n}\r\n\r\nexport default TraceBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/trace-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 694,
    "kind": "class",
    "name": "TraceBuffer",
    "memberof": "src/buffer/trace-buffer.js",
    "static": true,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/trace-buffer.js",
    "importStyle": "TraceBuffer",
    "description": "Trace buffer. Draws a series of lines.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 695,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/trace-buffer.js~TraceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 696,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/trace-buffer.js~TraceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 697,
    "kind": "get",
    "name": "isLine",
    "memberof": "src/buffer/trace-buffer.js~TraceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer#isLine",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 698,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/trace-buffer.js~TraceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 699,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/trace-buffer.js~TraceBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/trace-buffer.js~TraceBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 700,
    "kind": "file",
    "name": "src/buffer/tubemesh-buffer.js",
    "content": "/**\r\n * @file Tube Mesh Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults, getUintArray } from '../utils.js'\r\nimport { serialArray } from '../math/array-utils.js'\r\nimport MeshBuffer from './mesh-buffer.js'\r\n\r\nvar vTangent = new Vector3()\r\nvar vMeshNormal = new Vector3()\r\n\r\n/**\r\n * Tube mesh buffer. Draws a tube.\r\n */\r\nclass TubeMeshBuffer extends MeshBuffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.normal - normals\r\n     * @param  {Float32Array} data.binormal - binormals\r\n     * @param  {Float32Array} data.tangent - tangents\r\n     * @param  {Float32Array} data.color - colors\r\n     * @param  {Float32Array} data.size - sizes\r\n     * @param  {Picker} data.picking - picking ids\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var d = data || {}\r\n    var p = params || {}\r\n\r\n    var radialSegments = defaults(p.radialSegments, 4)\r\n    var capped = defaults(p.capped, false)\r\n\r\n    var capVertices = capped ? radialSegments : 0\r\n    var capTriangles = capped ? radialSegments - 2 : 0\r\n\r\n    var n = d.position.length / 3\r\n    var n1 = n - 1\r\n    var x = n * radialSegments * 3 + 2 * capVertices * 3\r\n    var xi = n1 * 2 * radialSegments * 3 + 2 * capTriangles * 3\r\n\r\n    var meshPosition = new Float32Array(x)\r\n    var meshColor = new Float32Array(x)\r\n    var meshNormal = new Float32Array(x)\r\n    var meshIndex = getUintArray(xi, x / 3)\r\n\r\n    super({\r\n      position: meshPosition,\r\n      color: meshColor,\r\n      index: meshIndex,\r\n      normal: meshNormal,\r\n      picking: d.picking\r\n    }, p)\r\n\r\n        //\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 1.0)\r\n    this.radialSegments = radialSegments\r\n    this.capped = capped\r\n\r\n    this.capVertices = capVertices\r\n    this.capTriangles = capTriangles\r\n    this.size2 = n\r\n\r\n    d.primitiveId = serialArray(n)\r\n    this.setAttributes(d)\r\n\r\n    this.meshIndex = meshIndex\r\n    this.makeIndex()\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var aspectRatio = this.aspectRatio\r\n\r\n    var n = this.size2\r\n    var n1 = n - 1\r\n    var radialSegments = this.radialSegments\r\n\r\n    var attributes = this.geometry.attributes\r\n\r\n    var position, normal, binormal, tangent, color, size, primitiveId\r\n    var meshPosition, meshColor, meshNormal, meshPrimitiveId\r\n\r\n    if (data.position) {\r\n      position = data.position\r\n      normal = data.normal\r\n      binormal = data.binormal\r\n      tangent = data.tangent\r\n      size = data.size\r\n\r\n      meshPosition = attributes.position.array\r\n      meshNormal = attributes.normal.array\r\n\r\n      attributes.position.needsUpdate = true\r\n      attributes.normal.needsUpdate = true\r\n    }\r\n\r\n    if (data.color) {\r\n      color = data.color\r\n      meshColor = attributes.color.array\r\n      attributes.color.needsUpdate = true\r\n    }\r\n\r\n    if (data.primitiveId) {\r\n      primitiveId = data.primitiveId\r\n      meshPrimitiveId = attributes.primitiveId.array\r\n      attributes.primitiveId.needsUpdate = true\r\n    }\r\n\r\n    var i, j, k, l, s, t\r\n    var v, cx, cy\r\n    var cx1, cy1, cx2, cy2\r\n    var radius\r\n\r\n    var normX, normY, normZ\r\n    var biX, biY, biZ\r\n    var posX, posY, posZ\r\n\r\n    var cxArr = []\r\n    var cyArr = []\r\n    var cx1Arr = []\r\n    var cy1Arr = []\r\n    var cx2Arr = []\r\n    var cy2Arr = []\r\n\r\n    if (position) {\r\n      for (j = 0; j < radialSegments; ++j) {\r\n        v = (j / radialSegments) * 2 * Math.PI\r\n\r\n        cxArr[ j ] = aspectRatio * Math.cos(v)\r\n        cyArr[ j ] = Math.sin(v)\r\n\r\n        cx1Arr[ j ] = aspectRatio * Math.cos(v - 0.01)\r\n        cy1Arr[ j ] = Math.sin(v - 0.01)\r\n        cx2Arr[ j ] = aspectRatio * Math.cos(v + 0.01)\r\n        cy2Arr[ j ] = Math.sin(v + 0.01)\r\n      }\r\n    }\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      k = i * 3\r\n      l = k * radialSegments\r\n\r\n      if (position) {\r\n        vTangent.set(\r\n                    tangent[ k ], tangent[ k + 1 ], tangent[ k + 2 ]\r\n                )\r\n\r\n        normX = normal[ k ]\r\n        normY = normal[ k + 1 ]\r\n        normZ = normal[ k + 2 ]\r\n\r\n        biX = binormal[ k ]\r\n        biY = binormal[ k + 1 ]\r\n        biZ = binormal[ k + 2 ]\r\n\r\n        posX = position[ k ]\r\n        posY = position[ k + 1 ]\r\n        posZ = position[ k + 2 ]\r\n\r\n        radius = size[ i ]\r\n      }\r\n\r\n      for (j = 0; j < radialSegments; ++j) {\r\n        s = l + j * 3\r\n\r\n        if (position) {\r\n          cx = -radius * cxArr[ j ] // TODO: Hack: Negating it so it faces outside.\r\n          cy = radius * cyArr[ j ]\r\n\r\n          cx1 = -radius * cx1Arr[ j ]\r\n          cy1 = radius * cy1Arr[ j ]\r\n          cx2 = -radius * cx2Arr[ j ]\r\n          cy2 = radius * cy2Arr[ j ]\r\n\r\n          meshPosition[ s ] = posX + cx * normX + cy * biX\r\n          meshPosition[ s + 1 ] = posY + cx * normY + cy * biY\r\n          meshPosition[ s + 2 ] = posZ + cx * normZ + cy * biZ\r\n\r\n                    // TODO half of these are symmetric\r\n          vMeshNormal.set(\r\n                        // ellipse tangent approximated as vector from/to adjacent points\r\n                        (cx2 * normX + cy2 * biX) -\r\n                            (cx1 * normX + cy1 * biX),\r\n                        (cx2 * normY + cy2 * biY) -\r\n                            (cx1 * normY + cy1 * biY),\r\n                        (cx2 * normZ + cy2 * biZ) -\r\n                            (cx1 * normZ + cy1 * biZ)\r\n                    ).cross(vTangent)\r\n\r\n          meshNormal[ s ] = vMeshNormal.x\r\n          meshNormal[ s + 1 ] = vMeshNormal.y\r\n          meshNormal[ s + 2 ] = vMeshNormal.z\r\n        }\r\n\r\n        if (color) {\r\n          meshColor[ s ] = color[ k ]\r\n          meshColor[ s + 1 ] = color[ k + 1 ]\r\n          meshColor[ s + 2 ] = color[ k + 2 ]\r\n        }\r\n\r\n        if (primitiveId) {\r\n          meshPrimitiveId[ i * radialSegments + j ] = primitiveId[ i ]\r\n        }\r\n      }\r\n    }\r\n\r\n        // front cap\r\n\r\n    k = 0\r\n    l = n * 3 * radialSegments\r\n\r\n    for (j = 0; j < radialSegments; ++j) {\r\n      s = k + j * 3\r\n      t = l + j * 3\r\n\r\n      if (position) {\r\n        meshPosition[ t ] = meshPosition[ s ]\r\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\r\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\r\n\r\n        meshNormal[ t ] = tangent[ k ]\r\n        meshNormal[ t + 1 ] = tangent[ k + 1 ]\r\n        meshNormal[ t + 2 ] = tangent[ k + 2 ]\r\n      }\r\n\r\n      if (color) {\r\n        meshColor[ t ] = meshColor[ s ]\r\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\r\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\r\n      }\r\n\r\n      if (primitiveId) {\r\n        meshPrimitiveId[ n * radialSegments + j ] = meshPrimitiveId[ 0 + j ]\r\n      }\r\n    }\r\n\r\n        // back cap\r\n\r\n    k = (n - 1) * 3 * radialSegments\r\n    l = (n + 1) * 3 * radialSegments\r\n\r\n    for (j = 0; j < radialSegments; ++j) {\r\n      s = k + j * 3\r\n      t = l + j * 3\r\n\r\n      if (position) {\r\n        meshPosition[ t ] = meshPosition[ s ]\r\n        meshPosition[ t + 1 ] = meshPosition[ s + 1 ]\r\n        meshPosition[ t + 2 ] = meshPosition[ s + 2 ]\r\n\r\n        meshNormal[ t ] = tangent[ n1 * 3 ]\r\n        meshNormal[ t + 1 ] = tangent[ n1 * 3 + 1 ]\r\n        meshNormal[ t + 2 ] = tangent[ n1 * 3 + 2 ]\r\n      }\r\n\r\n      if (color) {\r\n        meshColor[ t ] = meshColor[ s ]\r\n        meshColor[ t + 1 ] = meshColor[ s + 1 ]\r\n        meshColor[ t + 2 ] = meshColor[ s + 2 ]\r\n      }\r\n\r\n      if (primitiveId) {\r\n        meshPrimitiveId[ (n + 1) * radialSegments + j ] = meshPrimitiveId[ (n - 1) * radialSegments + j ]\r\n      }\r\n    }\r\n  }\r\n\r\n  makeIndex () {\r\n    var meshIndex = this.meshIndex\r\n\r\n    var n = this.size2\r\n    var n1 = n - 1\r\n    var capTriangles = this.capTriangles\r\n    var radialSegments = this.radialSegments\r\n    var radialSegments1 = this.radialSegments + 1\r\n\r\n    var i, k, irs, irs1, l, j\r\n\r\n    for (i = 0; i < n1; ++i) {\r\n      k = i * radialSegments * 3 * 2\r\n\r\n      irs = i * radialSegments\r\n      irs1 = (i + 1) * radialSegments\r\n\r\n      for (j = 0; j < radialSegments; ++j) {\r\n        l = k + j * 3 * 2\r\n\r\n                // meshIndex[ l + 0 ] = irs + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l ] = irs + j\r\n        meshIndex[ l + 1 ] = irs + ((j + 1) % radialSegments)\r\n                // meshIndex[ l + 2 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l + 2 ] = irs1 + j\r\n\r\n                // meshIndex[ l + 3 ] = irs1 + ( ( j + 0 ) % radialSegments );\r\n        meshIndex[ l + 3 ] = irs1 + j\r\n        meshIndex[ l + 4 ] = irs + ((j + 1) % radialSegments)\r\n        meshIndex[ l + 5 ] = irs1 + ((j + 1) % radialSegments)\r\n      }\r\n    }\r\n\r\n        // capping\r\n\r\n    var strip = [ 0 ]\r\n\r\n    for (j = 1; j < radialSegments1 / 2; ++j) {\r\n      strip.push(j)\r\n      if (radialSegments - j !== j) {\r\n        strip.push(radialSegments - j)\r\n      }\r\n    }\r\n\r\n        // front cap\r\n\r\n    l = n1 * radialSegments * 3 * 2\r\n    k = n * radialSegments\r\n\r\n    for (j = 0; j < strip.length - 2; ++j) {\r\n      if (j % 2 === 0) {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\r\n      } else {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\r\n      }\r\n    }\r\n\r\n        // back cap\r\n\r\n    l = n1 * radialSegments * 3 * 2 + 3 * capTriangles\r\n    k = n * radialSegments + radialSegments\r\n\r\n    for (j = 0; j < strip.length - 2; ++j) {\r\n      if (j % 2 === 0) {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 0 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 2 ]\r\n      } else {\r\n        meshIndex[ l + j * 3 + 0 ] = k + strip[ j + 2 ]\r\n        meshIndex[ l + j * 3 + 1 ] = k + strip[ j + 1 ]\r\n        meshIndex[ l + j * 3 + 2 ] = k + strip[ j + 0 ]\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default TubeMeshBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/tubemesh-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 701,
    "kind": "variable",
    "name": "vTangent",
    "memberof": "src/buffer/tubemesh-buffer.js",
    "static": true,
    "longname": "src/buffer/tubemesh-buffer.js~vTangent",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tubemesh-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 702,
    "kind": "variable",
    "name": "vMeshNormal",
    "memberof": "src/buffer/tubemesh-buffer.js",
    "static": true,
    "longname": "src/buffer/tubemesh-buffer.js~vMeshNormal",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/buffer/tubemesh-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 703,
    "kind": "class",
    "name": "TubeMeshBuffer",
    "memberof": "src/buffer/tubemesh-buffer.js",
    "static": true,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/tubemesh-buffer.js",
    "importStyle": "TubeMeshBuffer",
    "description": "Tube mesh buffer. Draws a tube.",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/buffer/mesh-buffer.js~MeshBuffer"
    ]
  },
  {
    "__docId__": 704,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.normal",
        "description": "normals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.binormal",
        "description": "binormals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.tangent",
        "description": "tangents"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.size",
        "description": "sizes"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": false,
        "name": "data.picking",
        "description": "picking ids"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 705,
    "kind": "member",
    "name": "aspectRatio",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#aspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 706,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#radialSegments",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 707,
    "kind": "member",
    "name": "capped",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#capped",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 708,
    "kind": "member",
    "name": "capVertices",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#capVertices",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 709,
    "kind": "member",
    "name": "capTriangles",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#capTriangles",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 710,
    "kind": "member",
    "name": "size2",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#size2",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 711,
    "kind": "member",
    "name": "meshIndex",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#meshIndex",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 712,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 713,
    "kind": "method",
    "name": "makeIndex",
    "memberof": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/tubemesh-buffer.js~TubeMeshBuffer#makeIndex",
    "access": "public",
    "description": null,
    "lineNumber": 273,
    "undocument": true
  },
  {
    "__docId__": 714,
    "kind": "file",
    "name": "src/buffer/vector-buffer.js",
    "content": "/**\r\n * @file Vector Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/Line.vert'\r\nimport '../shader/Line.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { uniformArray3 } from '../math/array-utils.js'\r\nimport Buffer from './buffer.js'\r\n\r\n/**\r\n * Vector buffer. Draws vectors as lines.\r\n */\r\nclass VectorBuffer extends Buffer {\r\n    /**\r\n     * @param  {Object} data - attribute object\r\n     * @param  {Float32Array} data.position - positions\r\n     * @param  {Float32Array} data.vector - vectors\r\n     * @param  {BufferParameters} params - parameter object\r\n     */\r\n  constructor (data, params) {\r\n    var p = params || {}\r\n\r\n    var n = data.position.length / 3\r\n    var n2 = n * 2\r\n\r\n    var color = new Color(defaults(p.color, 'grey'))\r\n\r\n    var linePosition = new Float32Array(n2 * 3)\r\n    var lineColor = uniformArray3(n2, color.r, color.g, color.b)\r\n\r\n    super({\r\n      position: linePosition,\r\n      color: lineColor\r\n    }, p)\r\n\r\n    this.scale = defaults(p.scale, 1)\r\n\r\n    this.setAttributes(data)\r\n  }\r\n\r\n  setAttributes (data) {\r\n    var attributes = this.geometry.attributes\r\n\r\n    var position, vector\r\n    var aPosition\r\n\r\n    if (data.position && data.vector) {\r\n      position = data.position\r\n      vector = data.vector\r\n      aPosition = attributes.position.array\r\n      attributes.position.needsUpdate = true\r\n    }\r\n\r\n    var n = this.size / 2\r\n    var scale = this.scale\r\n\r\n    var i, j\r\n\r\n    if (data.position && data.vector) {\r\n      for (var v = 0; v < n; v++) {\r\n        i = v * 2 * 3\r\n        j = v * 3\r\n\r\n        aPosition[ i + 0 ] = position[ j + 0 ]\r\n        aPosition[ i + 1 ] = position[ j + 1 ]\r\n        aPosition[ i + 2 ] = position[ j + 2 ]\r\n        aPosition[ i + 3 ] = position[ j + 0 ] + vector[ j + 0 ] * scale\r\n        aPosition[ i + 4 ] = position[ j + 1 ] + vector[ j + 1 ] * scale\r\n        aPosition[ i + 5 ] = position[ j + 2 ] + vector[ j + 2 ] * scale\r\n      }\r\n    }\r\n  }\r\n\r\n  get isLine () { return true }\r\n  get vertexShader () { return 'Line.vert' }\r\n  get fragmentShader () { return 'Line.frag' }\r\n}\r\n\r\nexport default VectorBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/vector-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 715,
    "kind": "class",
    "name": "VectorBuffer",
    "memberof": "src/buffer/vector-buffer.js",
    "static": true,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/vector-buffer.js",
    "importStyle": "VectorBuffer",
    "description": "Vector buffer. Draws vectors as lines.",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/buffer/buffer.js~Buffer"
    ]
  },
  {
    "__docId__": 716,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.vector",
        "description": "vectors"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 717,
    "kind": "member",
    "name": "scale",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#scale",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 718,
    "kind": "method",
    "name": "setAttributes",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#setAttributes",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 719,
    "kind": "get",
    "name": "isLine",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#isLine",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 720,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 721,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/vector-buffer.js~VectorBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/vector-buffer.js~VectorBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 722,
    "kind": "file",
    "name": "src/buffer/wideline-buffer.js",
    "content": "/**\r\n * @file Wide Line Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport '../shader/WideLine.vert'\r\nimport '../shader/WideLine.frag'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport MappedQuadBuffer from './mappedquad-buffer.js'\r\n\r\n/**\r\n * Wide Line buffer. Draws lines with a fixed width in pixels.\r\n *\r\n * @example\r\n * var lineBuffer = new WideLineBuffer({\r\n *   position1: new Float32Array([ 0, 0, 0 ]),\r\n *   position2: new Float32Array([ 1, 1, 1 ]),\r\n *   color: new Float32Array([ 1, 0, 0 ]),\r\n *   color2: new Float32Array([ 0, 1, 0 ])\r\n * });\r\n */\r\nclass WideLineBuffer extends MappedQuadBuffer {\r\n  /**\r\n   * @param  {Object} data - attribute object\r\n   * @param  {Float32Array} data.position1 - from positions\r\n   * @param  {Float32Array} data.position2 - to positions\r\n   * @param  {Float32Array} data.color - from colors\r\n   * @param  {Float32Array} data.color2 - to colors\r\n   * @param  {BufferParameters} params - parameter object\r\n   */\r\n  constructor (data, params) {\r\n    super(data, params)\r\n\r\n    var p = params || {}\r\n\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n\r\n    this.addUniforms({\r\n      'linewidth': { value: this.linewidth },\r\n      'resolution': { value: new Vector2() },\r\n      'projectionMatrixInverse': { value: new Matrix4() }\r\n    })\r\n\r\n    this.addAttributes({\r\n      'position1': { type: 'v3', value: null },\r\n      'position2': { type: 'v3', value: null },\r\n      'color2': { type: 'c', value: null }\r\n    })\r\n\r\n    this.setAttributes(data)\r\n    this.makeMapping()\r\n  }\r\n\r\n  get parameters () {\r\n    return Object.assign({\r\n\r\n      linewidth: { uniform: true }\r\n\r\n    }, super.parameters)\r\n  }\r\n\r\n  get vertexShader () { return 'WideLine.vert' }\r\n  get fragmentShader () { return 'WideLine.frag' }\r\n}\r\n\r\nexport default WideLineBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/buffer/wideline-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 723,
    "kind": "class",
    "name": "WideLineBuffer",
    "memberof": "src/buffer/wideline-buffer.js",
    "static": true,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/buffer/wideline-buffer.js",
    "importStyle": "WideLineBuffer",
    "description": "Wide Line buffer. Draws lines with a fixed width in pixels.",
    "examples": [
      "var lineBuffer = new WideLineBuffer({\n  position1: new Float32Array([ 0, 0, 0 ]),\n  position2: new Float32Array([ 1, 1, 1 ]),\n  color: new Float32Array([ 1, 0, 0 ]),\n  color2: new Float32Array([ 0, 1, 0 ])\n});"
    ],
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/buffer/mappedquad-buffer.js~MappedQuadBuffer"
    ]
  },
  {
    "__docId__": 724,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "attribute object"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position1",
        "description": "from positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position2",
        "description": "to positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "from colors"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color2",
        "description": "to colors"
      },
      {
        "nullable": null,
        "types": [
          "BufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 725,
    "kind": "member",
    "name": "linewidth",
    "memberof": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "static": false,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer#linewidth",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 726,
    "kind": "get",
    "name": "parameters",
    "memberof": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 727,
    "kind": "get",
    "name": "vertexShader",
    "memberof": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer#vertexShader",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 728,
    "kind": "get",
    "name": "fragmentShader",
    "memberof": "src/buffer/wideline-buffer.js~WideLineBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer/wideline-buffer.js~WideLineBuffer#fragmentShader",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 729,
    "kind": "file",
    "name": "src/color/atomindex-colormaker.js",
    "content": "/**\r\n * @file Atomindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by atom index. The {@link AtomProxy.index} property is used for coloring.\r\n * Each {@link ModelProxy} of a {@link Structure} is colored seperately. The\r\n * `params.domain` parameter is ignored.\r\n *\r\n * __Name:__ _atomindex_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"atomindex\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass AtomindexColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'rainbow'\r\n      this.reverse = defaults(params.reverse, true)\r\n    }\r\n\r\n    this.scalePerModel = {}\r\n\r\n    this.structure.eachModel(mp => {\r\n      this.domain = [ mp.atomOffset, mp.atomEnd ]\r\n      this.scalePerModel[ mp.index ] = this.getScale()\r\n    })\r\n  }\r\n\r\n    /**\r\n     * get color for an atom\r\n     * @param  {AtomProxy} atom - atom to get color for\r\n     * @return {Integer} hex atom color\r\n     */\r\n  atomColor (atom) {\r\n    return this.scalePerModel[ atom.modelIndex ](atom.index)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('atomindex', AtomindexColormaker)\r\n\r\nexport default AtomindexColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/atomindex-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 730,
    "kind": "class",
    "name": "AtomindexColormaker",
    "memberof": "src/color/atomindex-colormaker.js",
    "static": true,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/atomindex-colormaker.js",
    "importStyle": "AtomindexColormaker",
    "description": "Color by atom index. The {@link AtomProxy.index} property is used for coloring.\nEach {@link ModelProxy} of a {@link Structure} is colored seperately. The\n`params.domain` parameter is ignored.\n\n__Name:__ _atomindex_",
    "examples": [
      "stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    o.addRepresentation( \"ball+stick\", { colorScheme: \"atomindex\" } );\n    o.autoView();\n} );"
    ],
    "lineNumber": 24,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 731,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 732,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 733,
    "kind": "member",
    "name": "reverse",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#reverse",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 734,
    "kind": "member",
    "name": "scalePerModel",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#scalePerModel",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 735,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 736,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/atomindex-colormaker.js~AtomindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/atomindex-colormaker.js~AtomindexColormaker#atomColor",
    "access": "public",
    "description": "get color for an atom",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "atom",
        "description": "atom to get color for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "hex atom color"
    }
  },
  {
    "__docId__": 737,
    "kind": "file",
    "name": "src/color/bfactor-colormaker.js",
    "content": "/**\r\n * @file Bfactor Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\nimport Selection from '../selection/selection.js'\r\n\r\n/**\r\n * Color by b-factor. The {@link AtomProxy.bfactor} property is used for coloring.\r\n * By default the min and max b-factor values are used for the scale`s domain.\r\n *\r\n * __Name:__ _bfactor_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\", { colorScheme: \"bfactor\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BfactorColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'OrRd'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      var selection\r\n      var min = Infinity\r\n      var max = -Infinity\r\n\r\n      if (params.sele) {\r\n        selection = new Selection(params.sele)\r\n      }\r\n\r\n      this.structure.eachAtom(function (a) {\r\n        var bfactor = a.bfactor\r\n        min = Math.min(min, bfactor)\r\n        max = Math.max(max, bfactor)\r\n      }, selection)\r\n\r\n      this.domain = [ min, max ]\r\n    }\r\n\r\n    this.bfactorScale = this.getScale()\r\n  }\r\n\r\n  atomColor (a) {\r\n    return this.bfactorScale(a.bfactor)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('bfactor', BfactorColormaker)\r\n\r\nexport default BfactorColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/bfactor-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 738,
    "kind": "class",
    "name": "BfactorColormaker",
    "memberof": "src/color/bfactor-colormaker.js",
    "static": true,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/bfactor-colormaker.js",
    "importStyle": "BfactorColormaker",
    "description": "Color by b-factor. The {@link AtomProxy.bfactor} property is used for coloring.\nBy default the min and max b-factor values are used for the scale`s domain.\n\n__Name:__ _bfactor_",
    "examples": [
      "stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    o.addRepresentation( \"ball+stick\", { colorScheme: \"bfactor\" } );\n    o.autoView();\n} );"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 739,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 740,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "static": false,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 741,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "static": false,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 742,
    "kind": "member",
    "name": "bfactorScale",
    "memberof": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "static": false,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker#bfactorScale",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 743,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/bfactor-colormaker.js~BfactorColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/bfactor-colormaker.js~BfactorColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 744,
    "kind": "file",
    "name": "src/color/chainid-colormaker.js",
    "content": "/**\r\n * @file Chainid Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by chain id\r\n */\r\nclass ChainidColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'Spectral'\r\n    }\r\n\r\n    var chainidDictPerModel = {}\r\n    var scalePerModel = {}\r\n\r\n    this.structure.eachModel(function (mp) {\r\n      var i = 0\r\n      var chainidDict = {}\r\n      mp.eachChain(function (cp) {\r\n        if (chainidDict[ cp.chainid ] === undefined) {\r\n          chainidDict[ cp.chainid ] = i\r\n          i += 1\r\n        }\r\n      })\r\n      this.domain = [ 0, i - 1 ]\r\n      chainidDictPerModel[ mp.index ] = chainidDict\r\n      scalePerModel[ mp.index ] = this.getScale()\r\n    }.bind(this))\r\n\r\n    this.atomColor = function (a) {\r\n      var chainidDict = chainidDictPerModel[ a.modelIndex ]\r\n      return scalePerModel[ a.modelIndex ](chainidDict[ a.chainid ])\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainid', ChainidColormaker)\r\n\r\nexport default ChainidColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/chainid-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 745,
    "kind": "class",
    "name": "ChainidColormaker",
    "memberof": "src/color/chainid-colormaker.js",
    "static": true,
    "longname": "src/color/chainid-colormaker.js~ChainidColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/chainid-colormaker.js",
    "importStyle": "ChainidColormaker",
    "description": "Color by chain id",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 746,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/chainid-colormaker.js~ChainidColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/chainid-colormaker.js~ChainidColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 747,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/chainid-colormaker.js~ChainidColormaker",
    "static": false,
    "longname": "src/color/chainid-colormaker.js~ChainidColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 748,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/chainid-colormaker.js~ChainidColormaker",
    "static": false,
    "longname": "src/color/chainid-colormaker.js~ChainidColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 749,
    "kind": "file",
    "name": "src/color/chainindex-colormaker.js",
    "content": "/**\r\n * @file Chainindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by chain index\r\n */\r\nclass ChainindexColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'Spectral'\r\n    }\r\n    if (!params.domain) {\r\n      var scalePerModel = {}\r\n\r\n      this.structure.eachModel(function (mp) {\r\n        this.domain = [ mp.chainOffset, mp.chainEnd ]\r\n        scalePerModel[ mp.index ] = this.getScale()\r\n      }.bind(this))\r\n\r\n      this.atomColor = function (a) {\r\n        return scalePerModel[ a.modelIndex ](a.chainIndex)\r\n      }\r\n    } else {\r\n      var chainindexScale = this.getScale()\r\n\r\n      this.atomColor = function (a) {\r\n        return chainindexScale(a.chainIndex)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainindex', ChainindexColormaker)\r\n\r\nexport default ChainindexColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/chainindex-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 750,
    "kind": "class",
    "name": "ChainindexColormaker",
    "memberof": "src/color/chainindex-colormaker.js",
    "static": true,
    "longname": "src/color/chainindex-colormaker.js~ChainindexColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/chainindex-colormaker.js",
    "importStyle": "ChainindexColormaker",
    "description": "Color by chain index",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 751,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/chainindex-colormaker.js~ChainindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/chainindex-colormaker.js~ChainindexColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 752,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/chainindex-colormaker.js~ChainindexColormaker",
    "static": false,
    "longname": "src/color/chainindex-colormaker.js~ChainindexColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 753,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/chainindex-colormaker.js~ChainindexColormaker",
    "static": false,
    "longname": "src/color/chainindex-colormaker.js~ChainindexColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 754,
    "kind": "file",
    "name": "src/color/chainname-colormaker.js",
    "content": "/**\r\n * @file Chainname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by chain name\r\n */\r\nclass ChainnameColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'Spectral'\r\n    }\r\n\r\n    var chainnameDictPerModel = {}\r\n    var scalePerModel = {}\r\n\r\n    this.structure.eachModel(function (mp) {\r\n      var i = 0\r\n      var chainnameDict = {}\r\n      mp.eachChain(function (cp) {\r\n        if (chainnameDict[ cp.chainname ] === undefined) {\r\n          chainnameDict[ cp.chainname ] = i\r\n          i += 1\r\n        }\r\n      })\r\n      this.domain = [ 0, i - 1 ]\r\n      chainnameDictPerModel[ mp.index ] = chainnameDict\r\n      scalePerModel[ mp.index ] = this.getScale()\r\n    }.bind(this))\r\n\r\n    this.atomColor = function (a) {\r\n      var chainnameDict = chainnameDictPerModel[ a.modelIndex ]\r\n      return scalePerModel[ a.modelIndex ](chainnameDict[ a.chainname ])\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('chainname', ChainnameColormaker)\r\n\r\nexport default ChainnameColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/chainname-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 755,
    "kind": "class",
    "name": "ChainnameColormaker",
    "memberof": "src/color/chainname-colormaker.js",
    "static": true,
    "longname": "src/color/chainname-colormaker.js~ChainnameColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/chainname-colormaker.js",
    "importStyle": "ChainnameColormaker",
    "description": "Color by chain name",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 756,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/chainname-colormaker.js~ChainnameColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/chainname-colormaker.js~ChainnameColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 757,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/chainname-colormaker.js~ChainnameColormaker",
    "static": false,
    "longname": "src/color/chainname-colormaker.js~ChainnameColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 758,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/chainname-colormaker.js~ChainnameColormaker",
    "static": false,
    "longname": "src/color/chainname-colormaker.js~ChainnameColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 759,
    "kind": "file",
    "name": "src/color/colormaker-registry.js",
    "content": "/**\r\n * @file Colormaker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { generateUUID } from '../math/math-utils.js'\r\nimport Colormaker from './colormaker.js'\r\nimport SelectionColormaker from './selection-colormaker.js'\r\n\r\nconst ColormakerScales = {\r\n\r\n  '': '',\r\n\r\n    // Sequential\r\n  OrRd: '[S] Orange-Red',\r\n  PuBu: '[S] Purple-Blue',\r\n  BuPu: '[S] Blue-Purple',\r\n  Oranges: '[S] Oranges',\r\n  BuGn: '[S] Blue-Green',\r\n  YlOrBr: '[S] Yellow-Orange-Brown',\r\n  YlGn: '[S] Yellow-Green',\r\n  Reds: '[S] Reds',\r\n  RdPu: '[S] Red-Purple',\r\n  Greens: '[S] Greens',\r\n  YlGnBu: '[S] Yellow-Green-Blue',\r\n  Purples: '[S] Purples',\r\n  GnBu: '[S] Green-Blue',\r\n  Greys: '[S] Greys',\r\n  YlOrRd: '[S] Yellow-Orange-Red',\r\n  PuRd: '[S] Purple-Red',\r\n  Blues: '[S] Blues',\r\n  PuBuGn: '[S] Purple-Blue-Green',\r\n\r\n    // Diverging\r\n  Viridis: '[D] Viridis',\r\n  Spectral: '[D] Spectral',\r\n  RdYlGn: '[D] Red-Yellow-Green',\r\n  RdBu: '[D] Red-Blue',\r\n  PiYG: '[D] Pink-Yellowgreen',\r\n  PRGn: '[D] Purplered-Green',\r\n  RdYlBu: '[D] Red-Yellow-Blue',\r\n  BrBG: '[D] Brown-Bluegreen',\r\n  RdGy: '[D] Red-Grey',\r\n  PuOr: '[D] Purple-Orange',\r\n\r\n    // Qualitative\r\n  Set1: '[Q] Set1',\r\n  Set2: '[Q] Set2',\r\n  Set3: '[Q] Set3',\r\n  Dark2: '[Q] Dark2',\r\n  Paired: '[Q] Paired',\r\n  Pastel1: '[Q] Pastel1',\r\n  Pastel2: '[Q] Pastel2',\r\n  Accent: '[Q] Accent',\r\n\r\n    // Other\r\n  rainbow: '[?] Rainbow',\r\n  rwb: '[?] Red-White-Blue'\r\n\r\n}\r\n\r\nconst ColormakerModes = {\r\n\r\n  '': '',\r\n\r\n  rgb: 'Red Green Blue',\r\n  hsv: 'Hue Saturation Value',\r\n  hsl: 'Hue Saturation Lightness',\r\n  hsi: 'Hue Saturation Intensity',\r\n  lab: 'CIE L*a*b*',\r\n  hcl: 'Hue Chroma Lightness'\r\n\r\n}\r\n\r\n/**\r\n * Class for registering {@link Colormaker}s. Generally use the\r\n * global {@link src/globals.js~ColormakerRegistry} instance.\r\n */\r\nclass ColormakerRegistry {\r\n  constructor () {\r\n    this.schemes = {}\r\n    this.userSchemes = {}\r\n  }\r\n\r\n  getScheme (params) {\r\n    const p = params || {}\r\n    const id = (p.scheme || '').toLowerCase()\r\n\r\n    let SchemeClass\r\n\r\n    if (id in this.schemes) {\r\n      SchemeClass = this.schemes[ id ]\r\n    } else if (id in this.userSchemes) {\r\n      SchemeClass = this.userSchemes[ id ]\r\n    } else {\r\n      SchemeClass = Colormaker\r\n    }\r\n\r\n    return new SchemeClass(params)\r\n  }\r\n\r\n  /**\r\n   * Get an description of available schemes as an\r\n   * object with id-label as key-value pairs\r\n   * @return {Object} available schemes\r\n   */\r\n  getSchemes () {\r\n    const types = {}\r\n\r\n    Object.keys(this.schemes).forEach(function (k) {\r\n      types[ k ] = k\r\n    })\r\n\r\n    Object.keys(this.userSchemes).forEach(function (k) {\r\n      types[ k ] = k.split('|')[ 1 ]\r\n    })\r\n\r\n    return types\r\n  }\r\n\r\n  /**\r\n   * Get an description of available scales as an\r\n   * object with id-label as key-value pairs\r\n   * @return {Object} available scales\r\n   */\r\n  getScales () {\r\n    return ColormakerScales\r\n  }\r\n\r\n  getModes () {\r\n    return ColormakerModes\r\n  }\r\n\r\n  /**\r\n   * Add a scheme with a hardcoded id\r\n   * @param {String} id - the id\r\n   * @param {Colormaker} scheme - the colormaker\r\n   * @return {undefined}\r\n   */\r\n  add (id, scheme) {\r\n    id = id.toLowerCase()\r\n    this.schemes[ id ] = scheme\r\n  }\r\n\r\n  /**\r\n   * Register a custom scheme\r\n   *\r\n   * @example\r\n   * // Create a class with a `atomColor` method that returns a hex color.\r\n   * var schemeId = NGL.ColormakerRegistry.addScheme( function( params ){\r\n   *     this.atomColor = function( atom ){\r\n   *         if( atom.serial < 1000 ){\r\n   *             return 0x0000FF;  // blue\r\n   *         }else if( atom.serial > 2000 ){\r\n   *             return 0xFF0000;  // red\r\n   *         }else{\r\n   *             return 0x00FF00;  // green\r\n   *         }\r\n   *     };\r\n   * } );\r\n   *\r\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n   *     o.autoView();\r\n   * } );\r\n   *\r\n   * @param {Function|Colormaker} scheme - constructor or {@link Colormaker} instance\r\n   * @param {String} label - scheme label\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  addScheme (scheme, label) {\r\n    if (!(scheme instanceof Colormaker)) {\r\n      scheme = this._createScheme(scheme)\r\n    }\r\n\r\n    return this._addUserScheme(scheme, label)\r\n  }\r\n\r\n  /**\r\n   * Add a user-defined scheme\r\n   * @param {Colormaker} scheme - the user-defined scheme\r\n   * @param {String} [label] - scheme label\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  _addUserScheme (scheme, label) {\r\n    label = label || ''\r\n    const id = `${generateUUID()}|${label}`.toLowerCase()\r\n    this.userSchemes[ id ] = scheme\r\n\r\n    return id\r\n  }\r\n\r\n  /**\r\n   * Remove the scheme with the given id\r\n   * @param  {String} id - scheme to remove\r\n   * @return {undefined}\r\n   */\r\n  removeScheme (id) {\r\n    id = id.toLowerCase()\r\n    delete this.userSchemes[ id ]\r\n  }\r\n\r\n  _createScheme (constructor) {\r\n    const _Colormaker = function (params) {\r\n      Colormaker.call(this, params)\r\n      constructor.call(this, params)\r\n    }\r\n\r\n    _Colormaker.prototype = Colormaker.prototype\r\n    _Colormaker.prototype.constructor = Colormaker\r\n\r\n    return _Colormaker\r\n  }\r\n\r\n  /**\r\n   * Create and a selection-based coloring scheme. Supply a list with pairs\r\n   * of colorname and selection for coloring by selections. Use the last\r\n   * entry as a default (catch all) coloring definition.\r\n   *\r\n   * @example\r\n   * var schemeId = NGL.ColormakerRegistry.addSelectionScheme( [\r\n   *     [ \"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\" ],\r\n   *     [ \"green\", \"311-322\" ],\r\n   *     [ \"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\" ],\r\n   *     [ \"blue\", \"1-39 or 96-112 or 174-201 or 278-288\" ],\r\n   *     [ \"white\", \"*\" ]\r\n   * ], \"Transmembrane 3dqb\" );\r\n   *\r\n   * stage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\r\n   *     o.autoView();\r\n   * } );\r\n   *\r\n   * @param {Array} dataList - cloror-selection pairs\r\n   * @param {String} label - scheme name\r\n   * @return {String} id to refer to the registered scheme\r\n   */\r\n  addSelectionScheme (dataList, label) {\r\n    class MySelectionColormaker extends SelectionColormaker {\r\n      constructor (params) {\r\n        super(Object.assign({ dataList: dataList }, params))\r\n      }\r\n    }\r\n\r\n    return this._addUserScheme(MySelectionColormaker, label)\r\n  }\r\n\r\n  /**\r\n   * Check if a scheme with the given id exists\r\n   * @param  {String}  id - the id to check\r\n   * @return {Boolean} flag indicating if the scheme exists\r\n   */\r\n  hasScheme (id) {\r\n    id = id.toLowerCase()\r\n    return id in this.schemes || id in this.userSchemes\r\n  }\r\n}\r\n\r\nexport default ColormakerRegistry\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/colormaker-registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 760,
    "kind": "variable",
    "name": "ColormakerScales",
    "memberof": "src/color/colormaker-registry.js",
    "static": true,
    "longname": "src/color/colormaker-registry.js~ColormakerScales",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/colormaker-registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 761,
    "kind": "variable",
    "name": "ColormakerModes",
    "memberof": "src/color/colormaker-registry.js",
    "static": true,
    "longname": "src/color/colormaker-registry.js~ColormakerModes",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/colormaker-registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 762,
    "kind": "class",
    "name": "ColormakerRegistry",
    "memberof": "src/color/colormaker-registry.js",
    "static": true,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/colormaker-registry.js",
    "importStyle": "ColormakerRegistry",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 763,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 764,
    "kind": "member",
    "name": "schemes",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#schemes",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 765,
    "kind": "member",
    "name": "userSchemes",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#userSchemes",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 766,
    "kind": "method",
    "name": "getScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#getScheme",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 767,
    "kind": "method",
    "name": "getSchemes",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#getSchemes",
    "access": "public",
    "description": "Get an description of available schemes as an\nobject with id-label as key-value pairs",
    "lineNumber": 108,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "available schemes"
    }
  },
  {
    "__docId__": 768,
    "kind": "method",
    "name": "getScales",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#getScales",
    "access": "public",
    "description": "Get an description of available scales as an\nobject with id-label as key-value pairs",
    "lineNumber": 127,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "available scales"
    }
  },
  {
    "__docId__": 769,
    "kind": "method",
    "name": "getModes",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#getModes",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 770,
    "kind": "method",
    "name": "add",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#add",
    "access": "public",
    "description": "Add a scheme with a hardcoded id",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the id"
      },
      {
        "nullable": null,
        "types": [
          "Colormaker"
        ],
        "spread": false,
        "optional": false,
        "name": "scheme",
        "description": "the colormaker"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 771,
    "kind": "method",
    "name": "addScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#addScheme",
    "access": "public",
    "description": "Register a custom scheme",
    "examples": [
      "// Create a class with a `atomColor` method that returns a hex color.\nvar schemeId = NGL.ColormakerRegistry.addScheme( function( params ){\n    this.atomColor = function( atom ){\n        if( atom.serial < 1000 ){\n            return 0x0000FF;  // blue\n        }else if( atom.serial > 2000 ){\n            return 0xFF0000;  // red\n        }else{\n            return 0x00FF00;  // green\n        }\n    };\n} );\n\nstage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\n    o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\n    o.autoView();\n} );"
    ],
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function",
          "Colormaker"
        ],
        "spread": false,
        "optional": false,
        "name": "scheme",
        "description": "constructor or {@link Colormaker} instance"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "scheme label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "id to refer to the registered scheme"
    }
  },
  {
    "__docId__": 772,
    "kind": "method",
    "name": "_addUserScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#_addUserScheme",
    "access": "private",
    "description": "Add a user-defined scheme",
    "lineNumber": 186,
    "params": [
      {
        "nullable": null,
        "types": [
          "Colormaker"
        ],
        "spread": false,
        "optional": false,
        "name": "scheme",
        "description": "the user-defined scheme"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "label",
        "description": "scheme label"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "id to refer to the registered scheme"
    }
  },
  {
    "__docId__": 773,
    "kind": "method",
    "name": "removeScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#removeScheme",
    "access": "public",
    "description": "Remove the scheme with the given id",
    "lineNumber": 199,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "scheme to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 774,
    "kind": "method",
    "name": "_createScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#_createScheme",
    "access": "private",
    "description": null,
    "lineNumber": 204,
    "undocument": true
  },
  {
    "__docId__": 775,
    "kind": "method",
    "name": "addSelectionScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#addSelectionScheme",
    "access": "public",
    "description": "Create and a selection-based coloring scheme. Supply a list with pairs\nof colorname and selection for coloring by selections. Use the last\nentry as a default (catch all) coloring definition.",
    "examples": [
      "var schemeId = NGL.ColormakerRegistry.addSelectionScheme( [\n    [ \"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\" ],\n    [ \"green\", \"311-322\" ],\n    [ \"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\" ],\n    [ \"blue\", \"1-39 or 96-112 or 174-201 or 278-288\" ],\n    [ \"white\", \"*\" ]\n], \"Transmembrane 3dqb\" );\n\nstage.loadFile( \"rcsb://3dqb.pdb\" ).then( function( o ){\n    o.addRepresentation( \"cartoon\", { color: schemeId } );  // pass schemeId here\n    o.autoView();\n} );"
    ],
    "lineNumber": 239,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "dataList",
        "description": "cloror-selection pairs"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "label",
        "description": "scheme name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "id to refer to the registered scheme"
    }
  },
  {
    "__docId__": 776,
    "kind": "method",
    "name": "hasScheme",
    "memberof": "src/color/colormaker-registry.js~ColormakerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker-registry.js~ColormakerRegistry#hasScheme",
    "access": "public",
    "description": "Check if a scheme with the given id exists",
    "lineNumber": 254,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the id to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag indicating if the scheme exists"
    }
  },
  {
    "__docId__": 777,
    "kind": "file",
    "name": "src/color/colormaker.js",
    "content": "/**\r\n * @file Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\n\r\nimport chroma from '../../lib/chroma.es6.js'\r\n\r\n/**\r\n * Colormaker parameter object.\r\n * @typedef {Object} ColormakerParameters - colormaker parameters\r\n * @property {String|Array} [scale] - color scale, either a string for a\r\n *                                    predefined scale or an array of\r\n *                                    colors to be used as the scale\r\n * @property {String} [mode] - color mode, one of rgb, hsv, hsl, hsi, lab, hcl\r\n * @property {Integer[]} [colorDomain] - scale value range\r\n * @property {Integer} colorDomain.0 - min value\r\n * @property {Integer} colorDomain.1 - max value\r\n * @property {Color|String|Integer} [value] - color value\r\n * @property {Structure} [structure] - structure object\r\n * @property {Volume} [volume] - volume object\r\n * @property {Surface} [surface] - surface object\r\n */\r\n\r\n/**\r\n * Class for making colors.\r\n * @interface\r\n */\r\nclass Colormaker {\r\n  /**\r\n   * Create a colormaker instance\r\n   * @param  {ColormakerParameters} params - colormaker parameter\r\n   */\r\n  constructor (params) {\r\n    const p = params || {}\r\n\r\n    this.scale = defaults(p.scale, 'uniform')\r\n    this.mode = defaults(p.mode, 'hcl')\r\n    this.domain = defaults(p.domain, [ 0, 1 ])\r\n    this.value = new Color(defaults(p.value, 0xFFFFFF)).getHex()\r\n    this.reverse = defaults(p.reverse, false)\r\n\r\n    this.structure = p.structure\r\n    this.volume = p.volume\r\n    this.surface = p.surface\r\n\r\n    if (this.structure) {\r\n      this.atomProxy = this.structure.getAtomProxy()\r\n    }\r\n  }\r\n\r\n  getScale (params) {\r\n    const p = params || {}\r\n\r\n    let scale = defaults(p.scale, this.scale)\r\n    if (scale === 'rainbow') {\r\n      scale = [ 'red', 'orange', 'yellow', 'green', 'blue' ]\r\n    } else if (scale === 'rwb') {\r\n      scale = [ 'red', 'white', 'blue' ]\r\n    }\r\n\r\n    let domain = defaults(p.domain, this.domain)\r\n    if (this.reverse) {\r\n      domain = domain.slice().reverse()\r\n    }\r\n\r\n    return chroma\r\n            .scale(scale)\r\n            .mode(defaults(p.mode, this.mode))\r\n            .domain(domain)\r\n            .out('num')\r\n  }\r\n\r\n  /**\r\n   * safe a color to an array\r\n   * @param  {Integer} color - hex color value\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  colorToArray (color, array, offset) {\r\n    if (array === undefined) array = []\r\n    if (offset === undefined) offset = 0\r\n\r\n    array[ offset + 0 ] = (color >> 16 & 255) / 255\r\n    array[ offset + 1 ] = (color >> 8 & 255) / 255\r\n    array[ offset + 2 ] = (color & 255) / 255\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * safe a atom color to an array\r\n   * @param  {AtomProxy} atom - atom to get color for\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  atomColorToArray (atom, array, offset) {\r\n    return this.colorToArray(\r\n      this.atomColor(atom), array, offset\r\n    )\r\n  }\r\n\r\n  /**\r\n   * return the color for an bond\r\n   * @param  {BondProxy} bond - bond to get color for\r\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n   * @return {Integer} hex bond color\r\n   */\r\n  bondColor (bond, fromTo) {\r\n    this.atomProxy.index = fromTo ? bond.atomIndex1 : bond.atomIndex2\r\n    return this.atomColor(this.atomProxy)\r\n  }\r\n\r\n  /**\r\n   * safe a bond color to an array\r\n   * @param  {BondProxy} bond - bond to get color for\r\n   * @param  {Boolean} fromTo - whether to use the first or second atom of the bond\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  bondColorToArray (bond, fromTo, array, offset) {\r\n    return this.colorToArray(\r\n      this.bondColor(bond, fromTo), array, offset\r\n    )\r\n  }\r\n\r\n  /**\r\n   * safe a volume cell color to an array\r\n   * @param  {Integer} index - volume cell index\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  volumeColorToArray (index, array, offset) {\r\n    return this.colorToArray(\r\n      this.volumeColor(index), array, offset\r\n    )\r\n  }\r\n\r\n  /**\r\n   * safe a color for coordinates in space to an array\r\n   * @param  {Vector3} coords - xyz coordinates\r\n   * @param  {Array|TypedArray} array - destination\r\n   * @param  {Integer} offset - index into the array\r\n   * @return {Array} the destination array\r\n   */\r\n  positionColorToArray (coords, array, offset) {\r\n    return this.colorToArray(\r\n      this.positionColor(coords), array, offset\r\n    )\r\n  }\r\n}\r\n\r\nexport default Colormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 778,
    "kind": "typedef",
    "name": "ColormakerParameters",
    "memberof": "src/color/colormaker.js",
    "static": true,
    "longname": "src/color/colormaker.js~ColormakerParameters",
    "access": "public",
    "description": "Colormaker parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "scale",
        "description": "color scale, either a string for a\n                                   predefined scale or an array of\n                                   colors to be used as the scale"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "mode",
        "description": "color mode, one of rgb, hsv, hsl, hsi, lab, hcl"
      },
      {
        "nullable": null,
        "types": [
          "Integer[]"
        ],
        "spread": false,
        "optional": true,
        "name": "colorDomain",
        "description": "scale value range"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "colorDomain.0",
        "description": "min value"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "colorDomain.1",
        "description": "max value"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "String",
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "value",
        "description": "color value"
      },
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": true,
        "name": "structure",
        "description": "structure object"
      },
      {
        "nullable": null,
        "types": [
          "Volume"
        ],
        "spread": false,
        "optional": true,
        "name": "volume",
        "description": "volume object"
      },
      {
        "nullable": null,
        "types": [
          "Surface"
        ],
        "spread": false,
        "optional": true,
        "name": "surface",
        "description": "surface object"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ColormakerParameters"
    }
  },
  {
    "__docId__": 779,
    "kind": "class",
    "name": "Colormaker",
    "memberof": "src/color/colormaker.js",
    "static": true,
    "longname": "src/color/colormaker.js~Colormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/colormaker.js",
    "importStyle": "Colormaker",
    "description": "Class for making colors.",
    "lineNumber": 33,
    "interface": true
  },
  {
    "__docId__": 780,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#constructor",
    "access": "public",
    "description": "Create a colormaker instance",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "ColormakerParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "colormaker parameter"
      }
    ]
  },
  {
    "__docId__": 781,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 782,
    "kind": "member",
    "name": "mode",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#mode",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 783,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 784,
    "kind": "member",
    "name": "value",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#value",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 785,
    "kind": "member",
    "name": "reverse",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#reverse",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 786,
    "kind": "member",
    "name": "structure",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#structure",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 787,
    "kind": "member",
    "name": "volume",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#volume",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 788,
    "kind": "member",
    "name": "surface",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#surface",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 789,
    "kind": "member",
    "name": "atomProxy",
    "memberof": "src/color/colormaker.js~Colormaker",
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#atomProxy",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 790,
    "kind": "method",
    "name": "getScale",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#getScale",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 791,
    "kind": "method",
    "name": "colorToArray",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#colorToArray",
    "access": "public",
    "description": "safe a color to an array",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "hex color value"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "destination"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "index into the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the destination array"
    }
  },
  {
    "__docId__": 792,
    "kind": "method",
    "name": "atomColorToArray",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#atomColorToArray",
    "access": "public",
    "description": "safe a atom color to an array",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "atom",
        "description": "atom to get color for"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "destination"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "index into the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the destination array"
    }
  },
  {
    "__docId__": 793,
    "kind": "method",
    "name": "bondColor",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#bondColor",
    "access": "public",
    "description": "return the color for an bond",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "BondProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "bond",
        "description": "bond to get color for"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fromTo",
        "description": "whether to use the first or second atom of the bond"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "hex bond color"
    }
  },
  {
    "__docId__": 794,
    "kind": "method",
    "name": "bondColorToArray",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#bondColorToArray",
    "access": "public",
    "description": "safe a bond color to an array",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "BondProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "bond",
        "description": "bond to get color for"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "fromTo",
        "description": "whether to use the first or second atom of the bond"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "destination"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "index into the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the destination array"
    }
  },
  {
    "__docId__": 795,
    "kind": "method",
    "name": "volumeColorToArray",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#volumeColorToArray",
    "access": "public",
    "description": "safe a volume cell color to an array",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "volume cell index"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "destination"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "index into the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the destination array"
    }
  },
  {
    "__docId__": 796,
    "kind": "method",
    "name": "positionColorToArray",
    "memberof": "src/color/colormaker.js~Colormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/colormaker.js~Colormaker#positionColorToArray",
    "access": "public",
    "description": "safe a color for coordinates in space to an array",
    "lineNumber": 154,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "xyz coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "destination"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": "index into the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the destination array"
    }
  },
  {
    "__docId__": 797,
    "kind": "file",
    "name": "src/color/densityfit-colormaker.js",
    "content": "/**\r\n * @file Densityfit Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by validation density fit\r\n */\r\nclass DensityfitColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'RdYlBu'\r\n    }\r\n\r\n    this.rsrzScale = this.getScale({ domain: [ 2, 0 ] })\r\n    this.rsccScale = this.getScale({ domain: [ 0.678, 1.0 ] })\r\n\r\n    const val = params.structure.validation || {}\r\n    this.rsrzDict = val.rsrzDict || {}\r\n    this.rsccDict = val.rsccDict || {}\r\n  }\r\n\r\n  atomColor (atom) {\r\n    let sele = atom.resno\r\n    if (atom.inscode) sele += '^' + atom.inscode\r\n    if (atom.chainname) sele += ':' + atom.chainname\r\n    sele += '/' + atom.modelIndex\r\n\r\n    const rsrz = this.rsrzDict[ sele ]\r\n    if (rsrz !== undefined) {\r\n      return this.rsrzScale(rsrz)\r\n    }\r\n\r\n    const rscc = this.rsccDict[ sele ]\r\n    if (rscc !== undefined) {\r\n      return this.rsccScale(rscc)\r\n    }\r\n\r\n    return 0x909090\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('densityfit', DensityfitColormaker)\r\n\r\nexport default DensityfitColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/densityfit-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 798,
    "kind": "class",
    "name": "DensityfitColormaker",
    "memberof": "src/color/densityfit-colormaker.js",
    "static": true,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/densityfit-colormaker.js",
    "importStyle": "DensityfitColormaker",
    "description": "Color by validation density fit",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 799,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 800,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 801,
    "kind": "member",
    "name": "rsrzScale",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#rsrzScale",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 802,
    "kind": "member",
    "name": "rsccScale",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#rsccScale",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 803,
    "kind": "member",
    "name": "rsrzDict",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#rsrzDict",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 804,
    "kind": "member",
    "name": "rsccDict",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#rsccDict",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 805,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/densityfit-colormaker.js~DensityfitColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/densityfit-colormaker.js~DensityfitColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 806,
    "kind": "file",
    "name": "src/color/electrostatic-colormaker.js",
    "content": "/**\r\n * @file Atomindex Colormaker\r\n * @author Fred Ludlow <Fred.Ludlow@astx.com>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\nimport SpatialHash from '../geometry/spatial-hash.js'\r\n\r\n// from CHARMM\r\nconst partialCharges = {\r\n  'ARG': {\r\n    'CD': 0.1,\r\n    'CZ': 0.5,\r\n    'NE': -0.1\r\n  },\r\n  'ASN': {\r\n    'CG': 0.55,\r\n    'OD1': -0.55\r\n  },\r\n  'ASP': {\r\n    'CB': -0.16,\r\n    'CG': 0.36,\r\n    'OD1': -0.6,\r\n    'OD2': -0.6\r\n  },\r\n  'CYS': {\r\n    'CB': 0.19,\r\n    'SG': -0.19\r\n  },\r\n  'GLN': {\r\n    'CD': 0.55,\r\n    'OE1': -0.55\r\n  },\r\n  'GLU': {\r\n    'CD': 0.36,\r\n    'CG': -0.16,\r\n    'OE1': -0.6,\r\n    'OE2': -0.6\r\n  },\r\n  'HIS': {\r\n    'CB': 0.1,\r\n    'CD2': 0.2,\r\n    'CE1': 0.45,\r\n    'CG': 0.15,\r\n    'ND1': 0.05,\r\n    'NE2': 0.05\r\n  },\r\n  'LYS': {\r\n    'CE': 0.25,\r\n    'NZ': 0.75\r\n  },\r\n  'MET': {\r\n    'CE': 0.06,\r\n    'CG': 0.06,\r\n    'SD': -0.12\r\n  },\r\n  'PTR': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CZ': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'OG1': -1.1,\r\n    'P': 1.4\r\n  },\r\n  'SEP': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CB': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'OG1': -1.1,\r\n    'P': 1.4\r\n  },\r\n  'SER': {\r\n    'CB': 0.25,\r\n    'OG': -0.25\r\n  },\r\n  'THR': {\r\n    'CB': 0.25,\r\n    'OG1': -0.25\r\n  },\r\n  'TPO': {\r\n    'C': 0.55,\r\n    'CA': 0.1,\r\n    'CB': 0.25,\r\n    'N': -0.35,\r\n    'O': -0.55,\r\n    'OG1': -1.1,\r\n    'O1P': -0.85,\r\n    'O2P': -0.85,\r\n    'O3P': -0.85,\r\n    'P': 1.4\r\n  },\r\n  'TRP': {\r\n    'CD1': 0.06,\r\n    'CD2': 0.1,\r\n    'CE2': -0.04,\r\n    'CE3': -0.03,\r\n    'CG': -0.03,\r\n    'NE1': -0.06\r\n  },\r\n  'TYR': {\r\n    'CZ': 0.25,\r\n    'OH': -0.25\r\n  },\r\n  'backbone': {\r\n    'C': 0.55,\r\n    'O': -0.55,\r\n    'N': -0.35,\r\n    'CA': 0.1\r\n  }\r\n}\r\n\r\nconst maxRadius = 12.0\r\nconst nHBondDistance = 1.04\r\nconst nHCharge = 0.25\r\n\r\n/**\r\n * Populates position vector with location of implicit or explicit H\r\n * Returns position or undefined if not able to locate H\r\n *\r\n * @param {AtomProxy} ap - the nitrogen atom\r\n * @param {Vector3} [position] - optional target\r\n * @return {Vectors|undefined} the hydrogen atom position\r\n */\r\nfunction backboneNHPosition (ap, position) {\r\n  position = position || new Vector3()\r\n\r\n  let h = false\r\n  var ca = false\r\n  var c = false\r\n  position.set(2 * ap.x, 2 * ap.y, 2 * ap.z)\r\n\r\n  ap.eachBondedAtom(function (a2) {\r\n    // Any time we detect H, reset position and skip\r\n    // future tests\r\n    if (h) return\r\n    if (a2.atomname === 'H') {\r\n      position.set(a2)\r\n      h = true\r\n      return\r\n    }\r\n    if (!ca && a2.atomname === 'CA') {\r\n      position.sub(a2)\r\n      ca = true\r\n    } else if (!c && a2.atomname === 'C') {\r\n      c = true\r\n      position.sub(a2)\r\n    }\r\n  })\r\n\r\n  if (h) { return position }\r\n\r\n  if (ca && c) {\r\n    position.normalize()\r\n    position.multiplyScalar(nHBondDistance)\r\n    position.add(ap)\r\n    return position\r\n  }\r\n}\r\n\r\n/**\r\n * Takes an array of Vector3 objects and\r\n * converts to an object that looks like an AtomStore\r\n *\r\n * @param {Vector3[]} positions - array of positions\r\n * @return {Object} AtomStore-like object\r\n */\r\nfunction buildStoreLike (positions) {\r\n  const n = positions.length\r\n  const x = new Float32Array(n)\r\n  const y = new Float32Array(n)\r\n  const z = new Float32Array(n)\r\n\r\n  for (let i = 0; i < positions.length; i++) {\r\n    const v = positions[ i ]\r\n    x[ i ] = v.x\r\n    y[ i ] = v.y\r\n    z[ i ] = v.z\r\n  }\r\n\r\n  return { x: x, y: y, z: z, count: n }\r\n}\r\n\r\n/**\r\n * Color a surface by electrostatic charge. This is a highly approximate\r\n * calculation! The partial charges are CHARMM with hydrogens added to heavy\r\n * atoms and hydrogen positions generated for amides.\r\n *\r\n * __Name:__ _electrostatic_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3dqb\" ).then( function( o ){\r\n *     o.addRepresentation( \"surface\", { colorScheme: \"electrostatic\" } );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass ElectrostaticColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'rwb'\r\n    }\r\n    if (!params.domain) {\r\n      this.domain = [ -0.5, 0, 0.5 ]\r\n    }\r\n\r\n    const scale = this.getScale()\r\n\r\n    function chargeForAtom (a) {\r\n      if (!a.isProtein()) { return 0.0 }\r\n      return (\r\n        (partialCharges[ a.resname ] &&\r\n            partialCharges[ a.resname ][ a.atomname ]) ||\r\n        partialCharges[ 'backbone' ][ a.atomname ] || 0.0\r\n      )\r\n    }\r\n\r\n    const structure = this.structure\r\n    const charges = new Float32Array(structure.atomCount)\r\n    const hPositions = []\r\n    const hCharges = []\r\n\r\n    structure.eachAtom(ap => {\r\n      charges[ ap.index ] = chargeForAtom(ap) * ap.occupancy\r\n      if (ap.atomname === 'N') {\r\n        const hPos = backboneNHPosition(ap)\r\n        if (hPos !== undefined) {\r\n          hPositions.push(hPos)\r\n          hCharges.push(nHCharge * ap.occupancy)\r\n        }\r\n      }\r\n    })\r\n\r\n    const bbox = this.structure.getBoundingBox()\r\n    bbox.expandByScalar(nHBondDistance) // Worst case\r\n\r\n    // SpatialHash requires x,y,z and count\r\n    const hStore = buildStoreLike(hPositions)\r\n    const hHash = new SpatialHash(hStore, bbox)\r\n    const hash = new SpatialHash(this.structure.atomStore, bbox)\r\n\r\n    const ap = this.atomProxy\r\n    const delta = new Vector3()\r\n    const maxRadius2 = maxRadius * maxRadius\r\n\r\n    this.positionColor = function (v) {\r\n      let p = 0.0\r\n      const neighbours = hash.within(v.x, v.y, v.z, maxRadius)\r\n\r\n      for (let i = 0; i < neighbours.length; i++) {\r\n        const neighbour = neighbours[ i ]\r\n        const charge = charges[ neighbour ]\r\n        if (charge !== 0.0) {\r\n          ap.index = neighbour\r\n          delta.x = v.x - ap.x\r\n          delta.y = v.y - ap.y\r\n          delta.z = v.z - ap.z\r\n          const r2 = delta.lengthSq()\r\n          if (r2 < maxRadius2) {\r\n            p += charge / r2\r\n          }\r\n        }\r\n      }\r\n\r\n      const hNeighbours = hHash.within(v.x, v.y, v.z, maxRadius)\r\n      for (let i = 0; i < hNeighbours.length; i++) {\r\n        const neighbour = hNeighbours[ i ]\r\n        delta.x = v.x - hStore.x[ neighbour ]\r\n        delta.y = v.y - hStore.y[ neighbour ]\r\n        delta.z = v.z - hStore.z[ neighbour ]\r\n        const r2 = delta.lengthSq()\r\n        if (r2 < maxRadius2) {\r\n          p += hCharges[ neighbour ] / r2\r\n        }\r\n      }\r\n      return scale(p)\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('electrostatic', ElectrostaticColormaker)\r\n\r\nexport default ElectrostaticColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/electrostatic-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 807,
    "kind": "variable",
    "name": "partialCharges",
    "memberof": "src/color/electrostatic-colormaker.js",
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~partialCharges",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 808,
    "kind": "variable",
    "name": "maxRadius",
    "memberof": "src/color/electrostatic-colormaker.js",
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~maxRadius",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 809,
    "kind": "variable",
    "name": "nHBondDistance",
    "memberof": "src/color/electrostatic-colormaker.js",
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~nHBondDistance",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 810,
    "kind": "variable",
    "name": "nHCharge",
    "memberof": "src/color/electrostatic-colormaker.js",
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~nHCharge",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 811,
    "kind": "function",
    "name": "backboneNHPosition",
    "memberof": "src/color/electrostatic-colormaker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~backboneNHPosition",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": "Populates position vector with location of implicit or explicit H\nReturns position or undefined if not able to locate H",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "ap",
        "description": "the nitrogen atom"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "position",
        "description": "optional target"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vectors",
        "undefined"
      ],
      "spread": false,
      "description": "the hydrogen atom position"
    },
    "ignore": true
  },
  {
    "__docId__": 812,
    "kind": "function",
    "name": "buildStoreLike",
    "memberof": "src/color/electrostatic-colormaker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~buildStoreLike",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": null,
    "description": "Takes an array of Vector3 objects and\nconverts to an object that looks like an AtomStore",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3[]"
        ],
        "spread": false,
        "optional": false,
        "name": "positions",
        "description": "array of positions"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "AtomStore-like object"
    },
    "ignore": true
  },
  {
    "__docId__": 813,
    "kind": "class",
    "name": "ElectrostaticColormaker",
    "memberof": "src/color/electrostatic-colormaker.js",
    "static": true,
    "longname": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/electrostatic-colormaker.js",
    "importStyle": "ElectrostaticColormaker",
    "description": "Color a surface by electrostatic charge. This is a highly approximate\ncalculation! The partial charges are CHARMM with hydrogens added to heavy\natoms and hydrogen positions generated for amides.\n\n__Name:__ _electrostatic_",
    "examples": [
      "stage.loadFile( \"rcsb://3dqb\" ).then( function( o ){\n    o.addRepresentation( \"surface\", { colorScheme: \"electrostatic\" } );\n    o.autoView();\n} );"
    ],
    "lineNumber": 209,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 814,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 210,
    "undocument": true
  },
  {
    "__docId__": 815,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker",
    "static": false,
    "longname": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true
  },
  {
    "__docId__": 816,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker",
    "static": false,
    "longname": "src/color/electrostatic-colormaker.js~ElectrostaticColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 817,
    "kind": "file",
    "name": "src/color/element-colormaker.js",
    "content": "/**\r\n * @file Element Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (or 0xFFFFFF)\r\nvar ElementColors = {\r\n  'H': 0xFFFFFF,\r\n  'HE': 0xD9FFFF,\r\n  'LI': 0xCC80FF,\r\n  'BE': 0xC2FF00,\r\n  'B': 0xFFB5B5,\r\n  'C': 0x909090,\r\n  'N': 0x3050F8,\r\n  'O': 0xFF0D0D,\r\n  'F': 0x90E050,\r\n  'NE': 0xB3E3F5,\r\n  'NA': 0xAB5CF2,\r\n  'MG': 0x8AFF00,\r\n  'AL': 0xBFA6A6,\r\n  'SI': 0xF0C8A0,\r\n  'P': 0xFF8000,\r\n  'S': 0xFFFF30,\r\n  'CL': 0x1FF01F,\r\n  'AR': 0x80D1E3,\r\n  'K': 0x8F40D4,\r\n  'CA': 0x3DFF00,\r\n  'SC': 0xE6E6E6,\r\n  'TI': 0xBFC2C7,\r\n  'V': 0xA6A6AB,\r\n  'CR': 0x8A99C7,\r\n  'MN': 0x9C7AC7,\r\n  'FE': 0xE06633,\r\n  'CO': 0xF090A0,\r\n  'NI': 0x50D050,\r\n  'CU': 0xC88033,\r\n  'ZN': 0x7D80B0,\r\n  'GA': 0xC28F8F,\r\n  'GE': 0x668F8F,\r\n  'AS': 0xBD80E3,\r\n  'SE': 0xFFA100,\r\n  'BR': 0xA62929,\r\n  'KR': 0x5CB8D1,\r\n  'RB': 0x702EB0,\r\n  'SR': 0x00FF00,\r\n  'Y': 0x94FFFF,\r\n  'ZR': 0x94E0E0,\r\n  'NB': 0x73C2C9,\r\n  'MO': 0x54B5B5,\r\n  'TC': 0x3B9E9E,\r\n  'RU': 0x248F8F,\r\n  'RH': 0x0A7D8C,\r\n  'PD': 0x006985,\r\n  'AG': 0xC0C0C0,\r\n  'CD': 0xFFD98F,\r\n  'IN': 0xA67573,\r\n  'SN': 0x668080,\r\n  'SB': 0x9E63B5,\r\n  'TE': 0xD47A00,\r\n  'I': 0x940094,\r\n  'XE': 0x940094,\r\n  'CS': 0x57178F,\r\n  'BA': 0x00C900,\r\n  'LA': 0x70D4FF,\r\n  'CE': 0xFFFFC7,\r\n  'PR': 0xD9FFC7,\r\n  'ND': 0xC7FFC7,\r\n  'PM': 0xA3FFC7,\r\n  'SM': 0x8FFFC7,\r\n  'EU': 0x61FFC7,\r\n  'GD': 0x45FFC7,\r\n  'TB': 0x30FFC7,\r\n  'DY': 0x1FFFC7,\r\n  'HO': 0x00FF9C,\r\n  'ER': 0x00E675,\r\n  'TM': 0x00D452,\r\n  'YB': 0x00BF38,\r\n  'LU': 0x00AB24,\r\n  'HF': 0x4DC2FF,\r\n  'TA': 0x4DA6FF,\r\n  'W': 0x2194D6,\r\n  'RE': 0x267DAB,\r\n  'OS': 0x266696,\r\n  'IR': 0x175487,\r\n  'PT': 0xD0D0E0,\r\n  'AU': 0xFFD123,\r\n  'HG': 0xB8B8D0,\r\n  'TL': 0xA6544D,\r\n  'PB': 0x575961,\r\n  'BI': 0x9E4FB5,\r\n  'PO': 0xAB5C00,\r\n  'AT': 0x754F45,\r\n  'RN': 0x428296,\r\n  'FR': 0x420066,\r\n  'RA': 0x007D00,\r\n  'AC': 0x70ABFA,\r\n  'TH': 0x00BAFF,\r\n  'PA': 0x00A1FF,\r\n  'U': 0x008FFF,\r\n  'NP': 0x0080FF,\r\n  'PU': 0x006BFF,\r\n  'AM': 0x545CF2,\r\n  'CM': 0x785CE3,\r\n  'BK': 0x8A4FE3,\r\n  'CF': 0xA136D4,\r\n  'ES': 0xB31FD4,\r\n  'FM': 0xB31FBA,\r\n  'MD': 0xB30DA6,\r\n  'NO': 0xBD0D87,\r\n  'LR': 0xC70066,\r\n  'RF': 0xCC0059,\r\n  'DB': 0xD1004F,\r\n  'SG': 0xD90045,\r\n  'BH': 0xE00038,\r\n  'HS': 0xE6002E,\r\n  'MT': 0xEB0026,\r\n  'DS': 0xFFFFFF,\r\n  'RG': 0xFFFFFF,\r\n  'CN': 0xFFFFFF,\r\n  'UUT': 0xFFFFFF,\r\n  'FL': 0xFFFFFF,\r\n  'UUP': 0xFFFFFF,\r\n  'LV': 0xFFFFFF,\r\n  'UUH': 0xFFFFFF,\r\n\r\n  'D': 0xFFFFC0,\r\n  'T': 0xFFFFA0\r\n}\r\nvar DefaultElementColor = 0xFFFFFF\r\n\r\n/**\r\n * Color by element\r\n */\r\nclass ElementColormaker extends Colormaker {\r\n  constructor (params) {\r\n    var p = params || {}\r\n    p.value = defaults(p.value, ElementColors.C)\r\n\r\n    super(p)\r\n  }\r\n\r\n  atomColor (a) {\r\n    var element = a.element\r\n\r\n    if (element === 'C') {\r\n      return this.value\r\n    } else {\r\n      return ElementColors[ element ] || DefaultElementColor\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('element', ElementColormaker)\r\n\r\nexport default ElementColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/element-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 818,
    "kind": "variable",
    "name": "ElementColors",
    "memberof": "src/color/element-colormaker.js",
    "static": true,
    "longname": "src/color/element-colormaker.js~ElementColors",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/element-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 819,
    "kind": "variable",
    "name": "DefaultElementColor",
    "memberof": "src/color/element-colormaker.js",
    "static": true,
    "longname": "src/color/element-colormaker.js~DefaultElementColor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/element-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 820,
    "kind": "class",
    "name": "ElementColormaker",
    "memberof": "src/color/element-colormaker.js",
    "static": true,
    "longname": "src/color/element-colormaker.js~ElementColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/element-colormaker.js",
    "importStyle": "ElementColormaker",
    "description": "Color by element",
    "lineNumber": 139,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 821,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/element-colormaker.js~ElementColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/element-colormaker.js~ElementColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 822,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/element-colormaker.js~ElementColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/element-colormaker.js~ElementColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 823,
    "kind": "file",
    "name": "src/color/entityindex-colormaker.js",
    "content": "/**\r\n * @file Entityindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by entiry index\r\n */\r\nclass EntityindexColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'Spectral'\r\n    }\r\n    if (!params.domain) {\r\n      this.domain = [ 0, this.structure.entityList.length - 1 ]\r\n    }\r\n    var entityindexScale = this.getScale()\r\n\r\n    this.atomColor = function (a) {\r\n      return entityindexScale(a.entityIndex)\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('entityindex', EntityindexColormaker)\r\n\r\nexport default EntityindexColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/entityindex-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 824,
    "kind": "class",
    "name": "EntityindexColormaker",
    "memberof": "src/color/entityindex-colormaker.js",
    "static": true,
    "longname": "src/color/entityindex-colormaker.js~EntityindexColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/entityindex-colormaker.js",
    "importStyle": "EntityindexColormaker",
    "description": "Color by entiry index",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 825,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/entityindex-colormaker.js~EntityindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/entityindex-colormaker.js~EntityindexColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 826,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/entityindex-colormaker.js~EntityindexColormaker",
    "static": false,
    "longname": "src/color/entityindex-colormaker.js~EntityindexColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 827,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/entityindex-colormaker.js~EntityindexColormaker",
    "static": false,
    "longname": "src/color/entityindex-colormaker.js~EntityindexColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 828,
    "kind": "file",
    "name": "src/color/entitytype-colormaker.js",
    "content": "/**\r\n * @file Entitytype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\nimport {\r\n    PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Color by entity type\r\n */\r\nclass EntitytypeColormaker extends Colormaker {\r\n  atomColor (a) {\r\n    var e = a.entity\r\n    var et = e ? e.entityType : undefined\r\n    switch (et) {\r\n      case PolymerEntity:\r\n        return 0x7fc97f\r\n      case NonPolymerEntity:\r\n        return 0xfdc086\r\n      case MacrolideEntity:\r\n        return 0xbeaed4\r\n      case WaterEntity:\r\n        return 0x386cb0\r\n      default:\r\n        return 0xffff99\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('entitytype', EntitytypeColormaker)\r\n\r\nexport default EntitytypeColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/entitytype-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 829,
    "kind": "class",
    "name": "EntitytypeColormaker",
    "memberof": "src/color/entitytype-colormaker.js",
    "static": true,
    "longname": "src/color/entitytype-colormaker.js~EntitytypeColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/entitytype-colormaker.js",
    "importStyle": "EntitytypeColormaker",
    "description": "Color by entity type",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 830,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/entitytype-colormaker.js~EntitytypeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/entitytype-colormaker.js~EntitytypeColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 831,
    "kind": "file",
    "name": "src/color/geoquality-colormaker.js",
    "content": "/**\r\n * @file Geoquality Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\nimport { countSetBits } from '../math/math-utils.js'\r\n\r\n/**\r\n * Color by validation gometry quality\r\n */\r\nclass GeoqualityColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    var val = params.structure.validation || {}\r\n    this.geoAtomDict = val.geoAtomDict || {}\r\n    this.geoDict = val.geoDict || {}\r\n  }\r\n\r\n  atomColor (atom) {\r\n    let sele = atom.resno\r\n    if (atom.inscode) sele += '^' + atom.inscode\r\n    if (atom.chainname) sele += ':' + atom.chainname\r\n    sele += '/' + atom.modelIndex\r\n\r\n    let geoProblemCount\r\n    const geoAtom = this.geoAtomDict[ sele ]\r\n    if (geoAtom !== undefined) {\r\n      let atomProblems = geoAtom[ atom.atomname ] || 0\r\n      geoProblemCount = countSetBits(atomProblems)\r\n    } else {\r\n      geoProblemCount = this.geoDict[ sele ] || 0\r\n    }\r\n\r\n    if (geoProblemCount === 0) {\r\n      return 0x2166ac\r\n    } else if (geoProblemCount === 1) {\r\n      return 0xfee08b\r\n    } else if (geoProblemCount === 2) {\r\n      return 0xf46d43\r\n    } else if (geoProblemCount >= 3) {\r\n      return 0xa50026\r\n    }\r\n    return 0x909090\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('geoquality', GeoqualityColormaker)\r\n\r\nexport default GeoqualityColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/geoquality-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 832,
    "kind": "class",
    "name": "GeoqualityColormaker",
    "memberof": "src/color/geoquality-colormaker.js",
    "static": true,
    "longname": "src/color/geoquality-colormaker.js~GeoqualityColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/geoquality-colormaker.js",
    "importStyle": "GeoqualityColormaker",
    "description": "Color by validation gometry quality",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 833,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/geoquality-colormaker.js~GeoqualityColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/geoquality-colormaker.js~GeoqualityColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 834,
    "kind": "member",
    "name": "geoAtomDict",
    "memberof": "src/color/geoquality-colormaker.js~GeoqualityColormaker",
    "static": false,
    "longname": "src/color/geoquality-colormaker.js~GeoqualityColormaker#geoAtomDict",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 835,
    "kind": "member",
    "name": "geoDict",
    "memberof": "src/color/geoquality-colormaker.js~GeoqualityColormaker",
    "static": false,
    "longname": "src/color/geoquality-colormaker.js~GeoqualityColormaker#geoDict",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 836,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/geoquality-colormaker.js~GeoqualityColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/geoquality-colormaker.js~GeoqualityColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 837,
    "kind": "file",
    "name": "src/color/hydrophobicity-colormaker.js",
    "content": "/**\r\n * @file Hydrophobicity Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\nimport {\r\n    ResidueHydrophobicity, DefaultResidueHydrophobicity\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Color by hydrophobicity\r\n */\r\nclass HydrophobicityColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'RdYlGn'\r\n    }\r\n\r\n    var name\r\n    var idx = 0  // 0: DGwif, 1: DGwoct, 2: Oct-IF\r\n\r\n    var resHF = {}\r\n    for (name in ResidueHydrophobicity) {\r\n      resHF[ name ] = ResidueHydrophobicity[ name ][ idx ]\r\n    }\r\n\r\n    if (!params.domain) {\r\n      var val\r\n      var min = Infinity\r\n      var max = -Infinity\r\n\r\n      for (name in resHF) {\r\n        val = resHF[ name ]\r\n        min = Math.min(min, val)\r\n        max = Math.max(max, val)\r\n      }\r\n\r\n      this.domain = [ min, 0, max ]\r\n    }\r\n\r\n    var hfScale = this.getScale()\r\n\r\n    this.atomColor = function (a) {\r\n      return hfScale(resHF[ a.resname ] || DefaultResidueHydrophobicity)\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('hydrophobicity', HydrophobicityColormaker)\r\n\r\nexport default HydrophobicityColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/hydrophobicity-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 838,
    "kind": "class",
    "name": "HydrophobicityColormaker",
    "memberof": "src/color/hydrophobicity-colormaker.js",
    "static": true,
    "longname": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/hydrophobicity-colormaker.js",
    "importStyle": "HydrophobicityColormaker",
    "description": "Color by hydrophobicity",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 839,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 840,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker",
    "static": false,
    "longname": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 841,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker",
    "static": false,
    "longname": "src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 842,
    "kind": "file",
    "name": "src/color/modelindex-colormaker.js",
    "content": "/**\r\n * @file Modelindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by model index\r\n */\r\nclass ModelindexColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'rainbow'\r\n    }\r\n    if (!params.domain) {\r\n      this.domain = [ 0, this.structure.modelStore.count ]\r\n    }\r\n    var modelindexScale = this.getScale()\r\n\r\n    this.atomColor = function (a) {\r\n      return modelindexScale(a.modelIndex)\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('modelindex', ModelindexColormaker)\r\n\r\nexport default ModelindexColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/modelindex-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 843,
    "kind": "class",
    "name": "ModelindexColormaker",
    "memberof": "src/color/modelindex-colormaker.js",
    "static": true,
    "longname": "src/color/modelindex-colormaker.js~ModelindexColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/modelindex-colormaker.js",
    "importStyle": "ModelindexColormaker",
    "description": "Color by model index",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 844,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/modelindex-colormaker.js~ModelindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/modelindex-colormaker.js~ModelindexColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 845,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/modelindex-colormaker.js~ModelindexColormaker",
    "static": false,
    "longname": "src/color/modelindex-colormaker.js~ModelindexColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 846,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/modelindex-colormaker.js~ModelindexColormaker",
    "static": false,
    "longname": "src/color/modelindex-colormaker.js~ModelindexColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 847,
    "kind": "file",
    "name": "src/color/moleculetype-colormaker.js",
    "content": "/**\r\n * @file Moleculetype Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\nimport {\r\n    WaterType, IonType, ProteinType, RnaType, DnaType, SaccharideType\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Color by molecule type\r\n */\r\nclass MoleculetypeColormaker extends Colormaker {\r\n  atomColor (a) {\r\n    switch (a.residueType.moleculeType) {\r\n      case WaterType:\r\n        return 0x386cb0\r\n      case IonType:\r\n        return 0xf0027f\r\n      case ProteinType:\r\n        return 0xbeaed4\r\n      case RnaType:\r\n        return 0xfdc086\r\n      case DnaType:\r\n        return 0xbf5b17\r\n      case SaccharideType:\r\n        return 0x7fc97f\r\n      default:\r\n        return 0xffff99\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('moleculetype', MoleculetypeColormaker)\r\n\r\nexport default MoleculetypeColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/moleculetype-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 848,
    "kind": "class",
    "name": "MoleculetypeColormaker",
    "memberof": "src/color/moleculetype-colormaker.js",
    "static": true,
    "longname": "src/color/moleculetype-colormaker.js~MoleculetypeColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/moleculetype-colormaker.js",
    "importStyle": "MoleculetypeColormaker",
    "description": "Color by molecule type",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 849,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/moleculetype-colormaker.js~MoleculetypeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/moleculetype-colormaker.js~MoleculetypeColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 850,
    "kind": "file",
    "name": "src/color/occupancy-colormaker.js",
    "content": "/**\r\n * @file Occupancy Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by occupancy\r\n */\r\nclass OccupancyColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'PuBu'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      this.domain = [ 0.0, 1.0 ]\r\n    }\r\n\r\n    var occupancyScale = this.getScale()\r\n\r\n    this.atomColor = function (a) {\r\n      return occupancyScale(a.occupancy)\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('occupancy', OccupancyColormaker)\r\n\r\nexport default OccupancyColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/occupancy-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 851,
    "kind": "class",
    "name": "OccupancyColormaker",
    "memberof": "src/color/occupancy-colormaker.js",
    "static": true,
    "longname": "src/color/occupancy-colormaker.js~OccupancyColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/occupancy-colormaker.js",
    "importStyle": "OccupancyColormaker",
    "description": "Color by occupancy",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 852,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/occupancy-colormaker.js~OccupancyColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/occupancy-colormaker.js~OccupancyColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 853,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/occupancy-colormaker.js~OccupancyColormaker",
    "static": false,
    "longname": "src/color/occupancy-colormaker.js~OccupancyColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 854,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/occupancy-colormaker.js~OccupancyColormaker",
    "static": false,
    "longname": "src/color/occupancy-colormaker.js~OccupancyColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 855,
    "kind": "file",
    "name": "src/color/partialcharge-colormaker.js",
    "content": "/**\r\n * @file Partialcharge Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by partial charge. The {@link AtomProxy.partialCharge} property is used for coloring.\r\n * The default domain is [-1, 1].\r\n *\r\n * __Name:__ _partialCharge_\r\n *\r\n * @example\r\n * stage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n *   o.addRepresentation(\"ball+stick\", {colorScheme: \"partialCharge\"});\r\n *   o.autoView();\r\n * });\r\n */\r\nclass PartialchargeColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'rwb'\r\n    }\r\n\r\n    if (!params.domain) {\r\n      this.domain = [-1, 1]\r\n    }\r\n\r\n    this.partialchargeScale = this.getScale()\r\n  }\r\n\r\n  atomColor (a) {\r\n    return this.partialchargeScale(a.partialCharge)\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('partialcharge', PartialchargeColormaker)\r\n\r\nexport default PartialchargeColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/partialcharge-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 856,
    "kind": "class",
    "name": "PartialchargeColormaker",
    "memberof": "src/color/partialcharge-colormaker.js",
    "static": true,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/partialcharge-colormaker.js",
    "importStyle": "PartialchargeColormaker",
    "description": "Color by partial charge. The {@link AtomProxy.partialCharge} property is used for coloring.\nThe default domain is [-1, 1].\n\n__Name:__ _partialCharge_",
    "examples": [
      "stage.loadFile(\"rcsb://1crn\").then(function (o) {\n  o.addRepresentation(\"ball+stick\", {colorScheme: \"partialCharge\"});\n  o.autoView();\n});"
    ],
    "lineNumber": 22,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 857,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 858,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "static": false,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 859,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "static": false,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 860,
    "kind": "member",
    "name": "partialchargeScale",
    "memberof": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "static": false,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker#partialchargeScale",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 861,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/partialcharge-colormaker.js~PartialchargeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/partialcharge-colormaker.js~PartialchargeColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 862,
    "kind": "file",
    "name": "src/color/random-colormaker.js",
    "content": "/**\r\n * @file Random Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\nfunction randomColor () {\r\n  return Math.random() * 0xFFFFFF\r\n}\r\n\r\n/**\r\n * Class by random color\r\n */\r\nclass RandomColormaker extends Colormaker {\r\n    /**\r\n     * get color for an atom\r\n     * @return {Integer} random hex color\r\n     */\r\n  atomColor () {\r\n    return randomColor()\r\n  }\r\n\r\n    /**\r\n     * get color for volume cell\r\n     * @return {Integer} random hex color\r\n     */\r\n  volumeColor () {\r\n    return randomColor()\r\n  }\r\n\r\n    /**\r\n     * get color for coordinates in space\r\n     * @return {Integer} random hex color\r\n     */\r\n  positionColor () {\r\n    return randomColor()\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('random', RandomColormaker)\r\n\r\nexport default RandomColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/random-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 863,
    "kind": "function",
    "name": "randomColor",
    "memberof": "src/color/random-colormaker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/color/random-colormaker.js~randomColor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/random-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 864,
    "kind": "class",
    "name": "RandomColormaker",
    "memberof": "src/color/random-colormaker.js",
    "static": true,
    "longname": "src/color/random-colormaker.js~RandomColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/random-colormaker.js",
    "importStyle": "RandomColormaker",
    "description": "Class by random color",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 865,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/random-colormaker.js~RandomColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/random-colormaker.js~RandomColormaker#atomColor",
    "access": "public",
    "description": "get color for an atom",
    "lineNumber": 22,
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "random hex color"
    }
  },
  {
    "__docId__": 866,
    "kind": "method",
    "name": "volumeColor",
    "memberof": "src/color/random-colormaker.js~RandomColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/random-colormaker.js~RandomColormaker#volumeColor",
    "access": "public",
    "description": "get color for volume cell",
    "lineNumber": 30,
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "random hex color"
    }
  },
  {
    "__docId__": 867,
    "kind": "method",
    "name": "positionColor",
    "memberof": "src/color/random-colormaker.js~RandomColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/random-colormaker.js~RandomColormaker#positionColor",
    "access": "public",
    "description": "get color for coordinates in space",
    "lineNumber": 38,
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "random hex color"
    }
  },
  {
    "__docId__": 868,
    "kind": "file",
    "name": "src/color/residueindex-colormaker.js",
    "content": "/**\r\n * @file Residueindex Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by residue index\r\n */\r\nclass ResidueindexColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    if (!params.scale) {\r\n      this.scale = 'rainbow'\r\n      this.reverse = defaults(params.reverse, true)\r\n    }\r\n    if (!params.domain) {\r\n      const scalePerChain = {}\r\n\r\n      this.structure.eachChain(cp => {\r\n        this.domain = [ cp.residueOffset, cp.residueEnd ]\r\n        scalePerChain[ cp.index ] = this.getScale()\r\n      })\r\n\r\n      this.atomColor = function (a) {\r\n        return scalePerChain[ a.chainIndex ](a.residueIndex)\r\n      }\r\n    } else {\r\n      const residueindexScale = this.getScale()\r\n\r\n      this.atomColor = function (a) {\r\n        return residueindexScale(a.residueIndex)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('residueindex', ResidueindexColormaker)\r\n\r\nexport default ResidueindexColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/residueindex-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 869,
    "kind": "class",
    "name": "ResidueindexColormaker",
    "memberof": "src/color/residueindex-colormaker.js",
    "static": true,
    "longname": "src/color/residueindex-colormaker.js~ResidueindexColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/residueindex-colormaker.js",
    "importStyle": "ResidueindexColormaker",
    "description": "Color by residue index",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 870,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/residueindex-colormaker.js~ResidueindexColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/residueindex-colormaker.js~ResidueindexColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 871,
    "kind": "member",
    "name": "scale",
    "memberof": "src/color/residueindex-colormaker.js~ResidueindexColormaker",
    "static": false,
    "longname": "src/color/residueindex-colormaker.js~ResidueindexColormaker#scale",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 872,
    "kind": "member",
    "name": "reverse",
    "memberof": "src/color/residueindex-colormaker.js~ResidueindexColormaker",
    "static": false,
    "longname": "src/color/residueindex-colormaker.js~ResidueindexColormaker#reverse",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 873,
    "kind": "member",
    "name": "domain",
    "memberof": "src/color/residueindex-colormaker.js~ResidueindexColormaker",
    "static": false,
    "longname": "src/color/residueindex-colormaker.js~ResidueindexColormaker#domain",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 874,
    "kind": "file",
    "name": "src/color/resname-colormaker.js",
    "content": "/**\r\n * @file Resname Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (protein + shapely for nucleic)\r\nvar ResidueColors = {\r\n  'ALA': 0x8CFF8C,\r\n  'ARG': 0x00007C,\r\n  'ASN': 0xFF7C70,\r\n  'ASP': 0xA00042,\r\n  'CYS': 0xFFFF70,\r\n  'GLN': 0xFF4C4C,\r\n  'GLU': 0x660000,\r\n  'GLY': 0xFFFFFF,\r\n  'HIS': 0x7070FF,\r\n  'ILE': 0x004C00,\r\n  'LEU': 0x455E45,\r\n  'LYS': 0x4747B8,\r\n  'MET': 0xB8A042,\r\n  'PHE': 0x534C52,\r\n  'PRO': 0x525252,\r\n  'SER': 0xFF7042,\r\n  'THR': 0xB84C00,\r\n  'TRP': 0x4F4600,\r\n  'TYR': 0x8C704C,\r\n  'VAL': 0xFF8CFF,\r\n\r\n  'ASX': 0xFF00FF,\r\n  'GLX': 0xFF00FF,\r\n  'ASH': 0xFF00FF,\r\n  'GLH': 0xFF00FF,\r\n\r\n  'A': 0xA0A0FF,\r\n  'G': 0xFF7070,\r\n  'I': 0x80FFFF,\r\n  'C': 0xFF8C4B,\r\n  'T': 0xA0FFA0,\r\n  'U': 0xFF8080,\r\n\r\n  'DA': 0xA0A0FF,\r\n  'DG': 0xFF7070,\r\n  'DI': 0x80FFFF,\r\n  'DC': 0xFF8C4B,\r\n  'DT': 0xA0FFA0,\r\n  'DU': 0xFF8080\r\n}\r\nvar DefaultResidueColor = 0xFF00FF\r\n\r\n/**\r\n * Color by residue name\r\n */\r\nclass ResnameColormaker extends Colormaker {\r\n  atomColor (a) {\r\n    return ResidueColors[ a.resname ] || DefaultResidueColor\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('resname', ResnameColormaker)\r\n\r\nexport default ResnameColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/resname-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 875,
    "kind": "variable",
    "name": "ResidueColors",
    "memberof": "src/color/resname-colormaker.js",
    "static": true,
    "longname": "src/color/resname-colormaker.js~ResidueColors",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/resname-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 876,
    "kind": "variable",
    "name": "DefaultResidueColor",
    "memberof": "src/color/resname-colormaker.js",
    "static": true,
    "longname": "src/color/resname-colormaker.js~DefaultResidueColor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/resname-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 877,
    "kind": "class",
    "name": "ResnameColormaker",
    "memberof": "src/color/resname-colormaker.js",
    "static": true,
    "longname": "src/color/resname-colormaker.js~ResnameColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/resname-colormaker.js",
    "importStyle": "ResnameColormaker",
    "description": "Color by residue name",
    "lineNumber": 57,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 878,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/resname-colormaker.js~ResnameColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/resname-colormaker.js~ResnameColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 879,
    "kind": "file",
    "name": "src/color/selection-colormaker.js",
    "content": "/**\r\n * @file Selection Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Selection from '../selection/selection.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color based on {@link Selection}\r\n */\r\nclass SelectionColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    const dataList = params.dataList || []\r\n\r\n    this.colormakerList = []\r\n    this.selectionList = []\r\n\r\n    dataList.forEach(pair => {\r\n      const [ scheme, sele, params = {} ] = pair\r\n\r\n      if (ColormakerRegistry.hasScheme(scheme)) {\r\n        Object.assign(params, {\r\n          scheme: scheme,\r\n          structure: this.structure\r\n        })\r\n      } else {\r\n        Object.assign(params, {\r\n          scheme: 'uniform',\r\n          value: new Color(scheme).getHex()\r\n        })\r\n      }\r\n\r\n      this.colormakerList.push(ColormakerRegistry.getScheme(params))\r\n      this.selectionList.push(new Selection(sele))\r\n    })\r\n  }\r\n\r\n  atomColor (a) {\r\n    for (let i = 0, n = this.selectionList.length; i < n; ++i) {\r\n      if (this.selectionList[ i ].test(a)) {\r\n        return this.colormakerList[ i ].atomColor(a)\r\n      }\r\n    }\r\n\r\n    return 0xFFFFFF\r\n  }\r\n}\r\n\r\nexport default SelectionColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/selection-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 880,
    "kind": "class",
    "name": "SelectionColormaker",
    "memberof": "src/color/selection-colormaker.js",
    "static": true,
    "longname": "src/color/selection-colormaker.js~SelectionColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/selection-colormaker.js",
    "importStyle": "SelectionColormaker",
    "description": "Color based on {@link Selection}",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 881,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/selection-colormaker.js~SelectionColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/selection-colormaker.js~SelectionColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 882,
    "kind": "member",
    "name": "colormakerList",
    "memberof": "src/color/selection-colormaker.js~SelectionColormaker",
    "static": false,
    "longname": "src/color/selection-colormaker.js~SelectionColormaker#colormakerList",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 883,
    "kind": "member",
    "name": "selectionList",
    "memberof": "src/color/selection-colormaker.js~SelectionColormaker",
    "static": false,
    "longname": "src/color/selection-colormaker.js~SelectionColormaker#selectionList",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 884,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/selection-colormaker.js~SelectionColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/selection-colormaker.js~SelectionColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 885,
    "kind": "file",
    "name": "src/color/sstruc-colormaker.js",
    "content": "/**\r\n * @file Sstruc Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n// from Jmol http://jmol.sourceforge.net/jscolors/ (shapely)\r\nvar StructureColors = {\r\n  'alphaHelix': 0xFF0080,\r\n  'threeTenHelix': 0xA00080,\r\n  'piHelix': 0x600080,\r\n  'betaStrand': 0xFFC800,\r\n  'betaTurn': 0x6080FF,\r\n  'coil': 0xFFFFFF,\r\n\r\n  'dna': 0xAE00FE,\r\n  'rna': 0xFD0162,\r\n\r\n  'carbohydrate': 0xA6A6FA\r\n}\r\nvar DefaultStructureColor = 0x808080\r\n\r\n/**\r\n * Color by secondary structure\r\n */\r\nclass SstrucColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    this.rp = this.structure.getResidueProxy()\r\n  }\r\n\r\n  atomColor (ap) {\r\n    var sstruc = ap.sstruc\r\n    var rp = this.rp\r\n\r\n    if (sstruc === 'h') {\r\n      return StructureColors.alphaHelix\r\n    } else if (sstruc === 'g') {\r\n      return StructureColors.threeTenHelix\r\n    } else if (sstruc === 'i') {\r\n      return StructureColors.piHelix\r\n    } else if (sstruc === 'e' || sstruc === 'b') {\r\n      return StructureColors.betaStrand\r\n    } else if (sstruc === 't') {\r\n      return StructureColors.betaTurn\r\n    } else {\r\n      rp.index = ap.residueIndex\r\n      if (rp.isDna()) {\r\n        return StructureColors.dna\r\n      } else if (rp.isRna()) {\r\n        return StructureColors.rna\r\n      } else if (rp.isSaccharide()) {\r\n        return StructureColors.carbohydrate\r\n      } else if (rp.isProtein() || sstruc === 's' || sstruc === 'l') {\r\n        return StructureColors.coil\r\n      } else {\r\n        return DefaultStructureColor\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('sstruc', SstrucColormaker)\r\n\r\nexport default SstrucColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/sstruc-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 886,
    "kind": "variable",
    "name": "StructureColors",
    "memberof": "src/color/sstruc-colormaker.js",
    "static": true,
    "longname": "src/color/sstruc-colormaker.js~StructureColors",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/sstruc-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 887,
    "kind": "variable",
    "name": "DefaultStructureColor",
    "memberof": "src/color/sstruc-colormaker.js",
    "static": true,
    "longname": "src/color/sstruc-colormaker.js~DefaultStructureColor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/color/sstruc-colormaker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 888,
    "kind": "class",
    "name": "SstrucColormaker",
    "memberof": "src/color/sstruc-colormaker.js",
    "static": true,
    "longname": "src/color/sstruc-colormaker.js~SstrucColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/sstruc-colormaker.js",
    "importStyle": "SstrucColormaker",
    "description": "Color by secondary structure",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 889,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/sstruc-colormaker.js~SstrucColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/sstruc-colormaker.js~SstrucColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 890,
    "kind": "member",
    "name": "rp",
    "memberof": "src/color/sstruc-colormaker.js~SstrucColormaker",
    "static": false,
    "longname": "src/color/sstruc-colormaker.js~SstrucColormaker#rp",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 891,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/sstruc-colormaker.js~SstrucColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/sstruc-colormaker.js~SstrucColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 892,
    "kind": "file",
    "name": "src/color/uniform-colormaker.js",
    "content": "/**\r\n * @file Uniform Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by uniform color\r\n */\r\nclass UniformColormaker extends Colormaker {\r\n  atomColor () {\r\n    return this.value\r\n  }\r\n\r\n  bondColor () {\r\n    return this.value\r\n  }\r\n\r\n  valueColor () {\r\n    return this.value\r\n  }\r\n\r\n  volumeColor () {\r\n    return this.value\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('uniform', UniformColormaker)\r\n\r\nexport default UniformColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/uniform-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 893,
    "kind": "class",
    "name": "UniformColormaker",
    "memberof": "src/color/uniform-colormaker.js",
    "static": true,
    "longname": "src/color/uniform-colormaker.js~UniformColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/uniform-colormaker.js",
    "importStyle": "UniformColormaker",
    "description": "Color by uniform color",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 894,
    "kind": "method",
    "name": "atomColor",
    "memberof": "src/color/uniform-colormaker.js~UniformColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/uniform-colormaker.js~UniformColormaker#atomColor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 895,
    "kind": "method",
    "name": "bondColor",
    "memberof": "src/color/uniform-colormaker.js~UniformColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/uniform-colormaker.js~UniformColormaker#bondColor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 896,
    "kind": "method",
    "name": "valueColor",
    "memberof": "src/color/uniform-colormaker.js~UniformColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/uniform-colormaker.js~UniformColormaker#valueColor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 897,
    "kind": "method",
    "name": "volumeColor",
    "memberof": "src/color/uniform-colormaker.js~UniformColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/uniform-colormaker.js~UniformColormaker#volumeColor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 898,
    "kind": "file",
    "name": "src/color/value-colormaker.js",
    "content": "/**\r\n * @file Value Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by volume value\r\n */\r\nclass ValueColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n    this.valueScale = this.getScale()\r\n  }\r\n\r\n    /**\r\n     * return the color for a volume cell\r\n     * @param  {Integer} index - volume cell index\r\n     * @return {Integer} hex cell color\r\n     */\r\n  volumeColor (index) {\r\n    return this.valueScale(this.volume.data[ index ])\r\n  }\r\n}\r\n\r\nColormakerRegistry.add('value', ValueColormaker)\r\n\r\nexport default ValueColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/value-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 899,
    "kind": "class",
    "name": "ValueColormaker",
    "memberof": "src/color/value-colormaker.js",
    "static": true,
    "longname": "src/color/value-colormaker.js~ValueColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/value-colormaker.js",
    "importStyle": "ValueColormaker",
    "description": "Color by volume value",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 900,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/value-colormaker.js~ValueColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/value-colormaker.js~ValueColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 901,
    "kind": "member",
    "name": "valueScale",
    "memberof": "src/color/value-colormaker.js~ValueColormaker",
    "static": false,
    "longname": "src/color/value-colormaker.js~ValueColormaker#valueScale",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 902,
    "kind": "method",
    "name": "volumeColor",
    "memberof": "src/color/value-colormaker.js~ValueColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/value-colormaker.js~ValueColormaker#volumeColor",
    "access": "public",
    "description": "return the color for a volume cell",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "volume cell index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "hex cell color"
    }
  },
  {
    "__docId__": 903,
    "kind": "file",
    "name": "src/color/volume-colormaker.js",
    "content": "/**\r\n * @file Volume Colormaker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\nimport { lerp } from '../math/math-utils.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport Colormaker from './colormaker.js'\r\n\r\n/**\r\n * Color by volume position\r\n */\r\nclass VolumeColormaker extends Colormaker {\r\n  constructor (params) {\r\n    super(params)\r\n\r\n    var volume = this.volume\r\n\r\n    if (volume && volume.inverseMatrix) {\r\n      var valueScale = this.getScale()\r\n      var inverseMatrix = volume.inverseMatrix\r\n      var data = volume.data\r\n      var nx = volume.nx\r\n      var ny = volume.ny\r\n      var nxy = nx * ny\r\n      var vec = new Vector3()\r\n\r\n      this.positionColor = function (coords) {\r\n        vec.copy(coords)\r\n        vec.applyMatrix4(inverseMatrix)\r\n\r\n                // position of grid cell\r\n        var x0 = Math.floor(vec.x)\r\n        var y0 = Math.floor(vec.y)\r\n        var z0 = Math.floor(vec.z)\r\n\r\n                // Indices\r\n        var i = ((((z0 * ny) + y0) * nx) + x0)\r\n        var i1 = i + 1\r\n        var iy = i + nx\r\n        var iz = i + nxy\r\n        var i1y = iy + 1\r\n        var i1z = iz + 1\r\n        var iyz = iy + nxy\r\n        var i1yz = iyz + 1\r\n\r\n                // Values\r\n        var v = data[ i ]\r\n        var v1 = data[ i1 ]\r\n        var vy = data[ iy ]\r\n        var vz = data[ iz ]\r\n        var v1y = data[ i1y ]\r\n        var v1z = data[ i1z ]\r\n        var vyz = data[ iyz ]\r\n        var v1yz = data[ i1yz ]\r\n\r\n                // Position of point in fraction of grid\r\n        var xd = vec.x - x0\r\n        var yd = vec.y - y0\r\n        var zd = vec.z - z0\r\n\r\n                // 1st Dimension\r\n        var c00 = lerp(v, v1, xd)\r\n        var c01 = lerp(vz, v1z, xd)\r\n        var c10 = lerp(vy, v1y, xd)\r\n        var c11 = lerp(vyz, v1yz, xd)\r\n\r\n                // 2nd Dimension\r\n        var c0 = lerp(c00, c10, yd)\r\n        var c1 = lerp(c01, c11, yd)\r\n\r\n                // 3rd Dimension\r\n        var c = lerp(c0, c1, zd)\r\n\r\n        return valueScale(c)\r\n      }\r\n    } else {\r\n      var colorValue = this.value\r\n      this.positionColor = function () { return colorValue }\r\n    }\r\n  }\r\n\r\n    /**\r\n     * return the color for coordinates in space\r\n     * @param  {Vector3} coords - xyz coordinates\r\n     * @return {Integer} hex coords color\r\n     */\r\n  positionColor (/* coords */) {}\r\n}\r\n\r\nColormakerRegistry.add('volume', VolumeColormaker)\r\n\r\nexport default VolumeColormaker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/color/volume-colormaker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 904,
    "kind": "class",
    "name": "VolumeColormaker",
    "memberof": "src/color/volume-colormaker.js",
    "static": true,
    "longname": "src/color/volume-colormaker.js~VolumeColormaker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/color/volume-colormaker.js",
    "importStyle": "VolumeColormaker",
    "description": "Color by volume position",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/color/colormaker.js~Colormaker"
    ]
  },
  {
    "__docId__": 905,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/color/volume-colormaker.js~VolumeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/volume-colormaker.js~VolumeColormaker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 906,
    "kind": "method",
    "name": "positionColor",
    "memberof": "src/color/volume-colormaker.js~VolumeColormaker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/color/volume-colormaker.js~VolumeColormaker#positionColor",
    "access": "public",
    "description": "return the color for coordinates in space",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "coords",
        "description": "xyz coordinates"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "hex coords color"
    }
  },
  {
    "__docId__": 907,
    "kind": "file",
    "name": "src/component/annotation.js",
    "content": "/**\r\n * @file Annotation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { smoothstep } from '../math/math-utils.js'\r\n\r\n/**\r\n * Annotation HTML element floating on top of a position rendered in 3d\r\n */\r\nclass Annotation {\r\n    /**\r\n     * @param {Component} component - the associated component\r\n     * @param {Vector3} position - position in 3d\r\n     * @param {String|Element} content - HTML content\r\n     * @param {Object} [params] - parameters\r\n     * @param {Integer} params.offsetX - 2d offset in x direction\r\n     * @param {Integer} params.offsetY - 2d offset in y direction\r\n     * @param {Boolean} params.visible - visibility flag\r\n     */\r\n  constructor (component, position, content, params) {\r\n    const p = params || {}\r\n\r\n    this.offsetX = defaults(p.offsetX, 0)\r\n    this.offsetY = defaults(p.offsetY, 0)\r\n    this.visible = defaults(p.visible, true)\r\n\r\n    this.component = component\r\n    this.stage = component.stage\r\n    this.viewer = this.stage.viewer\r\n    this.position = position\r\n\r\n    this._viewerPosition = new Vector3()\r\n    this._updateViewerPosition()\r\n    this._canvasPosition = new Vector3()\r\n    this._cameraPosition = new Vector3()\r\n\r\n    this.element = document.createElement('div')\r\n    Object.assign(this.element.style, {\r\n      display: 'block',\r\n      position: 'fixed',\r\n      zIndex: 1 + (parseInt(this.viewer.container.style.zIndex) || 0),\r\n      pointerEvents: 'none',\r\n      backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n      color: 'lightgrey',\r\n      padding: '8px',\r\n      fontFamily: 'sans-serif',\r\n      left: '-10000px'\r\n    })\r\n\r\n    this.viewer.container.appendChild(this.element)\r\n    this.setContent(content)\r\n    this.updateVisibility()\r\n    this.viewer.signals.ticked.add(this._update, this)\r\n    this.component.signals.matrixChanged.add(this._updateViewerPosition, this)\r\n  }\r\n\r\n    /**\r\n     * Set HTML content of the annotation\r\n     * @param {String|Element} value - HTML content\r\n     * @return {undefined}\r\n     */\r\n  setContent (value) {\r\n    const displayValue = this.element.style.display\r\n    if (displayValue === 'none') {\r\n      this.element.style.left = '-10000px'\r\n      this.element.style.display = 'block'\r\n    }\r\n\r\n    if (value instanceof window.Element) {\r\n      this.element.innerHTML = ''\r\n      this.element.appendChild(value)\r\n    } else {\r\n      this.element.innerHTML = value\r\n    }\r\n\r\n    this._clientRect = this.element.getBoundingClientRect()\r\n\r\n    if (displayValue === 'none') {\r\n      this.element.style.display = displayValue\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Set visibility of the annotation\r\n     * @param {Boolean} value - visibility flag\r\n     * @return {undefined}\r\n     */\r\n  setVisibility (value) {\r\n    this.visible = value\r\n    this.updateVisibility()\r\n  }\r\n\r\n  getVisibility () {\r\n    return this.visible && this.component.visible\r\n  }\r\n\r\n  updateVisibility () {\r\n    this.element.style.display = this.getVisibility() ? 'block' : 'none'\r\n  }\r\n\r\n  _updateViewerPosition () {\r\n    this._viewerPosition\r\n            .copy(this.position)\r\n            .applyMatrix4(this.component.matrix)\r\n  }\r\n\r\n  _update () {\r\n    if (!this.getVisibility()) return\r\n\r\n    const s = this.element.style\r\n    const cp = this._canvasPosition\r\n    const vp = this._viewerPosition\r\n    const cr = this._clientRect\r\n\r\n    this._cameraPosition.copy(vp)\r\n            .add(this.viewer.translationGroup.position)\r\n            .applyMatrix4(this.viewer.rotationGroup.matrix)\r\n            .sub(this.viewer.camera.position)\r\n\r\n    if (this._cameraPosition.z < 0) {\r\n      s.display = 'none'\r\n      return\r\n    } else {\r\n      s.display = 'block'\r\n    }\r\n\r\n    s.opacity = 1 - smoothstep(\r\n            this.viewer.scene.fog.near,\r\n            this.viewer.scene.fog.far,\r\n            this._cameraPosition.length()\r\n        )\r\n\r\n    this.stage.viewerControls.getPositionOnCanvas(vp, cp)\r\n\r\n    s.bottom = (this.offsetX + cp.y + cr.height / 2) + 'px'\r\n    s.left = (this.offsetY + cp.x - cr.width / 2) + 'px'\r\n  }\r\n\r\n    /**\r\n     * Safely remove the annotation\r\n     * @return {undefined}\r\n     */\r\n  dispose () {\r\n    this.viewer.container.removeChild(this.element)\r\n    this.viewer.signals.ticked.remove(this._update, this)\r\n    this.component.signals.matrixChanged.remove(this._updateViewerPosition, this)\r\n  }\r\n}\r\n\r\nexport default Annotation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/annotation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 908,
    "kind": "class",
    "name": "Annotation",
    "memberof": "src/component/annotation.js",
    "static": true,
    "longname": "src/component/annotation.js~Annotation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/annotation.js",
    "importStyle": "Annotation",
    "description": "Annotation HTML element floating on top of a position rendered in 3d",
    "lineNumber": 15,
    "interface": false
  },
  {
    "__docId__": 909,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "the associated component"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position in 3d"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "HTML content"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.offsetX",
        "description": "2d offset in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.offsetY",
        "description": "2d offset in y direction"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.visible",
        "description": "visibility flag"
      }
    ]
  },
  {
    "__docId__": 910,
    "kind": "member",
    "name": "offsetX",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#offsetX",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 911,
    "kind": "member",
    "name": "offsetY",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#offsetY",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 912,
    "kind": "member",
    "name": "visible",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#visible",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 913,
    "kind": "member",
    "name": "component",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#component",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 914,
    "kind": "member",
    "name": "stage",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#stage",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 915,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 916,
    "kind": "member",
    "name": "position",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#position",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 917,
    "kind": "member",
    "name": "_viewerPosition",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_viewerPosition",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 918,
    "kind": "member",
    "name": "_canvasPosition",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_canvasPosition",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 919,
    "kind": "member",
    "name": "_cameraPosition",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_cameraPosition",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 920,
    "kind": "member",
    "name": "element",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#element",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 921,
    "kind": "method",
    "name": "setContent",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#setContent",
    "access": "public",
    "description": "Set HTML content of the annotation",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "HTML content"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 922,
    "kind": "member",
    "name": "_clientRect",
    "memberof": "src/component/annotation.js~Annotation",
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_clientRect",
    "access": "private",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 923,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#setVisibility",
    "access": "public",
    "description": "Set visibility of the annotation",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "visibility flag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 925,
    "kind": "method",
    "name": "getVisibility",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#getVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 926,
    "kind": "method",
    "name": "updateVisibility",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#updateVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 927,
    "kind": "method",
    "name": "_updateViewerPosition",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_updateViewerPosition",
    "access": "private",
    "description": null,
    "lineNumber": 106,
    "undocument": true
  },
  {
    "__docId__": 928,
    "kind": "method",
    "name": "_update",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#_update",
    "access": "private",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 929,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/annotation.js~Annotation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/annotation.js~Annotation#dispose",
    "access": "public",
    "description": "Safely remove the annotation",
    "lineNumber": 148,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 930,
    "kind": "file",
    "name": "src/component/collection.js",
    "content": "/**\r\n * @file Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass Collection {\r\n  constructor (list) {\r\n    this.list = list || []\r\n\r\n        // remove elements from list when they get disposed\r\n\r\n    const n = this.list.length\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const elm = this.list[ i ]\r\n\r\n      elm.signals.disposed.add(this._remove, this)\r\n    }\r\n  }\r\n\r\n  _remove (elm) {\r\n    const idx = this.list.indexOf(elm)\r\n\r\n    if (idx !== -1) {\r\n      this.list.splice(idx, 1)\r\n    }\r\n  }\r\n\r\n  _invoke (methodName, methodArgs) {\r\n    const n = this.list.length\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const elm = this.list[ i ]\r\n      const method = elm[ methodName ]\r\n\r\n      if (typeof method === 'function') {\r\n        method.apply(elm, methodArgs)\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value) {\r\n    return this._invoke('setVisibility', [ value ])\r\n  }\r\n\r\n  setSelection (string) {\r\n    return this._invoke('setSelection', [ string ])\r\n  }\r\n\r\n  dispose () {\r\n    return this._invoke('dispose')\r\n  }\r\n}\r\n\r\nexport default Collection\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 931,
    "kind": "class",
    "name": "Collection",
    "memberof": "src/component/collection.js",
    "static": true,
    "longname": "src/component/collection.js~Collection",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/component/collection.js",
    "importStyle": "Collection",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Collection"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 932,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 933,
    "kind": "member",
    "name": "list",
    "memberof": "src/component/collection.js~Collection",
    "static": false,
    "longname": "src/component/collection.js~Collection#list",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 934,
    "kind": "method",
    "name": "_remove",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#_remove",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 935,
    "kind": "method",
    "name": "_invoke",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#_invoke",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 936,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 937,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#setSelection",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 938,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/collection.js~Collection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/collection.js~Collection#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 939,
    "kind": "file",
    "name": "src/component/component-collection.js",
    "content": "/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Collection from './collection.js'\r\n\r\nclass ComponentCollection extends Collection {\r\n  addRepresentation (name, params) {\r\n    return this._invoke('addRepresentation', [ name, params ])\r\n  }\r\n\r\n  autoView (duration) {\r\n    return this._invoke('autoView', [ duration ])\r\n  }\r\n}\r\n\r\nexport default ComponentCollection\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/component-collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 940,
    "kind": "class",
    "name": "ComponentCollection",
    "memberof": "src/component/component-collection.js",
    "static": true,
    "longname": "src/component/component-collection.js~ComponentCollection",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/component-collection.js",
    "importStyle": "ComponentCollection",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/component/collection.js~Collection"
    ]
  },
  {
    "__docId__": 941,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/component-collection.js~ComponentCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component-collection.js~ComponentCollection#addRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 942,
    "kind": "method",
    "name": "autoView",
    "memberof": "src/component/component-collection.js~ComponentCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component-collection.js~ComponentCollection#autoView",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 943,
    "kind": "file",
    "name": "src/component/component.js",
    "content": "\r\n/**\r\n * @file Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion, Matrix4, Euler } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { generateUUID } from '../math/math-utils.js'\r\nimport Annotation from '../component/annotation.js'\r\nimport ComponentControls from '../controls/component-controls.js'\r\nimport { makeRepresentation } from '../representation/representation-utils.js'\r\n// import RepresentationComponent from \"./representation-component.js\";\r\n\r\nlet nextComponentId = 0\r\n\r\nconst _m = new Matrix4()\r\nconst _v = new Vector3()\r\n\r\n/**\r\n * Component parameter object.\r\n * @typedef {Object} ComponentParameters - component parameters\r\n * @property {String} name - component name\r\n * @property {Boolean} visible - component visibility\r\n */\r\n\r\n/**\r\n * @example\r\n * component.signals.representationAdded.add(function (representationComponent) { ... });\r\n *\r\n * @typedef {Object} ComponentSignals\r\n * @property {Signal<RepresentationComponent>} representationAdded - when a representation is added\r\n * @property {Signal<RepresentationComponent>} representationRemoved - when a representation is removed\r\n * @property {Signal<Matrix4>} matrixChanged - on matrix change\r\n * @property {Signal<Boolean>} visibilityChanged - on visibility change\r\n * @property {Signal<String>} statusChanged - on status change\r\n * @property {Signal<String>} nameChanged - on name change\r\n * @property {Signal} disposed - on dispose\r\n */\r\n\r\n/**\r\n * Base class for components\r\n * @interface\r\n */\r\nclass Component {\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {ComponentParameters} params - parameter object\r\n   */\r\n  constructor (stage, params) {\r\n    Object.defineProperty(this, 'id', { value: nextComponentId++ })\r\n\r\n    const p = params || {}\r\n\r\n    this.name = p.name\r\n    this.uuid = generateUUID()\r\n    this.visible = p.visible !== undefined ? p.visible : true\r\n\r\n    /**\r\n     * Events emitted by the component\r\n     * @type {ComponentSignals}\r\n     */\r\n    this.signals = {\r\n      representationAdded: new Signal(),\r\n      representationRemoved: new Signal(),\r\n      visibilityChanged: new Signal(),\r\n      matrixChanged: new Signal(),\r\n      statusChanged: new Signal(),\r\n      nameChanged: new Signal(),\r\n      disposed: new Signal()\r\n    }\r\n\r\n    this.stage = stage\r\n    this.viewer = stage.viewer\r\n\r\n    this.reprList = []\r\n    this.annotationList = []\r\n\r\n    this.matrix = new Matrix4()\r\n    this.position = new Vector3()\r\n    this.quaternion = new Quaternion()\r\n    this.scale = new Vector3(1, 1, 1)\r\n    this.transform = new Matrix4()\r\n\r\n    this.controls = new ComponentControls(this)\r\n  }\r\n\r\n  get type () { return 'component' }\r\n\r\n  /**\r\n   * Set position transform\r\n   *\r\n   * @example\r\n   * // translate by 25 angstrom along x axis\r\n   * component.setPosition( [ 25, 0, 0 ] );\r\n   *\r\n   * @param {Vector3|Array} p - the coordinates\r\n   * @return {Component} this object\r\n   */\r\n  setPosition (p) {\r\n    if (Array.isArray(p)) {\r\n      this.position.fromArray(p)\r\n    } else {\r\n      this.position.copy(p)\r\n    }\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set rotation transform\r\n   *\r\n   * @example\r\n   * // rotate by 2 degree radians on x axis\r\n   * component.setRotation( [ 2, 0, 0 ] );\r\n   *\r\n   * @param {Quaternion|Euler|Array} r - the rotation\r\n   * @return {Component} this object\r\n   */\r\n  setRotation (r) {\r\n    if (Array.isArray(r)) {\r\n      if (r.length === 3) {\r\n        const e = new Euler().fromArray(r)\r\n        this.quaternion.setFromEuler(e)\r\n      } else {\r\n        this.quaternion.fromArray(r)\r\n      }\r\n    } else if (r instanceof Euler) {\r\n      this.quaternion.setFromEuler(r)\r\n    } else {\r\n      this.quaternion.copy(r)\r\n    }\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set scale transform\r\n   *\r\n   * @example\r\n   * // scale by factor of two\r\n   * component.setScale( 2 );\r\n   *\r\n   * @param {Number} s - the scale\r\n   * @return {Component} this object\r\n   */\r\n  setScale (s) {\r\n    this.scale.set(s, s, s)\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set general transform. Is applied before and in addition\r\n   * to the position, rotation and scale transformations\r\n   *\r\n   * @example\r\n   * component.setTransform( matrix );\r\n   *\r\n   * @param {Matrix4} m - the matrix\r\n   * @return {Component} this object\r\n   */\r\n  setTransform (m) {\r\n    this.transform.copy(m)\r\n    this.updateMatrix()\r\n\r\n    return this\r\n  }\r\n\r\n  updateMatrix () {\r\n    const c = this.getCenterUntransformed(_v)\r\n    this.matrix.makeTranslation(-c.x, -c.y, -c.z)\r\n\r\n    _m.makeRotationFromQuaternion(this.quaternion)\r\n    this.matrix.premultiply(_m)\r\n\r\n    _m.makeScale(this.scale.x, this.scale.y, this.scale.z)\r\n    this.matrix.premultiply(_m)\r\n\r\n    const p = this.position\r\n    _m.makeTranslation(p.x + c.x, p.y + c.y, p.z + c.z)\r\n    this.matrix.premultiply(_m)\r\n\r\n    this.matrix.premultiply(this.transform)\r\n\r\n    this.reprList.forEach(repr => {\r\n      repr.setParameters({ matrix: this.matrix })\r\n    })\r\n    this.stage.viewer.updateBoundingBox()\r\n\r\n    this.signals.matrixChanged.dispatch(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * Add an anotation object\r\n   * @param {Vector3} position - the 3d position\r\n   * @param {String|Element} content - the HTML content\r\n   * @param {Object} [params] - parameters\r\n   * @param {Integer} params.offsetX - 2d offset in x direction\r\n   * @param {Integer} params.offsetY - 2d offset in y direction\r\n   * @return {Annotation} the added annotation object\r\n   */\r\n  addAnnotation (position, content, params) {\r\n    const annotation = new Annotation(this, position, content, params)\r\n    this.annotationList.push(annotation)\r\n\r\n    return annotation\r\n  }\r\n\r\n  /**\r\n   * Iterator over each annotation and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @return {undefined}\r\n   */\r\n  eachAnnotation (callback) {\r\n    this.annotationList.slice().forEach(callback)\r\n  }\r\n\r\n  /**\r\n   * Remove the give annotation from the component\r\n   * @param {Annotation} annotation - the annotation to remove\r\n   * @return {undefined}\r\n   */\r\n  removeAnnotation (annotation) {\r\n    const idx = this.annotationList.indexOf(annotation)\r\n    if (idx !== -1) {\r\n      this.annotationList.splice(idx, 1)\r\n      annotation.dispose()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all annotations from the component\r\n   * @return {undefined}\r\n   */\r\n  removeAllAnnotations () {\r\n    this.eachAnnotation(annotation => annotation.dispose())\r\n    this.annotationList.length = 0\r\n  }\r\n\r\n  /**\r\n   * Add a new representation to the component\r\n   * @param {String} type - the name of the representation\r\n   * @param {Object} object - the object on which the representation should be based\r\n   * @param {RepresentationParameters} [params] - representation parameters\r\n   * @return {RepresentationComponent} the created representation wrapped into\r\n   *                                   a representation component object\r\n   */\r\n  addRepresentation (type, object, params) {\r\n    const p = params || {}\r\n    const sp = this.stage.getParameters()\r\n    p.matrix = this.matrix.clone()\r\n    p.quality = p.quality || sp.quality\r\n    p.disableImpostor = defaults(p.disableImpostor, !sp.impostor)\r\n    p.useWorker = defaults(p.useWorker, sp.workerDefault)\r\n    p.visible = defaults(p.visible, true)\r\n\r\n    const p2 = Object.assign({}, p, { visible: this.visible && p.visible })\r\n    const repr = makeRepresentation(type, object, this.viewer, p2)\r\n    const reprComp = this.__getRepresentationComponent(repr, p)\r\n\r\n    this.reprList.push(reprComp)\r\n    this.signals.representationAdded.dispatch(reprComp)\r\n\r\n    return reprComp\r\n  }\r\n\r\n  addBufferRepresentation (buffer, params) {\r\n    // always use component base class method\r\n    return Component.prototype.addRepresentation.call(\r\n      this, 'buffer', buffer, params\r\n    )\r\n  }\r\n\r\n  hasRepresentation (repr) {\r\n    return this.reprList.indexOf(repr) !== -1\r\n  }\r\n\r\n  /**\r\n   * Iterator over each representation and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @return {undefined}\r\n   */\r\n  eachRepresentation (callback) {\r\n    this.reprList.slice().forEach(callback)\r\n  }\r\n\r\n  /**\r\n   * Removes a representation component\r\n   * @param {RepresentationComponent} repr - the representation component\r\n   * @return {undefined}\r\n   */\r\n  removeRepresentation (repr) {\r\n    const idx = this.reprList.indexOf(repr)\r\n    if (idx !== -1) {\r\n      this.reprList.splice(idx, 1)\r\n      repr.dispose()\r\n      this.signals.representationRemoved.dispatch(repr)\r\n    }\r\n  }\r\n\r\n  updateRepresentations (what) {\r\n    this.reprList.forEach(repr => repr.update(what))\r\n    this.stage.viewer.requestRender()\r\n  }\r\n\r\n  /**\r\n   * Removes all representation components\r\n   * @return {undefined}\r\n   */\r\n  removeAllRepresentations () {\r\n    this.eachRepresentation(repr => repr.dispose())\r\n  }\r\n\r\n  dispose () {\r\n    this.removeAllAnnotations()\r\n    this.removeAllRepresentations()\r\n\r\n    delete this.annotationList\r\n    delete this.reprList\r\n\r\n    this.signals.disposed.dispatch()\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the component, including added representations\r\n   * @param {Boolean} value - visibility flag\r\n   * @return {Component} this object\r\n   */\r\n  setVisibility (value) {\r\n    this.visible = value\r\n\r\n    this.eachRepresentation(repr => repr.updateVisibility())\r\n    this.eachAnnotation(annotation => annotation.updateVisibility())\r\n\r\n    this.signals.visibilityChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  setStatus (value) {\r\n    this.status = value\r\n    this.signals.statusChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  setName (value) {\r\n    this.name = value\r\n    this.signals.nameChanged.dispatch(value)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * @return {Box3} the component's bounding box\r\n   */\r\n  getBox () {\r\n    return this.getBoxUntransformed(...arguments)\r\n              .clone().applyMatrix4(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * @return {Vector3} the component's center position\r\n   */\r\n  getCenter () {\r\n    return this.getCenterUntransformed(...arguments)\r\n              .clone().applyMatrix4(this.matrix)\r\n  }\r\n\r\n  getZoom () {\r\n    return this.stage.getZoomForBox(this.getBox(...arguments))\r\n  }\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Box3} the untransformed component's bounding box\r\n   */\r\n  getBoxUntransformed () {}\r\n\r\n  getCenterUntransformed () {\r\n    return this.getBoxUntransformed().getCenter()\r\n  }\r\n\r\n  /**\r\n   * Automatically center and zoom the component\r\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\r\n   * @return {undefined}\r\n   */\r\n  autoView (duration) {\r\n    this.stage.animationControls.zoomMove(\r\n      this.getCenter(),\r\n      this.getZoom(),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n}\r\n\r\nexport default Component\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 944,
    "kind": "variable",
    "name": "nextComponentId",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~nextComponentId",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/component/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 945,
    "kind": "variable",
    "name": "_m",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~_m",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/component/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 946,
    "kind": "variable",
    "name": "_v",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~_v",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/component/component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 947,
    "kind": "typedef",
    "name": "ComponentParameters",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~ComponentParameters",
    "access": "public",
    "description": "Component parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "component name"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "visible",
        "description": "component visibility"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ComponentParameters"
    }
  },
  {
    "__docId__": 948,
    "kind": "typedef",
    "name": "ComponentSignals",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~ComponentSignals",
    "access": "public",
    "description": "",
    "examples": [
      "component.signals.representationAdded.add(function (representationComponent) { ... });"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "representationAdded",
        "description": "when a representation is added"
      },
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "representationRemoved",
        "description": "when a representation is removed"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Matrix4>"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixChanged",
        "description": "on matrix change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Boolean>"
        ],
        "spread": false,
        "optional": false,
        "name": "visibilityChanged",
        "description": "on visibility change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "statusChanged",
        "description": "on status change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "nameChanged",
        "description": "on name change"
      },
      {
        "nullable": null,
        "types": [
          "Signal"
        ],
        "spread": false,
        "optional": false,
        "name": "disposed",
        "description": "on dispose"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ComponentSignals"
    }
  },
  {
    "__docId__": 949,
    "kind": "class",
    "name": "Component",
    "memberof": "src/component/component.js",
    "static": true,
    "longname": "src/component/component.js~Component",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/component.js",
    "importStyle": "Component",
    "description": "Base class for components",
    "lineNumber": 48,
    "interface": true
  },
  {
    "__docId__": 950,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 951,
    "kind": "member",
    "name": "name",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#name",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 952,
    "kind": "member",
    "name": "uuid",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#uuid",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 953,
    "kind": "member",
    "name": "visible",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#visible",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 954,
    "kind": "member",
    "name": "signals",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#signals",
    "access": "public",
    "description": "Events emitted by the component",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "ComponentSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 955,
    "kind": "member",
    "name": "stage",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#stage",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 956,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 957,
    "kind": "member",
    "name": "reprList",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#reprList",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 958,
    "kind": "member",
    "name": "annotationList",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#annotationList",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 959,
    "kind": "member",
    "name": "matrix",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 960,
    "kind": "member",
    "name": "position",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#position",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 961,
    "kind": "member",
    "name": "quaternion",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#quaternion",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 962,
    "kind": "member",
    "name": "scale",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#scale",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 963,
    "kind": "member",
    "name": "transform",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#transform",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 964,
    "kind": "member",
    "name": "controls",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#controls",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 965,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#type",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 966,
    "kind": "method",
    "name": "setPosition",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setPosition",
    "access": "public",
    "description": "Set position transform",
    "examples": [
      "// translate by 25 angstrom along x axis\ncomponent.setPosition( [ 25, 0, 0 ] );"
    ],
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "p",
        "description": "the coordinates"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 967,
    "kind": "method",
    "name": "setRotation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setRotation",
    "access": "public",
    "description": "Set rotation transform",
    "examples": [
      "// rotate by 2 degree radians on x axis\ncomponent.setRotation( [ 2, 0, 0 ] );"
    ],
    "lineNumber": 124,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion",
          "Euler",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "the rotation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 968,
    "kind": "method",
    "name": "setScale",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setScale",
    "access": "public",
    "description": "Set scale transform",
    "examples": [
      "// scale by factor of two\ncomponent.setScale( 2 );"
    ],
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "the scale"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 969,
    "kind": "method",
    "name": "setTransform",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setTransform",
    "access": "public",
    "description": "Set general transform. Is applied before and in addition\nto the position, rotation and scale transformations",
    "examples": [
      "component.setTransform( matrix );"
    ],
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "m",
        "description": "the matrix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 970,
    "kind": "method",
    "name": "updateMatrix",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#updateMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 971,
    "kind": "method",
    "name": "addAnnotation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#addAnnotation",
    "access": "public",
    "description": "Add an anotation object",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "the 3d position"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": "the HTML content"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameters"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.offsetX",
        "description": "2d offset in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.offsetY",
        "description": "2d offset in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Annotation"
      ],
      "spread": false,
      "description": "the added annotation object"
    }
  },
  {
    "__docId__": 972,
    "kind": "method",
    "name": "eachAnnotation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#eachAnnotation",
    "access": "public",
    "description": "Iterator over each annotation and executing the callback",
    "lineNumber": 221,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function to execute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 973,
    "kind": "method",
    "name": "removeAnnotation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#removeAnnotation",
    "access": "public",
    "description": "Remove the give annotation from the component",
    "lineNumber": 230,
    "params": [
      {
        "nullable": null,
        "types": [
          "Annotation"
        ],
        "spread": false,
        "optional": false,
        "name": "annotation",
        "description": "the annotation to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 974,
    "kind": "method",
    "name": "removeAllAnnotations",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#removeAllAnnotations",
    "access": "public",
    "description": "Remove all annotations from the component",
    "lineNumber": 242,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 975,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#addRepresentation",
    "access": "public",
    "description": "Add a new representation to the component",
    "lineNumber": 255,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the name of the representation"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the object on which the representation should be based"
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the created representation wrapped into\n                                  a representation component object"
    }
  },
  {
    "__docId__": 976,
    "kind": "method",
    "name": "addBufferRepresentation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#addBufferRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 274,
    "undocument": true
  },
  {
    "__docId__": 977,
    "kind": "method",
    "name": "hasRepresentation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#hasRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true
  },
  {
    "__docId__": 978,
    "kind": "method",
    "name": "eachRepresentation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#eachRepresentation",
    "access": "public",
    "description": "Iterator over each representation and executing the callback",
    "lineNumber": 290,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function to execute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 979,
    "kind": "method",
    "name": "removeRepresentation",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#removeRepresentation",
    "access": "public",
    "description": "Removes a representation component",
    "lineNumber": 299,
    "params": [
      {
        "nullable": null,
        "types": [
          "RepresentationComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "repr",
        "description": "the representation component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 980,
    "kind": "method",
    "name": "updateRepresentations",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#updateRepresentations",
    "access": "public",
    "description": null,
    "lineNumber": 308,
    "undocument": true
  },
  {
    "__docId__": 981,
    "kind": "method",
    "name": "removeAllRepresentations",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#removeAllRepresentations",
    "access": "public",
    "description": "Removes all representation components",
    "lineNumber": 317,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 982,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true
  },
  {
    "__docId__": 983,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setVisibility",
    "access": "public",
    "description": "Set the visibility of the component, including added representations",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "visibility flag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 985,
    "kind": "method",
    "name": "setStatus",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setStatus",
    "access": "public",
    "description": null,
    "lineNumber": 347,
    "undocument": true
  },
  {
    "__docId__": 986,
    "kind": "member",
    "name": "status",
    "memberof": "src/component/component.js~Component",
    "static": false,
    "longname": "src/component/component.js~Component#status",
    "access": "public",
    "description": null,
    "lineNumber": 348,
    "undocument": true
  },
  {
    "__docId__": 987,
    "kind": "method",
    "name": "setName",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#setName",
    "access": "public",
    "description": null,
    "lineNumber": 354,
    "undocument": true
  },
  {
    "__docId__": 989,
    "kind": "method",
    "name": "getBox",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#getBox",
    "access": "public",
    "description": "",
    "lineNumber": 364,
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "the component's bounding box"
    }
  },
  {
    "__docId__": 990,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#getCenter",
    "access": "public",
    "description": "",
    "lineNumber": 372,
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the component's center position"
    }
  },
  {
    "__docId__": 991,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#getZoom",
    "access": "public",
    "description": null,
    "lineNumber": 377,
    "undocument": true
  },
  {
    "__docId__": 992,
    "kind": "method",
    "name": "getBoxUntransformed",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#getBoxUntransformed",
    "access": "public",
    "description": "",
    "lineNumber": 385,
    "return": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": "the untransformed component's bounding box"
    },
    "abstract": true
  },
  {
    "__docId__": 993,
    "kind": "method",
    "name": "getCenterUntransformed",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#getCenterUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 387,
    "undocument": true
  },
  {
    "__docId__": 994,
    "kind": "method",
    "name": "autoView",
    "memberof": "src/component/component.js~Component",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/component.js~Component#autoView",
    "access": "public",
    "description": "Automatically center and zoom the component",
    "lineNumber": 396,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "duration of the animation, defaults to 0"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 995,
    "kind": "file",
    "name": "src/component/representation-collection.js",
    "content": "/**\r\n * @file Component Collection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Collection from './collection.js'\r\n\r\nclass RepresentationCollection extends Collection {\r\n  setParameters (params) {\r\n    return this._invoke('setParameters', [ params ])\r\n  }\r\n\r\n  setColor (color) {\r\n    return this._invoke('setColor', [ color ])\r\n  }\r\n}\r\n\r\nexport default RepresentationCollection\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/representation-collection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 996,
    "kind": "class",
    "name": "RepresentationCollection",
    "memberof": "src/component/representation-collection.js",
    "static": true,
    "longname": "src/component/representation-collection.js~RepresentationCollection",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/representation-collection.js",
    "importStyle": "RepresentationCollection",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/component/collection.js~Collection"
    ]
  },
  {
    "__docId__": 997,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/component/representation-collection.js~RepresentationCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-collection.js~RepresentationCollection#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 998,
    "kind": "method",
    "name": "setColor",
    "memberof": "src/component/representation-collection.js~RepresentationCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-collection.js~RepresentationCollection#setColor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 999,
    "kind": "file",
    "name": "src/component/representation-component.js",
    "content": "/**\r\n * @file Representation Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n// add here to avoid cyclic import dependency\r\nComponent.prototype.__getRepresentationComponent = function (repr, p) {\r\n  return new RepresentationComponent(\r\n        this.stage, repr, p, this\r\n    )\r\n}\r\n\r\n/**\r\n * Extends {@link ComponentSignals}\r\n *\r\n * @typedef {Object} RepresentationComponentSignals\r\n * @property {Signal<String>} parametersChanged - on parameters change\r\n */\r\n\r\n/**\r\n * Component wrapping a {@link Representation} object\r\n */\r\nclass RepresentationComponent extends Component {\r\n    /**\r\n     * Create representation component\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Representation} repr - representation object to wrap\r\n     * @param {RepresentationParameters} [params] - component parameters\r\n     * @param {Component} [parent] - parent component\r\n     */\r\n  constructor (stage, repr, params, parent) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, repr.type)\r\n\r\n    super(stage, p)\r\n\r\n        /**\r\n         * Events emitted by the component\r\n         * @type {RepresentationComponentSignals}\r\n         */\r\n    this.signals = Object.assign(this.signals, {\r\n      parametersChanged: new Signal()\r\n    })\r\n\r\n    this.parent = parent\r\n\r\n    this.setRepresentation(repr)\r\n  }\r\n\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n  get type () { return 'representation' }\r\n\r\n  getType () {\r\n    return this.repr.type\r\n  }\r\n\r\n  setRepresentation (repr) {\r\n    this.disposeRepresentation()\r\n    this.repr = repr\r\n        // this.name = repr.type;\r\n    this.stage.tasks.listen(this.repr.tasks)\r\n    this.updateVisibility()\r\n  }\r\n\r\n    /**\r\n     * @ignore\r\n     * @alias RepresentationComponent#addRepresentation\r\n     * @return {undefined}\r\n     */\r\n  addRepresentation () {}\r\n\r\n    /**\r\n     * @ignore\r\n     * @alias RepresentationComponent#removeRepresentation\r\n     * @return {undefined}\r\n     */\r\n  removeRepresentation () {}\r\n\r\n    /**\r\n     * @ignore\r\n     * @alias RepresentationComponent#hasRepresentation\r\n     * @return {undefined}\r\n     */\r\n  hasRepresentation () {}\r\n\r\n  disposeRepresentation () {\r\n    if (this.repr) {\r\n      this.stage.tasks.unlisten(this.repr.tasks)\r\n      this.repr.dispose()\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    if (this.parent && this.parent.hasRepresentation(this)) {\r\n      this.parent.removeRepresentation(this)\r\n    } else {\r\n      this.disposeRepresentation()\r\n      this.signals.disposed.dispatch()\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Set the visibility of the component, takes parent visibility into account\r\n     * @param {Boolean} value - visibility flag\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  setVisibility (value) {\r\n    this.visible = value\r\n    this.updateVisibility()\r\n    this.signals.visibilityChanged.dispatch(this.visible)\r\n\r\n    return this\r\n  }\r\n\r\n  getVisibility () {\r\n    if (this.parent) {\r\n      return this.parent.visible && this.visible\r\n    } else {\r\n      return this.visible\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Toggle visibility of the component, takes parent visibility into account\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  toggleVisibility () {\r\n    return this.setVisibility(!this.visible)\r\n  }\r\n\r\n  updateVisibility () {\r\n    this.repr.setVisibility(this.getVisibility())\r\n  }\r\n\r\n    /**\r\n     * Set selection\r\n     * @param {Object} what - flags indicating what attributes to update\r\n     * @param {Boolean} what.position - update position attribute\r\n     * @param {Boolean} what.color - update color attribute\r\n     * @param {Boolean} what.radius - update radius attribute\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  update (what) {\r\n    this.repr.update(what)\r\n\r\n    return this\r\n  }\r\n\r\n  build (params) {\r\n    this.repr.build(params)\r\n\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Set selection\r\n     * @param {String} string - selection string\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  setSelection (string) {\r\n    this.repr.setSelection(string)\r\n\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Set representation parameters\r\n     * @param {RepresentationParameters} params - parameter object\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  setParameters (params) {\r\n    this.repr.setParameters(params)\r\n    this.signals.parametersChanged.dispatch(\r\n            this.repr.getParameters()\r\n        )\r\n\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Get representation parameters\r\n     * @return {RepresentationParameters} parameter object\r\n     */\r\n  getParameters () {\r\n    return this.repr.getParameters()\r\n  }\r\n\r\n    /**\r\n     * Set color\r\n     * @param {String|Color|Hex} value - color value\r\n     * @return {RepresentationComponent} this object\r\n     */\r\n  setColor (value) {\r\n    this.repr.setColor(value)\r\n\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * @ignore\r\n     * @return {undefined}\r\n     */\r\n  getCenter () {}\r\n\r\n    /**\r\n     * @ignore\r\n     * @return {undefined}\r\n     */\r\n  getZoom () {}\r\n\r\n    /**\r\n     * @ignore\r\n     * @return {undefined}\r\n     */\r\n  getBox () {}\r\n}\r\n\r\nexport default RepresentationComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/representation-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1000,
    "kind": "function",
    "name": "__getRepresentationComponent",
    "memberof": "src/component/representation-component.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/component/representation-component.js~__getRepresentationComponent",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/component/representation-component.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1001,
    "kind": "typedef",
    "name": "RepresentationComponentSignals",
    "memberof": "src/component/representation-component.js",
    "static": true,
    "longname": "src/component/representation-component.js~RepresentationComponentSignals",
    "access": "public",
    "description": "Extends {@link ComponentSignals}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "parametersChanged",
        "description": "on parameters change"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "RepresentationComponentSignals"
    }
  },
  {
    "__docId__": 1002,
    "kind": "class",
    "name": "RepresentationComponent",
    "memberof": "src/component/representation-component.js",
    "static": true,
    "longname": "src/component/representation-component.js~RepresentationComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/representation-component.js",
    "importStyle": "RepresentationComponent",
    "description": "Component wrapping a {@link Representation} object",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1003,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#constructor",
    "access": "public",
    "description": "Create representation component",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Representation"
        ],
        "spread": false,
        "optional": false,
        "name": "repr",
        "description": "representation object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "component parameters"
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": true,
        "name": "parent",
        "description": "parent component"
      }
    ]
  },
  {
    "__docId__": 1004,
    "kind": "member",
    "name": "signals",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#signals",
    "access": "public",
    "description": "Events emitted by the component",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "RepresentationComponentSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1005,
    "kind": "member",
    "name": "parent",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#parent",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 1006,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1007,
    "kind": "method",
    "name": "getType",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getType",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1008,
    "kind": "method",
    "name": "setRepresentation",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#setRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 1009,
    "kind": "member",
    "name": "repr",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#repr",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 1010,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#addRepresentation",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "RepresentationComponent#addRepresentation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1011,
    "kind": "method",
    "name": "removeRepresentation",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#removeRepresentation",
    "access": "public",
    "description": "",
    "lineNumber": 86,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "RepresentationComponent#removeRepresentation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1012,
    "kind": "method",
    "name": "hasRepresentation",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#hasRepresentation",
    "access": "public",
    "description": "",
    "lineNumber": 93,
    "ignore": true,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "RepresentationComponent#hasRepresentation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1013,
    "kind": "method",
    "name": "disposeRepresentation",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#disposeRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 1014,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 1015,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#setVisibility",
    "access": "public",
    "description": "Set the visibility of the component, takes parent visibility into account",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "visibility flag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1016,
    "kind": "member",
    "name": "visible",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#visible",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 1017,
    "kind": "method",
    "name": "getVisibility",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 1018,
    "kind": "method",
    "name": "toggleVisibility",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#toggleVisibility",
    "access": "public",
    "description": "Toggle visibility of the component, takes parent visibility into account",
    "lineNumber": 136,
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1019,
    "kind": "method",
    "name": "updateVisibility",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#updateVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 1020,
    "kind": "method",
    "name": "update",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#update",
    "access": "public",
    "description": "Set selection",
    "lineNumber": 152,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "what",
        "description": "flags indicating what attributes to update"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.position",
        "description": "update position attribute"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.color",
        "description": "update color attribute"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.radius",
        "description": "update radius attribute"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1021,
    "kind": "method",
    "name": "build",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#build",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 1022,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#setSelection",
    "access": "public",
    "description": "Set selection",
    "lineNumber": 169,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "selection string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1023,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#setParameters",
    "access": "public",
    "description": "Set representation parameters",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1024,
    "kind": "method",
    "name": "getParameters",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getParameters",
    "access": "public",
    "description": "Get representation parameters",
    "lineNumber": 193,
    "return": {
      "nullable": null,
      "types": [
        "RepresentationParameters"
      ],
      "spread": false,
      "description": "parameter object"
    }
  },
  {
    "__docId__": 1025,
    "kind": "method",
    "name": "setColor",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#setColor",
    "access": "public",
    "description": "Set color",
    "lineNumber": 202,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Color",
          "Hex"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "color value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1026,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getCenter",
    "access": "public",
    "description": "",
    "lineNumber": 212,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1027,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getZoom",
    "access": "public",
    "description": "",
    "lineNumber": 218,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1028,
    "kind": "method",
    "name": "getBox",
    "memberof": "src/component/representation-component.js~RepresentationComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/representation-component.js~RepresentationComponent#getBox",
    "access": "public",
    "description": "",
    "lineNumber": 224,
    "ignore": true,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1029,
    "kind": "file",
    "name": "src/component/script-component.js",
    "content": "/**\r\n * @file Script Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n/**\r\n * Component wrapping a {@link Script} object\r\n */\r\nclass ScriptComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Script} script - script object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n  constructor (stage, script, params) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, script.name)\r\n\r\n    super(stage, p)\r\n\r\n    this.script = script\r\n    this.status = 'loaded'\r\n\r\n    this.script.signals.nameChanged.add(value => {\r\n      this.setName(value)\r\n    })\r\n  }\r\n\r\n  get type () { return 'script' }\r\n\r\n  addRepresentation () {}\r\n\r\n  removeRepresentation () {}\r\n\r\n  run () {\r\n    this.setStatus('running')\r\n\r\n    this.script.call(this.stage).then(() => {\r\n      this.setStatus('finished')\r\n    })\r\n\r\n    this.setStatus('called')\r\n  }\r\n\r\n  dispose () {\r\n        // TODO dispose script\r\n    this.signals.disposed.dispatch()\r\n  }\r\n\r\n  setVisibility () {}\r\n\r\n  getCenter () {}\r\n\r\n  getZoom () {}\r\n\r\n  getBox () {}\r\n}\r\n\r\nComponentRegistry.add('script', ScriptComponent)\r\n\r\nexport default ScriptComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/script-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1030,
    "kind": "class",
    "name": "ScriptComponent",
    "memberof": "src/component/script-component.js",
    "static": true,
    "longname": "src/component/script-component.js~ScriptComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/script-component.js",
    "importStyle": "ScriptComponent",
    "description": "Component wrapping a {@link Script} object",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1031,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Script"
        ],
        "spread": false,
        "optional": false,
        "name": "script",
        "description": "script object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      }
    ]
  },
  {
    "__docId__": 1032,
    "kind": "member",
    "name": "script",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#script",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1033,
    "kind": "member",
    "name": "status",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#status",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1034,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#type",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1035,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#addRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 1036,
    "kind": "method",
    "name": "removeRepresentation",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#removeRepresentation",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 1037,
    "kind": "method",
    "name": "run",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#run",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 1038,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 1039,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 1040,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#getCenter",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 1041,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#getZoom",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 1042,
    "kind": "method",
    "name": "getBox",
    "memberof": "src/component/script-component.js~ScriptComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/script-component.js~ScriptComponent#getBox",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 1043,
    "kind": "file",
    "name": "src/component/shape-component.js",
    "content": "/**\r\n * @file Shape Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n/**\r\n * Component wrapping a {@link Shape} object\r\n *\r\n * @example\r\n * // get a shape component by adding a shape object to the stage\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * shape.addSphere( [ 0, 0, 0 ], [ 1, 0, 0 ], 1.5 );\r\n * var shapeComponent = stage.addComponentFromObject( shape );\r\n * shapeComponent.addRepresentation( \"buffer\" );\r\n */\r\nclass ShapeComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Shape} shape - shape object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n  constructor (stage, shape, params) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, shape.name)\r\n\r\n    super(stage, p)\r\n\r\n    this.shape = shape\r\n  }\r\n\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n  get type () { return 'shape' }\r\n\r\n    /**\r\n     * Add a new shape representation to the component\r\n     * @param {String} type - the name of the representation, one of:\r\n     *                        buffer.\r\n     * @param {BufferRepresentationParameters} params - representation parameters\r\n     * @return {RepresentationComponent} the created representation wrapped into\r\n     *                                   a representation component object\r\n     */\r\n  addRepresentation (type, params) {\r\n    return super.addRepresentation(type, this.shape, params)\r\n  }\r\n\r\n  getBoxUntransformed () {\r\n    return this.shape.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed () {\r\n    return this.shape.center\r\n  }\r\n\r\n  dispose () {\r\n    this.shape.dispose()\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('shape', ShapeComponent)\r\n\r\nexport default ShapeComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/shape-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1044,
    "kind": "class",
    "name": "ShapeComponent",
    "memberof": "src/component/shape-component.js",
    "static": true,
    "longname": "src/component/shape-component.js~ShapeComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/shape-component.js",
    "importStyle": "ShapeComponent",
    "description": "Component wrapping a {@link Shape} object",
    "examples": [
      "// get a shape component by adding a shape object to the stage\nvar shape = new NGL.Shape( \"shape\" );\nshape.addSphere( [ 0, 0, 0 ], [ 1, 0, 0 ], 1.5 );\nvar shapeComponent = stage.addComponentFromObject( shape );\nshapeComponent.addRepresentation( \"buffer\" );"
    ],
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1045,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Shape"
        ],
        "spread": false,
        "optional": false,
        "name": "shape",
        "description": "shape object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      }
    ]
  },
  {
    "__docId__": 1046,
    "kind": "member",
    "name": "shape",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#shape",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1047,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1048,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#addRepresentation",
    "access": "public",
    "description": "Add a new shape representation to the component",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the name of the representation, one of:\n                       buffer."
      },
      {
        "nullable": null,
        "types": [
          "BufferRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the created representation wrapped into\n                                  a representation component object"
    }
  },
  {
    "__docId__": 1049,
    "kind": "method",
    "name": "getBoxUntransformed",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#getBoxUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 1050,
    "kind": "method",
    "name": "getCenterUntransformed",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#getCenterUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1051,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/shape-component.js~ShapeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/shape-component.js~ShapeComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1052,
    "kind": "file",
    "name": "src/component/structure-component.js",
    "content": "/**\r\n * @file Sturucture Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { ComponentRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\nimport TrajectoryComponent from './trajectory-component.js'\r\nimport { makeTrajectory } from '../trajectory/trajectory-utils.js'\r\nimport Selection from '../selection/selection.js'\r\nimport StructureView from '../structure/structure-view.js'\r\nimport { superpose } from '../align/align-utils.js'\r\n\r\n/**\r\n * Extends {@link ComponentSignals}\r\n *\r\n * @example\r\n * component.signals.representationAdded.add( function( representationComponent ){ ... } );\r\n *\r\n * @typedef {Object} StructureComponentSignals\r\n * @property {Signal<RepresentationComponent>} trajectoryAdded - when a trajectory is added\r\n * @property {Signal<RepresentationComponent>} trajectoryRemoved - when a trajectory is removed\r\n * @property {Signal<String>} defaultAssemblyChanged - on default assembly change\r\n */\r\n\r\n/**\r\n * Component wrapping a {@link Structure} object\r\n *\r\n * @example\r\n * // get a structure component by loading a structure file into the stage\r\n * stage.loadFile( \"rcsb://4opj\" ).then( function( structureComponent ){\r\n *     structureComponent.addRepresentation( \"cartoon\" );\r\n *     structureComponent.autoView();\r\n * } );\r\n */\r\nclass StructureComponent extends Component {\r\n  /**\r\n   * Create structure component\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Structure} structure - structure object to wrap\r\n   * @param {ComponentParameters} params - component parameters\r\n   */\r\n  constructor (stage, structure, params) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, structure.name)\r\n\r\n    super(stage, p)\r\n\r\n    /**\r\n     * Events emitted by the component\r\n     * @type {StructureComponentSignals}\r\n     */\r\n    this.signals = Object.assign(this.signals, {\r\n      trajectoryAdded: new Signal(),\r\n      trajectoryRemoved: new Signal(),\r\n      defaultAssemblyChanged: new Signal()\r\n    })\r\n\r\n    /**\r\n     * The wrapped structure\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n\r\n    this.trajList = []\r\n    this.initSelection(p.sele)\r\n    this.setDefaultAssembly(p.assembly || '')\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'structure' }\r\n\r\n  /**\r\n   * Initialize selection\r\n   * @private\r\n   * @param {String} sele - selection string\r\n   * @return {undefined}\r\n   */\r\n  initSelection (sele) {\r\n    /**\r\n     * Selection for {@link StructureComponent#structureView}\r\n     * @private\r\n     * @type {Selection}\r\n     */\r\n    this.selection = new Selection(sele)\r\n\r\n    /**\r\n     * View on {@link StructureComponent#structure}.\r\n     * Change its selection via {@link StructureComponent#setSelection}.\r\n     * @type {StructureView}\r\n     */\r\n    this.structureView = new StructureView(\r\n      this.structure, this.selection\r\n    )\r\n\r\n    this.selection.signals.stringChanged.add(() => {\r\n      this.structureView.setSelection(this.selection)\r\n\r\n      this.rebuildRepresentations()\r\n      this.rebuildTrajectories()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Set selection of {@link StructureComponent#structureView}\r\n   * @param {String} string - selection string\r\n   * @return {StructureComponent} this object\r\n   */\r\n  setSelection (string) {\r\n    this.selection.setString(string)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set the default assembly\r\n   * @param {String} value - assembly name\r\n   * @return {undefined}\r\n   */\r\n  setDefaultAssembly (value) {\r\n    this.defaultAssembly = value\r\n    this.reprList.forEach(repr => {\r\n      repr.setParameters({ defaultAssembly: this.defaultAssembly })\r\n    })\r\n    this.signals.defaultAssemblyChanged.dispatch(value)\r\n  }\r\n\r\n  /**\r\n   * Rebuild all representations\r\n   * @return {undefined}\r\n   */\r\n  rebuildRepresentations () {\r\n    this.reprList.forEach(repr => {\r\n      repr.build()\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Rebuild all trajectories\r\n   * @return {undefined}\r\n   */\r\n  rebuildTrajectories () {\r\n    this.trajList.slice().forEach(trajComp => {\r\n      trajComp.trajectory.setStructure(this.structureView)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a new structure representation to the component\r\n   * @param {String} type - the name of the representation, one of:\r\n   *                        axes, backbone, ball+stick, base, cartoon, contact,\r\n   *                        distance, helixorient, hyperball, label, licorice, line\r\n   *                        surface, ribbon, rocket, rope, spacefill, trace, tube,\r\n   *                        unitcell.\r\n   * @param {StructureRepresentationParameters} params - representation parameters\r\n   * @return {RepresentationComponent} the created representation wrapped into\r\n   *                                   a representation component object\r\n   */\r\n  addRepresentation (type, params) {\r\n    var p = params || {}\r\n    p.defaultAssembly = this.defaultAssembly\r\n\r\n    return super.addRepresentation(type, this.structureView, p)\r\n  }\r\n\r\n  /**\r\n   * Add a new trajectory component to the structure\r\n   * @param {String|Frames} trajPath - path or frames object\r\n   * @param {TrajectoryComponentParameters|TrajectoryParameters} params - parameters\r\n   * @return {TrajectoryComponent} the created trajectory component object\r\n   */\r\n  addTrajectory (trajPath, params) {\r\n    var traj = makeTrajectory(trajPath, this.structureView, params)\r\n\r\n    traj.signals.frameChanged.add(() => {\r\n      this.updateRepresentations({ 'position': true })\r\n    })\r\n\r\n    var trajComp = new TrajectoryComponent(this.stage, traj, params, this)\r\n    this.trajList.push(trajComp)\r\n    this.signals.trajectoryAdded.dispatch(trajComp)\r\n\r\n    return trajComp\r\n  }\r\n\r\n  removeTrajectory (traj) {\r\n    var idx = this.trajList.indexOf(traj)\r\n    if (idx !== -1) {\r\n      this.trajList.splice(idx, 1)\r\n    }\r\n\r\n    traj.dispose()\r\n\r\n    this.signals.trajectoryRemoved.dispatch(traj)\r\n  }\r\n\r\n  dispose () {\r\n    // copy via .slice because side effects may change trajList\r\n    this.trajList.slice().forEach(traj => {\r\n      traj.dispose()\r\n    })\r\n\r\n    this.trajList.length = 0\r\n    this.structure.dispose()\r\n\r\n    super.dispose()\r\n  }\r\n\r\n  /**\r\n   * Automatically center and zoom the component\r\n   * @param  {String|Integer} [sele] - selection string or duration if integer\r\n   * @param  {Integer} [duration] - duration of the animation, defaults to 0\r\n   * @return {undefined}\r\n   */\r\n  autoView (sele, duration) {\r\n    if (Number.isInteger(sele)) {\r\n      duration = sele\r\n      sele = undefined\r\n    }\r\n\r\n    this.stage.animationControls.zoomMove(\r\n      this.getCenter(sele),\r\n      this.getZoom(sele),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n\r\n  getBoxUntransformed (sele) {\r\n    var bb\r\n\r\n    if (sele) {\r\n      bb = this.structureView.getBoundingBox(new Selection(sele))\r\n    } else {\r\n      bb = this.structureView.boundingBox\r\n    }\r\n\r\n    return bb\r\n  }\r\n\r\n  getCenterUntransformed (sele) {\r\n    if (sele && typeof sele === 'string') {\r\n      return this.structure.atomCenter(new Selection(sele))\r\n    } else {\r\n      return this.structure.center\r\n    }\r\n  }\r\n\r\n  superpose (component, align, sele1, sele2) {\r\n    superpose(\r\n      this.structureView, component.structureView, align, sele1, sele2\r\n    )\r\n\r\n    this.updateRepresentations({ 'position': true })\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value) {\r\n    super.setVisibility(value)\r\n\r\n    this.trajList.forEach(traj => {\r\n      // FIXME ???\r\n      traj.setVisibility(value)\r\n    })\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nComponentRegistry.add('structure', StructureComponent)\r\nComponentRegistry.add('structureview', StructureComponent)\r\n\r\nexport default StructureComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/structure-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1053,
    "kind": "typedef",
    "name": "StructureComponentSignals",
    "memberof": "src/component/structure-component.js",
    "static": true,
    "longname": "src/component/structure-component.js~StructureComponentSignals",
    "access": "public",
    "description": "Extends {@link ComponentSignals}",
    "examples": [
      "component.signals.representationAdded.add( function( representationComponent ){ ... } );"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectoryAdded",
        "description": "when a trajectory is added"
      },
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectoryRemoved",
        "description": "when a trajectory is removed"
      },
      {
        "nullable": null,
        "types": [
          "Signal<String>"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultAssemblyChanged",
        "description": "on default assembly change"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StructureComponentSignals"
    }
  },
  {
    "__docId__": 1054,
    "kind": "class",
    "name": "StructureComponent",
    "memberof": "src/component/structure-component.js",
    "static": true,
    "longname": "src/component/structure-component.js~StructureComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/structure-component.js",
    "importStyle": "StructureComponent",
    "description": "Component wrapping a {@link Structure} object",
    "examples": [
      "// get a structure component by loading a structure file into the stage\nstage.loadFile( \"rcsb://4opj\" ).then( function( structureComponent ){\n    structureComponent.addRepresentation( \"cartoon\" );\n    structureComponent.autoView();\n} );"
    ],
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1055,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#constructor",
    "access": "public",
    "description": "Create structure component",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "structure object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      }
    ]
  },
  {
    "__docId__": 1056,
    "kind": "member",
    "name": "signals",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#signals",
    "access": "public",
    "description": "Events emitted by the component",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "StructureComponentSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1057,
    "kind": "member",
    "name": "structure",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#structure",
    "access": "public",
    "description": "The wrapped structure",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1058,
    "kind": "member",
    "name": "trajList",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#trajList",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 1059,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1060,
    "kind": "method",
    "name": "initSelection",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#initSelection",
    "access": "private",
    "description": "Initialize selection",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sele",
        "description": "selection string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1061,
    "kind": "member",
    "name": "selection",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#selection",
    "access": "private",
    "description": "Selection for {@link StructureComponent#structureView}",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "Selection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1062,
    "kind": "member",
    "name": "structureView",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#structureView",
    "access": "public",
    "description": "View on {@link StructureComponent#structure}.\nChange its selection via {@link StructureComponent#setSelection}.",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "StructureView"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1063,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#setSelection",
    "access": "public",
    "description": "Set selection of {@link StructureComponent#structureView}",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "selection string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StructureComponent"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1064,
    "kind": "method",
    "name": "setDefaultAssembly",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#setDefaultAssembly",
    "access": "public",
    "description": "Set the default assembly",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "assembly name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1065,
    "kind": "member",
    "name": "defaultAssembly",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#defaultAssembly",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true
  },
  {
    "__docId__": 1066,
    "kind": "method",
    "name": "rebuildRepresentations",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#rebuildRepresentations",
    "access": "public",
    "description": "Rebuild all representations",
    "lineNumber": 139,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1067,
    "kind": "method",
    "name": "rebuildTrajectories",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#rebuildTrajectories",
    "access": "public",
    "description": "Rebuild all trajectories",
    "lineNumber": 149,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1068,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#addRepresentation",
    "access": "public",
    "description": "Add a new structure representation to the component",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the name of the representation, one of:\n                       axes, backbone, ball+stick, base, cartoon, contact,\n                       distance, helixorient, hyperball, label, licorice, line\n                       surface, ribbon, rocket, rope, spacefill, trace, tube,\n                       unitcell."
      },
      {
        "nullable": null,
        "types": [
          "StructureRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the created representation wrapped into\n                                  a representation component object"
    }
  },
  {
    "__docId__": 1069,
    "kind": "method",
    "name": "addTrajectory",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#addTrajectory",
    "access": "public",
    "description": "Add a new trajectory component to the structure",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Frames"
        ],
        "spread": false,
        "optional": false,
        "name": "trajPath",
        "description": "path or frames object"
      },
      {
        "nullable": null,
        "types": [
          "TrajectoryComponentParameters",
          "TrajectoryParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TrajectoryComponent"
      ],
      "spread": false,
      "description": "the created trajectory component object"
    }
  },
  {
    "__docId__": 1070,
    "kind": "method",
    "name": "removeTrajectory",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#removeTrajectory",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true
  },
  {
    "__docId__": 1071,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 204,
    "undocument": true
  },
  {
    "__docId__": 1072,
    "kind": "method",
    "name": "autoView",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#autoView",
    "access": "public",
    "description": "Automatically center and zoom the component",
    "lineNumber": 222,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "sele",
        "description": "selection string or duration if integer"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "duration of the animation, defaults to 0"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1073,
    "kind": "method",
    "name": "getBoxUntransformed",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#getBoxUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 235,
    "undocument": true
  },
  {
    "__docId__": 1074,
    "kind": "method",
    "name": "getCenterUntransformed",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#getCenterUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true
  },
  {
    "__docId__": 1075,
    "kind": "method",
    "name": "superpose",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#superpose",
    "access": "public",
    "description": null,
    "lineNumber": 255,
    "undocument": true
  },
  {
    "__docId__": 1076,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/component/structure-component.js~StructureComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/structure-component.js~StructureComponent#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 265,
    "undocument": true
  },
  {
    "__docId__": 1077,
    "kind": "file",
    "name": "src/component/surface-component.js",
    "content": "/**\r\n * @file Surface Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n/**\r\n * Component wrapping a {@link Surface} object\r\n *\r\n * @example\r\n * // get a surface component by loading a surface file into the stage\r\n * stage.loadFile( \"url/for/surface\" ).then( function( surfaceComponent ){\r\n *     surfaceComponent.addRepresentation( \"surface\" );\r\n *     surfaceComponent.autoView();\r\n * } );\r\n */\r\nclass SurfaceComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Surface} surface - surface object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n  constructor (stage, surface, params) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, surface.name)\r\n\r\n    super(stage, p)\r\n\r\n    this.surface = surface\r\n  }\r\n\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n  get type () { return 'surface' }\r\n\r\n    /**\r\n     * Add a new surface representation to the component\r\n     * @param {String} type - the name of the representation, one of:\r\n     *                        surface, dot.\r\n     * @param {SurfaceRepresentationParameters} params - representation parameters\r\n     * @return {RepresentationComponent} the created representation wrapped into\r\n     *                                   a representation component object\r\n     */\r\n  addRepresentation (type, params) {\r\n    return super.addRepresentation(type, this.surface, params)\r\n  }\r\n\r\n  getBoxUntransformed () {\r\n    return this.surface.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed () {\r\n    return this.surface.center\r\n  }\r\n\r\n  dispose () {\r\n    this.surface.dispose()\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('surface', SurfaceComponent)\r\n\r\nexport default SurfaceComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/surface-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1078,
    "kind": "class",
    "name": "SurfaceComponent",
    "memberof": "src/component/surface-component.js",
    "static": true,
    "longname": "src/component/surface-component.js~SurfaceComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/surface-component.js",
    "importStyle": "SurfaceComponent",
    "description": "Component wrapping a {@link Surface} object",
    "examples": [
      "// get a surface component by loading a surface file into the stage\nstage.loadFile( \"url/for/surface\" ).then( function( surfaceComponent ){\n    surfaceComponent.addRepresentation( \"surface\" );\n    surfaceComponent.autoView();\n} );"
    ],
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1079,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Surface"
        ],
        "spread": false,
        "optional": false,
        "name": "surface",
        "description": "surface object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      }
    ]
  },
  {
    "__docId__": 1080,
    "kind": "member",
    "name": "surface",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#surface",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1081,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1082,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#addRepresentation",
    "access": "public",
    "description": "Add a new surface representation to the component",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the name of the representation, one of:\n                       surface, dot."
      },
      {
        "nullable": null,
        "types": [
          "SurfaceRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the created representation wrapped into\n                                  a representation component object"
    }
  },
  {
    "__docId__": 1083,
    "kind": "method",
    "name": "getBoxUntransformed",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#getBoxUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 1084,
    "kind": "method",
    "name": "getCenterUntransformed",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#getCenterUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1085,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/surface-component.js~SurfaceComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/surface-component.js~SurfaceComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1086,
    "kind": "file",
    "name": "src/component/trajectory-component.js",
    "content": "/**\r\n * @file Trajectory Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n/**\r\n * Trajectory component parameter object.\r\n * @typedef {Object} TrajectoryComponentParameters - component parameters\r\n *\r\n * @property {String} name - component name\r\n * @property {Integer} initialFrame - initial frame the trajectory is set to\r\n * @property {Integer} defaultStep - default step size to be used by trajectory players\r\n * @property {Integer} defaultTimeout - default timeout to be used by trajectory players\r\n * @property {String} defaultInterpolateType - one of \"\" (empty string), \"linear\" or \"spline\"\r\n * @property {Integer} defaultInterpolateStep - window size used for interpolation\r\n * @property {String} defaultMode - either \"loop\" or \"once\"\r\n * @property {String} defaultDirection - either \"forward\" or \"backward\"\r\n */\r\n\r\n/**\r\n * Extends {@link ComponentSignals}\r\n *\r\n * @example\r\n * component.signals.representationAdded.add( function( representationComponent ){ ... } );\r\n *\r\n * @typedef {Object} TrajectoryComponentSignals\r\n * @property {Signal<RepresentationComponent>} frameChanged - on frame change\r\n * @property {Signal<RepresentationComponent>} playerChanged - on player change\r\n * @property {Signal<Integer>} countChanged - when frame count is available\r\n * @property {Signal<TrajectoryComponentParameters>} parametersChanged - on parameters change\r\n */\r\n\r\n/**\r\n * Component wrapping a {@link Trajectory} object\r\n */\r\nclass TrajectoryComponent extends Component {\r\n  /**\r\n   * @param {Stage} stage - stage object the component belongs to\r\n   * @param {Trajectory} trajectory - the trajectory object\r\n   * @param {TrajectoryComponentParameters} params - component parameters\r\n   * @param {StructureComponent} parent - the parent structure\r\n   */\r\n  constructor (stage, trajectory, params, parent) {\r\n    const p = params || {}\r\n    p.name = defaults(p.name, trajectory.name)\r\n\r\n    super(stage, p)\r\n\r\n    /**\r\n     * Events emitted by the component\r\n     * @type {TrajectoryComponentSignals}\r\n     */\r\n    this.signals = Object.assign(this.signals, {\r\n      frameChanged: new Signal(),\r\n      playerChanged: new Signal(),\r\n      countChanged: new Signal(),\r\n      parametersChanged: new Signal()\r\n    })\r\n\r\n    this.trajectory = trajectory\r\n    this.parent = parent\r\n    this.status = 'loaded'\r\n\r\n    this.defaultStep = defaults(p.defaultStep, undefined)\r\n    this.defaultTimeout = defaults(p.defaultTimeout, 50)\r\n    this.defaultInterpolateType = defaults(p.defaultInterpolateType, '')\r\n    this.defaultInterpolateStep = defaults(p.defaultInterpolateStep, 5)\r\n    this.defaultMode = defaults(p.defaultMode, 'loop')\r\n    this.defaultDirection = defaults(p.defaultDirection, 'forward')\r\n\r\n    // signals\r\n\r\n    trajectory.signals.frameChanged.add(i => {\r\n      this.signals.frameChanged.dispatch(i)\r\n    })\r\n\r\n    trajectory.signals.playerChanged.add(player => {\r\n      this.signals.playerChanged.dispatch(player)\r\n    })\r\n\r\n    trajectory.signals.countChanged.add(n => {\r\n      this.signals.countChanged.dispatch(n)\r\n    })\r\n\r\n        //\r\n\r\n    if (p.initialFrame !== undefined) {\r\n      this.setFrame(p.initialFrame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Component type\r\n   * @type {String}\r\n   */\r\n  get type () { return 'trajectory' }\r\n\r\n  /**\r\n   * Add trajectory representation\r\n   * @param {String} type - representation type, currently only: \"trajectory\"\r\n   * @param {RepresentationParameters} params - parameters\r\n   * @return {RepresentationComponent} the added representation component\r\n   */\r\n  addRepresentation (type, params) {\r\n    return super.addRepresentation(type, this.trajectory, params)\r\n  }\r\n\r\n  /**\r\n   * Set the frame of the trajectory\r\n   * @param {Integer} i - frame number\r\n   * @return {undefined}\r\n   */\r\n  setFrame (i) {\r\n    this.trajectory.setFrame(i)\r\n  }\r\n\r\n  /**\r\n   * Set trajectory parameters\r\n   * @param {TrajectoryParameters} params - trajectory parameters\r\n   * @return {undefined}\r\n   */\r\n  setParameters (params) {\r\n    this.trajectory.setParameters(params)\r\n    this.signals.parametersChanged.dispatch(params)\r\n  }\r\n\r\n  dispose () {\r\n    this.trajectory.dispose()\r\n    super.dispose()\r\n  }\r\n\r\n  getCenter () {}\r\n}\r\n\r\nexport default TrajectoryComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/trajectory-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1087,
    "kind": "typedef",
    "name": "TrajectoryComponentParameters",
    "memberof": "src/component/trajectory-component.js",
    "static": true,
    "longname": "src/component/trajectory-component.js~TrajectoryComponentParameters",
    "access": "public",
    "description": "Trajectory component parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "component name"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "initialFrame",
        "description": "initial frame the trajectory is set to"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultStep",
        "description": "default step size to be used by trajectory players"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultTimeout",
        "description": "default timeout to be used by trajectory players"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultInterpolateType",
        "description": "one of \"\" (empty string), \"linear\" or \"spline\""
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultInterpolateStep",
        "description": "window size used for interpolation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultMode",
        "description": "either \"loop\" or \"once\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultDirection",
        "description": "either \"forward\" or \"backward\""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectoryComponentParameters"
    }
  },
  {
    "__docId__": 1088,
    "kind": "typedef",
    "name": "TrajectoryComponentSignals",
    "memberof": "src/component/trajectory-component.js",
    "static": true,
    "longname": "src/component/trajectory-component.js~TrajectoryComponentSignals",
    "access": "public",
    "description": "Extends {@link ComponentSignals}",
    "examples": [
      "component.signals.representationAdded.add( function( representationComponent ){ ... } );"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "frameChanged",
        "description": "on frame change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<RepresentationComponent>"
        ],
        "spread": false,
        "optional": false,
        "name": "playerChanged",
        "description": "on player change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Integer>"
        ],
        "spread": false,
        "optional": false,
        "name": "countChanged",
        "description": "when frame count is available"
      },
      {
        "nullable": null,
        "types": [
          "Signal<TrajectoryComponentParameters>"
        ],
        "spread": false,
        "optional": false,
        "name": "parametersChanged",
        "description": "on parameters change"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectoryComponentSignals"
    }
  },
  {
    "__docId__": 1089,
    "kind": "class",
    "name": "TrajectoryComponent",
    "memberof": "src/component/trajectory-component.js",
    "static": true,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/trajectory-component.js",
    "importStyle": "TrajectoryComponent",
    "description": "Component wrapping a {@link Trajectory} object",
    "lineNumber": 42,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1090,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Trajectory"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "the trajectory object"
      },
      {
        "nullable": null,
        "types": [
          "TrajectoryComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      },
      {
        "nullable": null,
        "types": [
          "StructureComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "parent",
        "description": "the parent structure"
      }
    ]
  },
  {
    "__docId__": 1091,
    "kind": "member",
    "name": "signals",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#signals",
    "access": "public",
    "description": "Events emitted by the component",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "TrajectoryComponentSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1092,
    "kind": "member",
    "name": "trajectory",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#trajectory",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 1093,
    "kind": "member",
    "name": "parent",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#parent",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 1094,
    "kind": "member",
    "name": "status",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#status",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 1095,
    "kind": "member",
    "name": "defaultStep",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultStep",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 1096,
    "kind": "member",
    "name": "defaultTimeout",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 1097,
    "kind": "member",
    "name": "defaultInterpolateType",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultInterpolateType",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 1098,
    "kind": "member",
    "name": "defaultInterpolateStep",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultInterpolateStep",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 1099,
    "kind": "member",
    "name": "defaultMode",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultMode",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 1100,
    "kind": "member",
    "name": "defaultDirection",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#defaultDirection",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 1101,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1102,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#addRepresentation",
    "access": "public",
    "description": "Add trajectory representation",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "representation type, currently only: \"trajectory\""
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the added representation component"
    }
  },
  {
    "__docId__": 1103,
    "kind": "method",
    "name": "setFrame",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#setFrame",
    "access": "public",
    "description": "Set the frame of the trajectory",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "frame number"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1104,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#setParameters",
    "access": "public",
    "description": "Set trajectory parameters",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "TrajectoryParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "trajectory parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1105,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true
  },
  {
    "__docId__": 1106,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/component/trajectory-component.js~TrajectoryComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/trajectory-component.js~TrajectoryComponent#getCenter",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true
  },
  {
    "__docId__": 1107,
    "kind": "file",
    "name": "src/component/volume-component.js",
    "content": "/**\r\n * @file Volume Component\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ComponentRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Component from './component.js'\r\n\r\n/**\r\n * Component wrapping a {@link Volume} object\r\n *\r\n * @example\r\n * // get a volume component by loading a volume file into the stage\r\n * stage.loadFile( \"url/for/volume\" ).then( function( volumeComponent ){\r\n *     volumeComponent.addRepresentation( \"surface\" );\r\n *     volumeComponent.autoView();\r\n * } );\r\n */\r\nclass VolumeComponent extends Component {\r\n    /**\r\n     * @param {Stage} stage - stage object the component belongs to\r\n     * @param {Volume} volume - volume object to wrap\r\n     * @param {ComponentParameters} params - component parameters\r\n     */\r\n  constructor (stage, volume, params) {\r\n    var p = params || {}\r\n    p.name = defaults(p.name, volume.name)\r\n\r\n    super(stage, p)\r\n\r\n    this.volume = volume\r\n  }\r\n\r\n    /**\r\n     * Component type\r\n     * @type {String}\r\n     */\r\n  get type () { return 'volume' }\r\n\r\n    /**\r\n     * Add a new volume representation to the component\r\n     * @param {String} type - the name of the representation, one of:\r\n     *                        surface, dot.\r\n     * @param {VolumeRepresentationParameters} params - representation parameters\r\n     * @return {RepresentationComponent} the created representation wrapped into\r\n     *                                   a representation component object\r\n     */\r\n  addRepresentation (type, params) {\r\n    return super.addRepresentation(type, this.volume, params)\r\n  }\r\n\r\n  getBoxUntransformed () {\r\n    return this.volume.boundingBox\r\n  }\r\n\r\n  getCenterUntransformed () {\r\n    return this.volume.center\r\n  }\r\n\r\n  dispose () {\r\n    this.volume.dispose()\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nComponentRegistry.add('volume', VolumeComponent)\r\n\r\nexport default VolumeComponent\r\n",
    "static": true,
    "longname": "D:/nglLib/src/component/volume-component.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1108,
    "kind": "class",
    "name": "VolumeComponent",
    "memberof": "src/component/volume-component.js",
    "static": true,
    "longname": "src/component/volume-component.js~VolumeComponent",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/component/volume-component.js",
    "importStyle": "VolumeComponent",
    "description": "Component wrapping a {@link Volume} object",
    "examples": [
      "// get a volume component by loading a volume file into the stage\nstage.loadFile( \"url/for/volume\" ).then( function( volumeComponent ){\n    volumeComponent.addRepresentation( \"surface\" );\n    volumeComponent.autoView();\n} );"
    ],
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/component/component.js~Component"
    ]
  },
  {
    "__docId__": 1109,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object the component belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": "volume object to wrap"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "component parameters"
      }
    ]
  },
  {
    "__docId__": 1110,
    "kind": "member",
    "name": "volume",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#volume",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1111,
    "kind": "get",
    "name": "type",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#type",
    "access": "public",
    "description": "Component type",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1112,
    "kind": "method",
    "name": "addRepresentation",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#addRepresentation",
    "access": "public",
    "description": "Add a new volume representation to the component",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "the name of the representation, one of:\n                       surface, dot."
      },
      {
        "nullable": null,
        "types": [
          "VolumeRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationComponent"
      ],
      "spread": false,
      "description": "the created representation wrapped into\n                                  a representation component object"
    }
  },
  {
    "__docId__": 1113,
    "kind": "method",
    "name": "getBoxUntransformed",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#getBoxUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 1114,
    "kind": "method",
    "name": "getCenterUntransformed",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#getCenterUntransformed",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1115,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/component/volume-component.js~VolumeComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/component/volume-component.js~VolumeComponent#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1116,
    "kind": "file",
    "name": "src/constants.js",
    "content": "/**\r\n * @file Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nconst LeftMouseButton = 1\r\nconst MiddleMouseButton = 2\r\nconst RightMouseButton = 3\r\n\r\nexport {\r\n  LeftMouseButton,\r\n  MiddleMouseButton,\r\n  RightMouseButton\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1117,
    "kind": "variable",
    "name": "LeftMouseButton",
    "memberof": "src/constants.js",
    "static": true,
    "longname": "src/constants.js~LeftMouseButton",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/constants.js",
    "importStyle": "{LeftMouseButton}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Constants"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 1118,
    "kind": "variable",
    "name": "MiddleMouseButton",
    "memberof": "src/constants.js",
    "static": true,
    "longname": "src/constants.js~MiddleMouseButton",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/constants.js",
    "importStyle": "{MiddleMouseButton}",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 1119,
    "kind": "variable",
    "name": "RightMouseButton",
    "memberof": "src/constants.js",
    "static": true,
    "longname": "src/constants.js~RightMouseButton",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/constants.js",
    "importStyle": "{RightMouseButton}",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 1120,
    "kind": "file",
    "name": "src/controls/animation-controls.js",
    "content": "/**\r\n * @file Animation Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Quaternion } from '../../lib/three.es6.js'\r\n\r\nimport { ensureMatrix4 } from '../utils.js'\r\nimport {\r\n    SpinAnimation, RockAnimation, MoveAnimation, ZoomAnimation,\r\n    RotateAnimation, ValueAnimation, TimeoutAnimation, AnimationList\r\n} from '../animation/animation.js'\r\n\r\n/**\r\n * Animation controls\r\n */\r\nclass AnimationControls {\r\n    /**\r\n     * Create animation controls\r\n     * @param  {Stage} stage - the stage object\r\n     */\r\n  constructor (stage) {\r\n    this.stage = stage\r\n    this.viewer = stage.viewer\r\n    this.controls = stage.viewerControls\r\n\r\n    this.animationList = []\r\n    this.finishedList = []\r\n  }\r\n\r\n    /**\r\n     * True when all animations are paused\r\n     * @type {Boolean}\r\n     */\r\n  get paused () {\r\n    return this.animationList.every(animation => animation.paused)\r\n  }\r\n\r\n    /**\r\n     * Add an animation\r\n     * @param {Animation} animation - the animation\r\n     * @return {Animation} the animation\r\n     */\r\n  add (animation) {\r\n    if (animation.duration === 0) {\r\n      animation.tick(this.viewer.stats)\r\n    } else {\r\n      this.animationList.push(animation)\r\n    }\r\n\r\n    return animation\r\n  }\r\n\r\n    /**\r\n     * Remove an animation\r\n     * @param {Animation} animation - the animation\r\n     * @return {undefined}\r\n     */\r\n  remove (animation) {\r\n    const list = this.animationList\r\n    const index = list.indexOf(animation)\r\n\r\n    if (index > -1) {\r\n      list.splice(index, 1)\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Run all animations\r\n     * @param  {Stats} stats - a viewer stats objects\r\n     * @return {undefined}\r\n     */\r\n  run (stats) {\r\n    const finishedList = this.finishedList\r\n    const animationList = this.animationList\r\n\r\n    const n = animationList.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const animation = animationList[ i ]\r\n            // tick returns true when finished\r\n      if (animation.tick(stats)) {\r\n        finishedList.push(animation)\r\n      }\r\n    }\r\n\r\n    const m = finishedList.length\r\n    if (m) {\r\n      for (let j = 0; j < m; ++j) {\r\n        this.remove(finishedList[ j ])\r\n      }\r\n      finishedList.length = 0\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Add a spin animation\r\n     * @param  {Vector3} axis - axis to spin around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n  spin (axis, angle, duration) {\r\n    return this.add(\r\n            new SpinAnimation(duration, this.controls, axis, angle)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a rock animation\r\n     * @param  {Vector3} axis - axis to rock around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} end - maximum extend of motion, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n  rock (axis, angle, end, duration) {\r\n    return this.add(\r\n            new RockAnimation(duration, this.controls, axis, angle, end)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a rotate animation\r\n     * @param  {Quaternion} rotateTo - target rotation\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {RotateAnimation} the animation\r\n     */\r\n  rotate (rotateTo, duration) {\r\n    const rotateFrom = this.viewer.rotationGroup.quaternion.clone()\r\n\r\n    return this.add(\r\n            new RotateAnimation(duration, this.controls, rotateFrom, rotateTo)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a move animation\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {MoveAnimation} the animation\r\n     */\r\n  move (moveTo, duration) {\r\n    const moveFrom = this.controls.position.clone().negate()\r\n\r\n    return this.add(\r\n            new MoveAnimation(duration, this.controls, moveFrom, moveTo)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a zoom animation\r\n     * @param  {Number} zoomTo - target distance\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {ZoomAnimation} the animation\r\n     */\r\n  zoom (zoomTo, duration) {\r\n    const zoomFrom = this.viewer.camera.position.z\r\n\r\n    return this.add(\r\n            new ZoomAnimation(duration, this.controls, zoomFrom, zoomTo)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a zoom and a move animation\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} zoomTo - target distance\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {Array} the animations\r\n     */\r\n  zoomMove (moveTo, zoomTo, duration) {\r\n    return new AnimationList([\r\n      this.move(moveTo, duration),\r\n      this.zoom(zoomTo, duration)\r\n    ])\r\n  }\r\n\r\n    /**\r\n     * Add an orient animation\r\n     * @param  {OrientationMatrix|Array} orientTo - target orientation\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {Array} the animations\r\n     */\r\n  orient (orientTo, duration) {\r\n    const p = new Vector3()\r\n    const q = new Quaternion()\r\n    const s = new Vector3()\r\n\r\n    ensureMatrix4(orientTo).decompose(p, q, s)\r\n\r\n    return new AnimationList([\r\n      this.move(p.negate(), duration),\r\n      this.rotate(q, duration),\r\n      this.zoom(-s.x, duration)\r\n    ])\r\n  }\r\n\r\n    /**\r\n     * Add a value animation\r\n     * @param  {Number} valueFrom - start value\r\n     * @param  {Number} valueTo - target value\r\n     * @param  {Function} callback - called on every tick\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {ValueAnimation} the animation\r\n     */\r\n  value (valueFrom, valueTo, callback, duration) {\r\n    return this.add(\r\n            new ValueAnimation(duration, this.controls, valueFrom, valueTo, callback)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a timeout animation\r\n     * @param  {Function} callback - called after duration\r\n     * @param  {Number} duration - timeout in milliseconds\r\n     * @return {TimeoutAnimation} the animation\r\n     */\r\n  timeout (callback, duration) {\r\n    return this.add(\r\n            new TimeoutAnimation(duration, this.controls, callback)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a component spin animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} axis - axis to spin around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n  spinComponent (component, axis, angle, duration) {\r\n    return this.add(\r\n            new SpinAnimation(duration, component.controls, axis, angle)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a component rock animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} axis - axis to rock around\r\n     * @param  {Number} angle - amount to spin per frame, radians\r\n     * @param  {Number} end - maximum extend of motion, radians\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {SpinAnimation} the animation\r\n     */\r\n  rockComponent (component, axis, angle, end, duration) {\r\n    return this.add(\r\n            new RockAnimation(duration, component.controls, axis, angle, end)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Add a component move animation\r\n     * @param  {Component} component - object to move\r\n     * @param  {Vector3} moveTo - target position\r\n     * @param  {Number} duration - animation time in milliseconds\r\n     * @return {MoveAnimation} the animation\r\n     */\r\n  moveComponent (component, moveTo, duration) {\r\n    const moveFrom = component.controls.position.clone().negate()\r\n\r\n    return this.add(\r\n            new MoveAnimation(duration, component.controls, moveFrom, moveTo)\r\n        )\r\n  }\r\n\r\n    /**\r\n     * Pause all animations\r\n     * @return {undefined}\r\n     */\r\n  pause () {\r\n    this.animationList.forEach(animation => animation.pause())\r\n  }\r\n\r\n    /**\r\n     * Resume all animations\r\n     * @return {undefined}\r\n     */\r\n  resume () {\r\n    this.animationList.forEach(animation => animation.resume())\r\n  }\r\n\r\n    /**\r\n     * Toggle all animations\r\n     * @return {undefined}\r\n     */\r\n  toggle () {\r\n    if (this.paused) {\r\n      this.resume()\r\n    } else {\r\n      this.pause()\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Clear all animations\r\n     * @return {undefined}\r\n     */\r\n  clear () {\r\n    this.animationList.length = 0\r\n  }\r\n\r\n  dispose () {\r\n    this.clear()\r\n  }\r\n}\r\n\r\nexport default AnimationControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/animation-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1121,
    "kind": "class",
    "name": "AnimationControls",
    "memberof": "src/controls/animation-controls.js",
    "static": true,
    "longname": "src/controls/animation-controls.js~AnimationControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/animation-controls.js",
    "importStyle": "AnimationControls",
    "description": "Animation controls",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 1122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#constructor",
    "access": "public",
    "description": "Create animation controls",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage object"
      }
    ]
  },
  {
    "__docId__": 1123,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1124,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1125,
    "kind": "member",
    "name": "controls",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#controls",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1126,
    "kind": "member",
    "name": "animationList",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#animationList",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1127,
    "kind": "member",
    "name": "finishedList",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#finishedList",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1128,
    "kind": "get",
    "name": "paused",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#paused",
    "access": "public",
    "description": "True when all animations are paused",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1129,
    "kind": "method",
    "name": "add",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#add",
    "access": "public",
    "description": "Add an animation",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Animation"
        ],
        "spread": false,
        "optional": false,
        "name": "animation",
        "description": "the animation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Animation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1130,
    "kind": "method",
    "name": "remove",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#remove",
    "access": "public",
    "description": "Remove an animation",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "Animation"
        ],
        "spread": false,
        "optional": false,
        "name": "animation",
        "description": "the animation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1131,
    "kind": "method",
    "name": "run",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#run",
    "access": "public",
    "description": "Run all animations",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stats"
        ],
        "spread": false,
        "optional": false,
        "name": "stats",
        "description": "a viewer stats objects"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1132,
    "kind": "method",
    "name": "spin",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#spin",
    "access": "public",
    "description": "Add a spin animation",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "axis to spin around"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin per frame, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SpinAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1133,
    "kind": "method",
    "name": "rock",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#rock",
    "access": "public",
    "description": "Add a rock animation",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "axis to rock around"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin per frame, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "maximum extend of motion, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SpinAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1134,
    "kind": "method",
    "name": "rotate",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#rotate",
    "access": "public",
    "description": "Add a rotate animation",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion"
        ],
        "spread": false,
        "optional": false,
        "name": "rotateTo",
        "description": "target rotation"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RotateAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1135,
    "kind": "method",
    "name": "move",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#move",
    "access": "public",
    "description": "Add a move animation",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "moveTo",
        "description": "target position"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MoveAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1136,
    "kind": "method",
    "name": "zoom",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#zoom",
    "access": "public",
    "description": "Add a zoom animation",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoomTo",
        "description": "target distance"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ZoomAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1137,
    "kind": "method",
    "name": "zoomMove",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#zoomMove",
    "access": "public",
    "description": "Add a zoom and a move animation",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "moveTo",
        "description": "target position"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "zoomTo",
        "description": "target distance"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the animations"
    }
  },
  {
    "__docId__": 1138,
    "kind": "method",
    "name": "orient",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#orient",
    "access": "public",
    "description": "Add an orient animation",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "OrientationMatrix",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "orientTo",
        "description": "target orientation"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "the animations"
    }
  },
  {
    "__docId__": 1139,
    "kind": "method",
    "name": "value",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#value",
    "access": "public",
    "description": "Add a value animation",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "valueFrom",
        "description": "start value"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "valueTo",
        "description": "target value"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "called on every tick"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ValueAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1140,
    "kind": "method",
    "name": "timeout",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#timeout",
    "access": "public",
    "description": "Add a timeout animation",
    "lineNumber": 219,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "called after duration"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "timeout in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TimeoutAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1141,
    "kind": "method",
    "name": "spinComponent",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#spinComponent",
    "access": "public",
    "description": "Add a component spin animation",
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "object to move"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "axis to spin around"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin per frame, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SpinAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1142,
    "kind": "method",
    "name": "rockComponent",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#rockComponent",
    "access": "public",
    "description": "Add a component rock animation",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "object to move"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "axis to rock around"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin per frame, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "maximum extend of motion, radians"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SpinAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1143,
    "kind": "method",
    "name": "moveComponent",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#moveComponent",
    "access": "public",
    "description": "Add a component move animation",
    "lineNumber": 261,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "object to move"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "moveTo",
        "description": "target position"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MoveAnimation"
      ],
      "spread": false,
      "description": "the animation"
    }
  },
  {
    "__docId__": 1144,
    "kind": "method",
    "name": "pause",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#pause",
    "access": "public",
    "description": "Pause all animations",
    "lineNumber": 273,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1145,
    "kind": "method",
    "name": "resume",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#resume",
    "access": "public",
    "description": "Resume all animations",
    "lineNumber": 281,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1146,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#toggle",
    "access": "public",
    "description": "Toggle all animations",
    "lineNumber": 289,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1147,
    "kind": "method",
    "name": "clear",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#clear",
    "access": "public",
    "description": "Clear all animations",
    "lineNumber": 301,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1148,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/controls/animation-controls.js~AnimationControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/animation-controls.js~AnimationControls#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true
  },
  {
    "__docId__": 1149,
    "kind": "file",
    "name": "src/controls/component-controls.js",
    "content": "/**\r\n * @file Component Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { ensureVector3 } from '../utils.js'\r\n\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpRotateQuaternion = new Quaternion()\r\n\r\n/**\r\n * Component controls\r\n */\r\nclass ComponentControls {\r\n  /**\r\n   * @param  {Component} component - the component object\r\n   */\r\n  constructor (component) {\r\n    this.component = component\r\n    this.stage = component.stage\r\n    this.viewer = component.stage.viewer\r\n\r\n    /**\r\n     * @type {{changed: Signal}}\r\n     */\r\n    this.signals = {\r\n      changed: new Signal()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * component center position\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.component.position\r\n  }\r\n\r\n  /**\r\n   * component rotation\r\n   * @type {Quaternion}\r\n   */\r\n  get rotation () {\r\n    return this.component.quaternion\r\n  }\r\n\r\n  /**\r\n   * Trigger render and emit changed event\r\n   * @emits {ComponentControls.signals.changed}\r\n   * @return {undefined}\r\n   */\r\n  changed () {\r\n    this.component.updateMatrix()\r\n    this.viewer.requestRender()\r\n    this.signals.changed.dispatch()\r\n  }\r\n\r\n  /**\r\n   * spin component on axis\r\n   * @param  {Vector3|Array} axis - rotation axis\r\n   * @param  {Number} angle - amount to spin\r\n   * @return {undefined}\r\n   */\r\n  spin (axis, angle) {\r\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n    tmpRotateVector\r\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\r\n\r\n    tmpRotateMatrix.extractRotation(this.component.transform)\r\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\r\n\r\n    tmpRotateVector.copy(ensureVector3(axis))\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateMatrix.makeRotationAxis(tmpRotateVector, angle)\r\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateMatrix)\r\n\r\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\r\n    this.changed()\r\n  }\r\n}\r\n\r\nexport default ComponentControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/component-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1150,
    "kind": "variable",
    "name": "tmpRotateMatrix",
    "memberof": "src/controls/component-controls.js",
    "static": true,
    "longname": "src/controls/component-controls.js~tmpRotateMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/component-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1151,
    "kind": "variable",
    "name": "tmpRotateVector",
    "memberof": "src/controls/component-controls.js",
    "static": true,
    "longname": "src/controls/component-controls.js~tmpRotateVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/component-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1152,
    "kind": "variable",
    "name": "tmpRotateQuaternion",
    "memberof": "src/controls/component-controls.js",
    "static": true,
    "longname": "src/controls/component-controls.js~tmpRotateQuaternion",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/component-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1153,
    "kind": "class",
    "name": "ComponentControls",
    "memberof": "src/controls/component-controls.js",
    "static": true,
    "longname": "src/controls/component-controls.js~ComponentControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/component-controls.js",
    "importStyle": "ComponentControls",
    "description": "Component controls",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 1154,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "the component object"
      }
    ]
  },
  {
    "__docId__": 1155,
    "kind": "member",
    "name": "component",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#component",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1156,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1157,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1158,
    "kind": "member",
    "name": "signals",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#signals",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "{changed: Signal}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1159,
    "kind": "get",
    "name": "position",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#position",
    "access": "public",
    "description": "component center position",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1160,
    "kind": "get",
    "name": "rotation",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#rotation",
    "access": "public",
    "description": "component rotation",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1161,
    "kind": "method",
    "name": "changed",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#changed",
    "access": "public",
    "description": "Trigger render and emit changed event",
    "lineNumber": 57,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "ComponentControls.signals.changed"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1162,
    "kind": "method",
    "name": "spin",
    "memberof": "src/controls/component-controls.js~ComponentControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/component-controls.js~ComponentControls#spin",
    "access": "public",
    "description": "spin component on axis",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "rotation axis"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1163,
    "kind": "file",
    "name": "src/controls/key-actions.js",
    "content": "/**\r\n * @file Key Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Key actions provided as static methods\r\n */\r\nclass KeyActions {\r\n  /**\r\n   * Stage auto view\r\n   * @param {Stage} stage - the stage\r\n   * @return {undefined}\r\n   */\r\n  static autoView (stage) {\r\n    stage.autoView(1000)\r\n  }\r\n\r\n  /**\r\n   * Toggle stage animations\r\n   * @param {Stage} stage - the stage\r\n   * @return {undefined}\r\n   */\r\n  static toggleAnimations (stage) {\r\n    stage.animationControls.toggle()\r\n  }\r\n\r\n  /**\r\n   * Toggle stage rocking\r\n   * @param {Stage} stage - the stage\r\n   * @return {undefined}\r\n   */\r\n  static toggleRock (stage) {\r\n    stage.toggleRock()\r\n  }\r\n\r\n  /**\r\n   * Toggle stage spinning\r\n   * @param {Stage} stage - the stage\r\n   * @return {undefined}\r\n   */\r\n  static toggleSpin (stage) {\r\n    stage.toggleSpin()\r\n  }\r\n}\r\n\r\nconst KeyActionPresets = {\r\n  default: [\r\n    [ 'i', KeyActions.toggleSpin ],\r\n    [ 'k', KeyActions.toggleRock ],\r\n    [ 'p', KeyActions.toggleAnimations ],\r\n    [ 'r', KeyActions.autoView ]\r\n  ]\r\n}\r\n\r\nexport default KeyActions\r\n\r\nexport {\r\n  KeyActionPresets\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/key-actions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1164,
    "kind": "class",
    "name": "KeyActions",
    "memberof": "src/controls/key-actions.js",
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActions",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/key-actions.js",
    "importStyle": "KeyActions",
    "description": "Key actions provided as static methods",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 1165,
    "kind": "method",
    "name": "autoView",
    "memberof": "src/controls/key-actions.js~KeyActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActions.autoView",
    "access": "public",
    "description": "Stage auto view",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1166,
    "kind": "method",
    "name": "toggleAnimations",
    "memberof": "src/controls/key-actions.js~KeyActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActions.toggleAnimations",
    "access": "public",
    "description": "Toggle stage animations",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1167,
    "kind": "method",
    "name": "toggleRock",
    "memberof": "src/controls/key-actions.js~KeyActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActions.toggleRock",
    "access": "public",
    "description": "Toggle stage rocking",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1168,
    "kind": "method",
    "name": "toggleSpin",
    "memberof": "src/controls/key-actions.js~KeyActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActions.toggleSpin",
    "access": "public",
    "description": "Toggle stage spinning",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1169,
    "kind": "variable",
    "name": "KeyActionPresets",
    "memberof": "src/controls/key-actions.js",
    "static": true,
    "longname": "src/controls/key-actions.js~KeyActionPresets",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/key-actions.js",
    "importStyle": "{KeyActionPresets}",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 1170,
    "kind": "file",
    "name": "src/controls/key-controls.js",
    "content": "/**\r\n * @file Key Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { KeyActionPresets } from './key-actions.js'\r\n\r\n/**\r\n * Mouse controls\r\n */\r\nclass KeyControls {\r\n  /**\r\n   * @param {Stage} stage - the stage object\r\n   * @param {Object} [params] - the parameters\r\n   * @param {String} params.preset - one of \"default\"\r\n   * @param {String} params.disabled - flag to disable all actions\r\n   */\r\n  constructor (stage, params) {\r\n    const p = params || {}\r\n\r\n    this.stage = stage\r\n    this.actionList = []\r\n\r\n    /**\r\n     * Flag to disable all actions\r\n     * @type {Boolean}\r\n     */\r\n    this.disabled = p.disabled || false\r\n\r\n    this.preset(p.preset || 'default')\r\n  }\r\n\r\n  run (keyCode) {\r\n    if (this.disabled) return\r\n\r\n    this.actionList.forEach(a => {\r\n      if (a.keyCode === keyCode) {\r\n        a.callback(this.stage)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a key action triggered by pressing the given character.\r\n   * The {@link KeyActions} class provides a number of static methods for\r\n   * use as callback functions.\r\n   *\r\n   * @example\r\n   * // call KeyActions.toggleRock when \"k\" is pressed\r\n   * stage.keyControls.remove( \"k\", KeyActions.toggleRock );\r\n   *\r\n   * @param {Char} char - the key/character\r\n   * @param {Function} callback - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  add (char, callback) {\r\n    const keyCode = char.charCodeAt(0)\r\n\r\n    this.actionList.push({ keyCode, callback })\r\n  }\r\n\r\n  /**\r\n   * Remove a key action. When the callback function\r\n   * is given, only actions that call that function are removed.\r\n   *\r\n   * @example\r\n   * // remove all actions triggered by pressing \"k\"\r\n   * stage.keyControls.remove( \"k\" );\r\n   *\r\n   * @example\r\n   * // remove action `toggleRock` triggered by pressing \"k\"\r\n   * stage.keyControls.remove( \"k\", toggleRock );\r\n   *\r\n   * @param {Char} char - the key/character\r\n   * @param {Function} [callback] - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  remove (char, callback) {\r\n    const keyCode = char.charCodeAt(0)\r\n\r\n    const actionList = this.actionList.filter(function (a) {\r\n      return !(\r\n        (a.keyCode === keyCode) &&\r\n        (a.callback === callback || callback === undefined)\r\n      )\r\n    })\r\n\r\n    this.actionList = actionList\r\n  }\r\n\r\n  /**\r\n   * Set key action preset\r\n   * @param  {String} name - one of \"default\"\r\n   * @return {undefined}\r\n   */\r\n  preset (name) {\r\n    this.clear()\r\n\r\n    const list = KeyActionPresets[ name ] || []\r\n\r\n    list.forEach(action => this.add(...action))\r\n  }\r\n\r\n  /**\r\n   * Remove all key actions\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.actionList.length = 0\r\n  }\r\n}\r\n\r\nexport default KeyControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/key-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1171,
    "kind": "class",
    "name": "KeyControls",
    "memberof": "src/controls/key-controls.js",
    "static": true,
    "longname": "src/controls/key-controls.js~KeyControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/key-controls.js",
    "importStyle": "KeyControls",
    "description": "Mouse controls",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 1172,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "the parameters"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.preset",
        "description": "one of \"default\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.disabled",
        "description": "flag to disable all actions"
      }
    ]
  },
  {
    "__docId__": 1173,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1174,
    "kind": "member",
    "name": "actionList",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#actionList",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1175,
    "kind": "member",
    "name": "disabled",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#disabled",
    "access": "public",
    "description": "Flag to disable all actions",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1176,
    "kind": "method",
    "name": "run",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#run",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1177,
    "kind": "method",
    "name": "add",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#add",
    "access": "public",
    "description": "Add a key action triggered by pressing the given character.\nThe {@link KeyActions} class provides a number of static methods for\nuse as callback functions.",
    "examples": [
      "// call KeyActions.toggleRock when \"k\" is pressed\nstage.keyControls.remove( \"k\", KeyActions.toggleRock );"
    ],
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "Char"
        ],
        "spread": false,
        "optional": false,
        "name": "char",
        "description": "the key/character"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function for the action"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1178,
    "kind": "method",
    "name": "remove",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#remove",
    "access": "public",
    "description": "Remove a key action. When the callback function\nis given, only actions that call that function are removed.",
    "examples": [
      "// remove all actions triggered by pressing \"k\"\nstage.keyControls.remove( \"k\" );",
      "// remove action `toggleRock` triggered by pressing \"k\"\nstage.keyControls.remove( \"k\", toggleRock );"
    ],
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Char"
        ],
        "spread": false,
        "optional": false,
        "name": "char",
        "description": "the key/character"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "the callback function for the action"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1180,
    "kind": "method",
    "name": "preset",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#preset",
    "access": "public",
    "description": "Set key action preset",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "one of \"default\""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1181,
    "kind": "method",
    "name": "clear",
    "memberof": "src/controls/key-controls.js~KeyControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/key-controls.js~KeyControls#clear",
    "access": "public",
    "description": "Remove all key actions",
    "lineNumber": 109,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1182,
    "kind": "file",
    "name": "src/controls/mouse-actions.js",
    "content": "/**\r\n * @file Mouse Actions\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { almostIdentity } from '../math/math-utils.js'\r\n\r\n/**\r\n * Mouse actions provided as static methods\r\n */\r\nclass MouseActions {\r\n  /**\r\n   * Zoom scene based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomScroll (stage, delta) {\r\n    stage.trackballControls.zoom(delta)\r\n  }\r\n\r\n  /**\r\n   * Move near clipping plane based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to move clipping plane\r\n   * @return {undefined}\r\n   */\r\n  static clipNearScroll (stage, delta) {\r\n    const sp = stage.getParameters()\r\n    stage.setParameters({ clipNear: sp.clipNear + delta / 10 })\r\n  }\r\n\r\n  /**\r\n   * Move focus planes based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to move focus planes\r\n   * @return {undefined}\r\n   */\r\n  static focusScroll (stage, delta) {\r\n    const sp = stage.getParameters()\r\n    const focus = sp.clipNear * 2\r\n    const sign = Math.sign(delta)\r\n    const step = sign * almostIdentity((100 - focus) / 10, 5, 0.2)\r\n    stage.setFocus(focus + step)\r\n  }\r\n\r\n  /**\r\n   * Change isolevel of volume surfaces based on scroll-delta\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} delta - amount to change isolevel\r\n   * @return {undefined}\r\n   */\r\n  static isolevelScroll (stage, delta) {\r\n    const d = Math.sign(delta) / 5\r\n    stage.eachRepresentation(function (reprComp) {\r\n      if (reprComp.repr.type !== 'surface') return\r\n      const l = reprComp.getParameters().isolevel\r\n      reprComp.setParameters({ isolevel: l + d })\r\n    }, 'volume')\r\n  }\r\n\r\n  /**\r\n   * Pan scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panDrag (stage, dx, dy) {\r\n    stage.trackballControls.pan(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Rotate scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to rotate in x direction\r\n   * @param {Number} dy - amount to rotate in y direction\r\n   * @return {undefined}\r\n   */\r\n  static rotateDrag (stage, dx, dy) {\r\n    stage.trackballControls.rotate(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Zoom scene based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to zoom\r\n   * @param {Number} dy - amount to zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomDrag (stage, dx, dy) {\r\n    stage.trackballControls.zoom((dx + dy) / -2)\r\n  }\r\n\r\n  /**\r\n   * Zoom scene based on mouse coordinate changes and\r\n   * move focus planes based on camera position (zoom)\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to zoom\r\n   * @param {Number} dy - amount to zoom\r\n   * @return {undefined}\r\n   */\r\n  static zoomFocusDrag (stage, dx, dy) {\r\n    stage.trackballControls.zoom((dx + dy) / -2)\r\n    const z = stage.viewer.camera.position.z\r\n    stage.setFocus(100 - Math.abs(z / 8))\r\n  }\r\n\r\n  /**\r\n   * Pan picked component based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panComponentDrag (stage, dx, dy) {\r\n    stage.trackballControls.panComponent(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Pan picked atom based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to pan in x direction\r\n   * @param {Number} dy - amount to pan in y direction\r\n   * @return {undefined}\r\n   */\r\n  static panAtomDrag (stage, dx, dy) {\r\n    stage.trackballControls.panAtom(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Rotate picked component based on mouse coordinate changes\r\n   * @param {Stage} stage - the stage\r\n   * @param {Number} dx - amount to rotate in x direction\r\n   * @param {Number} dy - amount to rotate in y direction\r\n   * @return {undefined}\r\n   */\r\n  static rotateComponentDrag (stage, dx, dy) {\r\n    stage.trackballControls.rotateComponent(dx, dy)\r\n  }\r\n\r\n  /**\r\n   * Move picked element to the center of the screen\r\n   * @param {Stage} stage - the stage\r\n   * @param {PickingProxy} pickingProxy - the picking data object\r\n   * @return {undefined}\r\n   */\r\n  static movePick (stage, pickingProxy) {\r\n    if (pickingProxy) {\r\n      stage.animationControls.move(pickingProxy.position.clone())\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show tooltip with information of picked element\r\n   * @param {Stage} stage - the stage\r\n   * @param {PickingProxy} pickingProxy - the picking data object\r\n   * @return {undefined}\r\n   */\r\n  static tooltipPick (stage, pickingProxy) {\r\n    const tt = stage.tooltip\r\n    const sp = stage.getParameters()\r\n    if (sp.tooltip && pickingProxy) {\r\n      const mp = pickingProxy.mouse.position\r\n      tt.innerText = pickingProxy.getLabel()\r\n      tt.style.bottom = (window.innerHeight - mp.y + 3) + 'px'\r\n      tt.style.left = (mp.x + 3) + 'px'\r\n      tt.style.display = 'block'\r\n    } else {\r\n      tt.style.display = 'none'\r\n    }\r\n  }\r\n}\r\n\r\nconst MouseActionPresets = {\r\n  default: [\r\n    [ 'scroll', MouseActions.zoomScroll ],\r\n    [ 'scroll-ctrl', MouseActions.clipNearScroll ],\r\n    [ 'scroll-shift', MouseActions.focusScroll ],\r\n    [ 'scroll-alt', MouseActions.isolevelScroll ],\r\n\r\n    [ 'drag-right', MouseActions.panDrag ],\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-middle', MouseActions.zoomDrag ],\r\n    [ 'drag-shift-right', MouseActions.zoomDrag ],\r\n    [ 'drag-left+right', MouseActions.zoomDrag ],\r\n    [ 'drag-ctrl-right', MouseActions.panComponentDrag ],\r\n    [ 'drag-ctrl-left', MouseActions.rotateComponentDrag ],\r\n\r\n    [ 'clickPick-middle', MouseActions.movePick ],\r\n    [ 'clickPick-shift-left', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ],\r\n  pymol: [\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-middle', MouseActions.panDrag ],\r\n    [ 'drag-right', MouseActions.zoomDrag ],\r\n    [ 'drag-shift-right', MouseActions.focusScroll ],\r\n\r\n    [ 'clickPick-ctrl+shift-middle', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ],\r\n  coot: [\r\n    [ 'scroll', MouseActions.isolevelScroll ],\r\n\r\n    [ 'drag-left', MouseActions.rotateDrag ],\r\n    [ 'drag-middle', MouseActions.panDrag ],\r\n    [ 'drag-ctrl-left', MouseActions.panDrag ],\r\n    [ 'drag-right', MouseActions.zoomFocusDrag ],\r\n    [ 'drag-ctrl-right', MouseActions.focusScroll ],\r\n\r\n    [ 'clickPick-middle', MouseActions.movePick ],\r\n    [ 'hoverPick', MouseActions.tooltipPick ]\r\n  ]\r\n}\r\n\r\nexport default MouseActions\r\n\r\nexport {\r\n  MouseActionPresets\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/mouse-actions.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1183,
    "kind": "class",
    "name": "MouseActions",
    "memberof": "src/controls/mouse-actions.js",
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/mouse-actions.js",
    "importStyle": "MouseActions",
    "description": "Mouse actions provided as static methods",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 1184,
    "kind": "method",
    "name": "zoomScroll",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.zoomScroll",
    "access": "public",
    "description": "Zoom scene based on scroll-delta",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "amount to zoom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1185,
    "kind": "method",
    "name": "clipNearScroll",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.clipNearScroll",
    "access": "public",
    "description": "Move near clipping plane based on scroll-delta",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "amount to move clipping plane"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1186,
    "kind": "method",
    "name": "focusScroll",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.focusScroll",
    "access": "public",
    "description": "Move focus planes based on scroll-delta",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "amount to move focus planes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1187,
    "kind": "method",
    "name": "isolevelScroll",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.isolevelScroll",
    "access": "public",
    "description": "Change isolevel of volume surfaces based on scroll-delta",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "amount to change isolevel"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1188,
    "kind": "method",
    "name": "panDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.panDrag",
    "access": "public",
    "description": "Pan scene based on mouse coordinate changes",
    "lineNumber": 70,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to pan in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to pan in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1189,
    "kind": "method",
    "name": "rotateDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.rotateDrag",
    "access": "public",
    "description": "Rotate scene based on mouse coordinate changes",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to rotate in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to rotate in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1190,
    "kind": "method",
    "name": "zoomDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.zoomDrag",
    "access": "public",
    "description": "Zoom scene based on mouse coordinate changes",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to zoom"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to zoom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1191,
    "kind": "method",
    "name": "zoomFocusDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.zoomFocusDrag",
    "access": "public",
    "description": "Zoom scene based on mouse coordinate changes and\nmove focus planes based on camera position (zoom)",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to zoom"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to zoom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1192,
    "kind": "method",
    "name": "panComponentDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.panComponentDrag",
    "access": "public",
    "description": "Pan picked component based on mouse coordinate changes",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to pan in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to pan in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1193,
    "kind": "method",
    "name": "panAtomDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.panAtomDrag",
    "access": "public",
    "description": "Pan picked atom based on mouse coordinate changes",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to pan in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to pan in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1194,
    "kind": "method",
    "name": "rotateComponentDrag",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.rotateComponentDrag",
    "access": "public",
    "description": "Rotate picked component based on mouse coordinate changes",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dx",
        "description": "amount to rotate in x direction"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "dy",
        "description": "amount to rotate in y direction"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1195,
    "kind": "method",
    "name": "movePick",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.movePick",
    "access": "public",
    "description": "Move picked element to the center of the screen",
    "lineNumber": 149,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "PickingProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "pickingProxy",
        "description": "the picking data object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1196,
    "kind": "method",
    "name": "tooltipPick",
    "memberof": "src/controls/mouse-actions.js~MouseActions",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActions.tooltipPick",
    "access": "public",
    "description": "Show tooltip with information of picked element",
    "lineNumber": 161,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage"
      },
      {
        "nullable": null,
        "types": [
          "PickingProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "pickingProxy",
        "description": "the picking data object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1197,
    "kind": "variable",
    "name": "MouseActionPresets",
    "memberof": "src/controls/mouse-actions.js",
    "static": true,
    "longname": "src/controls/mouse-actions.js~MouseActionPresets",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/mouse-actions.js",
    "importStyle": "{MouseActionPresets}",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 1198,
    "kind": "file",
    "name": "src/controls/mouse-controls.js",
    "content": "/**\r\n * @file Mouse Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { MouseActionPresets } from './mouse-actions.js'\r\n\r\n/**\r\n * Strings to describe mouse events (including optional keyboard modifiers).\r\n * Must contain an event type: \"scroll\", \"drag\", \"click\", \"doubleClick\",\r\n * \"hover\", \"clickPick\" or \"hoverPick\". Optionally contain one or more\r\n * (seperated by plus signs) keyboard modifiers: \"alt\", \"ctrl\", \"meta\" or\r\n * \"shift\". Can contain the mouse button performing the event: \"left\",\r\n * \"middle\" or \"right\". The type, key and button parts must be seperated by\r\n * dashes.\r\n *\r\n * @example\r\n * // triggered on scroll event (no key or button)\r\n * \"scroll\"\r\n *\r\n * @example\r\n * // triggered on scroll event while shift key is pressed\r\n * \"scroll-shift\"\r\n *\r\n * @example\r\n * // triggered on drag event with left mouse button\r\n * \"drag-left\"\r\n *\r\n * @example\r\n * // triggered on drag event with right mouse button\r\n * // while ctrl and shift keys are pressed\r\n * \"drag-right-ctrl+shift\"\r\n *\r\n * @typedef {String} TriggerString\r\n */\r\n\r\n/**\r\n * Get event type, key and button\r\n * @param  {TriggerString} str - input trigger string\r\n * @return {Array} event type, key and button\r\n */\r\nfunction triggerFromString (str) {\r\n  const tokens = str.split(/[-+]/)\r\n\r\n  let type = ''\r\n  if (tokens.includes('scroll')) type = 'scroll'\r\n  if (tokens.includes('drag')) type = 'drag'\r\n  if (tokens.includes('click')) type = 'click'\r\n  if (tokens.includes('doubleClick')) type = 'doubleClick'\r\n  if (tokens.includes('hover')) type = 'hover'\r\n  if (tokens.includes('clickPick')) type = 'clickPick'\r\n  if (tokens.includes('hoverPick')) type = 'hoverPick'\r\n\r\n  let key = 0\r\n  if (tokens.includes('alt')) key += 1\r\n  if (tokens.includes('ctrl')) key += 2\r\n  if (tokens.includes('meta')) key += 4\r\n  if (tokens.includes('shift')) key += 8\r\n\r\n  let button = 0\r\n  if (tokens.includes('left')) button += 1\r\n  if (tokens.includes('right')) button += 2\r\n  if (tokens.includes('middle')) button += 4\r\n\r\n  return [ type, key, button ]\r\n}\r\n\r\n/**\r\n * Mouse controls\r\n */\r\nclass MouseControls {\r\n  /**\r\n   * @param {Stage} stage - the stage object\r\n   * @param {Object} [params] - the parameters\r\n   * @param {String} params.preset - one of \"default\", \"pymol\", \"coot\"\r\n   * @param {String} params.disabled - flag to disable all actions\r\n   */\r\n  constructor (stage, params) {\r\n    const p = params || {}\r\n\r\n    this.stage = stage\r\n    this.mouse = stage.mouseObserver\r\n    this.actionList = []\r\n\r\n    /**\r\n     * Flag to disable all actions\r\n     * @type {Boolean}\r\n     */\r\n    this.disabled = p.disabled || false\r\n\r\n    this.preset(p.preset || 'default')\r\n  }\r\n\r\n  run (type, ...args) {\r\n    if (this.disabled) return\r\n\r\n    const key = this.mouse.key || 0\r\n    const button = this.mouse.buttons || 0\r\n\r\n    this.actionList.forEach(a => {\r\n      if (a.type === type && a.key === key && a.button === button) {\r\n        a.callback(this.stage, ...args)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a new mouse action triggered by an event, key and button combination.\r\n   * The {@link MouseActions} class provides a number of static methods for\r\n   * use as callback functions.\r\n   *\r\n   * @example\r\n   * // change ambient light intensity on mouse scroll\r\n   * // while the ctrl and shift keys are pressed\r\n   * stage.mouseControls.add( \"scroll-ctrl+shift\", function( stage, delta ){\r\n   *     var ai = stage.getParameters().ambientIntensity;\r\n   *     stage.setParameters( { ambientIntensity: Math.max( 0, ai + delta / 50 ) } );\r\n   * } );\r\n   *\r\n   * @example\r\n   * // Call the MouseActions.zoomDrag method on mouse drag events\r\n   * // with left and right mouse buttons simultaneous\r\n   * stage.mouseControls.add( \"drag-left+right\", MouseActions.zoomDrag );\r\n   *\r\n   * @param {TriggerString} triggerStr - the trigger for the action\r\n   * @param {function(stage: Stage, ...args: Any)} callback - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  add (triggerStr, callback) {\r\n    const [ type, key, button ] = triggerFromString(triggerStr)\r\n\r\n    this.actionList.push({ type, key, button, callback })\r\n  }\r\n\r\n  /**\r\n   * Remove a mouse action. The trigger string can contain an asterix (*)\r\n   * as a wildcard for any key or mouse button. When the callback function\r\n   * is given, only actions that call that function are removed.\r\n   *\r\n   * @example\r\n   * // remove actions triggered solely by a scroll event\r\n   * stage.mouseControls.remove( \"scroll\" );\r\n   *\r\n   * @example\r\n   * // remove actions triggered by a scroll event, including\r\n   * // those requiring a key pressed or mouse button used\r\n   * stage.mouseControls.remove( \"scroll-*\" );\r\n   *\r\n   * @example\r\n   * // remove actions triggered by a scroll event\r\n   * // while the shift key is pressed\r\n   * stage.mouseControls.remove( \"scroll-shift\" );\r\n   *\r\n   * @param {TriggerString} triggerStr - the trigger for the action\r\n   * @param {Function} [callback] - the callback function for the action\r\n   * @return {undefined}\r\n   */\r\n  remove (triggerStr, callback) {\r\n    const wildcard = triggerStr.includes('*')\r\n    const [ type, key, button ] = triggerFromString(triggerStr)\r\n\r\n    const actionList = this.actionList.filter(function (a) {\r\n      return !(\r\n        (a.type === type || (wildcard && type === '')) &&\r\n        (a.key === key || (wildcard && key === 0)) &&\r\n        (a.button === button || (wildcard && button === 0)) &&\r\n        (a.callback === callback || callback === undefined)\r\n      )\r\n    })\r\n\r\n    this.actionList = actionList\r\n  }\r\n\r\n  /**\r\n   * Set mouse action preset\r\n   * @param  {String} name - one of \"default\", \"pymol\", \"coot\"\r\n   * @return {undefined}\r\n   */\r\n  preset (name) {\r\n    this.clear()\r\n\r\n    const list = MouseActionPresets[ name ] || []\r\n\r\n    list.forEach(action => this.add(...action))\r\n  }\r\n\r\n  /**\r\n   * Remove all mouse actions\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.actionList.length = 0\r\n  }\r\n}\r\n\r\nexport default MouseControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/mouse-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1199,
    "kind": "typedef",
    "name": "TriggerString",
    "memberof": "src/controls/mouse-controls.js",
    "static": true,
    "longname": "src/controls/mouse-controls.js~TriggerString",
    "access": "public",
    "description": "Strings to describe mouse events (including optional keyboard modifiers).\nMust contain an event type: \"scroll\", \"drag\", \"click\", \"doubleClick\",\n\"hover\", \"clickPick\" or \"hoverPick\". Optionally contain one or more\n(seperated by plus signs) keyboard modifiers: \"alt\", \"ctrl\", \"meta\" or\n\"shift\". Can contain the mouse button performing the event: \"left\",\n\"middle\" or \"right\". The type, key and button parts must be seperated by\ndashes.",
    "examples": [
      "// triggered on scroll event (no key or button)\n\"scroll\"",
      "// triggered on scroll event while shift key is pressed\n\"scroll-shift\"",
      "// triggered on drag event with left mouse button\n\"drag-left\"",
      "// triggered on drag event with right mouse button\n// while ctrl and shift keys are pressed\n\"drag-right-ctrl+shift\""
    ],
    "type": {
      "types": [
        "String"
      ],
      "optional": false,
      "name": "TriggerString"
    }
  },
  {
    "__docId__": 1200,
    "kind": "function",
    "name": "triggerFromString",
    "memberof": "src/controls/mouse-controls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/mouse-controls.js~triggerFromString",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/mouse-controls.js",
    "importStyle": null,
    "description": "Get event type, key and button",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "TriggerString"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "input trigger string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "event type, key and button"
    },
    "ignore": true
  },
  {
    "__docId__": 1201,
    "kind": "class",
    "name": "MouseControls",
    "memberof": "src/controls/mouse-controls.js",
    "static": true,
    "longname": "src/controls/mouse-controls.js~MouseControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/mouse-controls.js",
    "importStyle": "MouseControls",
    "description": "Mouse controls",
    "lineNumber": 72,
    "interface": false
  },
  {
    "__docId__": 1202,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "the parameters"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.preset",
        "description": "one of \"default\", \"pymol\", \"coot\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.disabled",
        "description": "flag to disable all actions"
      }
    ]
  },
  {
    "__docId__": 1203,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 1204,
    "kind": "member",
    "name": "mouse",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#mouse",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 1205,
    "kind": "member",
    "name": "actionList",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#actionList",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 1206,
    "kind": "member",
    "name": "disabled",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#disabled",
    "access": "public",
    "description": "Flag to disable all actions",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1207,
    "kind": "method",
    "name": "run",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#run",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 1208,
    "kind": "method",
    "name": "add",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#add",
    "access": "public",
    "description": "Add a new mouse action triggered by an event, key and button combination.\nThe {@link MouseActions} class provides a number of static methods for\nuse as callback functions.",
    "examples": [
      "// change ambient light intensity on mouse scroll\n// while the ctrl and shift keys are pressed\nstage.mouseControls.add( \"scroll-ctrl+shift\", function( stage, delta ){\n    var ai = stage.getParameters().ambientIntensity;\n    stage.setParameters( { ambientIntensity: Math.max( 0, ai + delta / 50 ) } );\n} );",
      "// Call the MouseActions.zoomDrag method on mouse drag events\n// with left and right mouse buttons simultaneous\nstage.mouseControls.add( \"drag-left+right\", MouseActions.zoomDrag );"
    ],
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "TriggerString"
        ],
        "spread": false,
        "optional": false,
        "name": "triggerStr",
        "description": "the trigger for the action"
      },
      {
        "nullable": null,
        "types": [
          "function(stage: Stage, ...args: Any)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function for the action"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1209,
    "kind": "method",
    "name": "remove",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#remove",
    "access": "public",
    "description": "Remove a mouse action. The trigger string can contain an asterix (*)\nas a wildcard for any key or mouse button. When the callback function\nis given, only actions that call that function are removed.",
    "examples": [
      "// remove actions triggered solely by a scroll event\nstage.mouseControls.remove( \"scroll\" );",
      "// remove actions triggered by a scroll event, including\n// those requiring a key pressed or mouse button used\nstage.mouseControls.remove( \"scroll-*\" );",
      "// remove actions triggered by a scroll event\n// while the shift key is pressed\nstage.mouseControls.remove( \"scroll-shift\" );"
    ],
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "TriggerString"
        ],
        "spread": false,
        "optional": false,
        "name": "triggerStr",
        "description": "the trigger for the action"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "the callback function for the action"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1211,
    "kind": "method",
    "name": "preset",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#preset",
    "access": "public",
    "description": "Set mouse action preset",
    "lineNumber": 180,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "one of \"default\", \"pymol\", \"coot\""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1212,
    "kind": "method",
    "name": "clear",
    "memberof": "src/controls/mouse-controls.js~MouseControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/mouse-controls.js~MouseControls#clear",
    "access": "public",
    "description": "Remove all mouse actions",
    "lineNumber": 192,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1213,
    "kind": "file",
    "name": "src/controls/picking-controls.js",
    "content": "/**\r\n * @file Picking Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport PickingProxy from './picking-proxy.js'\r\n\r\n/**\r\n * Picking controls\r\n */\r\nclass PickingControls {\r\n  constructor (stage/*, params */) {\r\n    this.stage = stage\r\n    this.viewer = stage.viewer\r\n  }\r\n\r\n  /**\r\n   * get picking data\r\n   * @param {Number} x - canvas x coordinate\r\n   * @param {Number} y - canvas y coordinate\r\n   * @return {PickingProxy|undefined} picking proxy\r\n   */\r\n  pick (x, y) {\r\n    const pickingData = this.viewer.pick(x, y)\r\n\r\n    if (pickingData.picker &&\r\n        pickingData.picker.type !== 'ignore' &&\r\n        pickingData.pid !== undefined\r\n    ) {\r\n      const pickerArray = pickingData.picker.array\r\n      if (pickerArray && pickingData.pid >= pickerArray.length) {\r\n        console.error('pid >= picker.array.length')\r\n      } else {\r\n        return new PickingProxy(pickingData, this.stage)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default PickingControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/picking-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1214,
    "kind": "class",
    "name": "PickingControls",
    "memberof": "src/controls/picking-controls.js",
    "static": true,
    "longname": "src/controls/picking-controls.js~PickingControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/picking-controls.js",
    "importStyle": "PickingControls",
    "description": "Picking controls",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 1215,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/picking-controls.js~PickingControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-controls.js~PickingControls#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1216,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/picking-controls.js~PickingControls",
    "static": false,
    "longname": "src/controls/picking-controls.js~PickingControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1217,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/controls/picking-controls.js~PickingControls",
    "static": false,
    "longname": "src/controls/picking-controls.js~PickingControls#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1218,
    "kind": "method",
    "name": "pick",
    "memberof": "src/controls/picking-controls.js~PickingControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-controls.js~PickingControls#pick",
    "access": "public",
    "description": "get picking data",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": "canvas x coordinate"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "y",
        "description": "canvas y coordinate"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PickingProxy",
        "undefined"
      ],
      "spread": false,
      "description": "picking proxy"
    }
  },
  {
    "__docId__": 1219,
    "kind": "file",
    "name": "src/controls/picking-proxy.js",
    "content": "/**\r\n * @file Picking Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction closer (x, a, b) {\r\n  return x.distanceTo(a) < x.distanceTo(b)\r\n}\r\n\r\n/**\r\n * Picking data object.\r\n * @typedef {Object} PickingData - picking data\r\n * @property {Number} [pid] - picking id\r\n * @property {Object} [instance] - instance data\r\n * @property {Integer} instance.id - instance id\r\n * @property {String|Integer} instance.name - instance name\r\n * @property {Matrix4} instance.matrix - transformation matrix of the instance\r\n * @property {Picker} [picker] - picker object\r\n */\r\n\r\n/**\r\n * Picking proxy class.\r\n */\r\nclass PickingProxy {\r\n  /**\r\n   * Create picking proxy object\r\n   * @param  {PickingData} pickingData - picking data\r\n   * @param  {Stage} stage - stage object\r\n   */\r\n  constructor (pickingData, stage) {\r\n    this.pid = pickingData.pid\r\n    this.picker = pickingData.picker\r\n\r\n    /**\r\n     * @type {Object}\r\n     */\r\n    this.instance = pickingData.instance\r\n\r\n    /**\r\n     * @type {Stage}\r\n     */\r\n    this.stage = stage\r\n    /**\r\n     * @type {ViewerControls}\r\n     */\r\n    this.controls = stage.viewerControls\r\n    /**\r\n     * @type {MouseObserver}\r\n     */\r\n    this.mouse = stage.mouseObserver\r\n  }\r\n\r\n  /**\r\n   * Kind of the picked data\r\n   * @type {String}\r\n   */\r\n  get type () { return this.picker.type }\r\n\r\n  /**\r\n   * If the `alt` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get altKey () { return this.mouse.altKey }\r\n  /**\r\n   * If the `ctrl` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get ctrlKey () { return this.mouse.ctrlKey }\r\n  /**\r\n   * If the `meta` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get metaKey () { return this.mouse.metaKey }\r\n  /**\r\n   * If the `shift` key was pressed\r\n   * @type {Boolean}\r\n   */\r\n  get shiftKey () { return this.mouse.shiftKey }\r\n\r\n  /**\r\n   * Position of the mouse on the canvas\r\n   * @type {Vector2}\r\n   */\r\n  get canvasPosition () { return this.mouse.canvasPosition }\r\n\r\n  /**\r\n   * The component the picked data is part of\r\n   * @type {Component}\r\n   */\r\n  get component () {\r\n    return this.stage.getComponentsByObject(this.picker.data).list[ 0 ]\r\n  }\r\n\r\n  /**\r\n   * The picked object data\r\n   * @type {Object}\r\n   */\r\n  get object () {\r\n    return this.picker.getObject(this.pid)\r\n  }\r\n\r\n  /**\r\n   * The 3d position in the scene of the picked object\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.picker.getPosition(this.pid, this.instance, this.component)\r\n  }\r\n\r\n  /**\r\n   * The atom of a picked bond that is closest to the mouse\r\n   * @type {AtomProxy}\r\n   */\r\n  get closestBondAtom () {\r\n    if (this.type !== 'bond') return undefined\r\n\r\n    const bond = this.bond\r\n    const controls = this.controls\r\n    const cp = this.canvasPosition\r\n\r\n    const acp1 = controls.getPositionOnCanvas(bond.atom1)\r\n    const acp2 = controls.getPositionOnCanvas(bond.atom2)\r\n\r\n    return closer(cp, acp1, acp2) ? bond.atom1 : bond.atom2\r\n  }\r\n\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get arrow () { return this._objectIfType('arrow') }\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom () { return this._objectIfType('atom') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get axes () { return this._objectIfType('axes') }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get bond () { return this._objectIfType('bond') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get box () { return this._objectIfType('box') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get cone () { return this._objectIfType('cone') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get clash () { return this._objectIfType('clash') }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get contact () { return this._objectIfType('contact') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get cylinder () { return this._objectIfType('cylinder') }\r\n  /**\r\n   * @type {BondProxy}\r\n   */\r\n  get distance () { return this._objectIfType('distance') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get ellipsoid () { return this._objectIfType('ellipsoid') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get octahedron () { return this._objectIfType('octahedron') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get mesh () { return this._objectIfType('mesh') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get slice () { return this._objectIfType('slice') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get sphere () { return this._objectIfType('sphere') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get tetrahedron () { return this._objectIfType('tetrahedron') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get torus () { return this._objectIfType('torus') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get surface () { return this._objectIfType('surface') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get unitcell () { return this._objectIfType('unitcell') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get unknown () { return this._objectIfType('unknown') }\r\n  /**\r\n   * @type {Object}\r\n   */\r\n  get volume () { return this._objectIfType('volume') }\r\n\r\n  _objectIfType (type) {\r\n    return this.type === type ? this.object : undefined\r\n  }\r\n\r\n  getLabel () {\r\n    let msg = 'nothing'\r\n    if (this.arrow) {\r\n      msg = 'arrow: ' + (this.arrow.name || this.pid) + ' (' + this.arrow.shape.name + ')'\r\n    } else if (this.atom) {\r\n      msg = 'atom: ' +\r\n              this.atom.qualifiedName() +\r\n              ' (' + this.atom.structure.name + ')'\r\n    } else if (this.axes) {\r\n      msg = 'axes'\r\n    } else if (this.bond) {\r\n      msg = 'bond: ' +\r\n              this.bond.atom1.qualifiedName() + ' - ' + this.bond.atom2.qualifiedName() +\r\n              ' (' + this.bond.structure.name + ')'\r\n    } else if (this.box) {\r\n      msg = 'box: ' + (this.box.name || this.pid) + ' (' + this.box.shape.name + ')'\r\n    } else if (this.cone) {\r\n      msg = 'cone: ' + (this.cone.name || this.pid) + ' (' + this.cone.shape.name + ')'\r\n    } else if (this.clash) {\r\n      msg = 'clash: ' + this.clash.clash.sele1 + ' - ' + this.clash.clash.sele2\r\n    } else if (this.contact) {\r\n      msg = 'contact: ' +\r\n              this.contact.atom1.qualifiedName() + ' - ' + this.contact.atom2.qualifiedName() +\r\n              ' (' + this.contact.structure.name + ')'\r\n    } else if (this.cylinder) {\r\n      msg = 'cylinder: ' + (this.cylinder.name || this.pid) + ' (' + this.cylinder.shape.name + ')'\r\n    } else if (this.distance) {\r\n      msg = 'distance: ' +\r\n              this.distance.atom1.qualifiedName() + ' - ' + this.distance.atom2.qualifiedName() +\r\n              ' (' + this.distance.structure.name + ')'\r\n    } else if (this.ellipsoid) {\r\n      msg = 'ellipsoid: ' + (this.ellipsoid.name || this.pid) + ' (' + this.ellipsoid.shape.name + ')'\r\n    } else if (this.octahedron) {\r\n      msg = 'octahedron: ' + (this.octahedron.name || this.pid) + ' (' + this.octahedron.shape.name + ')'\r\n    } else if (this.mesh) {\r\n      msg = 'mesh: ' + (this.mesh.name || this.mesh.serial) + ' (' + this.mesh.shape.name + ')'\r\n    } else if (this.slice) {\r\n      msg = 'slice: ' +\r\n              this.slice.value.toPrecision(3) +\r\n              ' (' + this.slice.volume.name + ')'\r\n    } else if (this.sphere) {\r\n      msg = 'sphere: ' + (this.sphere.name || this.pid) + ' (' + this.sphere.shape.name + ')'\r\n    } else if (this.surface) {\r\n      msg = 'surface: ' + this.surface.surface.name\r\n    } else if (this.tetrahedron) {\r\n      msg = 'tetrahedron: ' + (this.tetrahedron.name || this.pid) + ' (' + this.tetrahedron.shape.name + ')'\r\n    } else if (this.torus) {\r\n      msg = 'torus: ' + (this.torus.name || this.pid) + ' (' + this.torus.shape.name + ')'\r\n    } else if (this.unitcell) {\r\n      msg = 'unitcell: ' +\r\n              this.unitcell.unitcell.spacegroup +\r\n              ' (' + this.unitcell.structure.name + ')'\r\n    } else if (this.unknown) {\r\n      msg = 'unknown'\r\n    } else if (this.volume) {\r\n      msg = 'volume: ' +\r\n              this.volume.value.toPrecision(3) +\r\n              ' (' + this.volume.volume.name + ')'\r\n    }\r\n    return msg\r\n  }\r\n}\r\n\r\nexport default PickingProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/picking-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1220,
    "kind": "function",
    "name": "closer",
    "memberof": "src/controls/picking-proxy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/controls/picking-proxy.js~closer",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/controls/picking-proxy.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Picking Proxy"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 1221,
    "kind": "typedef",
    "name": "PickingData",
    "memberof": "src/controls/picking-proxy.js",
    "static": true,
    "longname": "src/controls/picking-proxy.js~PickingData",
    "access": "public",
    "description": "Picking data object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": true,
        "name": "pid",
        "description": "picking id"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "instance",
        "description": "instance data"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "instance.id",
        "description": "instance id"
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "instance.name",
        "description": "instance name"
      },
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "instance.matrix",
        "description": "transformation matrix of the instance"
      },
      {
        "nullable": null,
        "types": [
          "Picker"
        ],
        "spread": false,
        "optional": true,
        "name": "picker",
        "description": "picker object"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "PickingData"
    }
  },
  {
    "__docId__": 1222,
    "kind": "class",
    "name": "PickingProxy",
    "memberof": "src/controls/picking-proxy.js",
    "static": true,
    "longname": "src/controls/picking-proxy.js~PickingProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/picking-proxy.js",
    "importStyle": "PickingProxy",
    "description": "Picking proxy class.",
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 1223,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#constructor",
    "access": "public",
    "description": "Create picking proxy object",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "PickingData"
        ],
        "spread": false,
        "optional": false,
        "name": "pickingData",
        "description": "picking data"
      },
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "stage object"
      }
    ]
  },
  {
    "__docId__": 1224,
    "kind": "member",
    "name": "pid",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#pid",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 1225,
    "kind": "member",
    "name": "picker",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#picker",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1226,
    "kind": "member",
    "name": "instance",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#instance",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1227,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#stage",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Stage"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1228,
    "kind": "member",
    "name": "controls",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#controls",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "ViewerControls"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1229,
    "kind": "member",
    "name": "mouse",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#mouse",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "MouseObserver"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1230,
    "kind": "get",
    "name": "type",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#type",
    "access": "public",
    "description": "Kind of the picked data",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1231,
    "kind": "get",
    "name": "altKey",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#altKey",
    "access": "public",
    "description": "If the `alt` key was pressed",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1232,
    "kind": "get",
    "name": "ctrlKey",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#ctrlKey",
    "access": "public",
    "description": "If the `ctrl` key was pressed",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1233,
    "kind": "get",
    "name": "metaKey",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#metaKey",
    "access": "public",
    "description": "If the `meta` key was pressed",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1234,
    "kind": "get",
    "name": "shiftKey",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#shiftKey",
    "access": "public",
    "description": "If the `shift` key was pressed",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1235,
    "kind": "get",
    "name": "canvasPosition",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#canvasPosition",
    "access": "public",
    "description": "Position of the mouse on the canvas",
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1236,
    "kind": "get",
    "name": "component",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#component",
    "access": "public",
    "description": "The component the picked data is part of",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1237,
    "kind": "get",
    "name": "object",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#object",
    "access": "public",
    "description": "The picked object data",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1238,
    "kind": "get",
    "name": "position",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#position",
    "access": "public",
    "description": "The 3d position in the scene of the picked object",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1239,
    "kind": "get",
    "name": "closestBondAtom",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#closestBondAtom",
    "access": "public",
    "description": "The atom of a picked bond that is closest to the mouse",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1240,
    "kind": "get",
    "name": "arrow",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#arrow",
    "access": "public",
    "description": "",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1241,
    "kind": "get",
    "name": "atom",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#atom",
    "access": "public",
    "description": "",
    "lineNumber": 135,
    "type": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1242,
    "kind": "get",
    "name": "axes",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#axes",
    "access": "public",
    "description": "",
    "lineNumber": 139,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1243,
    "kind": "get",
    "name": "bond",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#bond",
    "access": "public",
    "description": "",
    "lineNumber": 143,
    "type": {
      "nullable": null,
      "types": [
        "BondProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1244,
    "kind": "get",
    "name": "box",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#box",
    "access": "public",
    "description": "",
    "lineNumber": 147,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1245,
    "kind": "get",
    "name": "cone",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#cone",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1246,
    "kind": "get",
    "name": "clash",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#clash",
    "access": "public",
    "description": "",
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1247,
    "kind": "get",
    "name": "contact",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#contact",
    "access": "public",
    "description": "",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "BondProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1248,
    "kind": "get",
    "name": "cylinder",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#cylinder",
    "access": "public",
    "description": "",
    "lineNumber": 163,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1249,
    "kind": "get",
    "name": "distance",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#distance",
    "access": "public",
    "description": "",
    "lineNumber": 167,
    "type": {
      "nullable": null,
      "types": [
        "BondProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1250,
    "kind": "get",
    "name": "ellipsoid",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#ellipsoid",
    "access": "public",
    "description": "",
    "lineNumber": 171,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1251,
    "kind": "get",
    "name": "octahedron",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#octahedron",
    "access": "public",
    "description": "",
    "lineNumber": 175,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1252,
    "kind": "get",
    "name": "mesh",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#mesh",
    "access": "public",
    "description": "",
    "lineNumber": 179,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1253,
    "kind": "get",
    "name": "slice",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#slice",
    "access": "public",
    "description": "",
    "lineNumber": 183,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1254,
    "kind": "get",
    "name": "sphere",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#sphere",
    "access": "public",
    "description": "",
    "lineNumber": 187,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1255,
    "kind": "get",
    "name": "tetrahedron",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#tetrahedron",
    "access": "public",
    "description": "",
    "lineNumber": 191,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1256,
    "kind": "get",
    "name": "torus",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#torus",
    "access": "public",
    "description": "",
    "lineNumber": 195,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1257,
    "kind": "get",
    "name": "surface",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#surface",
    "access": "public",
    "description": "",
    "lineNumber": 199,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1258,
    "kind": "get",
    "name": "unitcell",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#unitcell",
    "access": "public",
    "description": "",
    "lineNumber": 203,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1259,
    "kind": "get",
    "name": "unknown",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#unknown",
    "access": "public",
    "description": "",
    "lineNumber": 207,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1260,
    "kind": "get",
    "name": "volume",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#volume",
    "access": "public",
    "description": "",
    "lineNumber": 211,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1261,
    "kind": "method",
    "name": "_objectIfType",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#_objectIfType",
    "access": "private",
    "description": null,
    "lineNumber": 213,
    "undocument": true
  },
  {
    "__docId__": 1262,
    "kind": "method",
    "name": "getLabel",
    "memberof": "src/controls/picking-proxy.js~PickingProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/picking-proxy.js~PickingProxy#getLabel",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 1263,
    "kind": "file",
    "name": "src/controls/trackball-controls.js",
    "content": "/**\r\n * @file Trackball Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { degToRad } from '../math/math-utils.js'\r\n\r\nconst tmpRotateXMatrix = new Matrix4()\r\nconst tmpRotateYMatrix = new Matrix4()\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpRotateQuaternion = new Quaternion()\r\nconst tmpPanMatrix = new Matrix4()\r\nconst tmpPanVector = new Vector3()\r\nconst tmpAtomVector = new Vector3()\r\n\r\n/**\r\n * Trackball controls\r\n */\r\nclass TrackballControls {\r\n  constructor (stage, params) {\r\n    const p = params || {}\r\n\r\n    this.rotateSpeed = defaults(p.rotateSpeed, 2.0)\r\n    this.zoomSpeed = defaults(p.zoomSpeed, 1.2)\r\n    this.panSpeed = defaults(p.panSpeed, 1.0)\r\n\r\n    this.stage = stage\r\n    this.viewer = stage.viewer\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.viewerControls\r\n  }\r\n\r\n  get component () {\r\n    return this.stage.transformComponent\r\n  }\r\n\r\n  get atom () {\r\n    return this.stage.transformAtom\r\n  }\r\n\r\n  _setPanVector (x, y, z) {\r\n    let scaleFactor\r\n    const camera = this.viewer.camera\r\n\r\n    z = -z || 0\r\n    z += camera.position.z\r\n\r\n    if (camera.type === 'OrthographicCamera') {\r\n      scaleFactor = 1 / camera.zoom\r\n    } else {\r\n      const fov = degToRad(camera.fov)\r\n      const unitHeight = -2.0 * z * Math.tan(fov / 2)\r\n      scaleFactor = unitHeight / this.viewer.height\r\n    }\r\n\r\n    tmpPanVector.set(x, y, 0)\r\n    tmpPanVector.multiplyScalar(this.panSpeed * scaleFactor)\r\n  }\r\n\r\n  _getRotateXY (x, y) {\r\n    return [\r\n      this.rotateSpeed * -x * 0.01,\r\n      this.rotateSpeed * y * 0.01\r\n    ]\r\n  }\r\n\r\n  _transformPanVector () {\r\n    tmpPanMatrix.extractRotation(this.component.transform)\r\n    tmpPanMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpPanMatrix.getInverse(tmpPanMatrix)\r\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\r\n  }\r\n\r\n  zoom (delta) {\r\n    this.controls.zoom(this.zoomSpeed * delta * 0.02)\r\n  }\r\n\r\n  pan (x, y) {\r\n    this._setPanVector(x, y)\r\n\r\n    tmpPanMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n    tmpPanVector.applyMatrix4(tmpPanMatrix)\r\n    this.controls.translate(tmpPanVector)\r\n  }\r\n\r\n  panComponent (x, y) {\r\n    if (!this.component) return\r\n\r\n    this._setPanVector(x, y)\r\n    this._transformPanVector()\r\n\r\n    this.component.position.add(tmpPanVector)\r\n    this.component.updateMatrix()\r\n  }\r\n\r\n  panAtom (x, y) {\r\n    if (!this.atom || !this.component) return\r\n\r\n    this.atom.positionToVector3(tmpAtomVector)\r\n    tmpAtomVector.add(this.viewer.translationGroup.position)\r\n    tmpAtomVector.applyMatrix4(this.viewer.rotationGroup.matrix)\r\n\r\n    this._setPanVector(x, y, tmpAtomVector.z)\r\n    this._transformPanVector()\r\n\r\n    this.atom.positionAdd(tmpPanVector)\r\n    this.component.updateRepresentations({ 'position': true })\r\n  }\r\n\r\n  rotate (x, y) {\r\n    const [ dx, dy ] = this._getRotateXY(x, y)\r\n\r\n    tmpRotateXMatrix.makeRotationX(dy)\r\n    tmpRotateYMatrix.makeRotationY(dx)\r\n    tmpRotateXMatrix.multiply(tmpRotateYMatrix)\r\n    this.controls.applyMatrix(tmpRotateXMatrix)\r\n  }\r\n\r\n  rotateComponent (x, y) {\r\n    if (!this.component) return\r\n\r\n    const [ dx, dy ] = this._getRotateXY(x, y)\r\n\r\n    tmpRotateMatrix.extractRotation(this.component.transform)\r\n    tmpRotateMatrix.premultiply(this.viewer.rotationGroup.matrix)\r\n    tmpRotateMatrix.getInverse(tmpRotateMatrix)\r\n    tmpRotateVector.set(1, 0, 0)\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateXMatrix.makeRotationAxis(tmpRotateVector, dy)\r\n    tmpRotateVector.set(0, 1, 0)\r\n    tmpRotateVector.applyMatrix4(tmpRotateMatrix)\r\n    tmpRotateYMatrix.makeRotationAxis(tmpRotateVector, dx)\r\n    tmpRotateXMatrix.multiply(tmpRotateYMatrix)\r\n    tmpRotateQuaternion.setFromRotationMatrix(tmpRotateXMatrix)\r\n    this.component.quaternion.premultiply(tmpRotateQuaternion)\r\n    this.component.updateMatrix()\r\n  }\r\n}\r\n\r\nexport default TrackballControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/trackball-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1264,
    "kind": "variable",
    "name": "tmpRotateXMatrix",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpRotateXMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1265,
    "kind": "variable",
    "name": "tmpRotateYMatrix",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpRotateYMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1266,
    "kind": "variable",
    "name": "tmpRotateMatrix",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpRotateMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1267,
    "kind": "variable",
    "name": "tmpRotateVector",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpRotateVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1268,
    "kind": "variable",
    "name": "tmpRotateQuaternion",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpRotateQuaternion",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1269,
    "kind": "variable",
    "name": "tmpPanMatrix",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpPanMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1270,
    "kind": "variable",
    "name": "tmpPanVector",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpPanVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1271,
    "kind": "variable",
    "name": "tmpAtomVector",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~tmpAtomVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1272,
    "kind": "class",
    "name": "TrackballControls",
    "memberof": "src/controls/trackball-controls.js",
    "static": true,
    "longname": "src/controls/trackball-controls.js~TrackballControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/trackball-controls.js",
    "importStyle": "TrackballControls",
    "description": "Trackball controls",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 1273,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1274,
    "kind": "member",
    "name": "rotateSpeed",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#rotateSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1275,
    "kind": "member",
    "name": "zoomSpeed",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#zoomSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1276,
    "kind": "member",
    "name": "panSpeed",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#panSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 1277,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 1278,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1279,
    "kind": "member",
    "name": "mouse",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#mouse",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1280,
    "kind": "member",
    "name": "controls",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#controls",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1281,
    "kind": "get",
    "name": "component",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#component",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 1282,
    "kind": "get",
    "name": "atom",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#atom",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 1283,
    "kind": "method",
    "name": "_setPanVector",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#_setPanVector",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 1284,
    "kind": "method",
    "name": "_getRotateXY",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#_getRotateXY",
    "access": "private",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 1285,
    "kind": "method",
    "name": "_transformPanVector",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#_transformPanVector",
    "access": "private",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 1286,
    "kind": "method",
    "name": "zoom",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#zoom",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 1287,
    "kind": "method",
    "name": "pan",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#pan",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 1288,
    "kind": "method",
    "name": "panComponent",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#panComponent",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 1289,
    "kind": "method",
    "name": "panAtom",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#panAtom",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 1290,
    "kind": "method",
    "name": "rotate",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#rotate",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 1291,
    "kind": "method",
    "name": "rotateComponent",
    "memberof": "src/controls/trackball-controls.js~TrackballControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/trackball-controls.js~TrackballControls#rotateComponent",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 1292,
    "kind": "file",
    "name": "src/controls/viewer-controls.js",
    "content": "/**\r\n * @file Viewer Controls\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport {\r\n  ensureVector2, ensureVector3, ensureMatrix4, ensureQuaternion\r\n} from '../utils.js'\r\n\r\n/**\r\n * Orientation matrix, a 4x4 transformation matrix with rotation part\r\n * used for scene rotation, scale part for scene camera distance and\r\n * position part for scene translation\r\n * @typedef {Matrix4} OrientationMatrix - orientation matrix\r\n */\r\n\r\nconst tmpQ = new Quaternion()\r\nconst tmpP = new Vector3()\r\nconst tmpS = new Vector3()\r\n\r\nconst tmpCanvasVector = new Vector3()\r\nconst tmpScaleVector = new Vector3()\r\nconst tmpRotateMatrix = new Matrix4()\r\nconst tmpRotateVector = new Vector3()\r\nconst tmpAlignMatrix = new Matrix4()\r\n\r\n/**\r\n * Viewer controls\r\n */\r\nclass ViewerControls {\r\n  /**\r\n   * @param  {Stage} stage - the stage object\r\n   */\r\n  constructor (stage) {\r\n    this.stage = stage\r\n    this.viewer = stage.viewer\r\n\r\n    /**\r\n     * @type {{changed: Signal}}\r\n     */\r\n    this.signals = {\r\n      changed: new Signal()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * scene center position\r\n   * @type {Vector3}\r\n   */\r\n  get position () {\r\n    return this.viewer.translationGroup.position\r\n  }\r\n\r\n  /**\r\n   * scene rotation\r\n   * @type {Quaternion}\r\n   */\r\n  get rotation () {\r\n    return this.viewer.rotationGroup.quaternion\r\n  }\r\n\r\n  /**\r\n   * Trigger render and emit changed event\r\n   * @emits {ViewerControls.signals.changed}\r\n   * @return {undefined}\r\n   */\r\n  changed () {\r\n    this.viewer.requestRender()\r\n    this.signals.changed.dispatch()\r\n  }\r\n\r\n  getPositionOnCanvas (position, optionalTarget) {\r\n    const canvasPosition = ensureVector2(optionalTarget)\r\n    const viewer = this.viewer\r\n\r\n    tmpCanvasVector.copy(position)\r\n      .add(viewer.translationGroup.position)\r\n      .applyMatrix4(viewer.rotationGroup.matrix)\r\n      .project(viewer.camera)\r\n\r\n    return canvasPosition.set(\r\n      (tmpCanvasVector.x + 1) * viewer.width / 2,\r\n      (tmpCanvasVector.y + 1) * viewer.height / 2\r\n    )\r\n  }\r\n\r\n  /**\r\n   * get scene orientation\r\n   * @param {Matrix4} optionalTarget - pre-allocated target matrix\r\n   * @return {OrientationMatrix} scene orientation\r\n   */\r\n  getOrientation (optionalTarget) {\r\n    const m = ensureMatrix4(optionalTarget)\r\n\r\n    m.copy(this.viewer.rotationGroup.matrix)\r\n    const z = -this.viewer.camera.position.z\r\n    m.scale(tmpScaleVector.set(z, z, z))\r\n    m.setPosition(this.viewer.translationGroup.position)\r\n\r\n    return m\r\n  }\r\n\r\n  /**\r\n   * set scene orientation\r\n   * @param {OrientationMatrix|Array} orientation - scene orientation\r\n   * @return {undefined}\r\n   */\r\n  orient (orientation) {\r\n    ensureMatrix4(orientation).decompose(tmpP, tmpQ, tmpS)\r\n\r\n    const v = this.viewer\r\n    v.rotationGroup.setRotationFromQuaternion(tmpQ)\r\n    v.translationGroup.position.copy(tmpP)\r\n    v.camera.position.z = -tmpS.z\r\n    v.updateZoom()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * translate scene\r\n   * @param  {Vector3|Array} vector - translation vector\r\n   * @return {undefined}\r\n   */\r\n  translate (vector) {\r\n    this.viewer.translationGroup.position\r\n      .add(ensureVector3(vector))\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * center scene\r\n   * @param  {Vector3|Array} position - center position\r\n   * @return {undefined}\r\n   */\r\n  center (position) {\r\n    this.viewer.translationGroup.position\r\n      .copy(ensureVector3(position)).negate()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * zoom scene\r\n   * @param  {Number} delta - zoom change\r\n   * @return {undefined}\r\n   */\r\n  zoom (delta) {\r\n    this.distance(this.viewer.camera.position.z * (1 - delta))\r\n  }\r\n\r\n  /**\r\n   * camera distance\r\n   * @param  {Number} z - distance\r\n   * @return {undefined}\r\n   */\r\n  distance (z) {\r\n    this.viewer.camera.position.z = z\r\n    this.viewer.updateZoom()\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * spin scene on axis\r\n   * @param  {Vector3|Array} axis - rotation axis\r\n   * @param  {Number} angle - amount to spin\r\n   * @return {undefined}\r\n   */\r\n  spin (axis, angle) {\r\n    tmpRotateMatrix.getInverse(this.viewer.rotationGroup.matrix)\r\n    tmpRotateVector\r\n      .copy(ensureVector3(axis)).applyMatrix4(tmpRotateMatrix)\r\n\r\n    this.viewer.rotationGroup.rotateOnAxis(tmpRotateVector, angle)\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * rotate scene\r\n   * @param  {Quaternion|Array} quaternion - rotation quaternion\r\n   * @return {undefined}\r\n   */\r\n  rotate (quaternion) {\r\n    this.viewer.rotationGroup\r\n      .setRotationFromQuaternion(ensureQuaternion(quaternion))\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * align scene to basis matrix\r\n   * @param  {Matrix4|Array} basis - basis matrix\r\n   * @return {undefined}\r\n   */\r\n  align (basis) {\r\n    tmpAlignMatrix.getInverse(ensureMatrix4(basis))\r\n\r\n    this.viewer.rotationGroup.setRotationFromMatrix(tmpAlignMatrix)\r\n    this.changed()\r\n  }\r\n\r\n  /**\r\n   * apply rotation matrix to scene\r\n   * @param  {Matrix4|Array} matrix - rotation matrix\r\n   * @return {undefined}\r\n   */\r\n  applyMatrix (matrix) {\r\n    this.viewer.rotationGroup.applyMatrix(ensureMatrix4(matrix))\r\n    this.changed()\r\n  }\r\n}\r\n\r\nexport default ViewerControls\r\n",
    "static": true,
    "longname": "D:/nglLib/src/controls/viewer-controls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1293,
    "kind": "typedef",
    "name": "OrientationMatrix",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~OrientationMatrix",
    "access": "public",
    "description": "Orientation matrix, a 4x4 transformation matrix with rotation part\nused for scene rotation, scale part for scene camera distance and\nposition part for scene translation",
    "lineNumber": 21,
    "type": {
      "types": [
        "Matrix4"
      ],
      "optional": false,
      "name": "OrientationMatrix"
    }
  },
  {
    "__docId__": 1294,
    "kind": "variable",
    "name": "tmpP",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpP",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1295,
    "kind": "variable",
    "name": "tmpS",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpS",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1296,
    "kind": "variable",
    "name": "tmpCanvasVector",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpCanvasVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1297,
    "kind": "variable",
    "name": "tmpScaleVector",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpScaleVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1298,
    "kind": "variable",
    "name": "tmpRotateMatrix",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpRotateMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1299,
    "kind": "variable",
    "name": "tmpRotateVector",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpRotateVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1300,
    "kind": "variable",
    "name": "tmpAlignMatrix",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~tmpAlignMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1301,
    "kind": "class",
    "name": "ViewerControls",
    "memberof": "src/controls/viewer-controls.js",
    "static": true,
    "longname": "src/controls/viewer-controls.js~ViewerControls",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/controls/viewer-controls.js",
    "importStyle": "ViewerControls",
    "description": "Viewer controls",
    "lineNumber": 34,
    "interface": false
  },
  {
    "__docId__": 1302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage object"
      }
    ]
  },
  {
    "__docId__": 1303,
    "kind": "member",
    "name": "stage",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#stage",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 1304,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 1305,
    "kind": "member",
    "name": "signals",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#signals",
    "access": "public",
    "description": "",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "{changed: Signal}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1306,
    "kind": "get",
    "name": "position",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#position",
    "access": "public",
    "description": "scene center position",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1307,
    "kind": "get",
    "name": "rotation",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#rotation",
    "access": "public",
    "description": "scene rotation",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1308,
    "kind": "method",
    "name": "changed",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#changed",
    "access": "public",
    "description": "Trigger render and emit changed event",
    "lineNumber": 71,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "ViewerControls.signals.changed"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 1309,
    "kind": "method",
    "name": "getPositionOnCanvas",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#getPositionOnCanvas",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 1310,
    "kind": "method",
    "name": "getOrientation",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#getOrientation",
    "access": "public",
    "description": "get scene orientation",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "optionalTarget",
        "description": "pre-allocated target matrix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OrientationMatrix"
      ],
      "spread": false,
      "description": "scene orientation"
    }
  },
  {
    "__docId__": 1311,
    "kind": "method",
    "name": "orient",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#orient",
    "access": "public",
    "description": "set scene orientation",
    "lineNumber": 112,
    "params": [
      {
        "nullable": null,
        "types": [
          "OrientationMatrix",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "orientation",
        "description": "scene orientation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1312,
    "kind": "method",
    "name": "translate",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#translate",
    "access": "public",
    "description": "translate scene",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "vector",
        "description": "translation vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1313,
    "kind": "method",
    "name": "center",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#center",
    "access": "public",
    "description": "center scene",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "center position"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1314,
    "kind": "method",
    "name": "zoom",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#zoom",
    "access": "public",
    "description": "zoom scene",
    "lineNumber": 150,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "zoom change"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1315,
    "kind": "method",
    "name": "distance",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#distance",
    "access": "public",
    "description": "camera distance",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "z",
        "description": "distance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1316,
    "kind": "method",
    "name": "spin",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#spin",
    "access": "public",
    "description": "spin scene on axis",
    "lineNumber": 171,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "axis",
        "description": "rotation axis"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "angle",
        "description": "amount to spin"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1317,
    "kind": "method",
    "name": "rotate",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#rotate",
    "access": "public",
    "description": "rotate scene",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "quaternion",
        "description": "rotation quaternion"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1318,
    "kind": "method",
    "name": "align",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#align",
    "access": "public",
    "description": "align scene to basis matrix",
    "lineNumber": 196,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "basis",
        "description": "basis matrix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1319,
    "kind": "method",
    "name": "applyMatrix",
    "memberof": "src/controls/viewer-controls.js~ViewerControls",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/controls/viewer-controls.js~ViewerControls#applyMatrix",
    "access": "public",
    "description": "apply rotation matrix to scene",
    "lineNumber": 208,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "rotation matrix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1320,
    "kind": "file",
    "name": "src/datasource/datasource.js",
    "content": "/**\r\n * @file Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Datasource base class\r\n * @interface\r\n */\r\nclass Datasource {\r\n  /**\r\n   * Get full url\r\n   * @abstract\r\n   * @param  {String} path - datasource string\r\n   * @return {String} - url\r\n   */\r\n  getUrl (path) {}\r\n\r\n  /**\r\n   * Get file extension\r\n   * @abstract\r\n   * @param  {String} path - datasource string\r\n   * @return {String} - extension\r\n   */\r\n  getExt (path) {}\r\n}\r\n\r\nexport default Datasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1321,
    "kind": "class",
    "name": "Datasource",
    "memberof": "src/datasource/datasource.js",
    "static": true,
    "longname": "src/datasource/datasource.js~Datasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/datasource.js",
    "importStyle": "Datasource",
    "description": "Datasource base class",
    "lineNumber": 11,
    "interface": true
  },
  {
    "__docId__": 1322,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/datasource.js~Datasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/datasource.js~Datasource#getUrl",
    "access": "public",
    "description": "Get full url",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "datasource string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "url"
    },
    "abstract": true
  },
  {
    "__docId__": 1323,
    "kind": "method",
    "name": "getExt",
    "memberof": "src/datasource/datasource.js~Datasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/datasource.js~Datasource#getExt",
    "access": "public",
    "description": "Get file extension",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "datasource string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "extension"
    },
    "abstract": true
  },
  {
    "__docId__": 1324,
    "kind": "file",
    "name": "src/datasource/mdsrv-datasource.js",
    "content": "/**\r\n * @file MDsrv Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getFileInfo } from '../utils.js'\r\nimport { autoLoad } from '../loader/loader-utils.js'\r\nimport Datasource from './datasource.js'\r\n\r\nclass MdsrvDatasource extends Datasource {\r\n  constructor (baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl || ''\r\n  }\r\n\r\n  getListing (path) {\r\n    path = path || ''\r\n    let url = this.baseUrl + 'dir/' + path\r\n    if (url[url.length - 1] !== '/') url += '/'\r\n    return autoLoad(url, {\r\n      ext: 'json'\r\n    }).then(function (jsonData) {\r\n      return {\r\n        path: path,\r\n        data: jsonData.data\r\n      }\r\n    })\r\n  }\r\n\r\n  getUrl (src) {\r\n    const info = getFileInfo(src)\r\n    return this.baseUrl + 'file/' + info.path + info.query\r\n  }\r\n\r\n  getCountUrl (src) {\r\n    const info = getFileInfo(src)\r\n    return this.baseUrl + 'traj/numframes/' + info.path + info.query\r\n  }\r\n\r\n  getFrameUrl (src, frameIndex) {\r\n    const info = getFileInfo(src)\r\n    return this.baseUrl + 'traj/frame/' + frameIndex + '/' + info.path + info.query\r\n  }\r\n\r\n  getFrameParams (src, atomIndices) {\r\n    return 'atomIndices=' + atomIndices.join(';')\r\n  }\r\n\r\n  getPathUrl (src, atomIndex) {\r\n    const info = getFileInfo(src)\r\n    return this.baseUrl + 'traj/path/' + atomIndex + '/' + info.path + info.query\r\n  }\r\n}\r\n\r\nexport default MdsrvDatasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/mdsrv-datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1325,
    "kind": "class",
    "name": "MdsrvDatasource",
    "memberof": "src/datasource/mdsrv-datasource.js",
    "static": true,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/mdsrv-datasource.js",
    "importStyle": "MdsrvDatasource",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/datasource/datasource.js~Datasource"
    ]
  },
  {
    "__docId__": 1326,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1327,
    "kind": "member",
    "name": "baseUrl",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#baseUrl",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1328,
    "kind": "method",
    "name": "getListing",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getListing",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1329,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getUrl",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 1330,
    "kind": "method",
    "name": "getCountUrl",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getCountUrl",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 1331,
    "kind": "method",
    "name": "getFrameUrl",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getFrameUrl",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 1332,
    "kind": "method",
    "name": "getFrameParams",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getFrameParams",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 1333,
    "kind": "method",
    "name": "getPathUrl",
    "memberof": "src/datasource/mdsrv-datasource.js~MdsrvDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/mdsrv-datasource.js~MdsrvDatasource#getPathUrl",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 1334,
    "kind": "file",
    "name": "src/datasource/passthrough-datasource.js",
    "content": "/**\r\n * @file Pass Through Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { DatasourceRegistry } from '../globals.js'\r\nimport Datasource from './datasource.js'\r\n\r\nclass PassThroughDatasource extends Datasource {\r\n  getUrl (path) {\r\n    return path\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('ftp', new PassThroughDatasource())\r\nDatasourceRegistry.add('http', new PassThroughDatasource())\r\nDatasourceRegistry.add('https', new PassThroughDatasource())\r\n\r\nexport default PassThroughDatasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/passthrough-datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1335,
    "kind": "class",
    "name": "PassThroughDatasource",
    "memberof": "src/datasource/passthrough-datasource.js",
    "static": true,
    "longname": "src/datasource/passthrough-datasource.js~PassThroughDatasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/passthrough-datasource.js",
    "importStyle": "PassThroughDatasource",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/datasource/datasource.js~Datasource"
    ]
  },
  {
    "__docId__": 1336,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/passthrough-datasource.js~PassThroughDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/passthrough-datasource.js~PassThroughDatasource#getUrl",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1337,
    "kind": "file",
    "name": "src/datasource/pubchem-datasource.js",
    "content": "/**\r\n * @file PubChem Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals.js'\r\nimport { getFileInfo, getProtocol } from '../utils.js'\r\nimport Datasource from './datasource.js'\r\n\r\nconst baseUrl = '//pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/'\r\nconst suffixUrl = '/SDF?record_type=3d'\r\n\r\nclass PubchemDatasource extends Datasource {\r\n  getUrl (src) {\r\n    const info = getFileInfo(src)\r\n    const cid = info.name\r\n    let url\r\n    if (!info.ext || info.ext === 'sdf') {\r\n      url = baseUrl + cid + suffixUrl\r\n    } else {\r\n      Log.warn('unsupported ext', info.ext)\r\n      url = baseUrl + cid + suffixUrl\r\n    }\r\n    return getProtocol() + url\r\n  }\r\n\r\n  getExt (src) {\r\n    const info = getFileInfo(src)\r\n    if (!info.ext || info.ext === 'sdf') {\r\n      return 'sdf'\r\n    }\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('pubchem', new PubchemDatasource())\r\n\r\nexport default PubchemDatasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/pubchem-datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1338,
    "kind": "variable",
    "name": "baseUrl",
    "memberof": "src/datasource/pubchem-datasource.js",
    "static": true,
    "longname": "src/datasource/pubchem-datasource.js~baseUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/pubchem-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1339,
    "kind": "variable",
    "name": "suffixUrl",
    "memberof": "src/datasource/pubchem-datasource.js",
    "static": true,
    "longname": "src/datasource/pubchem-datasource.js~suffixUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/pubchem-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1340,
    "kind": "class",
    "name": "PubchemDatasource",
    "memberof": "src/datasource/pubchem-datasource.js",
    "static": true,
    "longname": "src/datasource/pubchem-datasource.js~PubchemDatasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/pubchem-datasource.js",
    "importStyle": "PubchemDatasource",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/datasource/datasource.js~Datasource"
    ]
  },
  {
    "__docId__": 1341,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/pubchem-datasource.js~PubchemDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/pubchem-datasource.js~PubchemDatasource#getUrl",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1342,
    "kind": "method",
    "name": "getExt",
    "memberof": "src/datasource/pubchem-datasource.js~PubchemDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/pubchem-datasource.js~PubchemDatasource#getExt",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1343,
    "kind": "file",
    "name": "src/datasource/rcsb-datasource.js",
    "content": "/**\r\n * @file RCSB Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals.js'\r\nimport { getFileInfo, getProtocol } from '../utils.js'\r\nimport Datasource from './datasource.js'\r\n\r\nconst baseUrl = '//files.rcsb.org/download/'\r\nconst mmtfBaseUrl = '//mmtf.rcsb.org/v1.0/'\r\nconst mmtfFullUrl = mmtfBaseUrl + 'full/'\r\nconst mmtfReducedUrl = mmtfBaseUrl + 'reduced/'\r\n\r\nclass RcsbDatasource extends Datasource {\r\n  getUrl (src) {\r\n    // valid path are\r\n    // XXXX.pdb, XXXX.pdb.gz, XXXX.cif, XXXX.cif.gz, XXXX.mmtf, XXXX.bb.mmtf\r\n    // XXXX defaults to XXXX.cif\r\n    const info = getFileInfo(src)\r\n    const pdbid = info.name.substr(0, 4)\r\n    let url\r\n    if ([ 'pdb', 'cif' ].includes(info.ext) &&\r\n        (info.compressed === false || info.compressed === 'gz')\r\n    ) {\r\n      url = baseUrl + info.path\r\n    } else if (info.ext === 'mmtf') {\r\n      if (info.base.endsWith('.bb')) {\r\n        url = mmtfReducedUrl + pdbid\r\n      } else {\r\n        url = mmtfFullUrl + pdbid\r\n      }\r\n    } else if (!info.ext) {\r\n      url = mmtfFullUrl + pdbid\r\n    } else {\r\n      Log.warn('unsupported ext', info.ext)\r\n      url = mmtfFullUrl + pdbid\r\n    }\r\n    return getProtocol() + url\r\n  }\r\n\r\n  getExt (src) {\r\n    const info = getFileInfo(src)\r\n    if (info.ext === 'mmtf' || !info.ext) {\r\n      return 'mmtf'\r\n    }\r\n  }\r\n}\r\n\r\nDatasourceRegistry.add('rcsb', new RcsbDatasource())\r\n\r\nexport default RcsbDatasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/rcsb-datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1344,
    "kind": "variable",
    "name": "baseUrl",
    "memberof": "src/datasource/rcsb-datasource.js",
    "static": true,
    "longname": "src/datasource/rcsb-datasource.js~baseUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/rcsb-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1345,
    "kind": "variable",
    "name": "mmtfBaseUrl",
    "memberof": "src/datasource/rcsb-datasource.js",
    "static": true,
    "longname": "src/datasource/rcsb-datasource.js~mmtfBaseUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/rcsb-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1346,
    "kind": "variable",
    "name": "mmtfFullUrl",
    "memberof": "src/datasource/rcsb-datasource.js",
    "static": true,
    "longname": "src/datasource/rcsb-datasource.js~mmtfFullUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/rcsb-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1347,
    "kind": "variable",
    "name": "mmtfReducedUrl",
    "memberof": "src/datasource/rcsb-datasource.js",
    "static": true,
    "longname": "src/datasource/rcsb-datasource.js~mmtfReducedUrl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/rcsb-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1348,
    "kind": "class",
    "name": "RcsbDatasource",
    "memberof": "src/datasource/rcsb-datasource.js",
    "static": true,
    "longname": "src/datasource/rcsb-datasource.js~RcsbDatasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/rcsb-datasource.js",
    "importStyle": "RcsbDatasource",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/datasource/datasource.js~Datasource"
    ]
  },
  {
    "__docId__": 1349,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/rcsb-datasource.js~RcsbDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/rcsb-datasource.js~RcsbDatasource#getUrl",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1350,
    "kind": "method",
    "name": "getExt",
    "memberof": "src/datasource/rcsb-datasource.js~RcsbDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/rcsb-datasource.js~RcsbDatasource#getExt",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 1351,
    "kind": "file",
    "name": "src/datasource/static-datasource.js",
    "content": "/**\r\n * @file Static Datasource\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getFileInfo, getAbsolutePath } from '../utils.js'\r\nimport Datasource from './datasource.js'\r\n\r\nconst reProtocol = /^((http|https|ftp):)*\\/\\//\r\n\r\nclass StaticDatasource extends Datasource {\r\n  constructor (baseUrl) {\r\n    super()\r\n    this.baseUrl = baseUrl || ''\r\n  }\r\n\r\n  getUrl (src) {\r\n    const info = getFileInfo(src)\r\n    let url = this.baseUrl + info.path\r\n    if (!reProtocol.test(this.baseUrl)) {\r\n      url = getAbsolutePath(url)\r\n    }\r\n    return url\r\n  }\r\n}\r\n\r\nexport default StaticDatasource\r\n",
    "static": true,
    "longname": "D:/nglLib/src/datasource/static-datasource.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1352,
    "kind": "variable",
    "name": "reProtocol",
    "memberof": "src/datasource/static-datasource.js",
    "static": true,
    "longname": "src/datasource/static-datasource.js~reProtocol",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/datasource/static-datasource.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1353,
    "kind": "class",
    "name": "StaticDatasource",
    "memberof": "src/datasource/static-datasource.js",
    "static": true,
    "longname": "src/datasource/static-datasource.js~StaticDatasource",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/datasource/static-datasource.js",
    "importStyle": "StaticDatasource",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/datasource/datasource.js~Datasource"
    ]
  },
  {
    "__docId__": 1354,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/datasource/static-datasource.js~StaticDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/static-datasource.js~StaticDatasource#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1355,
    "kind": "member",
    "name": "baseUrl",
    "memberof": "src/datasource/static-datasource.js~StaticDatasource",
    "static": false,
    "longname": "src/datasource/static-datasource.js~StaticDatasource#baseUrl",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1356,
    "kind": "method",
    "name": "getUrl",
    "memberof": "src/datasource/static-datasource.js~StaticDatasource",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/datasource/static-datasource.js~StaticDatasource#getUrl",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1357,
    "kind": "file",
    "name": "src/externals.js",
    "content": "/**\r\n * @file Externals\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/**\r\n * @external {Signal} https://millermedeiros.github.io/js-signals/docs/symbols/Signal.html\r\n */\r\n\r\n/**\r\n * @external {TypedArray} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\r\n */\r\n\r\n/**\r\n * @external {Integer} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\r\n */\r\n\r\n/**\r\n * @external {Float} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number\r\n */\r\n\r\n/**\r\n * @external {Char} https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\r\n */\r\n\r\n/**\r\n * @external {Matrix3} https://threejs.org/docs/#api/math/Matrix3\r\n */\r\n\r\n/**\r\n * @external {Matrix4} https://threejs.org/docs/#api/math/Matrix4\r\n */\r\n\r\n/**\r\n * @external {Vector2} https://threejs.org/docs/#api/math/Vector2\r\n */\r\n\r\n/**\r\n * @external {Vector3} https://threejs.org/docs/#api/math/Vector3\r\n */\r\n\r\n/**\r\n * @external {Box3} https://threejs.org/docs/#api/math/Box3\r\n */\r\n\r\n/**\r\n * @external {Quaternion} https://threejs.org/docs/#api/math/Quaternion\r\n */\r\n\r\n/**\r\n * @external {Euler} https://threejs.org/docs/#api/math/Euler\r\n */\r\n\r\n/**\r\n * @external {Plane} https://threejs.org/docs/#api/math/Plane\r\n */\r\n\r\n/**\r\n * @external {Color} https://threejs.org/docs/#api/math/Color\r\n */\r\n\r\n/**\r\n * @external {BufferGeometry} https://threejs.org/docs/#api/core/BufferGeometry\r\n */\r\n",
    "static": true,
    "longname": "D:/nglLib/src/externals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1358,
    "kind": "external",
    "name": "Signal",
    "externalLink": "https://millermedeiros.github.io/js-signals/docs/symbols/Signal.html",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Signal",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1359,
    "kind": "external",
    "name": "TypedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~TypedArray",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1360,
    "kind": "external",
    "name": "Integer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Integer",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1361,
    "kind": "external",
    "name": "Float",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Float",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1362,
    "kind": "external",
    "name": "Char",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Char",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1363,
    "kind": "external",
    "name": "Matrix3",
    "externalLink": "https://threejs.org/docs/#api/math/Matrix3",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Matrix3",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1364,
    "kind": "external",
    "name": "Matrix4",
    "externalLink": "https://threejs.org/docs/#api/math/Matrix4",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Matrix4",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1365,
    "kind": "external",
    "name": "Vector2",
    "externalLink": "https://threejs.org/docs/#api/math/Vector2",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Vector2",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1366,
    "kind": "external",
    "name": "Vector3",
    "externalLink": "https://threejs.org/docs/#api/math/Vector3",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Vector3",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1367,
    "kind": "external",
    "name": "Box3",
    "externalLink": "https://threejs.org/docs/#api/math/Box3",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Box3",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1368,
    "kind": "external",
    "name": "Quaternion",
    "externalLink": "https://threejs.org/docs/#api/math/Quaternion",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Quaternion",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1369,
    "kind": "external",
    "name": "Euler",
    "externalLink": "https://threejs.org/docs/#api/math/Euler",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Euler",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1370,
    "kind": "external",
    "name": "Plane",
    "externalLink": "https://threejs.org/docs/#api/math/Plane",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Plane",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1371,
    "kind": "external",
    "name": "Color",
    "externalLink": "https://threejs.org/docs/#api/math/Color",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~Color",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1372,
    "kind": "external",
    "name": "BufferGeometry",
    "externalLink": "https://threejs.org/docs/#api/core/BufferGeometry",
    "memberof": "src/externals.js",
    "static": true,
    "longname": "src/externals.js~BufferGeometry",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 1373,
    "kind": "file",
    "name": "src/geometry/contact-utils.js",
    "content": "/**\r\n * @file Contact Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { radToDeg } from '../math/math-utils.js'\r\nimport Contact from './contact.js'\r\nimport Selection from '../selection/selection.js'\r\n\r\nfunction polarContacts (structure, maxDistance, maxAngle) {\r\n  maxDistance = maxDistance || 3.5\r\n  maxAngle = maxAngle || 40\r\n\r\n  var donorSelection = new Selection(\r\n    '( ARG and ( .NE or .NH1 or .NH2 ) ) or ' +\r\n    '( ASP and .ND2 ) or ' +\r\n    '( GLN and .NE2 ) or ' +\r\n    '( HIS and ( .ND1 or .NE2 ) ) or ' +\r\n    '( LYS and .NZ ) or ' +\r\n    '( SER and .OG ) or ' +\r\n    '( THR and .OG1 ) or ' +\r\n    '( TRP and .NE1 ) or ' +\r\n    '( TYR and .OH ) or ' +\r\n    '( PROTEIN and .N )'\r\n  )\r\n\r\n  var acceptorSelection = new Selection(\r\n    '( ASN and .OD1 ) or ' +\r\n    '( ASP and ( OD1 or .OD2 ) ) or ' +\r\n    '( GLN and .OE1 ) or ' +\r\n    '( GLU and ( .OE1 or .OE2 ) ) or ' +\r\n    '( HIS and ( .ND1 or .NE2 ) ) or ' +\r\n    '( SER and .OG ) or ' +\r\n    '( THR and .OG1 ) or ' +\r\n    '( TYR and .OH ) or ' +\r\n    '( PROTEIN and .O )'\r\n  )\r\n\r\n  var donorView = structure.getView(donorSelection)\r\n  var acceptorView = structure.getView(acceptorSelection)\r\n\r\n  var contact = new Contact(donorView, acceptorView)\r\n  var data = contact.within(maxDistance)\r\n  var bondStore = data.bondStore\r\n\r\n  var ap1 = structure.getAtomProxy()\r\n  var ap2 = structure.getAtomProxy()\r\n  var atomCA = structure.getAtomProxy()\r\n  var atomC = structure.getAtomProxy()\r\n  var rp = structure.getResidueProxy()\r\n  var rpPrev = structure.getResidueProxy()\r\n  var v1 = new Vector3()\r\n  var v2 = new Vector3()\r\n\r\n  var checkAngle = function (atom1, atom2, oName, cName) {\r\n    var atomO, atomN\r\n\r\n    if (atom1.atomname === oName) {\r\n      atomO = atom1\r\n      atomN = atom2\r\n    } else {\r\n      atomO = atom2\r\n      atomN = atom1\r\n    }\r\n\r\n    rp.index = atomO.residueIndex\r\n    var atomC = rp.getAtomIndexByName(cName)\r\n\r\n    v1.subVectors(atomC, atomO)\r\n    v2.subVectors(atomC, atomN)\r\n\r\n    return radToDeg(v1.angleTo(v2)) < maxAngle\r\n  }\r\n\r\n  for (var i = 0, il = bondStore.count; i < il; ++i) {\r\n    ap1.index = bondStore.atomIndex1[ i ]\r\n    ap2.index = bondStore.atomIndex2[ i ]\r\n\r\n    if ((ap1.atomname === 'O' && ap2.atomname === 'N') ||\r\n        (ap1.atomname === 'N' && ap2.atomname === 'O')\r\n    ) {\r\n      // ignore backbone to backbone contacts\r\n      data.bondSet.clear(i)\r\n      continue\r\n    } else if (ap1.atomname === 'N' || ap2.atomname === 'N') {\r\n      var atomN, atomX\r\n\r\n      if (ap1.atomname === 'N') {\r\n        atomN = ap1\r\n        atomX = ap2\r\n      } else {\r\n        atomN = ap2\r\n        atomX = ap1\r\n      }\r\n\r\n      rp.index = atomN.residueIndex\r\n      atomCA.index = rp.getAtomIndexByName('CA')\r\n      if (atomCA.index === undefined) continue\r\n\r\n      var prevRes = rp.getPreviousConnectedResidue(rpPrev)\r\n      if (prevRes === undefined) continue\r\n\r\n      atomC.index = prevRes.getAtomIndexByName('C')\r\n      if (atomC.index === undefined) continue\r\n\r\n      v1.subVectors(atomN, atomC)\r\n      v2.subVectors(atomN, atomCA)\r\n      v1.add(v2).multiplyScalar(0.5)\r\n      v2.subVectors(atomX, atomN)\r\n\r\n      if (radToDeg(v1.angleTo(v2)) > maxAngle) {\r\n        data.bondSet.clear(i)\r\n      }\r\n    } else if (\r\n      (ap1.atomname === 'OH' && ap1.resname === 'TYR') ||\r\n      (ap2.atomname === 'OH' && ap2.resname === 'TYR')\r\n    ) {\r\n      if (!checkAngle(ap1, ap2, 'OH', 'CZ')) {\r\n        data.bondSet.clear(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    atomSet: data.atomSet,\r\n    bondSet: data.bondSet,\r\n    bondStore: data.bondStore\r\n  }\r\n}\r\n\r\nfunction polarBackboneContacts (structure, maxDistance, maxAngle) {\r\n  maxDistance = maxDistance || 3.5\r\n  maxAngle = maxAngle || 40\r\n\r\n  var donorSelection = new Selection(\r\n    '( PROTEIN and .N )'\r\n  )\r\n\r\n  var acceptorSelection = new Selection(\r\n    '( PROTEIN and .O )'\r\n  )\r\n\r\n  var donorView = structure.getView(donorSelection)\r\n  var acceptorView = structure.getView(acceptorSelection)\r\n\r\n  var contact = new Contact(donorView, acceptorView)\r\n  var data = contact.within(maxDistance)\r\n  var bondStore = data.bondStore\r\n\r\n  var ap1 = structure.getAtomProxy()\r\n  var ap2 = structure.getAtomProxy()\r\n  var atomCA = structure.getAtomProxy()\r\n  var atomC = structure.getAtomProxy()\r\n  var rp = structure.getResidueProxy()\r\n  var rpPrev = structure.getResidueProxy()\r\n  var v1 = new Vector3()\r\n  var v2 = new Vector3()\r\n\r\n  for (var i = 0, il = bondStore.count; i < il; ++i) {\r\n    ap1.index = bondStore.atomIndex1[ i ]\r\n    ap2.index = bondStore.atomIndex2[ i ]\r\n\r\n    var atomN, atomO\r\n\r\n    if (ap1.atomname === 'N') {\r\n      atomN = ap1\r\n      atomO = ap2\r\n    } else {\r\n      atomN = ap2\r\n      atomO = ap1\r\n    }\r\n\r\n    rp.index = atomN.residueIndex\r\n\r\n    atomCA.index = rp.getAtomIndexByName('CA')\r\n    if (atomCA.index === undefined) continue\r\n\r\n    var prevRes = rp.getPreviousConnectedResidue(rpPrev)\r\n    if (prevRes === undefined) continue\r\n\r\n    atomC.index = prevRes.getAtomIndexByName('C')\r\n    if (atomC.index === undefined) continue\r\n\r\n    v1.subVectors(atomN, atomC)\r\n    v2.subVectors(atomN, atomCA)\r\n    v1.add(v2).multiplyScalar(0.5)\r\n    v2.subVectors(atomO, atomN)\r\n\r\n    // Log.log( radToDeg( v1.angleTo( v2 ) ) );\r\n\r\n    if (radToDeg(v1.angleTo(v2)) > maxAngle) {\r\n      data.bondSet.clear(i)\r\n    }\r\n  }\r\n\r\n  return {\r\n    atomSet: data.atomSet,\r\n    bondSet: data.bondSet,\r\n    bondStore: data.bondStore\r\n  }\r\n}\r\n\r\nexport {\r\n  polarContacts,\r\n  polarBackboneContacts\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/contact-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1374,
    "kind": "function",
    "name": "polarContacts",
    "memberof": "src/geometry/contact-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/contact-utils.js~polarContacts",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/contact-utils.js",
    "importStyle": "{polarContacts}",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1375,
    "kind": "function",
    "name": "polarBackboneContacts",
    "memberof": "src/geometry/contact-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/contact-utils.js~polarBackboneContacts",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/contact-utils.js",
    "importStyle": "{polarBackboneContacts}",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 1376,
    "kind": "file",
    "name": "src/geometry/contact.js",
    "content": "/**\r\n * @file Contact\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals.js'\r\nimport BitArray from '../utils/bitarray.js'\r\nimport Kdtree from './kdtree.js'\r\nimport BondStore from '../store/bond-store.js'\r\n\r\nclass Contact {\r\n  constructor (sview1, sview2) {\r\n    this.sview1 = sview1\r\n    this.sview2 = sview2\r\n\r\n        // this.kdtree1 = new Kdtree( sview1 );\r\n    this.kdtree2 = new Kdtree(sview2)\r\n  }\r\n\r\n  within (maxDistance, minDistance) {\r\n    Log.time('Contact within')\r\n\r\n        // var kdtree1 = this.kdtree1;\r\n    const kdtree2 = this.kdtree2\r\n\r\n    const ap2 = this.sview1.getAtomProxy()\r\n    const atomSet = this.sview1.getAtomSet(false)\r\n    const bondStore = new BondStore()\r\n\r\n    this.sview1.eachAtom(function (ap1) {\r\n      let found = false\r\n      const contacts = kdtree2.nearest(ap1, Infinity, maxDistance)\r\n\r\n      for (let j = 0, m = contacts.length; j < m; ++j) {\r\n        const d = contacts[ j ]\r\n        ap2.index = d.index\r\n\r\n        if (ap1.residueIndex !== ap2.residueIndex &&\r\n                    (!minDistance || d.distance > minDistance)\r\n                ) {\r\n          found = true\r\n          atomSet.set(ap2.index)\r\n          bondStore.addBond(ap1, ap2, 1)\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        atomSet.set(ap1.index)\r\n      }\r\n    })\r\n\r\n    const bondSet = new BitArray(bondStore.count, true)\r\n\r\n    Log.timeEnd('Contact within')\r\n\r\n    return {\r\n      atomSet: atomSet,\r\n      bondSet: bondSet,\r\n      bondStore: bondStore\r\n    }\r\n  }\r\n}\r\n\r\nexport default Contact\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/contact.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1377,
    "kind": "class",
    "name": "Contact",
    "memberof": "src/geometry/contact.js",
    "static": true,
    "longname": "src/geometry/contact.js~Contact",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/contact.js",
    "importStyle": "Contact",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1378,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/contact.js~Contact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/contact.js~Contact#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1379,
    "kind": "member",
    "name": "sview1",
    "memberof": "src/geometry/contact.js~Contact",
    "static": false,
    "longname": "src/geometry/contact.js~Contact#sview1",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1380,
    "kind": "member",
    "name": "sview2",
    "memberof": "src/geometry/contact.js~Contact",
    "static": false,
    "longname": "src/geometry/contact.js~Contact#sview2",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1381,
    "kind": "member",
    "name": "kdtree2",
    "memberof": "src/geometry/contact.js~Contact",
    "static": false,
    "longname": "src/geometry/contact.js~Contact#kdtree2",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1382,
    "kind": "method",
    "name": "within",
    "memberof": "src/geometry/contact.js~Contact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/contact.js~Contact#within",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1383,
    "kind": "file",
    "name": "src/geometry/grid.js",
    "content": "/**\r\n * @file Grid\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction Grid (length, width, height, DataCtor, elemSize) {\r\n  DataCtor = DataCtor || Int32Array\r\n  elemSize = elemSize || 1\r\n\r\n  var j\r\n\r\n  var data = new DataCtor(length * width * height * elemSize)\r\n\r\n  function index (x, y, z) {\r\n    return ((((x * width) + y) * height) + z) * elemSize\r\n  }\r\n\r\n  this.data = data\r\n\r\n  this.index = index\r\n\r\n  this.set = function (x, y, z) {\r\n    var i = index(x, y, z)\r\n\r\n    for (j = 0; j < elemSize; ++j) {\r\n      data[ i + j ] = arguments[ 3 + j ]\r\n    }\r\n  }\r\n\r\n  this.toArray = function (x, y, z, array, offset) {\r\n    var i = index(x, y, z)\r\n\r\n    if (array === undefined) array = []\r\n    if (offset === undefined) offset = 0\r\n\r\n    for (j = 0; j < elemSize; ++j) {\r\n      array[ offset + j ] = data[ i + j ]\r\n    }\r\n  }\r\n\r\n  this.fromArray = function (x, y, z, array, offset) {\r\n    var i = index(x, y, z)\r\n\r\n    if (offset === undefined) offset = 0\r\n\r\n    for (j = 0; j < elemSize; ++j) {\r\n      data[ i + j ] = array[ offset + j ]\r\n    }\r\n  }\r\n\r\n  this.copy = function (grid) {\r\n    this.data.set(grid.data)\r\n  }\r\n\r\n  this.clone = function () {\r\n    return new Grid(\r\n      length, width, height, DataCtor, elemSize\r\n    ).copy(this)\r\n  }\r\n}\r\n\r\nexport default Grid\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/grid.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1384,
    "kind": "function",
    "name": "Grid",
    "memberof": "src/geometry/grid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/grid.js~Grid",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/geometry/grid.js",
    "importStyle": "Grid",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Grid"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 1385,
    "kind": "file",
    "name": "src/geometry/helixbundle.js",
    "content": "/**\r\n * @file Helixbundle\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { AtomPicker } from '../utils/picker.js'\r\nimport RadiusFactory from '../utils/radius-factory.js'\r\nimport Helixorient from './helixorient.js'\r\nimport { calculateMeanVector3, projectPointOnVector } from '../math/vector-utils.js'\r\n\r\nfunction Helixbundle (polymer) {\r\n  this.polymer = polymer\r\n\r\n  this.helixorient = new Helixorient(polymer)\r\n  this.position = this.helixorient.getPosition()\r\n}\r\n\r\nHelixbundle.prototype = {\r\n\r\n  constructor: Helixbundle,\r\n\r\n  getAxis: function (localAngle, centerDist, ssBorder, colorParams, radius, scale) {\r\n    localAngle = localAngle || 30\r\n    centerDist = centerDist || 2.5\r\n    ssBorder = ssBorder === undefined ? false : ssBorder\r\n\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n    var residueIndexStart = polymer.residueIndexStart\r\n\r\n    var pos = this.position\r\n\r\n    var cp = colorParams || {}\r\n    cp.structure = structure\r\n\r\n    var colormaker = ColormakerRegistry.getScheme(cp)\r\n\r\n    var radiusFactory = new RadiusFactory(radius, scale)\r\n\r\n    var j = 0\r\n    var k = 0\r\n\r\n    var axis = []\r\n    var center = []\r\n    var beg = []\r\n    var end = []\r\n    var col = []\r\n    var pick = []\r\n    var size = []\r\n    var residueOffset = []\r\n    var residueCount = []\r\n\r\n    var tmpAxis = []\r\n    var tmpCenter = []\r\n\r\n    var _axis, _center\r\n    var _beg = new Vector3()\r\n    var _end = new Vector3()\r\n\r\n    var rp1 = structure.getResidueProxy()\r\n    var rp2 = structure.getResidueProxy()\r\n    var ap = structure.getAtomProxy()\r\n\r\n    var c1 = new Vector3()\r\n    var c2 = new Vector3()\r\n\r\n    var split = false\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      rp1.index = residueIndexStart + i\r\n      c1.fromArray(pos.center, i * 3)\r\n\r\n      if (i === n - 1) {\r\n        split = true\r\n      } else {\r\n        rp2.index = residueIndexStart + i + 1\r\n        c2.fromArray(pos.center, i * 3 + 3)\r\n\r\n        if (ssBorder && rp1.sstruc !== rp2.sstruc) {\r\n          split = true\r\n        } else if (c1.distanceTo(c2) > centerDist) {\r\n          split = true\r\n        } else if (pos.bending[ i ] > localAngle) {\r\n          split = true\r\n        }\r\n      }\r\n\r\n      if (split) {\r\n        if (i - j < 4) {\r\n          j = i\r\n          split = false\r\n          continue\r\n        }\r\n\r\n        ap.index = rp1.traceAtomIndex\r\n\r\n                // ignore first and last axis\r\n        tmpAxis = pos.axis.subarray(j * 3 + 3, i * 3)\r\n        tmpCenter = pos.center.subarray(j * 3, i * 3 + 3)\r\n\r\n        _axis = calculateMeanVector3(tmpAxis).normalize()\r\n        _center = calculateMeanVector3(tmpCenter)\r\n\r\n        _beg.fromArray(tmpCenter)\r\n        projectPointOnVector(_beg, _axis, _center)\r\n\r\n        _end.fromArray(tmpCenter, tmpCenter.length - 3)\r\n        projectPointOnVector(_end, _axis, _center)\r\n\r\n        _axis.subVectors(_end, _beg)\r\n\r\n        _axis.toArray(axis, k)\r\n        _center.toArray(center, k)\r\n        _beg.toArray(beg, k)\r\n        _end.toArray(end, k)\r\n\r\n        colormaker.atomColorToArray(ap, col, k)\r\n\r\n        pick.push(ap.index)\r\n\r\n        size.push(radiusFactory.atomRadius(ap))\r\n\r\n        residueOffset.push(residueIndexStart + j)\r\n        residueCount.push(residueIndexStart + i + 1 - j)\r\n\r\n        k += 3\r\n        j = i\r\n        split = false\r\n      }\r\n    }\r\n\r\n    var picking = new Float32Array(pick)\r\n\r\n    return {\r\n      'axis': new Float32Array(axis),\r\n      'center': new Float32Array(center),\r\n      'begin': new Float32Array(beg),\r\n      'end': new Float32Array(end),\r\n      'color': new Float32Array(col),\r\n      'picking': new AtomPicker(picking, structure),\r\n      'size': new Float32Array(size),\r\n      'residueOffset': residueOffset,\r\n      'residueCount': residueCount\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Helixbundle\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/helixbundle.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1386,
    "kind": "function",
    "name": "Helixbundle",
    "memberof": "src/geometry/helixbundle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/helixbundle.js~Helixbundle",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/helixbundle.js",
    "importStyle": "Helixbundle",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1387,
    "kind": "file",
    "name": "src/geometry/helixorient.js",
    "content": "/**\r\n * @file Helixorient\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { AtomPicker } from '../utils/picker.js'\r\nimport RadiusFactory from '../utils/radius-factory.js'\r\nimport { copyArray } from '../math/array-utils.js'\r\nimport { projectPointOnVector } from '../math/vector-utils.js'\r\n\r\nfunction Helixorient (polymer) {\r\n  this.polymer = polymer\r\n\r\n  this.size = polymer.residueCount\r\n}\r\n\r\nHelixorient.prototype = {\r\n\r\n  constructor: Helixorient,\r\n\r\n  getCenterIterator: function (smooth) {\r\n    var center = this.getPosition().center\r\n    var n = center.length / 3\r\n\r\n    var i = 0\r\n    var j = -1\r\n\r\n    var cache = [\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3()\r\n    ]\r\n\r\n    function next () {\r\n      var vector = this.get(j)\r\n      j += 1\r\n      return vector\r\n    }\r\n\r\n    function get (idx) {\r\n      idx = Math.min(n - 1, Math.max(0, idx))\r\n      var v = cache[ i % 4 ]\r\n      var idx3 = 3 * idx\r\n      v.fromArray(center, idx3)\r\n      if (smooth) {\r\n        var l, k, t\r\n        var w = Math.min(smooth, idx, n - idx - 1)\r\n        for (k = 1; k <= w; ++k) {\r\n          l = k * 3\r\n          t = (w + 1 - k) / (w + 1)\r\n          v.x += t * center[ idx3 - l + 0 ] + t * center[ idx3 + l + 0 ]\r\n          v.y += t * center[ idx3 - l + 1 ] + t * center[ idx3 + l + 1 ]\r\n          v.z += t * center[ idx3 - l + 2 ] + t * center[ idx3 + l + 2 ]\r\n        }\r\n        v.x /= w + 1\r\n        v.y /= w + 1\r\n        v.z /= w + 1\r\n      }\r\n      i += 1\r\n      return v\r\n    }\r\n\r\n    function reset () {\r\n      i = 0\r\n      j = -1\r\n    }\r\n\r\n    return {\r\n      size: n,\r\n      next: next,\r\n      get: get,\r\n      reset: reset\r\n    }\r\n  },\r\n\r\n  getColor: function (params) {\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n    var residueIndexStart = polymer.residueIndexStart\r\n\r\n    var col = new Float32Array(n * 3)\r\n\r\n    var p = params || {}\r\n    p.structure = structure\r\n\r\n    var colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    var rp = structure.getResidueProxy()\r\n    var ap = structure.getAtomProxy()\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      ap.index = rp.traceAtomIndex\r\n\r\n      colormaker.atomColorToArray(ap, col, i * 3)\r\n    }\r\n\r\n    return {\r\n      'color': col\r\n    }\r\n  },\r\n\r\n  getPicking: function () {\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n    var residueIndexStart = polymer.residueIndexStart\r\n\r\n    var pick = new Float32Array(n)\r\n    var rp = structure.getResidueProxy()\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      pick[ i ] = rp.traceAtomIndex\r\n    }\r\n\r\n    return {\r\n      'picking': new AtomPicker(pick, structure)\r\n    }\r\n  },\r\n\r\n  getSize: function (type, scale) {\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n    var residueIndexStart = polymer.residueIndexStart\r\n\r\n    var size = new Float32Array(n)\r\n    var radiusFactory = new RadiusFactory(type, scale)\r\n\r\n    var rp = structure.getResidueProxy()\r\n    var ap = structure.getAtomProxy()\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      rp.index = residueIndexStart + i\r\n      ap.index = rp.traceAtomIndex\r\n      size[ i ] = radiusFactory.atomRadius(ap)\r\n    }\r\n\r\n    return {\r\n      'size': size\r\n    }\r\n  },\r\n\r\n  getPosition: function () {\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n    var n3 = n - 3\r\n\r\n    var center = new Float32Array(3 * n)\r\n    var axis = new Float32Array(3 * n)\r\n    var diff = new Float32Array(n)\r\n    var radius = new Float32Array(n)\r\n    var rise = new Float32Array(n)\r\n    var twist = new Float32Array(n)\r\n    var resdir = new Float32Array(3 * n)\r\n\r\n    var tmp, j, i\r\n    var diff13Length, diff24Length\r\n\r\n    var r12 = new Vector3()\r\n    var r23 = new Vector3()\r\n    var r34 = new Vector3()\r\n\r\n    var diff13 = new Vector3()\r\n    var diff24 = new Vector3()\r\n\r\n    var v1 = new Vector3()\r\n    var v2 = new Vector3()\r\n    var vt = new Vector3()\r\n\r\n    var _axis = new Vector3()\r\n    var _prevAxis = new Vector3()\r\n\r\n    var _resdir = new Vector3()\r\n    var _center = new Vector3(0, 0, 0)\r\n\r\n    var type = 'trace'\r\n    var a1 = structure.getAtomProxy()\r\n    var a2 = structure.getAtomProxy(polymer.getAtomIndexByType(0, type))\r\n    var a3 = structure.getAtomProxy(polymer.getAtomIndexByType(1, type))\r\n    var a4 = structure.getAtomProxy(polymer.getAtomIndexByType(2, type))\r\n\r\n    for (i = 0; i < n3; ++i) {\r\n      a1.index = a2.index\r\n      a2.index = a3.index\r\n      a3.index = a4.index\r\n      a4.index = polymer.getAtomIndexByType(i + 3, type)\r\n\r\n      j = 3 * i\r\n\r\n            // ported from GROMACS src/tools/gmx_helixorient.c\r\n\r\n      r12.subVectors(a2, a1)\r\n      r23.subVectors(a3, a2)\r\n      r34.subVectors(a4, a3)\r\n\r\n      diff13.subVectors(r12, r23)\r\n      diff24.subVectors(r23, r34)\r\n\r\n      _axis.crossVectors(diff13, diff24).normalize()\r\n      _axis.toArray(axis, j)\r\n\r\n      if (i > 0) {\r\n        diff[ i ] = _axis.angleTo(_prevAxis)\r\n      }\r\n\r\n      tmp = Math.cos(diff13.angleTo(diff24))\r\n      twist[ i ] = 180.0 / Math.PI * Math.acos(tmp)\r\n\r\n      diff13Length = diff13.length()\r\n      diff24Length = diff24.length()\r\n\r\n      radius[ i ] = (\r\n                Math.sqrt(diff24Length * diff13Length) /\r\n                // clamp, to avoid instabilities for when\r\n                // angle between diff13 and diff24 is near 0\r\n                Math.max(2.0, 2.0 * (1.0 - tmp))\r\n            )\r\n\r\n      rise[ i ] = Math.abs(r23.dot(_axis))\r\n\r\n            //\r\n\r\n      v1.copy(diff13).multiplyScalar(radius[ i ] / diff13Length)\r\n      v2.copy(diff24).multiplyScalar(radius[ i ] / diff24Length)\r\n\r\n      v1.subVectors(a2, v1)\r\n      v2.subVectors(a3, v2)\r\n\r\n      v1.toArray(center, j + 3)\r\n      v2.toArray(center, j + 6)\r\n\r\n            //\r\n\r\n      _resdir.subVectors(a1, _center)\r\n      _resdir.toArray(resdir, j)\r\n\r\n      _prevAxis.copy(_axis)\r\n      _center.copy(v1)\r\n    }\r\n\r\n        //\r\n\r\n        // calc axis as dir of second and third center pos\r\n        // project first traceAtom onto axis to get first center pos\r\n    v1.fromArray(center, 3)\r\n    v2.fromArray(center, 6)\r\n    _axis.subVectors(v1, v2).normalize()\r\n        // _center.copy( res[ 0 ].getTraceAtom() );\r\n    a1.index = polymer.getAtomIndexByType(0, type)\r\n    _center.copy(a1)\r\n    vt.copy(a1)\r\n    projectPointOnVector(vt, _axis, v1)\r\n    vt.toArray(center, 0)\r\n\r\n        // calc first resdir\r\n    _resdir.subVectors(_center, v1)\r\n    _resdir.toArray(resdir, 0)\r\n\r\n        // calc axis as dir of n-1 and n-2 center pos\r\n        // project last traceAtom onto axis to get last center pos\r\n    v1.fromArray(center, 3 * n - 6)\r\n    v2.fromArray(center, 3 * n - 9)\r\n    _axis.subVectors(v1, v2).normalize()\r\n        // _center.copy( res[ n - 1 ].getTraceAtom() );\r\n    a1.index = polymer.getAtomIndexByType(n - 1, type)\r\n    _center.copy(a1)\r\n    vt.copy(a1)\r\n    projectPointOnVector(vt, _axis, v1)\r\n    vt.toArray(center, 3 * n - 3)\r\n\r\n        // calc last three resdir\r\n    for (i = n - 3; i < n; ++i) {\r\n      v1.fromArray(center, 3 * i)\r\n            // _center.copy( res[ i ].getTraceAtom() );\r\n      a1.index = polymer.getAtomIndexByType(i, type)\r\n      _center.copy(a1)\r\n\r\n      _resdir.subVectors(_center, v1)\r\n      _resdir.toArray(resdir, 3 * i)\r\n    }\r\n\r\n        // average measures to define them on the residues\r\n\r\n    var resRadius = new Float32Array(n)\r\n    var resTwist = new Float32Array(n)\r\n    var resRise = new Float32Array(n)\r\n    var resBending = new Float32Array(n)\r\n\r\n    resRadius[ 1 ] = radius[ 0 ]\r\n    resTwist[ 1 ] = twist[ 0 ]\r\n    resRise[ 1 ] = radius[ 0 ]\r\n\r\n    for (i = 2; i < n - 2; ++i) {\r\n      resRadius[ i ] = 0.5 * (radius[ i - 2 ] + radius[ i - 1 ])\r\n      resTwist[ i ] = 0.5 * (twist[ i - 2 ] + twist[ i - 1 ])\r\n      resRise[ i ] = 0.5 * (rise[ i - 2 ] + rise[ i - 1 ])\r\n\r\n      v1.fromArray(axis, 3 * (i - 2))\r\n      v2.fromArray(axis, 3 * (i - 1))\r\n      resBending[ i ] = 180.0 / Math.PI * Math.acos(Math.cos(v1.angleTo(v2)))\r\n    }\r\n\r\n    resRadius[ n - 2 ] = radius[ n - 4 ]\r\n    resTwist[ n - 2 ] = twist[ n - 4 ]\r\n    resRise[ n - 2 ] = rise[ n - 4 ]\r\n\r\n        // average helix axes to define them on the residues\r\n\r\n    var resAxis = new Float32Array(3 * n)\r\n\r\n    copyArray(axis, resAxis, 0, 0, 3)\r\n    copyArray(axis, resAxis, 0, 3, 3)\r\n\r\n    for (i = 2; i < n - 2; ++i) {\r\n      v1.fromArray(axis, 3 * (i - 2))\r\n      v2.fromArray(axis, 3 * (i - 1))\r\n\r\n      _axis.addVectors(v2, v1).multiplyScalar(0.5).normalize()\r\n      _axis.toArray(resAxis, 3 * i)\r\n    }\r\n\r\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 6, 3)\r\n    copyArray(axis, resAxis, 3 * n - 12, 3 * n - 3, 3)\r\n\r\n    return {\r\n      'center': center,\r\n      'axis': resAxis,\r\n      'bending': resBending,\r\n      'radius': resRadius,\r\n      'rise': resRise,\r\n      'twist': resTwist,\r\n      'resdir': resdir\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Helixorient\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/helixorient.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1388,
    "kind": "function",
    "name": "Helixorient",
    "memberof": "src/geometry/helixorient.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/helixorient.js~Helixorient",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/helixorient.js",
    "importStyle": "Helixorient",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1389,
    "kind": "file",
    "name": "src/geometry/kdtree.js",
    "content": "/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport _Kdtree from '../utils/kdtree.js'\r\n\r\nfunction Kdtree (entity, useSquaredDist) {\r\n  if (Debug) Log.time('Kdtree build')\r\n\r\n  var metric\r\n\r\n  if (useSquaredDist) {\r\n    metric = function (a, b) {\r\n      var dx = a[0] - b[0]\r\n      var dy = a[1] - b[1]\r\n      var dz = a[2] - b[2]\r\n      return dx * dx + dy * dy + dz * dz\r\n    }\r\n  } else {\r\n    metric = function (a, b) {\r\n      var dx = a[0] - b[0]\r\n      var dy = a[1] - b[1]\r\n      var dz = a[2] - b[2]\r\n      return Math.sqrt(dx * dx + dy * dy + dz * dz)\r\n    }\r\n  }\r\n\r\n  var points = new Float32Array(entity.atomCount * 3)\r\n  var atomIndices = new Uint32Array(entity.atomCount)\r\n  var i = 0\r\n\r\n  entity.eachAtom(function (ap) {\r\n    points[ i + 0 ] = ap.x\r\n    points[ i + 1 ] = ap.y\r\n    points[ i + 2 ] = ap.z\r\n    atomIndices[ i / 3 ] = ap.index\r\n    i += 3\r\n  })\r\n\r\n  this.atomIndices = atomIndices\r\n  this.points = points\r\n  this.kdtree = new _Kdtree(points, metric)\r\n\r\n  if (Debug) Log.timeEnd('Kdtree build')\r\n\r\n    // console.log(\"this.kdtree.verify()\", this.kdtree.verify())\r\n}\r\n\r\nKdtree.prototype = {\r\n\r\n  nearest: (function () {\r\n    var pointArray = new Float32Array(3)\r\n\r\n    return function nearest (point, maxNodes, maxDistance) {\r\n            // Log.time( \"Kdtree nearest\" );\r\n\r\n      if (point.toArray) {\r\n        point.toArray(pointArray)\r\n      } else if (point.positionToArray) {\r\n        point.positionToArray(pointArray)\r\n      }\r\n\r\n      var nodeList = this.kdtree.nearest(\r\n                pointArray, maxNodes, maxDistance\r\n            )\r\n\r\n      var indices = this.kdtree.indices\r\n      var nodes = this.kdtree.nodes\r\n      var atomIndices = this.atomIndices\r\n      var resultList = []\r\n\r\n      for (var i = 0, n = nodeList.length; i < n; ++i) {\r\n        var d = nodeList[ i ]\r\n        var nodeIndex = d[ 0 ]\r\n        var dist = d[ 1 ]\r\n\r\n        resultList.push({\r\n          index: atomIndices[ indices[ nodes[ nodeIndex ] ] ],\r\n          distance: dist\r\n        })\r\n      }\r\n\r\n            // Log.timeEnd( \"Kdtree nearest\" );\r\n\r\n      return resultList\r\n    }\r\n  }())\r\n\r\n}\r\n\r\nexport default Kdtree\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/kdtree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1390,
    "kind": "function",
    "name": "Kdtree",
    "memberof": "src/geometry/kdtree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/kdtree.js~Kdtree",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/kdtree.js",
    "importStyle": "Kdtree",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1391,
    "kind": "file",
    "name": "src/geometry/primitive.js",
    "content": "/**\r\n * @file Primitive\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Color } from '../../lib/three.es6.js'\r\n\r\nimport { BufferRegistry, PickerRegistry } from '../globals.js'\r\n\r\nfunction addElement (elm, array) {\r\n  if (elm.toArray !== undefined) {\r\n    elm = elm.toArray()\r\n  } else if (elm.x !== undefined) {\r\n    elm = [ elm.x, elm.y, elm.z ]\r\n  } else if (elm.r !== undefined) {\r\n    elm = [ elm.r, elm.g, elm.b ]\r\n  }\r\n  array.push.apply(array, elm)\r\n}\r\n\r\nconst tmpVec = new Vector3()\r\n\r\n/**\r\n * Base class for geometry primitives\r\n * @interface\r\n */\r\nclass Primitive {\r\n  static get Picker () { return PickerRegistry.get(this.type) }\r\n  static get Buffer () { return BufferRegistry.get(this.type) }\r\n\r\n  static getShapeKey (name) {\r\n    return this.type + name[0].toUpperCase() + name.substr(1)\r\n  }\r\n\r\n  static valueToShape (shape, name, value) {\r\n    const data = shape[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 'v3':\r\n      case 'c':\r\n        addElement(value, data)\r\n        break\r\n      default:\r\n        data.push(value)\r\n    }\r\n  }\r\n\r\n  static objectToShape (shape, data) {\r\n    Object.keys(this.fields).forEach(name => {\r\n      this.valueToShape(shape, name, data[name])\r\n    })\r\n    this.valueToShape(shape, 'name', data.name)\r\n    this.expandBoundingBox(shape.boundingBox, data)\r\n  }\r\n\r\n  static valueFromShape (shape, pid, name) {\r\n    const data = shape[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 'v3':\r\n        return new Vector3().fromArray(data, 3 * pid)\r\n      case 'c':\r\n        return new Color().fromArray(data, 3 * pid)\r\n      default:\r\n        return data[pid]\r\n    }\r\n  }\r\n\r\n  static objectFromShape (shape, pid) {\r\n    const o = {\r\n      shape,\r\n      name: this.valueFromShape(shape, pid, 'name')\r\n    }\r\n\r\n    Object.keys(this.fields).forEach(name => {\r\n      o[name] = this.valueFromShape(shape, pid, name)\r\n    })\r\n\r\n    return o\r\n  }\r\n\r\n  static arrayFromShape (shape, name) {\r\n    const data = shape[this.getShapeKey(name)]\r\n    const type = this.fields[name]\r\n\r\n    switch (type) {\r\n      case 's':\r\n        return data\r\n      default:\r\n        return new Float32Array(data)\r\n    }\r\n  }\r\n\r\n  static dataFromShape (shape) {\r\n    const data = {}\r\n\r\n    if (this.Picker) {\r\n      data.picking = new this.Picker(shape)\r\n    }\r\n\r\n    Object.keys(this.fields).forEach(name => {\r\n      data[name] = this.arrayFromShape(shape, name)\r\n    })\r\n\r\n    return data\r\n  }\r\n\r\n  static bufferFromShape (shape, params) {\r\n    return new this.Buffer(this.dataFromShape(shape), params)\r\n  }\r\n}\r\n\r\n/**\r\n * Sphere geometry primitive\r\n */\r\nclass SpherePrimitive extends Primitive {\r\n  static get type () { return 'sphere' }\r\n\r\n  static get fields () {\r\n    return {\r\n      position: 'v3',\r\n      color: 'c',\r\n      radius: 'f'\r\n    }\r\n  }\r\n\r\n  static positionFromShape (shape, pid) {\r\n    return this.valueFromShape(shape, pid, 'position')\r\n  }\r\n\r\n  static expandBoundingBox (box, data) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position))\r\n  }\r\n}\r\n\r\n/**\r\n * Box geometry primitive\r\n */\r\nclass BoxPrimitive extends SpherePrimitive {\r\n  static get type () { return 'box' }\r\n\r\n  static get fields () {\r\n    return {\r\n      position: 'v3',\r\n      color: 'c',\r\n      size: 'f',\r\n      heightAxis: 'v3',\r\n      depthAxis: 'v3'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Octahedron geometry primitive\r\n */\r\nclass OctahedronPrimitive extends BoxPrimitive {\r\n  static get type () { return 'octahedron' }\r\n}\r\n\r\n/**\r\n * Tetrahedron geometry primitive\r\n */\r\nclass TetrahedronPrimitive extends BoxPrimitive {\r\n  static get type () { return 'tetrahedron' }\r\n}\r\n\r\n/**\r\n * Cylinder geometry primitive\r\n */\r\nclass CylinderPrimitive extends Primitive {\r\n  static get type () { return 'cylinder' }\r\n\r\n  static get fields () {\r\n    return {\r\n      position1: 'v3',\r\n      position2: 'v3',\r\n      color: 'c',\r\n      radius: 'f'\r\n    }\r\n  }\r\n\r\n  static positionFromShape (shape, pid) {\r\n    const p1 = this.valueFromShape(shape, pid, 'position1')\r\n    const p2 = this.valueFromShape(shape, pid, 'position2')\r\n    return p1.add(p2).multiplyScalar(0.5)\r\n  }\r\n\r\n  static expandBoundingBox (box, data) {\r\n    box.expandByPoint(tmpVec.fromArray(data.position1))\r\n    box.expandByPoint(tmpVec.fromArray(data.position2))\r\n  }\r\n}\r\n\r\n/**\r\n * Arrow geometry primitive\r\n */\r\nclass ArrowPrimitive extends CylinderPrimitive {\r\n  static get type () { return 'arrow' }\r\n}\r\n\r\n/**\r\n * Cone geometry primitive\r\n */\r\nclass ConePrimitive extends CylinderPrimitive {\r\n  static get type () { return 'cone' }\r\n}\r\n\r\n/**\r\n * Ellipsoid geometry primitive\r\n */\r\nclass EllipsoidPrimitive extends SpherePrimitive {\r\n  static get type () { return 'ellipsoid' }\r\n\r\n  static get fields () {\r\n    return {\r\n      position: 'v3',\r\n      color: 'c',\r\n      radius: 'f',\r\n      majorAxis: 'v3',\r\n      minorAxis: 'v3'\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Torus geometry primitive\r\n */\r\nclass TorusPrimitive extends EllipsoidPrimitive {\r\n  static get type () { return 'torus' }\r\n}\r\n\r\n/**\r\n * Text geometry primitive\r\n */\r\nclass TextPrimitive extends SpherePrimitive {\r\n  static get type () { return 'text' }\r\n\r\n  static get fields () {\r\n    return {\r\n      position: 'v3',\r\n      color: 'c',\r\n      size: 'f',\r\n      text: 's'\r\n    }\r\n  }\r\n}\r\n\r\nexport {\r\n  ArrowPrimitive,\r\n  BoxPrimitive,\r\n  ConePrimitive,\r\n  CylinderPrimitive,\r\n  EllipsoidPrimitive,\r\n  OctahedronPrimitive,\r\n  SpherePrimitive,\r\n  TetrahedronPrimitive,\r\n  TextPrimitive,\r\n  TorusPrimitive\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/primitive.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1392,
    "kind": "function",
    "name": "addElement",
    "memberof": "src/geometry/primitive.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~addElement",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1393,
    "kind": "variable",
    "name": "tmpVec",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~tmpVec",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1394,
    "kind": "class",
    "name": "Primitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": null,
    "description": "Base class for geometry primitives",
    "lineNumber": 28,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 1395,
    "kind": "get",
    "name": "Picker",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.Picker",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1396,
    "kind": "get",
    "name": "Buffer",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.Buffer",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 1397,
    "kind": "method",
    "name": "getShapeKey",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.getShapeKey",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 1398,
    "kind": "method",
    "name": "valueToShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.valueToShape",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 1399,
    "kind": "method",
    "name": "objectToShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.objectToShape",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 1400,
    "kind": "method",
    "name": "valueFromShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.valueFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1401,
    "kind": "method",
    "name": "objectFromShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.objectFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 1402,
    "kind": "method",
    "name": "arrayFromShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.arrayFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 1403,
    "kind": "method",
    "name": "dataFromShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.dataFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 1404,
    "kind": "method",
    "name": "bufferFromShape",
    "memberof": "src/geometry/primitive.js~Primitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~Primitive.bufferFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 1405,
    "kind": "class",
    "name": "ArrowPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~ArrowPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{ArrowPrimitive}",
    "description": "Arrow geometry primitive",
    "lineNumber": 200,
    "interface": false,
    "extends": [
      "CylinderPrimitive"
    ]
  },
  {
    "__docId__": 1406,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~ArrowPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~ArrowPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true
  },
  {
    "__docId__": 1407,
    "kind": "class",
    "name": "BoxPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~BoxPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{BoxPrimitive}",
    "description": "Box geometry primitive",
    "lineNumber": 142,
    "interface": false,
    "extends": [
      "SpherePrimitive"
    ]
  },
  {
    "__docId__": 1408,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~BoxPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~BoxPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 1409,
    "kind": "get",
    "name": "fields",
    "memberof": "src/geometry/primitive.js~BoxPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~BoxPrimitive.fields",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 1410,
    "kind": "class",
    "name": "ConePrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~ConePrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{ConePrimitive}",
    "description": "Cone geometry primitive",
    "lineNumber": 207,
    "interface": false,
    "extends": [
      "CylinderPrimitive"
    ]
  },
  {
    "__docId__": 1411,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~ConePrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~ConePrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true
  },
  {
    "__docId__": 1412,
    "kind": "class",
    "name": "CylinderPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~CylinderPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{CylinderPrimitive}",
    "description": "Cylinder geometry primitive",
    "lineNumber": 173,
    "interface": false,
    "extends": [
      "Primitive"
    ]
  },
  {
    "__docId__": 1413,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~CylinderPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~CylinderPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 1414,
    "kind": "get",
    "name": "fields",
    "memberof": "src/geometry/primitive.js~CylinderPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~CylinderPrimitive.fields",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 1415,
    "kind": "method",
    "name": "positionFromShape",
    "memberof": "src/geometry/primitive.js~CylinderPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~CylinderPrimitive.positionFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 1416,
    "kind": "method",
    "name": "expandBoundingBox",
    "memberof": "src/geometry/primitive.js~CylinderPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~CylinderPrimitive.expandBoundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 1417,
    "kind": "class",
    "name": "EllipsoidPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~EllipsoidPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{EllipsoidPrimitive}",
    "description": "Ellipsoid geometry primitive",
    "lineNumber": 214,
    "interface": false,
    "extends": [
      "SpherePrimitive"
    ]
  },
  {
    "__docId__": 1418,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~EllipsoidPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~EllipsoidPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 215,
    "undocument": true
  },
  {
    "__docId__": 1419,
    "kind": "get",
    "name": "fields",
    "memberof": "src/geometry/primitive.js~EllipsoidPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~EllipsoidPrimitive.fields",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 1420,
    "kind": "class",
    "name": "OctahedronPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~OctahedronPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{OctahedronPrimitive}",
    "description": "Octahedron geometry primitive",
    "lineNumber": 159,
    "interface": false,
    "extends": [
      "BoxPrimitive"
    ]
  },
  {
    "__docId__": 1421,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~OctahedronPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~OctahedronPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 1422,
    "kind": "class",
    "name": "SpherePrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~SpherePrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{SpherePrimitive}",
    "description": "Sphere geometry primitive",
    "lineNumber": 119,
    "interface": false,
    "extends": [
      "Primitive"
    ]
  },
  {
    "__docId__": 1423,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~SpherePrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~SpherePrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true
  },
  {
    "__docId__": 1424,
    "kind": "get",
    "name": "fields",
    "memberof": "src/geometry/primitive.js~SpherePrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~SpherePrimitive.fields",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 1425,
    "kind": "method",
    "name": "positionFromShape",
    "memberof": "src/geometry/primitive.js~SpherePrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~SpherePrimitive.positionFromShape",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true
  },
  {
    "__docId__": 1426,
    "kind": "method",
    "name": "expandBoundingBox",
    "memberof": "src/geometry/primitive.js~SpherePrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~SpherePrimitive.expandBoundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 1427,
    "kind": "class",
    "name": "TetrahedronPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~TetrahedronPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{TetrahedronPrimitive}",
    "description": "Tetrahedron geometry primitive",
    "lineNumber": 166,
    "interface": false,
    "extends": [
      "BoxPrimitive"
    ]
  },
  {
    "__docId__": 1428,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~TetrahedronPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~TetrahedronPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true
  },
  {
    "__docId__": 1429,
    "kind": "class",
    "name": "TextPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~TextPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{TextPrimitive}",
    "description": "Text geometry primitive",
    "lineNumber": 238,
    "interface": false,
    "extends": [
      "SpherePrimitive"
    ]
  },
  {
    "__docId__": 1430,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~TextPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~TextPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true
  },
  {
    "__docId__": 1431,
    "kind": "get",
    "name": "fields",
    "memberof": "src/geometry/primitive.js~TextPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~TextPrimitive.fields",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true
  },
  {
    "__docId__": 1432,
    "kind": "class",
    "name": "TorusPrimitive",
    "memberof": "src/geometry/primitive.js",
    "static": true,
    "longname": "src/geometry/primitive.js~TorusPrimitive",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/primitive.js",
    "importStyle": "{TorusPrimitive}",
    "description": "Torus geometry primitive",
    "lineNumber": 231,
    "interface": false,
    "extends": [
      "EllipsoidPrimitive"
    ]
  },
  {
    "__docId__": 1433,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/primitive.js~TorusPrimitive",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/primitive.js~TorusPrimitive.type",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 1434,
    "kind": "file",
    "name": "src/geometry/shape.js",
    "content": "/**\r\n * @file Shape\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Box3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults, ensureFloat32Array, getUintArray } from '../utils.js'\r\nimport {\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive,\r\n  TetrahedronPrimitive, TextPrimitive, TorusPrimitive\r\n} from '../geometry/primitive.js'\r\nimport { MeshPicker } from '../utils/picker.js'\r\nimport MeshBuffer from '../buffer/mesh-buffer.js'\r\n\r\nconst tmpBox = new Box3()\r\n\r\nconst Primitives = [\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive,\r\n  TetrahedronPrimitive, TextPrimitive, TorusPrimitive\r\n]\r\n\r\n/**\r\n * Class for building custom shapes.\r\n *\r\n * @example\r\n * var shape = new NGL.Shape(\"shape\", { disableImpostor: true });\r\n * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\r\n * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n * shape.addArrow([ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0);\r\n * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n * var shapeComp = stage.addComponentFromObject(shape);\r\n * geoComp.addRepresentation(\"buffer\");\r\n */\r\nclass Shape {\r\n  /**\r\n   * @param {String} name - name\r\n   * @param {Object} params - parameter object\r\n   * @param {Integer} params.aspectRatio - arrow aspect ratio, used for cylinder radius and cone length\r\n   * @param {Integer} params.sphereDetail - sphere quality (icosahedron subdivisions)\r\n   * @param {Integer} params.radialSegments - cylinder quality (number of segments)\r\n   * @param {Boolean} params.disableImpostor - disable use of raycasted impostors for rendering\r\n   * @param {Boolean} params.openEnded - capped or not\r\n   * @param {TextBufferParameters} params.labelParams - label parameters\r\n   */\r\n  constructor (name, params) {\r\n    this.name = defaults(name, 'shape')\r\n\r\n    const p = params || {}\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 1.5)\r\n    this.sphereDetail = defaults(p.sphereDetail, 2)\r\n    this.radialSegments = defaults(p.radialSegments, 50)\r\n    this.disableImpostor = defaults(p.disableImpostor, false)\r\n    this.openEnded = defaults(p.openEnded, false)\r\n    this.labelParams = defaults(p.labelParams, {})\r\n\r\n    this.boundingBox = new Box3()\r\n\r\n    this.bufferList = []\r\n    this.meshCount = 0\r\n\r\n    Primitives.forEach(P => {\r\n      Object.keys(P.fields).forEach(name => {\r\n        this[ P.getShapeKey(name) ] = []\r\n      })\r\n      this[ P.getShapeKey('name') ] = []\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Add a buffer\r\n   * @param {Buffer} buffer - buffer object\r\n   * @return {Shape} this object\r\n   */\r\n  addBuffer (buffer) {\r\n    this.bufferList.push(buffer)\r\n\r\n    const geometry = buffer.geometry\r\n    if (!geometry.boundingBox) {\r\n      geometry.computeBoundingBox()\r\n    }\r\n    this.boundingBox.union(geometry.boundingBox)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a mesh\r\n   * @example\r\n   * shape.addMesh(\r\n   *   [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\r\n   *   [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\r\n   * );\r\n   *\r\n   * @param {Float32Array|Array} position - positions\r\n   * @param {Float32Array|Array} color - colors\r\n   * @param {Uint32Array|Uint16Array|Array} [index] - indices\r\n   * @param {Float32Array|Array} [normal] - normals\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addMesh (position, color, index, normal, name) {\r\n    position = ensureFloat32Array(position)\r\n    color = ensureFloat32Array(color)\r\n    if (Array.isArray(index)) {\r\n      index = getUintArray(index, position.length)\r\n    }\r\n    if (normal) {\r\n      normal = ensureFloat32Array(normal)\r\n    }\r\n\r\n    const data = { position, color, index, normal }\r\n    const picking = new MeshPicker(\r\n      this, Object.assign({ serial: this.meshCount, name }, data)\r\n    )\r\n    const meshBuffer = new MeshBuffer(\r\n      Object.assign({ picking }, data)\r\n    )\r\n    this.bufferList.push(meshBuffer)\r\n\r\n    tmpBox.setFromArray(position)\r\n    this.boundingBox.union(tmpBox)\r\n    this.meshCount += 1\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a sphere\r\n   * @example\r\n   * shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addSphere (position, color, radius, name) {\r\n    SpherePrimitive.objectToShape(\r\n      this, { position, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an ellipsoid\r\n   * @example\r\n   * shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {Vector3|Array} majorAxis - major axis vector or array\r\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addEllipsoid (position, color, radius, majorAxis, minorAxis, name) {\r\n    EllipsoidPrimitive.objectToShape(\r\n      this, { position, color, radius, majorAxis, minorAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a torus\r\n   * @example\r\n   * shape.addTorus([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {Vector3|Array} majorAxis - major axis vector or array\r\n   * @param {Vector3|Array} minorAxis - minor axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addTorus (position, color, radius, majorAxis, minorAxis, name) {\r\n    TorusPrimitive.objectToShape(\r\n      this, { position, color, radius, majorAxis, minorAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a cylinder\r\n   * @example\r\n   * shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addCylinder (position1, position2, color, radius, name) {\r\n    CylinderPrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a cone\r\n   * @example\r\n   * shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addCone (position1, position2, color, radius, name) {\r\n    ConePrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an arrow\r\n   * @example\r\n   * shape.addArrow([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\r\n   *\r\n   * @param {Vector3|Array} position1 - from position vector or array\r\n   * @param {Vector3|Array} position2 - to position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} radius - radius value\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addArrow (position1, position2, color, radius, name) {\r\n    ArrowPrimitive.objectToShape(\r\n      this, { position1, position2, color, radius, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a box\r\n   * @example\r\n   * shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addBox (position, color, size, heightAxis, depthAxis, name) {\r\n    BoxPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add an octahedron\r\n   * @example\r\n   * shape.addOctahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addOctahedron (position, color, size, heightAxis, depthAxis, name) {\r\n    OctahedronPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add a tetrahedron\r\n   * @example\r\n   * shape.addTetrahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\r\n   *\r\n   * @param {Vector3|Array} position - position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {Vector3|Array} heightAxis - height axis vector or array\r\n   * @param {Vector3|Array} depthAxis - depth axis vector or array\r\n   * @param {String} [name] - text\r\n   * @return {Shape} this object\r\n   */\r\n  addTetrahedron (position, color, size, heightAxis, depthAxis, name) {\r\n    TetrahedronPrimitive.objectToShape(\r\n      this, { position, color, size, heightAxis, depthAxis, name }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add text\r\n   * @example\r\n   * shape.addText([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ], 0.5, \"Hello\");\r\n   *\r\n   * @param {Vector3|Array} position - from position vector or array\r\n   * @param {Color|Array} color - color object or array\r\n   * @param {Float} size - size value\r\n   * @param {String} text - text value\r\n   * @return {Shape} this object\r\n   */\r\n  addText (position, color, size, text) {\r\n    TextPrimitive.objectToShape(\r\n      this, { position, color, size, text }\r\n    )\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Deprecated, use `.addText`\r\n   */\r\n  addLabel (position, color, size, text) {\r\n    console.warn('Shape.addLabel is deprecated, use .addText instead')\r\n    return this.addText(position, color, size, text)\r\n  }\r\n\r\n  getBufferList () {\r\n    const buffers = []\r\n\r\n    const params = {\r\n      aspectRatio: this.aspectRatio,\r\n      sphereDetail: this.sphereDetail,\r\n      radialSegments: this.radialSegments,\r\n      disableImpostor: this.disableImpostor,\r\n      openEnded: this.openEnded,\r\n      labelParams: this.labelParams\r\n    }\r\n\r\n    Primitives.forEach(P => {\r\n      if (this[ P.getShapeKey('color') ].length) {\r\n        buffers.push(P.bufferFromShape(this, params))\r\n      }\r\n    })\r\n\r\n    return this.bufferList.concat(buffers)\r\n  }\r\n\r\n  dispose () {\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.dispose()\r\n    })\r\n    this.bufferList.length = 0\r\n\r\n    Primitives.forEach(P => {\r\n      Object.keys(P.fields).forEach(name => {\r\n        this[ P.getShapeKey(name) ].length = 0\r\n      })\r\n      this[ P.getShapeKey('name') ].length = 0\r\n    })\r\n  }\r\n\r\n  get center () {\r\n    if (!this._center) {\r\n      this._center = this.boundingBox.getCenter()\r\n    }\r\n    return this._center\r\n  }\r\n\r\n  get type () { return 'Shape' }\r\n}\r\n\r\nexport default Shape\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/shape.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1435,
    "kind": "variable",
    "name": "tmpBox",
    "memberof": "src/geometry/shape.js",
    "static": true,
    "longname": "src/geometry/shape.js~tmpBox",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/shape.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1436,
    "kind": "variable",
    "name": "Primitives",
    "memberof": "src/geometry/shape.js",
    "static": true,
    "longname": "src/geometry/shape.js~Primitives",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/shape.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1437,
    "kind": "class",
    "name": "Shape",
    "memberof": "src/geometry/shape.js",
    "static": true,
    "longname": "src/geometry/shape.js~Shape",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/shape.js",
    "importStyle": "Shape",
    "description": "Class for building custom shapes.",
    "examples": [
      "var shape = new NGL.Shape(\"shape\", { disableImpostor: true });\nshape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\nshape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);\nshape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);\nshape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);\nshape.addArrow([ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0);\nshape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);\nvar shapeComp = stage.addComponentFromObject(shape);\ngeoComp.addRepresentation(\"buffer\");"
    ],
    "lineNumber": 40,
    "interface": false
  },
  {
    "__docId__": 1438,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.aspectRatio",
        "description": "arrow aspect ratio, used for cylinder radius and cone length"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.sphereDetail",
        "description": "sphere quality (icosahedron subdivisions)"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.radialSegments",
        "description": "cylinder quality (number of segments)"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.disableImpostor",
        "description": "disable use of raycasted impostors for rendering"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.openEnded",
        "description": "capped or not"
      },
      {
        "nullable": null,
        "types": [
          "TextBufferParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params.labelParams",
        "description": "label parameters"
      }
    ]
  },
  {
    "__docId__": 1439,
    "kind": "member",
    "name": "name",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#name",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 1440,
    "kind": "member",
    "name": "aspectRatio",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#aspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 1441,
    "kind": "member",
    "name": "sphereDetail",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#sphereDetail",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 1442,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#radialSegments",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1443,
    "kind": "member",
    "name": "disableImpostor",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#disableImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 1444,
    "kind": "member",
    "name": "openEnded",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#openEnded",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 1445,
    "kind": "member",
    "name": "labelParams",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#labelParams",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 1446,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 1447,
    "kind": "member",
    "name": "bufferList",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#bufferList",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 1448,
    "kind": "member",
    "name": "meshCount",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#meshCount",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 1449,
    "kind": "member",
    "name": "[P.getShapeKey(name)]",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#[P.getShapeKey(name)]",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 1450,
    "kind": "member",
    "name": "[P.getShapeKey('name')]",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#[P.getShapeKey('name')]",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 1451,
    "kind": "method",
    "name": "addBuffer",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addBuffer",
    "access": "public",
    "description": "Add a buffer",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "buffer object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1452,
    "kind": "method",
    "name": "addMesh",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addMesh",
    "access": "public",
    "description": "Add a mesh",
    "examples": [
      "shape.addMesh(\n  [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\n  [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ]\n);"
    ],
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "positions"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "colors"
      },
      {
        "nullable": null,
        "types": [
          "Uint32Array",
          "Uint16Array",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "index",
        "description": "indices"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array",
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "normal",
        "description": "normals"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1454,
    "kind": "method",
    "name": "addSphere",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addSphere",
    "access": "public",
    "description": "Add a sphere",
    "examples": [
      "shape.addSphere([ 0, 0, 9 ], [ 1, 0, 0 ], 1.5);"
    ],
    "lineNumber": 145,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1455,
    "kind": "method",
    "name": "addEllipsoid",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addEllipsoid",
    "access": "public",
    "description": "Add an ellipsoid",
    "examples": [
      "shape.addEllipsoid([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);"
    ],
    "lineNumber": 165,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "majorAxis",
        "description": "major axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "minorAxis",
        "description": "minor axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1456,
    "kind": "method",
    "name": "addTorus",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addTorus",
    "access": "public",
    "description": "Add a torus",
    "examples": [
      "shape.addTorus([ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ]);"
    ],
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "majorAxis",
        "description": "major axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "minorAxis",
        "description": "minor axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1457,
    "kind": "method",
    "name": "addCylinder",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addCylinder",
    "access": "public",
    "description": "Add a cylinder",
    "examples": [
      "shape.addCylinder([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);"
    ],
    "lineNumber": 204,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position1",
        "description": "from position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position2",
        "description": "to position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1458,
    "kind": "method",
    "name": "addCone",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addCone",
    "access": "public",
    "description": "Add a cone",
    "examples": [
      "shape.addCone([ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5);"
    ],
    "lineNumber": 223,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position1",
        "description": "from position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position2",
        "description": "to position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1459,
    "kind": "method",
    "name": "addArrow",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addArrow",
    "access": "public",
    "description": "Add an arrow",
    "examples": [
      "shape.addArrow([ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5);"
    ],
    "lineNumber": 242,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position1",
        "description": "from position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position2",
        "description": "to position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1460,
    "kind": "method",
    "name": "addBox",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addBox",
    "access": "public",
    "description": "Add a box",
    "examples": [
      "shape.addBox([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);"
    ],
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "size value"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "heightAxis",
        "description": "height axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "depthAxis",
        "description": "depth axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1461,
    "kind": "method",
    "name": "addOctahedron",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addOctahedron",
    "access": "public",
    "description": "Add an octahedron",
    "examples": [
      "shape.addOctahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);"
    ],
    "lineNumber": 282,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "size value"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "heightAxis",
        "description": "height axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "depthAxis",
        "description": "depth axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1462,
    "kind": "method",
    "name": "addTetrahedron",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addTetrahedron",
    "access": "public",
    "description": "Add a tetrahedron",
    "examples": [
      "shape.addTetrahedron([ 0, 3, 0 ], [ 1, 0, 1 ], 2, [ 0, 1, 1 ], [ 1, 0, 1 ]);"
    ],
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "size value"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "heightAxis",
        "description": "height axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "depthAxis",
        "description": "depth axis vector or array"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "name",
        "description": "text"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1463,
    "kind": "method",
    "name": "addText",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addText",
    "access": "public",
    "description": "Add text",
    "examples": [
      "shape.addText([ 10, -2, 4 ], [ 0.2, 0.5, 0.8 ], 0.5, \"Hello\");"
    ],
    "lineNumber": 320,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "from position vector or array"
      },
      {
        "nullable": null,
        "types": [
          "Color",
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "color object or array"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "size value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "text value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Shape"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 1464,
    "kind": "method",
    "name": "addLabel",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#addLabel",
    "access": "public",
    "description": "Deprecated, use `.addText`",
    "lineNumber": 330
  },
  {
    "__docId__": 1465,
    "kind": "method",
    "name": "getBufferList",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#getBufferList",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true
  },
  {
    "__docId__": 1466,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 356,
    "undocument": true
  },
  {
    "__docId__": 1467,
    "kind": "get",
    "name": "center",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#center",
    "access": "public",
    "description": null,
    "lineNumber": 370,
    "undocument": true
  },
  {
    "__docId__": 1468,
    "kind": "member",
    "name": "_center",
    "memberof": "src/geometry/shape.js~Shape",
    "static": false,
    "longname": "src/geometry/shape.js~Shape#_center",
    "access": "private",
    "description": null,
    "lineNumber": 372,
    "undocument": true
  },
  {
    "__docId__": 1469,
    "kind": "get",
    "name": "type",
    "memberof": "src/geometry/shape.js~Shape",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/geometry/shape.js~Shape#type",
    "access": "public",
    "description": null,
    "lineNumber": 377,
    "undocument": true
  },
  {
    "__docId__": 1470,
    "kind": "file",
    "name": "src/geometry/spatial-hash.js",
    "content": "/**\r\n * @file Spatial Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// import { Debug, Log } from \"../globals.js\";\r\n\r\nfunction SpatialHash (atomStore, boundingBox) {\r\n  var exp = 3\r\n\r\n  var bb = boundingBox\r\n  var minX = bb.min.x\r\n  var minY = bb.min.y\r\n  var minZ = bb.min.z\r\n  var boundX = ((bb.max.x - minX) >> exp) + 1\r\n  var boundY = ((bb.max.y - minY) >> exp) + 1\r\n  var boundZ = ((bb.max.z - minZ) >> exp) + 1\r\n\r\n  var n = boundX * boundY * boundZ\r\n  var an = atomStore.count\r\n\r\n  var xArray = atomStore.x\r\n  var yArray = atomStore.y\r\n  var zArray = atomStore.z\r\n\r\n  var i, j\r\n\r\n  var count = 0\r\n  var grid = new Uint32Array(n)\r\n  var bucketIndex = new Int32Array(an)\r\n  for (i = 0; i < an; ++i) {\r\n    var x = (xArray[ i ] - minX) >> exp\r\n    var y = (yArray[ i ] - minY) >> exp\r\n    var z = (zArray[ i ] - minZ) >> exp\r\n    var idx = (((x * boundY) + y) * boundZ) + z\r\n    if ((grid[ idx ] += 1) === 1) {\r\n      count += 1\r\n    }\r\n    bucketIndex[ i ] = idx\r\n  }\r\n\r\n  var bucketCount = new Uint16Array(count)\r\n  for (i = 0, j = 0; i < n; ++i) {\r\n    var c = grid[ i ]\r\n    if (c > 0) {\r\n      grid[ i ] = j + 1\r\n      bucketCount[ j ] = c\r\n      j += 1\r\n    }\r\n  }\r\n\r\n  var bucketOffset = new Uint32Array(count)\r\n  for (i = 1; i < count; ++i) {\r\n    bucketOffset[ i ] += bucketOffset[ i - 1 ] + bucketCount[ i - 1 ]\r\n  }\r\n\r\n  var bucketFill = new Uint16Array(count)\r\n  var bucketArray = new Int32Array(an)\r\n  for (i = 0; i < an; ++i) {\r\n    var bucketIdx = grid[ bucketIndex[ i ] ]\r\n    if (bucketIdx > 0) {\r\n      var k = bucketIdx - 1\r\n      bucketArray[ bucketOffset[ k ] + bucketFill[ k ] ] = i\r\n      bucketFill[ k ] += 1\r\n    }\r\n  }\r\n\r\n  function within (x, y, z, r) {\r\n    const result = []\r\n\r\n    eachWithin(x, y, z, r, atomIndex => result.push(atomIndex))\r\n\r\n    return result\r\n  }\r\n\r\n  function eachWithin (x, y, z, r, callback) {\r\n    var rSq = r * r\r\n\r\n    var loX = Math.max(0, (x - r - minX) >> exp)\r\n    var loY = Math.max(0, (y - r - minY) >> exp)\r\n    var loZ = Math.max(0, (z - r - minZ) >> exp)\r\n\r\n    var hiX = Math.min(boundX, (x + r - minX) >> exp)\r\n    var hiY = Math.min(boundY, (y + r - minY) >> exp)\r\n    var hiZ = Math.min(boundZ, (z + r - minZ) >> exp)\r\n\r\n    var result = []\r\n\r\n    for (var ix = loX; ix <= hiX; ++ix) {\r\n      for (var iy = loY; iy <= hiY; ++iy) {\r\n        for (var iz = loZ; iz <= hiZ; ++iz) {\r\n          var idx = (((ix * boundY) + iy) * boundZ) + iz\r\n          var bucketIdx = grid[ idx ]\r\n\r\n          if (bucketIdx > 0) {\r\n            var k = bucketIdx - 1\r\n            var offset = bucketOffset[ k ]\r\n            var count = bucketCount[ k ]\r\n            var end = offset + count\r\n\r\n            for (var i = offset; i < end; ++i) {\r\n              var atomIndex = bucketArray[ i ]\r\n              var dx = xArray[ atomIndex ] - x\r\n              var dy = yArray[ atomIndex ] - y\r\n              var dz = zArray[ atomIndex ] - z\r\n\r\n              const dSq = dx * dx + dy * dy + dz * dz\r\n              if (dSq <= rSq) callback(atomIndex, dSq)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  // API\r\n\r\n  this.within = within\r\n  this.eachWithin = eachWithin\r\n}\r\n\r\nexport default SpatialHash\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/spatial-hash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1471,
    "kind": "function",
    "name": "SpatialHash",
    "memberof": "src/geometry/spatial-hash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/spatial-hash.js~SpatialHash",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/geometry/spatial-hash.js",
    "importStyle": "SpatialHash",
    "description": "",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Spatial Hash"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 1472,
    "kind": "file",
    "name": "src/geometry/spline.js",
    "content": "/**\r\n * @file Spline\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { AtomPicker } from '../utils/picker.js'\r\nimport RadiusFactory from '../utils/radius-factory.js'\r\nimport { copyArray } from '../math/array-utils.js'\r\nimport { spline } from '../math/math-utils.js'\r\n\r\nfunction Interpolator (m, tension) {\r\n  var dt = 1.0 / m\r\n  var delta = 0.0001\r\n\r\n  var vec1 = new Vector3()\r\n  var vec2 = new Vector3()\r\n\r\n  function interpolateToArr (v0, v1, v2, v3, t, arr, offset) {\r\n    arr[ offset + 0 ] = spline(v0.x, v1.x, v2.x, v3.x, t, tension)\r\n    arr[ offset + 1 ] = spline(v0.y, v1.y, v2.y, v3.y, t, tension)\r\n    arr[ offset + 2 ] = spline(v0.z, v1.z, v2.z, v3.z, t, tension)\r\n  }\r\n\r\n  function interpolateToVec (v0, v1, v2, v3, t, vec) {\r\n    vec.x = spline(v0.x, v1.x, v2.x, v3.x, t, tension)\r\n    vec.y = spline(v0.y, v1.y, v2.y, v3.y, t, tension)\r\n    vec.z = spline(v0.z, v1.z, v2.z, v3.z, t, tension)\r\n  }\r\n\r\n  function interpolatePosition (v0, v1, v2, v3, pos, offset) {\r\n    for (var j = 0; j < m; ++j) {\r\n      var l = offset + j * 3\r\n      var d = dt * j\r\n      interpolateToArr(v0, v1, v2, v3, d, pos, l)\r\n    }\r\n  }\r\n\r\n  function interpolateTangent (v0, v1, v2, v3, tan, offset) {\r\n    for (var j = 0; j < m; ++j) {\r\n      var d = dt * j\r\n      var d1 = d - delta\r\n      var d2 = d + delta\r\n      var l = offset + j * 3\r\n            // capping as a precation\r\n      if (d1 < 0) d1 = 0\r\n      if (d2 > 1) d2 = 1\r\n            //\r\n      interpolateToVec(v0, v1, v2, v3, d1, vec1)\r\n      interpolateToVec(v0, v1, v2, v3, d2, vec2)\r\n            //\r\n      vec2.sub(vec1).normalize()\r\n      vec2.toArray(tan, l)\r\n    }\r\n  }\r\n\r\n  function vectorSubdivide (interpolationFn, iterator, array, offset, isCyclic) {\r\n    var v0\r\n    var v1 = iterator.next()\r\n    var v2 = iterator.next()\r\n    var v3 = iterator.next()\r\n        //\r\n    var n = iterator.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      v0 = v1\r\n      v1 = v2\r\n      v2 = v3\r\n      v3 = iterator.next()\r\n      interpolationFn(v0, v1, v2, v3, array, k)\r\n      k += 3 * m\r\n    }\r\n    if (isCyclic) {\r\n      v0 = iterator.get(n - 2)\r\n      v1 = iterator.get(n - 1)\r\n      v2 = iterator.get(0)\r\n      v3 = iterator.get(1)\r\n      interpolationFn(v0, v1, v2, v3, array, k)\r\n      k += 3 * m\r\n    }\r\n  }\r\n\r\n    //\r\n\r\n  this.getPosition = function (iterator, array, offset, isCyclic) {\r\n    iterator.reset()\r\n    vectorSubdivide(\r\n            interpolatePosition, iterator, array, offset, isCyclic\r\n        )\r\n    var n1 = iterator.size - 1\r\n    var k = n1 * m * 3\r\n    if (isCyclic) k += m * 3\r\n    var v = iterator.get(isCyclic ? 0 : n1)\r\n    array[ k ] = v.x\r\n    array[ k + 1 ] = v.y\r\n    array[ k + 2 ] = v.z\r\n  }\r\n\r\n  this.getTangent = function (iterator, array, offset, isCyclic) {\r\n    iterator.reset()\r\n    vectorSubdivide(\r\n            interpolateTangent, iterator, array, offset, isCyclic\r\n        )\r\n    var n1 = iterator.size - 1\r\n    var k = n1 * m * 3\r\n    if (isCyclic) k += m * 3\r\n    copyArray(array, array, k - 3, k, 3)\r\n  }\r\n\r\n    //\r\n\r\n  var vDir = new Vector3()\r\n  var vTan = new Vector3()\r\n  var vNorm = new Vector3()\r\n  var vBin = new Vector3()\r\n\r\n  var m2 = Math.ceil(m / 2)\r\n\r\n  function interpolateNormalDir (u0, u1, u2, u3, v0, v1, v2, v3, tan, norm, bin, offset, shift) {\r\n    for (var j = 0; j < m; ++j) {\r\n      var l = offset + j * 3\r\n      if (shift) l += m2 * 3\r\n      var d = dt * j\r\n      interpolateToVec(u0, u1, u2, u3, d, vec1)\r\n      interpolateToVec(v0, v1, v2, v3, d, vec2)\r\n      vDir.subVectors(vec2, vec1).normalize()\r\n      vTan.fromArray(tan, l)\r\n      vBin.crossVectors(vDir, vTan).normalize()\r\n      vBin.toArray(bin, l)\r\n      vNorm.crossVectors(vTan, vBin).normalize()\r\n      vNorm.toArray(norm, l)\r\n    }\r\n  }\r\n\r\n  function interpolateNormal (vDir, tan, norm, bin, offset) {\r\n    for (var j = 0; j < m; ++j) {\r\n      var l = offset + j * 3\r\n      vDir.copy(vNorm)\r\n      vTan.fromArray(tan, l)\r\n      vBin.crossVectors(vDir, vTan).normalize()\r\n      vBin.toArray(bin, l)\r\n      vNorm.crossVectors(vTan, vBin).normalize()\r\n      vNorm.toArray(norm, l)\r\n    }\r\n  }\r\n\r\n  this.getNormal = function (size, tan, norm, bin, offset, isCyclic) {\r\n    vNorm.set(0, 0, 1)\r\n    var n = size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      interpolateNormal(vDir, tan, norm, bin, k)\r\n      k += 3 * m\r\n    }\r\n    if (isCyclic) {\r\n      interpolateNormal(vDir, tan, norm, bin, k)\r\n      k += 3 * m\r\n    }\r\n    vBin.toArray(bin, k)\r\n    vNorm.toArray(norm, k)\r\n  }\r\n\r\n  this.getNormalDir = function (iterDir1, iterDir2, tan, norm, bin, offset, isCyclic, shift) {\r\n    iterDir1.reset()\r\n    iterDir2.reset()\r\n        //\r\n    var vSub1 = new Vector3()\r\n    var vSub2 = new Vector3()\r\n    var vSub3 = new Vector3()\r\n    var vSub4 = new Vector3()\r\n        //\r\n    var d1v1 = new Vector3()\r\n    var d1v2 = new Vector3().copy(iterDir1.next())\r\n    var d1v3 = new Vector3().copy(iterDir1.next())\r\n    var d1v4 = new Vector3().copy(iterDir1.next())\r\n    var d2v1 = new Vector3()\r\n    var d2v2 = new Vector3().copy(iterDir2.next())\r\n    var d2v3 = new Vector3().copy(iterDir2.next())\r\n    var d2v4 = new Vector3().copy(iterDir2.next())\r\n        //\r\n    vNorm.set(0, 0, 1)\r\n    var n = iterDir1.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      d1v1.copy(d1v2)\r\n      d1v2.copy(d1v3)\r\n      d1v3.copy(d1v4)\r\n      d1v4.copy(iterDir1.next())\r\n      d2v1.copy(d2v2)\r\n      d2v2.copy(d2v3)\r\n      d2v3.copy(d2v4)\r\n      d2v4.copy(iterDir2.next())\r\n            //\r\n      if (i === 0) {\r\n        vSub1.subVectors(d2v1, d1v1)\r\n        vSub2.subVectors(d2v2, d1v2)\r\n        if (vSub1.dot(vSub2) < 0) {\r\n          vSub2.multiplyScalar(-1)\r\n          d2v2.addVectors(d1v2, vSub2)\r\n        }\r\n        vSub3.subVectors(d2v3, d1v3)\r\n        if (vSub2.dot(vSub3) < 0) {\r\n          vSub3.multiplyScalar(-1)\r\n          d2v3.addVectors(d1v3, vSub3)\r\n        }\r\n      } else {\r\n        vSub3.copy(vSub4)\r\n      }\r\n      vSub4.subVectors(d2v4, d1v4)\r\n      if (vSub3.dot(vSub4) < 0) {\r\n        vSub4.multiplyScalar(-1)\r\n        d2v4.addVectors(d1v4, vSub4)\r\n      }\r\n      interpolateNormalDir(\r\n                d1v1, d1v2, d1v3, d1v4,\r\n                d2v1, d2v2, d2v3, d2v4,\r\n                tan, norm, bin, k, shift\r\n            )\r\n      k += 3 * m\r\n    }\r\n    if (isCyclic) {\r\n      d1v1.copy(iterDir1.get(n - 2))\r\n      d1v2.copy(iterDir1.get(n - 1))\r\n      d1v3.copy(iterDir1.get(0))\r\n      d1v4.copy(iterDir1.get(1))\r\n      d2v1.copy(iterDir2.get(n - 2))\r\n      d2v2.copy(iterDir2.get(n - 1))\r\n      d2v3.copy(iterDir2.get(0))\r\n      d2v4.copy(iterDir2.get(1))\r\n            //\r\n      vSub3.copy(vSub4)\r\n      vSub4.subVectors(d2v4, d1v4)\r\n      if (vSub3.dot(vSub4) < 0) {\r\n        vSub4.multiplyScalar(-1)\r\n        d2v4.addVectors(d1v4, vSub4)\r\n      }\r\n      interpolateNormalDir(\r\n                d1v1, d1v2, d1v3, d1v4,\r\n                d2v1, d2v2, d2v3, d2v4,\r\n                tan, norm, bin, k, shift\r\n            )\r\n      k += 3 * m\r\n    }\r\n    if (shift) {\r\n            // FIXME shift requires data from one more preceeding residue\r\n      vBin.fromArray(bin, m2 * 3)\r\n      vNorm.fromArray(norm, m2 * 3)\r\n      for (var j = 0; j < m2; ++j) {\r\n        vBin.toArray(bin, j * 3)\r\n        vNorm.toArray(norm, j * 3)\r\n      }\r\n    } else {\r\n      vBin.toArray(bin, k)\r\n      vNorm.toArray(norm, k)\r\n    }\r\n  }\r\n\r\n    //\r\n\r\n  function interpolateColor (item1, item2, colFn, col, offset) {\r\n    var j, l\r\n    for (j = 0; j < m2; ++j) {\r\n      l = offset + j * 3\r\n      colFn(item1, col, l)  // itemColorToArray\r\n    }\r\n    for (j = m2; j < m; ++j) {\r\n      l = offset + j * 3\r\n      colFn(item2, col, l)  // itemColorToArray\r\n    }\r\n  }\r\n\r\n  this.getColor = function (iterator, colFn, col, offset, isCyclic) {\r\n    iterator.reset()\r\n    iterator.next()  // first element not needed\r\n    var i0\r\n    var i1 = iterator.next()\r\n        //\r\n    var n = iterator.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = iterator.next()\r\n      interpolateColor(i0, i1, colFn, col, k)\r\n      k += 3 * m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = iterator.get(n - 1)\r\n      i1 = iterator.get(0)\r\n      interpolateColor(i0, i1, colFn, col, k)\r\n      k += 3 * m\r\n    }\r\n        //\r\n    col[ k ] = col[ k - 3 ]\r\n    col[ k + 1 ] = col[ k - 2 ]\r\n    col[ k + 2 ] = col[ k - 1 ]\r\n  }\r\n\r\n    //\r\n\r\n  function interpolatePicking (item1, item2, pickFn, pick, offset) {\r\n    var j\r\n    for (j = 0; j < m2; ++j) {\r\n      pick[ offset + j ] = pickFn(item1)\r\n    }\r\n    for (j = m2; j < m; ++j) {\r\n      pick[ offset + j ] = pickFn(item2)\r\n    }\r\n  }\r\n\r\n  this.getPicking = function (iterator, pickFn, pick, offset, isCyclic) {\r\n    iterator.reset()\r\n    iterator.next()  // first element not needed\r\n    var i0\r\n    var i1 = iterator.next()\r\n        //\r\n    var n = iterator.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = iterator.next()\r\n      interpolatePicking(i0, i1, pickFn, pick, k)\r\n      k += m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = iterator.get(n - 1)\r\n      i1 = iterator.get(0)\r\n      interpolatePicking(i0, i1, pickFn, pick, k)\r\n      k += m\r\n    }\r\n        //\r\n    pick[ k ] = pick[ k - 1 ]\r\n  }\r\n\r\n    //\r\n\r\n  function interpolateSize (item1, item2, sizeFn, size, offset) {\r\n    var s1 = sizeFn(item1)\r\n    var s2 = sizeFn(item2)\r\n    for (var j = 0; j < m; ++j) {\r\n            // linear interpolation\r\n      var t = j / m\r\n      size[ offset + j ] = (1 - t) * s1 + t * s2\r\n    }\r\n  }\r\n\r\n  this.getSize = function (iterator, sizeFn, size, offset, isCyclic) {\r\n    iterator.reset()\r\n    iterator.next()  // first element not needed\r\n    var i0\r\n    var i1 = iterator.next()\r\n        //\r\n    var n = iterator.size\r\n    var n1 = n - 1\r\n    var k = offset || 0\r\n    for (var i = 0; i < n1; ++i) {\r\n      i0 = i1\r\n      i1 = iterator.next()\r\n      interpolateSize(i0, i1, sizeFn, size, k)\r\n      k += m\r\n    }\r\n    if (isCyclic) {\r\n      i0 = iterator.get(n - 1)\r\n      i1 = iterator.get(0)\r\n      interpolateSize(i0, i1, sizeFn, size, k)\r\n      k += m\r\n    }\r\n        //\r\n    size[ k ] = size[ k - 1 ]\r\n  }\r\n}\r\n\r\nfunction Spline (polymer, params) {\r\n  this.polymer = polymer\r\n  this.size = polymer.residueCount\r\n\r\n  var p = params || {}\r\n  this.directional = p.directional || false\r\n  this.positionIterator = p.positionIterator || false\r\n  this.subdiv = p.subdiv || 1\r\n  this.smoothSheet = p.smoothSheet || false\r\n\r\n  if (!p.tension) {\r\n    this.tension = this.polymer.isNucleic() ? 0.5 : 0.9\r\n  } else {\r\n    this.tension = p.tension\r\n  }\r\n\r\n  this.interpolator = new Interpolator(this.subdiv, this.tension)\r\n}\r\n\r\nSpline.prototype = {\r\n\r\n  constructor: Spline,\r\n\r\n  getAtomIterator: function (type, smooth) {\r\n    var polymer = this.polymer\r\n    var structure = polymer.structure\r\n    var n = polymer.residueCount\r\n\r\n    var i = 0\r\n    var j = -1\r\n\r\n    var cache = [\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy(),\r\n      structure.getAtomProxy()\r\n    ]\r\n\r\n    var cache2 = [\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3(),\r\n      new Vector3()\r\n    ]\r\n\r\n    function next () {\r\n      var atomProxy = this.get(j)\r\n      j += 1\r\n      return atomProxy\r\n    }\r\n\r\n    var apPrev = structure.getAtomProxy()\r\n    var apNext = structure.getAtomProxy()\r\n\r\n    function get (idx) {\r\n      var atomProxy = cache[ i % 4 ]\r\n      atomProxy.index = polymer.getAtomIndexByType(idx, type)\r\n      if (smooth && idx > 0 && idx < n && atomProxy.sstruc === 'e') {\r\n        var vec = cache2[ i % 4 ]\r\n        apPrev.index = polymer.getAtomIndexByType(idx + 1, type)\r\n        apNext.index = polymer.getAtomIndexByType(idx - 1, type)\r\n        vec.addVectors(apPrev, apNext)\r\n                    .add(atomProxy).add(atomProxy)\r\n                    .multiplyScalar(0.25)\r\n        i += 1\r\n        return vec\r\n      }\r\n      i += 1\r\n      return atomProxy\r\n    }\r\n\r\n    function reset () {\r\n      i = 0\r\n      j = -1\r\n    }\r\n\r\n    return {\r\n      size: n,\r\n      next: next,\r\n      get: get,\r\n      reset: reset\r\n    }\r\n  },\r\n\r\n  getSubdividedColor: function (params) {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nCol = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nCol += m * 3\r\n\r\n    var col = new Float32Array(nCol)\r\n    var iterator = this.getAtomIterator('trace')\r\n\r\n    var p = params || {}\r\n    p.structure = polymer.structure\r\n\r\n    var colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    function colFn (item, array, offset) {\r\n      colormaker.atomColorToArray(item, array, offset)\r\n    }\r\n\r\n    this.interpolator.getColor(\r\n            iterator, colFn, col, 0, polymer.isCyclic\r\n        )\r\n\r\n    return {\r\n      'color': col\r\n    }\r\n  },\r\n\r\n  getSubdividedPicking: function () {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nCol = n1 * m + 1\r\n    if (polymer.isCyclic) nCol += m\r\n\r\n    var structure = polymer.structure\r\n    var iterator = this.getAtomIterator('trace')\r\n    var pick = new Float32Array(nCol)\r\n\r\n    function pickFn (item) {\r\n      return item.index\r\n    }\r\n\r\n    this.interpolator.getPicking(\r\n            iterator, pickFn, pick, 0, polymer.isCyclic\r\n        )\r\n\r\n    return {\r\n      'picking': new AtomPicker(pick, structure)\r\n    }\r\n  },\r\n\r\n  getSubdividedPosition: function () {\r\n    var pos = this.getPosition()\r\n\r\n    return {\r\n      'position': pos\r\n    }\r\n  },\r\n\r\n  getSubdividedOrientation: function () {\r\n    var tan = this.getTangent()\r\n    var normals = this.getNormals(tan)\r\n\r\n    return {\r\n      'tangent': tan,\r\n      'normal': normals.normal,\r\n      'binormal': normals.binormal\r\n    }\r\n  },\r\n\r\n  getSubdividedSize: function (type, scale) {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nSize = n1 * m + 1\r\n    if (polymer.isCyclic) nSize += m\r\n\r\n    var size = new Float32Array(nSize)\r\n    var iterator = this.getAtomIterator('trace')\r\n\r\n    var radiusFactory = new RadiusFactory(type, scale)\r\n\r\n    function sizeFn (item) {\r\n      return radiusFactory.atomRadius(item)\r\n    }\r\n\r\n    this.interpolator.getSize(\r\n            iterator, sizeFn, size, 0, polymer.isCyclic\r\n        )\r\n\r\n    return {\r\n      'size': size\r\n    }\r\n  },\r\n\r\n  getPosition: function () {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = polymer.residueCount\r\n    var n1 = n - 1\r\n    var nPos = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nPos += m * 3\r\n\r\n    var pos = new Float32Array(nPos)\r\n    var iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\r\n\r\n    this.interpolator.getPosition(\r\n            iterator, pos, 0, polymer.isCyclic\r\n        )\r\n\r\n    return pos\r\n  },\r\n\r\n  getTangent: function () {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var n = this.size\r\n    var n1 = n - 1\r\n    var nTan = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nTan += m * 3\r\n\r\n    var tan = new Float32Array(nTan)\r\n    var iterator = this.positionIterator || this.getAtomIterator('trace', this.smoothSheet)\r\n\r\n    this.interpolator.getTangent(\r\n            iterator, tan, 0, polymer.isCyclic\r\n        )\r\n\r\n    return tan\r\n  },\r\n\r\n  getNormals: function (tan) {\r\n    var m = this.subdiv\r\n    var polymer = this.polymer\r\n    var isProtein = polymer.isProtein()\r\n    var n = this.size\r\n    var n1 = n - 1\r\n    var nNorm = n1 * m * 3 + 3\r\n    if (polymer.isCyclic) nNorm += m * 3\r\n\r\n    var norm = new Float32Array(nNorm)\r\n    var bin = new Float32Array(nNorm)\r\n\r\n    if (this.directional && !this.polymer.isCg()) {\r\n      var iterDir1 = this.getAtomIterator('direction1')\r\n      var iterDir2 = this.getAtomIterator('direction2')\r\n      this.interpolator.getNormalDir(\r\n                iterDir1, iterDir2, tan, norm, bin, 0, polymer.isCyclic, isProtein\r\n            )\r\n    } else {\r\n      this.interpolator.getNormal(\r\n                n, tan, norm, bin, 0, polymer.isCyclic, isProtein\r\n            )\r\n    }\r\n\r\n    return {\r\n      'normal': norm,\r\n      'binormal': bin\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default Spline\r\n",
    "static": true,
    "longname": "D:/nglLib/src/geometry/spline.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1473,
    "kind": "function",
    "name": "Interpolator",
    "memberof": "src/geometry/spline.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/spline.js~Interpolator",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/geometry/spline.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1474,
    "kind": "function",
    "name": "Spline",
    "memberof": "src/geometry/spline.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/geometry/spline.js~Spline",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/geometry/spline.js",
    "importStyle": "Spline",
    "description": null,
    "lineNumber": 380,
    "undocument": true
  },
  {
    "__docId__": 1475,
    "kind": "file",
    "name": "src/globals.js",
    "content": "/**\r\n * @file Globals\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getBrowser, getQuery, boolean } from './utils.js'\r\nimport Registry from './utils/registry.js'\r\nimport _ColormakerRegistry from './color/colormaker-registry.js'\r\nimport _ParserRegistry from './parser/parser-registry.js'\r\nimport _WorkerRegistry from './worker/worker-registry.js'\r\n\r\n/**\r\n * The browser name: \"Opera\", \"Chrome\", \"Firefox\", \"Mobile Safari\",\r\n * \"Internet Explorer\", \"Safari\" or false.\r\n * @type {String|false}\r\n */\r\nconst Browser = getBrowser()\r\n\r\n/**\r\n * Flag indicating support for the 'passive' option for event handler\r\n * @type {Boolean}\r\n */\r\nlet SupportsPassiveEventHandler = false\r\ntry {\r\n  // Test via a getter in the options object to see if the passive property is accessed\r\n  const opts = Object.defineProperty({}, 'passive', {\r\n    get: function () {\r\n      SupportsPassiveEventHandler = true\r\n    }\r\n  })\r\n  window.addEventListener('test', null, opts)\r\n} catch (e) {}\r\n\r\n/**\r\n * Flag indicating a mobile browser\r\n * @type {Boolean}\r\n */\r\nconst Mobile = typeof window !== 'undefined' ? typeof window.orientation !== 'undefined' : false\r\n\r\nlet SupportsReadPixelsFloat = false\r\nfunction setSupportsReadPixelsFloat (value) {\r\n  SupportsReadPixelsFloat = value\r\n}\r\n\r\n/**\r\n * Flag indicating support for the `EXT_frag_depth` WebGL extension\r\n * @type {Boolean}\r\n */\r\nlet ExtensionFragDepth = false\r\nfunction setExtensionFragDepth (value) {\r\n  ExtensionFragDepth = value\r\n}\r\n\r\nconst Log = {\r\n  log: Function.prototype.bind.call(console.log, console),\r\n  info: Function.prototype.bind.call(console.info, console),\r\n  warn: Function.prototype.bind.call(console.warn, console),\r\n  error: Function.prototype.bind.call(console.error, console),\r\n  time: Function.prototype.bind.call(console.time, console),\r\n  timeEnd: Function.prototype.bind.call(console.timeEnd, console)\r\n}\r\n\r\nlet Debug = boolean(getQuery('debug'))\r\nfunction setDebug (value) {\r\n  Debug = value\r\n}\r\n\r\nconst WebglErrorMessage = '<div style=\"display:flex;align-items:center;justify-content:center;height:100%;\"><p style=\"padding:15px;text-align:center;\">Your browser/graphics card does not seem to support <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/WebGL\">WebGL</a>.<br/><br/>Find out how to get it <a target=\"_blank\" href=\"http://get.webgl.org/\">here</a>.</p></div>'\r\n\r\n/**\r\n * List of file extensions to be recognized as scripts\r\n * @type {String[]}\r\n */\r\nconst ScriptExtensions = [ 'ngl', 'js' ]\r\n\r\nconst WorkerRegistry = new _WorkerRegistry()\r\n/**\r\n * Global instance of {@link src/color/colormaker-registry.js~ColormakerRegistry}\r\n * @type {src/color/colormaker-registry.js~ColormakerRegistry}\r\n */\r\nconst ColormakerRegistry = new _ColormakerRegistry()\r\nconst DatasourceRegistry = new Registry('datasource')\r\nconst RepresentationRegistry = new Registry('representatation')\r\nconst ParserRegistry = new _ParserRegistry()\r\nconst ShaderRegistry = new Registry('shader')\r\nconst DecompressorRegistry = new Registry('decompressor')\r\nconst ComponentRegistry = new Registry('component')\r\nconst BufferRegistry = new Registry('buffer')\r\nconst PickerRegistry = new Registry('picker')\r\n\r\nexport {\r\n  Browser,\r\n  Mobile,\r\n  SupportsPassiveEventHandler,\r\n  SupportsReadPixelsFloat,\r\n  setSupportsReadPixelsFloat,\r\n  ExtensionFragDepth,\r\n  setExtensionFragDepth,\r\n  Log,\r\n  Debug,\r\n  setDebug,\r\n  WebglErrorMessage,\r\n  ScriptExtensions,\r\n  WorkerRegistry,\r\n  ColormakerRegistry,\r\n  DatasourceRegistry,\r\n  RepresentationRegistry,\r\n  ParserRegistry,\r\n  ShaderRegistry,\r\n  DecompressorRegistry,\r\n  ComponentRegistry,\r\n  BufferRegistry,\r\n  PickerRegistry\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/globals.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1476,
    "kind": "variable",
    "name": "Browser",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~Browser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{Browser}",
    "description": "The browser name: \"Opera\", \"Chrome\", \"Firefox\", \"Mobile Safari\",\n\"Internet Explorer\", \"Safari\" or false.",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "String",
        "false"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1477,
    "kind": "variable",
    "name": "Mobile",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~Mobile",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{Mobile}",
    "description": "Flag indicating a mobile browser",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1478,
    "kind": "variable",
    "name": "SupportsPassiveEventHandler",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~SupportsPassiveEventHandler",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{SupportsPassiveEventHandler}",
    "description": "Flag indicating support for the 'passive' option for event handler",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1479,
    "kind": "variable",
    "name": "SupportsReadPixelsFloat",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~SupportsReadPixelsFloat",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{SupportsReadPixelsFloat}",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 1480,
    "kind": "function",
    "name": "setSupportsReadPixelsFloat",
    "memberof": "src/globals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/globals.js~setSupportsReadPixelsFloat",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{setSupportsReadPixelsFloat}",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 1481,
    "kind": "variable",
    "name": "ExtensionFragDepth",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ExtensionFragDepth",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ExtensionFragDepth}",
    "description": "Flag indicating support for the `EXT_frag_depth` WebGL extension",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1482,
    "kind": "function",
    "name": "setExtensionFragDepth",
    "memberof": "src/globals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/globals.js~setExtensionFragDepth",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{setExtensionFragDepth}",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 1483,
    "kind": "variable",
    "name": "Log",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~Log",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{Log}",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 1484,
    "kind": "variable",
    "name": "Debug",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~Debug",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{Debug}",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 1485,
    "kind": "function",
    "name": "setDebug",
    "memberof": "src/globals.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/globals.js~setDebug",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{setDebug}",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 1486,
    "kind": "variable",
    "name": "WebglErrorMessage",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~WebglErrorMessage",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{WebglErrorMessage}",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 1487,
    "kind": "variable",
    "name": "ScriptExtensions",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ScriptExtensions",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ScriptExtensions}",
    "description": "List of file extensions to be recognized as scripts",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1488,
    "kind": "variable",
    "name": "WorkerRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~WorkerRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{WorkerRegistry}",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 1489,
    "kind": "variable",
    "name": "ColormakerRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ColormakerRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ColormakerRegistry}",
    "description": "Global instance of {@link src/color/colormaker-registry.js~ColormakerRegistry}",
    "lineNumber": 82,
    "type": {
      "nullable": null,
      "types": [
        "src/color/colormaker-registry.js~ColormakerRegistry"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1490,
    "kind": "variable",
    "name": "DatasourceRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~DatasourceRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{DatasourceRegistry}",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 1491,
    "kind": "variable",
    "name": "RepresentationRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~RepresentationRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{RepresentationRegistry}",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 1492,
    "kind": "variable",
    "name": "ParserRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ParserRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ParserRegistry}",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 1493,
    "kind": "variable",
    "name": "ShaderRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ShaderRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ShaderRegistry}",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 1494,
    "kind": "variable",
    "name": "DecompressorRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~DecompressorRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{DecompressorRegistry}",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 1495,
    "kind": "variable",
    "name": "ComponentRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~ComponentRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{ComponentRegistry}",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 1496,
    "kind": "variable",
    "name": "BufferRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~BufferRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{BufferRegistry}",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 1497,
    "kind": "variable",
    "name": "PickerRegistry",
    "memberof": "src/globals.js",
    "static": true,
    "longname": "src/globals.js~PickerRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/globals.js",
    "importStyle": "{PickerRegistry}",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 1498,
    "kind": "file",
    "name": "src/loader/loader-utils.js",
    "content": "/**\r\n * @file Loader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  DatasourceRegistry, ParserRegistry, ScriptExtensions\r\n} from '../globals.js'\r\nimport { getFileInfo } from '../utils.js'\r\nimport ParserLoader from './parser-loader.js'\r\nimport ScriptLoader from './script-loader.js'\r\nimport PluginLoader from './plugin-loader.js'\r\n\r\nfunction getDataInfo (src) {\r\n  var info = getFileInfo(src)\r\n  var datasource = DatasourceRegistry.get(info.protocol)\r\n  if (datasource) {\r\n    info = getFileInfo(datasource.getUrl(info.src))\r\n    if (!info.ext && datasource.getExt) {\r\n      info.ext = datasource.getExt(src)\r\n    }\r\n  }\r\n  return info\r\n}\r\n\r\n/**\r\n * Load a file\r\n *\r\n * @example\r\n * // load from URL\r\n * NGL.autoLoad( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n *\r\n * @example\r\n * // load binary data in CCP4 format via a Blob\r\n * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n * NGL.autoLoad( binaryBlob, { ext: \"ccp4\" } );\r\n *\r\n * @example\r\n * // load string data in PDB format via a Blob\r\n * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n * NGL.autoLoad( stringBlob, { ext: \"pdb\" } );\r\n *\r\n * @example\r\n * // load a File object\r\n * NGL.autoLoad( file );\r\n *\r\n * @param  {String|File|Blob} file - either a URL or an object containing the file data\r\n * @param  {LoaderParameters} params - loading parameters\r\n * @return {Promise} Promise resolves to the loaded data\r\n */\r\nfunction autoLoad (file, params) {\r\n  var p = Object.assign(getDataInfo(file), params)\r\n\r\n  var LoaderClass\r\n  if (ParserRegistry.names.includes(p.ext)) {\r\n    LoaderClass = ParserLoader\r\n  } else if (ScriptExtensions.includes(p.ext)) {\r\n    LoaderClass = ScriptLoader\r\n  } else if (p.ext === 'plugin') {\r\n    LoaderClass = PluginLoader\r\n  }\r\n\r\n  if (LoaderClass) {\r\n    var loader = new LoaderClass(p.src, p)\r\n    return loader.load()\r\n  } else {\r\n    return Promise.reject(new Error(\"autoLoad: ext '\" + p.ext + \"' unknown\"))\r\n  }\r\n}\r\n\r\nexport {\r\n  getDataInfo,\r\n  autoLoad\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/loader/loader-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1499,
    "kind": "function",
    "name": "getDataInfo",
    "memberof": "src/loader/loader-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/loader/loader-utils.js~getDataInfo",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/loader-utils.js",
    "importStyle": "{getDataInfo}",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1500,
    "kind": "function",
    "name": "autoLoad",
    "memberof": "src/loader/loader-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/loader/loader-utils.js~autoLoad",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/loader-utils.js",
    "importStyle": "{autoLoad}",
    "description": "Load a file",
    "examples": [
      "// load from URL\nNGL.autoLoad( \"http://files.rcsb.org/download/5IOS.cif\" );",
      "// load binary data in CCP4 format via a Blob\nvar binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\nNGL.autoLoad( binaryBlob, { ext: \"ccp4\" } );",
      "// load string data in PDB format via a Blob\nvar stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\nNGL.autoLoad( stringBlob, { ext: \"pdb\" } );",
      "// load a File object\nNGL.autoLoad( file );"
    ],
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "File",
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "either a URL or an object containing the file data"
      },
      {
        "nullable": null,
        "types": [
          "LoaderParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "loading parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise resolves to the loaded data"
    }
  },
  {
    "__docId__": 1501,
    "kind": "file",
    "name": "src/loader/loader.js",
    "content": "/**\r\n * @file Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport FileStreamer from '../streamer/file-streamer.js'\r\nimport NetworkStreamer from '../streamer/network-streamer.js'\r\n\r\n/**\r\n * Loader parameter object.\r\n * @typedef {Object} LoaderParameters - loader parameters\r\n * @property {String} ext - file extension, determines file type\r\n * @property {Boolean} compressed - flag data as compressed\r\n * @property {Boolean} binary - flag data as binary\r\n * @property {String} name - set data name\r\n */\r\n\r\n/**\r\n * Loader base class\r\n */\r\nclass Loader {\r\n  /**\r\n   * Construct a loader object\r\n   * @param  {String|File|Blob} src - data source, string is interpreted as an URL\r\n   * @param  {LoaderParameters} params - parameters object\r\n   */\r\n  constructor (src, params) {\r\n    const p = Object.assign({}, params)\r\n\r\n    this.compressed = defaults(p.compressed, false)\r\n    this.binary = defaults(p.binary, ParserRegistry.isBinary(p.ext))\r\n    this.name = defaults(p.name, '')\r\n    this.ext = defaults(p.ext, '')\r\n    this.dir = defaults(p.dir, '')\r\n    this.path = defaults(p.path, '')\r\n    this.protocol = defaults(p.protocol, '')\r\n\r\n    this.params = params\r\n\r\n    //\r\n\r\n    const streamerParams = {\r\n      compressed: this.compressed,\r\n      binary: this.binary,\r\n      json: ParserRegistry.isJson(this.ext),\r\n      xml: ParserRegistry.isXml(this.ext)\r\n    }\r\n\r\n    if ((typeof File !== 'undefined' && src instanceof window.File) ||\r\n        (typeof Blob !== 'undefined' && src instanceof window.Blob)\r\n    ) {\r\n      this.streamer = new FileStreamer(src, streamerParams)\r\n    } else {\r\n      this.streamer = new NetworkStreamer(src, streamerParams)\r\n    }\r\n\r\n    if (typeof p.onProgress === 'function') {\r\n      this.streamer.onprogress = p.onprogress\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load data\r\n   * @abstract\r\n   * @return {Promise} resolves to the loaded data {@link Object}\r\n   */\r\n  load () {\r\n    return Promise.reject(new Error('not implemented'))\r\n  }\r\n}\r\n\r\nexport default Loader\r\n",
    "static": true,
    "longname": "D:/nglLib/src/loader/loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1502,
    "kind": "typedef",
    "name": "LoaderParameters",
    "memberof": "src/loader/loader.js",
    "static": true,
    "longname": "src/loader/loader.js~LoaderParameters",
    "access": "public",
    "description": "Loader parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": "file extension, determines file type"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "compressed",
        "description": "flag data as compressed"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "binary",
        "description": "flag data as binary"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "set data name"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "LoaderParameters"
    }
  },
  {
    "__docId__": 1503,
    "kind": "class",
    "name": "Loader",
    "memberof": "src/loader/loader.js",
    "static": true,
    "longname": "src/loader/loader.js~Loader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/loader.js",
    "importStyle": "Loader",
    "description": "Loader base class",
    "lineNumber": 24,
    "interface": false
  },
  {
    "__docId__": 1504,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/loader/loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loader/loader.js~Loader#constructor",
    "access": "public",
    "description": "Construct a loader object",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "File",
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "src",
        "description": "data source, string is interpreted as an URL"
      },
      {
        "nullable": null,
        "types": [
          "LoaderParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 1505,
    "kind": "member",
    "name": "compressed",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#compressed",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 1506,
    "kind": "member",
    "name": "binary",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#binary",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1507,
    "kind": "member",
    "name": "name",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#name",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1508,
    "kind": "member",
    "name": "ext",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#ext",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 1509,
    "kind": "member",
    "name": "dir",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#dir",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 1510,
    "kind": "member",
    "name": "path",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#path",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 1511,
    "kind": "member",
    "name": "protocol",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#protocol",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 1512,
    "kind": "member",
    "name": "params",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#params",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 1513,
    "kind": "member",
    "name": "streamer",
    "memberof": "src/loader/loader.js~Loader",
    "static": false,
    "longname": "src/loader/loader.js~Loader#streamer",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 1515,
    "kind": "method",
    "name": "load",
    "memberof": "src/loader/loader.js~Loader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loader/loader.js~Loader#load",
    "access": "public",
    "description": "Load data",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves to the loaded data {@link Object}"
    },
    "abstract": true
  },
  {
    "__docId__": 1516,
    "kind": "file",
    "name": "src/loader/parser-loader.js",
    "content": "/**\r\n * @file Parser Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport Loader from './loader.js'\r\n\r\n/**\r\n * Parser loader class\r\n * @extends Loader\r\n */\r\nclass ParserLoader extends Loader {\r\n  /**\r\n   * Load parsed object\r\n   * @return {Promise} resolves to the loaded & parsed {@link Structure},\r\n   *                   {@link Volume}, {@link Surface} or data object\r\n   */\r\n  load () {\r\n    var ParserClass = ParserRegistry.get(this.ext)\r\n    var parser = new ParserClass(this.streamer, this.params)\r\n\r\n    return parser.parse()\r\n  }\r\n}\r\n\r\nexport default ParserLoader\r\n",
    "static": true,
    "longname": "D:/nglLib/src/loader/parser-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1517,
    "kind": "class",
    "name": "ParserLoader",
    "memberof": "src/loader/parser-loader.js",
    "static": true,
    "longname": "src/loader/parser-loader.js~ParserLoader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/parser-loader.js",
    "importStyle": "ParserLoader",
    "description": "Parser loader class",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 1518,
    "kind": "method",
    "name": "load",
    "memberof": "src/loader/parser-loader.js~ParserLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loader/parser-loader.js~ParserLoader#load",
    "access": "public",
    "description": "Load parsed object",
    "lineNumber": 20,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves to the loaded & parsed {@link Structure},\n                  {@link Volume}, {@link Surface} or data object"
    }
  },
  {
    "__docId__": 1519,
    "kind": "file",
    "name": "src/loader/plugin-loader.js",
    "content": "/**\r\n * @file Plugin Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Loader from './loader.js'\r\nimport { autoLoad } from './loader-utils.js'\r\nimport Script from '../script.js'\r\n\r\n/**\r\n * Plugin loader class\r\n * @extends Loader\r\n */\r\nclass PluginLoader extends Loader {\r\n  /**\r\n   * Load plugin\r\n   * @return {Promise} resolves to the loaded plugin {@link Script}\r\n   */\r\n  load () {\r\n    var basePath\r\n    if (this.protocol) {\r\n      basePath = this.protocol + '://' + this.dir\r\n    } else {\r\n      basePath = this.dir\r\n    }\r\n\r\n    return this.streamer.read().then(() => {\r\n      var manifest = JSON.parse(this.streamer.asText())\r\n      var promiseList = []\r\n\r\n      manifest.files.map(function (name) {\r\n        promiseList.push(\r\n          autoLoad(basePath + name, {\r\n            ext: 'text', useWorker: false\r\n          })\r\n        )\r\n      })\r\n\r\n      return Promise.all(promiseList).then(dataList => {\r\n        var text = dataList.reduce(function (text, value) {\r\n          return text + '\\n\\n' + value.data\r\n        }, '')\r\n        text += manifest.source || ''\r\n\r\n        return new Script(text, this.name, this.path)\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport default PluginLoader\r\n",
    "static": true,
    "longname": "D:/nglLib/src/loader/plugin-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1520,
    "kind": "class",
    "name": "PluginLoader",
    "memberof": "src/loader/plugin-loader.js",
    "static": true,
    "longname": "src/loader/plugin-loader.js~PluginLoader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/plugin-loader.js",
    "importStyle": "PluginLoader",
    "description": "Plugin loader class",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 1521,
    "kind": "method",
    "name": "load",
    "memberof": "src/loader/plugin-loader.js~PluginLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loader/plugin-loader.js~PluginLoader#load",
    "access": "public",
    "description": "Load plugin",
    "lineNumber": 20,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves to the loaded plugin {@link Script}"
    }
  },
  {
    "__docId__": 1522,
    "kind": "file",
    "name": "src/loader/script-loader.js",
    "content": "/**\r\n * @file Script Loader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Loader from './loader.js'\r\nimport Script from '../script.js'\r\n\r\n/**\r\n * Script loader class\r\n * @extends Loader\r\n */\r\nclass ScriptLoader extends Loader {\r\n  /**\r\n   * Load script\r\n   * @return {Promise} resolves to the loaded {@link Script}\r\n   */\r\n  load () {\r\n    return this.streamer.read().then(() => {\r\n      return new Script(\r\n        this.streamer.asText(), this.name, this.path\r\n      )\r\n    })\r\n  }\r\n}\r\n\r\nexport default ScriptLoader\r\n",
    "static": true,
    "longname": "D:/nglLib/src/loader/script-loader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1523,
    "kind": "class",
    "name": "ScriptLoader",
    "memberof": "src/loader/script-loader.js",
    "static": true,
    "longname": "src/loader/script-loader.js~ScriptLoader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/loader/script-loader.js",
    "importStyle": "ScriptLoader",
    "description": "Script loader class",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "*"
    ]
  },
  {
    "__docId__": 1524,
    "kind": "method",
    "name": "load",
    "memberof": "src/loader/script-loader.js~ScriptLoader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/loader/script-loader.js~ScriptLoader#load",
    "access": "public",
    "description": "Load script",
    "lineNumber": 19,
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves to the loaded {@link Script}"
    }
  },
  {
    "__docId__": 1525,
    "kind": "file",
    "name": "src/math/array-utils.js",
    "content": "/**\r\n * @file Array Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { TwoPI } from './math-constants.js'\r\n\r\nfunction circularMean (array, max, stride, offset, indices) {\r\n  // http://en.wikipedia.org/wiki/Center_of_mass#Systems_with_periodic_boundary_conditions\r\n\r\n  // Bai, Linge; Breen, David (2008). Calculating Center of Mass in an Unbounded 2D Environment. Journal of Graphics, GPU, and Game Tools 13 (4): 53–60.\r\n\r\n  // http://stackoverflow.com/questions/18166507/using-fft-to-find-the-center-of-mass-under-periodic-boundary-conditions\r\n\r\n  stride = stride || 1\r\n  offset = offset || 0\r\n\r\n  var n = indices ? indices.length : array.length / stride\r\n  var angle, i, c\r\n\r\n  var cosMean = 0\r\n  var sinMean = 0\r\n\r\n  if (indices) {\r\n    for (i = 0; i < n; ++i) {\r\n      c = (array[ indices[ i ] * stride + offset ] + max) % max\r\n\r\n      angle = (c / max) * TwoPI - Math.PI\r\n\r\n      cosMean += Math.cos(angle)\r\n      sinMean += Math.sin(angle)\r\n    }\r\n  } else {\r\n    for (i = offset; i < n; i += stride) {\r\n      c = (array[ i ] + max) % max\r\n\r\n      angle = (c / max) * TwoPI - Math.PI\r\n\r\n      cosMean += Math.cos(angle)\r\n      sinMean += Math.sin(angle)\r\n    }\r\n  }\r\n\r\n  cosMean /= n\r\n  sinMean /= n\r\n\r\n  var meanAngle = Math.atan2(sinMean, cosMean)\r\n\r\n  var mean = (meanAngle + Math.PI) / TwoPI * max\r\n\r\n  return mean\r\n}\r\n\r\nfunction calculateCenterArray (array1, array2, center, offset) {\r\n  var n = array1.length\r\n  center = center || new Float32Array(n)\r\n  offset = offset || 0\r\n\r\n  for (var i = 0; i < n; i += 3) {\r\n    center[ offset + i + 0 ] = (array1[ i + 0 ] + array2[ i + 0 ]) / 2.0\r\n    center[ offset + i + 1 ] = (array1[ i + 1 ] + array2[ i + 1 ]) / 2.0\r\n    center[ offset + i + 2 ] = (array1[ i + 2 ] + array2[ i + 2 ]) / 2.0\r\n  }\r\n\r\n  return center\r\n}\r\n\r\nfunction calculateDirectionArray (array1, array2) {\r\n  var n = array1.length\r\n  var direction = new Float32Array(n)\r\n\r\n  for (var i = 0; i < n; i += 3) {\r\n    direction[ i + 0 ] = array2[ i + 0 ] - array1[ i + 0 ]\r\n    direction[ i + 1 ] = array2[ i + 1 ] - array1[ i + 1 ]\r\n    direction[ i + 2 ] = array2[ i + 2 ] - array1[ i + 2 ]\r\n  }\r\n\r\n  return direction\r\n}\r\n\r\nfunction uniformArray (n, a, optionalTarget) {\r\n  var array = optionalTarget || new Float32Array(n)\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    array[ i ] = a\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction uniformArray3 (n, a, b, c, optionalTarget) {\r\n  var array = optionalTarget || new Float32Array(n * 3)\r\n\r\n  var j\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    j = i * 3\r\n\r\n    array[ j + 0 ] = a\r\n    array[ j + 1 ] = b\r\n    array[ j + 2 ] = c\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction centerArray3 (array, center) {\r\n  const n = array.length\r\n  center = center || new Vector3()\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    center.x += array[ i ]\r\n    center.y += array[ i + 1 ]\r\n    center.z += array[ i + 2 ]\r\n  }\r\n\r\n  center.divideScalar(n / 3)\r\n\r\n  return center\r\n}\r\n\r\nfunction serialArray (n) {\r\n  var array = new Float32Array(n)\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    array[ i ] = i\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction serialBlockArray (n, b, offset = 0, optionalTarget) {\r\n  const array = optionalTarget || new Float32Array(n * b)\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const k = offset + i * b\r\n\r\n    for (let j = 0; j < b; ++j) {\r\n      array[ k + j ] = i\r\n    }\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction randomColorArray (n) {\r\n  var array = new Float32Array(n * 3)\r\n\r\n  var j\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    j = i * 3\r\n\r\n    array[ j + 0 ] = Math.random()\r\n    array[ j + 1 ] = Math.random()\r\n    array[ j + 2 ] = Math.random()\r\n  }\r\n\r\n  return array\r\n}\r\n\r\nfunction replicateArray3Entries (array, m) {\r\n  var n = array.length / 3\r\n  var repArr = new Float32Array(n * m * 3)\r\n\r\n  for (var i = 0; i < n; ++i) {\r\n    var v = i * 3\r\n    var k = i * m * 3\r\n\r\n    var a = array[ v + 0 ]\r\n    var b = array[ v + 1 ]\r\n    var c = array[ v + 2 ]\r\n\r\n    for (var j = 0; j < m; ++j) {\r\n      var l = k + j * 3\r\n\r\n      repArr[ l + 0 ] = a\r\n      repArr[ l + 1 ] = b\r\n      repArr[ l + 2 ] = c\r\n    }\r\n  }\r\n\r\n  return repArr\r\n}\r\n\r\nfunction calculateMeanArray (array1, array2) {\r\n  var n = array1.length\r\n  var mean = new Float32Array(n)\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    mean[ i ] = (array1[ i ] + array2[ i ]) / 2.0\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nfunction calculateMinArray (array1, array2) {\r\n  var n = array1.length\r\n  var min = new Float32Array(n)\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    min[ i ] = Math.min(array1[ i ], array2[ i ])\r\n  }\r\n\r\n  return min\r\n}\r\n\r\nfunction copyArray (src, dst, srcOffset, dstOffset, length) {\r\n  for (var i = 0; i < length; ++i) {\r\n    dst[ dstOffset + i ] = src[ srcOffset + i ]\r\n  }\r\n}\r\n\r\nfunction copyWithin (array, srcOffset, dstOffset, length) {\r\n  copyArray(array, array, srcOffset, dstOffset, length)\r\n}\r\n\r\nvar swap = new Float32Array(4)\r\nvar temp = new Float32Array(4)\r\n/**\r\n * quicksortIP\r\n * @function\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * In-place quicksort for typed arrays (e.g. for Float32Array)\r\n * provides fast sorting\r\n * useful e.g. for a custom shader and/or BufferGeometry\r\n * Complexity: http://bigocheatsheet.com/ see Quicksort\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * eleSize: 3 //because of (x, y, z)\r\n * orderElement: 0 //order according to x\r\n *\r\n * @param {TypedArray} arr - array to be sorted\r\n * @param {Integer} eleSize - element size\r\n * @param {Integer} orderElement - index of element used for sorting, < eleSize\r\n * @param {Integer} [begin] - start index for range to be sorted\r\n * @param {Integer} [end] - end index for range to be sorted\r\n * @return {TypedArray} the input array\r\n */\r\nfunction quicksortIP (arr, eleSize, orderElement, begin, end) {\r\n  begin = begin || 0\r\n  end = (end || (arr.length / eleSize)) - 1\r\n\r\n  var stack = []\r\n  var sp = -1\r\n  var left = begin\r\n  var right = end\r\n  var tmp = 0.0\r\n  var x = 0\r\n  var y = 0\r\n\r\n  var swapF = function (a, b) {\r\n    a *= eleSize; b *= eleSize\r\n    for (y = 0; y < eleSize; y++) {\r\n      tmp = arr[ a + y ]\r\n      arr[ a + y ] = arr[ b + y ]\r\n      arr[ b + y ] = tmp\r\n    }\r\n  }\r\n\r\n  var i, j\r\n\r\n  while (true) {\r\n    if (right - left <= 25) {\r\n      for (j = left + 1; j <= right; j++) {\r\n        for (x = 0; x < eleSize; x++) {\r\n          swap[ x ] = arr[ j * eleSize + x ]\r\n        }\r\n\r\n        i = j - 1\r\n\r\n        while (i >= left && arr[ i * eleSize + orderElement ] > swap[ orderElement ]) {\r\n          for (x = 0; x < eleSize; x++) {\r\n            arr[ (i + 1) * eleSize + x ] = arr[ i * eleSize + x ]\r\n          }\r\n          i--\r\n        }\r\n\r\n        for (x = 0; x < eleSize; x++) {\r\n          arr[ (i + 1) * eleSize + x ] = swap[ x ]\r\n        }\r\n      }\r\n\r\n      if (sp === -1) break\r\n\r\n      right = stack[ sp-- ] // ?\r\n      left = stack[ sp-- ]\r\n    } else {\r\n      var median = (left + right) >> 1\r\n\r\n      i = left + 1\r\n      j = right\r\n\r\n      swapF(median, i)\r\n\r\n      if (arr[ left * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\r\n        swapF(left, right)\r\n      }\r\n\r\n      if (arr[ i * eleSize + orderElement ] > arr[ right * eleSize + orderElement ]) {\r\n        swapF(i, right)\r\n      }\r\n\r\n      if (arr[ left * eleSize + orderElement ] > arr[ i * eleSize + orderElement ]) {\r\n        swapF(left, i)\r\n      }\r\n\r\n      for (x = 0; x < eleSize; x++) {\r\n        temp[ x ] = arr[ i * eleSize + x ]\r\n      }\r\n\r\n      while (true) {\r\n        do i++; while (arr[ i * eleSize + orderElement ] < temp[ orderElement ])\r\n        do j--; while (arr[ j * eleSize + orderElement ] > temp[ orderElement ])\r\n        if (j < i) break\r\n        swapF(i, j)\r\n      }\r\n\r\n      for (x = 0; x < eleSize; x++) {\r\n        arr[ (left + 1) * eleSize + x ] = arr[ j * eleSize + x ]\r\n        arr[ j * eleSize + x ] = temp[ x ]\r\n      }\r\n\r\n      if (right - i + 1 >= j - left) {\r\n        stack[ ++sp ] = i\r\n        stack[ ++sp ] = right\r\n        right = j - 1\r\n      } else {\r\n        stack[ ++sp ] = left\r\n        stack[ ++sp ] = j - 1\r\n        left = i\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction quicksortCmp (arr, cmp, begin, end) {\r\n  cmp = cmp || function cmp (a, b) {\r\n    if (a > b) return 1\r\n    if (a < b) return -1\r\n    return 0\r\n  }\r\n  begin = begin || 0\r\n  end = (end || arr.length) - 1\r\n\r\n  var stack = []\r\n  var sp = -1\r\n  var left = begin\r\n  var right = end\r\n  var tmp = 0.0\r\n  var tmp2 = 0.0\r\n\r\n  function swap (a, b) {\r\n    tmp2 = arr[ a ]\r\n    arr[ a ] = arr[ b ]\r\n    arr[ b ] = tmp2\r\n  }\r\n\r\n  var i, j\r\n\r\n  while (true) {\r\n    if (right - left <= 25) {\r\n      for (j = left + 1; j <= right; ++j) {\r\n        tmp = arr[ j ]\r\n        i = j - 1\r\n\r\n        while (i >= left && cmp(arr[ i ], tmp) > 0) {\r\n          arr[ i + 1 ] = arr[ i ]\r\n          --i\r\n        }\r\n\r\n        arr[ i + 1 ] = tmp\r\n      }\r\n\r\n      if (sp === -1) break\r\n\r\n      right = stack[ sp-- ] // ?\r\n      left = stack[ sp-- ]\r\n    } else {\r\n      var median = (left + right) >> 1\r\n\r\n      i = left + 1\r\n      j = right\r\n\r\n      swap(median, i)\r\n\r\n      if (cmp(arr[ left ], arr[ right ]) > 0) {\r\n        swap(left, right)\r\n      }\r\n\r\n      if (cmp(arr[ i ], arr[ right ]) > 0) {\r\n        swap(i, right)\r\n      }\r\n\r\n      if (cmp(arr[ left ], arr[ i ]) > 0) {\r\n        swap(left, i)\r\n      }\r\n\r\n      tmp = arr[ i ]\r\n\r\n      while (true) {\r\n        do i++; while (cmp(arr[ i ], tmp) < 0)\r\n        do j--; while (cmp(arr[ j ], tmp) > 0)\r\n        if (j < i) break\r\n        swap(i, j)\r\n      }\r\n\r\n      arr[ left + 1 ] = arr[ j ]\r\n      arr[ j ] = tmp\r\n\r\n      if (right - i + 1 >= j - left) {\r\n        stack[ ++sp ] = i\r\n        stack[ ++sp ] = right\r\n        right = j - 1\r\n      } else {\r\n        stack[ ++sp ] = left\r\n        stack[ ++sp ] = j - 1\r\n        left = i\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr\r\n}\r\n\r\nfunction quickselectCmp (arr, n, cmp, left, right) {\r\n  cmp = cmp || function cmp (a, b) {\r\n    if (a > b) return 1\r\n    if (a < b) return -1\r\n    return 0\r\n  }\r\n  left = left || 0\r\n  right = (right || arr.length) - 1\r\n\r\n  var tmp, i, pivotIndex, pivotValue, storeIndex\r\n\r\n  function swap (a, b) {\r\n    tmp = arr[ a ]\r\n    arr[ a ] = arr[ b ]\r\n    arr[ b ] = tmp\r\n  }\r\n\r\n  while (true) {\r\n    if (left === right) {\r\n      return arr[ left ]\r\n    }\r\n    pivotIndex = (left + right) >> 1\r\n    pivotValue = arr[ pivotIndex ]\r\n    swap(pivotIndex, right)\r\n    storeIndex = left\r\n    for (i = left; i < right; ++i) {\r\n      if (cmp(arr[ i ], pivotValue) < 0) {\r\n        swap(storeIndex, i)\r\n        ++storeIndex\r\n      }\r\n    }\r\n    swap(right, storeIndex)\r\n    pivotIndex = storeIndex\r\n    if (n === pivotIndex) {\r\n      return arr[ n ]\r\n    } else if (n < pivotIndex) {\r\n      right = pivotIndex - 1\r\n    } else {\r\n      left = pivotIndex + 1\r\n    }\r\n  }\r\n}\r\n\r\nfunction arrayMax (array) {\r\n  let max = -Infinity\r\n  for (let i = 0, il = array.length; i < il; ++i) {\r\n    if (array[ i ] > max) max = array[ i ]\r\n  }\r\n  return max\r\n}\r\n\r\nfunction arrayMin (array) {\r\n  let min = Infinity\r\n  for (let i = 0, il = array.length; i < il; ++i) {\r\n    if (array[ i ] < min) min = array[ i ]\r\n  }\r\n  return min\r\n}\r\n\r\nfunction arraySum (array, stride, offset) {\r\n  stride = stride || 1\r\n  offset = offset || 0\r\n\r\n  const n = array.length\r\n  let sum = 0\r\n  for (let i = offset; i < n; i += stride) {\r\n    sum += array[ i ]\r\n  }\r\n  return sum\r\n}\r\n\r\nfunction arrayMean (array, stride, offset) {\r\n  return arraySum(array, stride, offset) / (array.length / (stride || 1))\r\n}\r\n\r\nfunction arrayRms (array) {\r\n  const n = array.length\r\n  let sumSq = 0\r\n  for (let i = 0; i < n; ++i) {\r\n    const di = array[ i ]\r\n    sumSq += di * di\r\n  }\r\n  return Math.sqrt(sumSq / n)\r\n}\r\n\r\nfunction arraySorted (array) {\r\n  for (var i = 1, il = array.length; i < il; ++i) {\r\n    if (array[ i - 1 ] > array[ i ]) return false\r\n  }\r\n  return true\r\n}\r\n\r\nfunction arraySortedCmp (array, cmp) {\r\n  for (var i = 1, il = array.length; i < il; ++i) {\r\n    if (cmp(array[ i - 1 ], array[ i ]) > 0) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport {\r\n  circularMean,\r\n  calculateCenterArray,\r\n  calculateDirectionArray,\r\n  uniformArray,\r\n  uniformArray3,\r\n  centerArray3,\r\n  serialArray,\r\n  serialBlockArray,\r\n  randomColorArray,\r\n  replicateArray3Entries,\r\n  calculateMeanArray,\r\n  calculateMinArray,\r\n  copyArray,\r\n  copyWithin,\r\n  quicksortIP,\r\n  quicksortCmp,\r\n  quickselectCmp,\r\n  arrayMax,\r\n  arrayMin,\r\n  arraySum,\r\n  arrayMean,\r\n  arrayRms,\r\n  arraySorted,\r\n  arraySortedCmp\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/array-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1526,
    "kind": "variable",
    "name": "swap",
    "memberof": "src/math/array-utils.js",
    "static": true,
    "longname": "src/math/array-utils.js~swap",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1527,
    "kind": "variable",
    "name": "temp",
    "memberof": "src/math/array-utils.js",
    "static": true,
    "longname": "src/math/array-utils.js~temp",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1528,
    "kind": "function",
    "name": "circularMean",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~circularMean",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{circularMean}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1529,
    "kind": "function",
    "name": "calculateCenterArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~calculateCenterArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{calculateCenterArray}",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 1530,
    "kind": "function",
    "name": "calculateDirectionArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~calculateDirectionArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{calculateDirectionArray}",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 1531,
    "kind": "function",
    "name": "uniformArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~uniformArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{uniformArray}",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 1532,
    "kind": "function",
    "name": "uniformArray3",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~uniformArray3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{uniformArray3}",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 1533,
    "kind": "function",
    "name": "centerArray3",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~centerArray3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{centerArray3}",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 1534,
    "kind": "function",
    "name": "serialArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~serialArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{serialArray}",
    "description": null,
    "lineNumber": 125,
    "undocument": true
  },
  {
    "__docId__": 1535,
    "kind": "function",
    "name": "serialBlockArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~serialBlockArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{serialBlockArray}",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 1536,
    "kind": "function",
    "name": "randomColorArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~randomColorArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{randomColorArray}",
    "description": null,
    "lineNumber": 149,
    "undocument": true
  },
  {
    "__docId__": 1537,
    "kind": "function",
    "name": "replicateArray3Entries",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~replicateArray3Entries",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{replicateArray3Entries}",
    "description": null,
    "lineNumber": 165,
    "undocument": true
  },
  {
    "__docId__": 1538,
    "kind": "function",
    "name": "calculateMeanArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~calculateMeanArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{calculateMeanArray}",
    "description": null,
    "lineNumber": 189,
    "undocument": true
  },
  {
    "__docId__": 1539,
    "kind": "function",
    "name": "calculateMinArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~calculateMinArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{calculateMinArray}",
    "description": null,
    "lineNumber": 200,
    "undocument": true
  },
  {
    "__docId__": 1540,
    "kind": "function",
    "name": "copyArray",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~copyArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{copyArray}",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 1541,
    "kind": "function",
    "name": "copyWithin",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~copyWithin",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{copyWithin}",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 1542,
    "kind": "function",
    "name": "quicksortIP",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~quicksortIP",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{quicksortIP}",
    "description": "quicksortIP",
    "examples": [
      "points: [x, y, z, x, y, z, x, y, z, ...]\neleSize: 3 //because of (x, y, z)\norderElement: 0 //order according to x"
    ],
    "lineNumber": 247,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "Roman Bolzern <roman.bolzern@fhnw.ch>, 2013"
      },
      {
        "tagName": "@author",
        "tagValue": "I4DS http://www.fhnw.ch/i4ds, 2013"
      },
      {
        "tagName": "@license",
        "tagValue": "MIT License <http://www.opensource.org/licenses/mit-license.php>"
      },
      {
        "tagName": "@description",
        "tagValue": "In-place quicksort for typed arrays (e.g. for Float32Array)\nprovides fast sorting\nuseful e.g. for a custom shader and/or BufferGeometry\nComplexity: http://bigocheatsheet.com/ see Quicksort"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "array to be sorted"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "eleSize",
        "description": "element size"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "orderElement",
        "description": "index of element used for sorting, < eleSize"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "begin",
        "description": "start index for range to be sorted"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "end",
        "description": "end index for range to be sorted"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TypedArray"
      ],
      "spread": false,
      "description": "the input array"
    }
  },
  {
    "__docId__": 1543,
    "kind": "function",
    "name": "quicksortCmp",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~quicksortCmp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{quicksortCmp}",
    "description": null,
    "lineNumber": 346,
    "undocument": true
  },
  {
    "__docId__": 1544,
    "kind": "function",
    "name": "quickselectCmp",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~quickselectCmp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{quickselectCmp}",
    "description": null,
    "lineNumber": 435,
    "undocument": true
  },
  {
    "__docId__": 1545,
    "kind": "function",
    "name": "arrayMax",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arrayMax",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arrayMax}",
    "description": null,
    "lineNumber": 478,
    "undocument": true
  },
  {
    "__docId__": 1546,
    "kind": "function",
    "name": "arrayMin",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arrayMin",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arrayMin}",
    "description": null,
    "lineNumber": 486,
    "undocument": true
  },
  {
    "__docId__": 1547,
    "kind": "function",
    "name": "arraySum",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arraySum",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arraySum}",
    "description": null,
    "lineNumber": 494,
    "undocument": true
  },
  {
    "__docId__": 1548,
    "kind": "function",
    "name": "arrayMean",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arrayMean",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arrayMean}",
    "description": null,
    "lineNumber": 506,
    "undocument": true
  },
  {
    "__docId__": 1549,
    "kind": "function",
    "name": "arrayRms",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arrayRms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arrayRms}",
    "description": null,
    "lineNumber": 510,
    "undocument": true
  },
  {
    "__docId__": 1550,
    "kind": "function",
    "name": "arraySorted",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arraySorted",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arraySorted}",
    "description": null,
    "lineNumber": 520,
    "undocument": true
  },
  {
    "__docId__": 1551,
    "kind": "function",
    "name": "arraySortedCmp",
    "memberof": "src/math/array-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/array-utils.js~arraySortedCmp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/array-utils.js",
    "importStyle": "{arraySortedCmp}",
    "description": null,
    "lineNumber": 527,
    "undocument": true
  },
  {
    "__docId__": 1552,
    "kind": "file",
    "name": "src/math/math-constants.js",
    "content": "/**\r\n * @file Math Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nvar EPS = 0.0000001\r\nvar TwoPI = 2 * Math.PI\r\n\r\nvar DEG2RAD = Math.PI / 180\r\nvar RAD2DEG = 180 / Math.PI\r\n\r\nexport {\r\n  EPS,\r\n  TwoPI,\r\n  DEG2RAD,\r\n  RAD2DEG\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/math-constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1553,
    "kind": "variable",
    "name": "EPS",
    "memberof": "src/math/math-constants.js",
    "static": true,
    "longname": "src/math/math-constants.js~EPS",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/math/math-constants.js",
    "importStyle": "{EPS}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Math Constants"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 1554,
    "kind": "variable",
    "name": "TwoPI",
    "memberof": "src/math/math-constants.js",
    "static": true,
    "longname": "src/math/math-constants.js~TwoPI",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-constants.js",
    "importStyle": "{TwoPI}",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 1555,
    "kind": "variable",
    "name": "DEG2RAD",
    "memberof": "src/math/math-constants.js",
    "static": true,
    "longname": "src/math/math-constants.js~DEG2RAD",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-constants.js",
    "importStyle": "{DEG2RAD}",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1556,
    "kind": "variable",
    "name": "RAD2DEG",
    "memberof": "src/math/math-constants.js",
    "static": true,
    "longname": "src/math/math-constants.js~RAD2DEG",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-constants.js",
    "importStyle": "{RAD2DEG}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1557,
    "kind": "file",
    "name": "src/math/math-utils.js",
    "content": "/**\r\n * @file Math Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction degToRad (deg) {\r\n  return deg * 0.01745  // deg * Math.PI / 180\r\n}\r\n\r\nfunction radToDeg (rad) {\r\n  return rad * 57.29578  // rad * 180 / Math.PI\r\n}\r\n\r\n// http://www.broofa.com/Tools/Math.uuid.htm\r\nconst chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('')\r\nconst uuid = new Array(36)\r\n\r\nfunction generateUUID () {\r\n  let rnd = 0\r\n  var r\r\n\r\n  for (let i = 0; i < 36; i++) {\r\n    if (i === 8 || i === 13 || i === 18 || i === 23) {\r\n      uuid[ i ] = '-'\r\n    } else if (i === 14) {\r\n      uuid[ i ] = '4'\r\n    } else {\r\n      if (rnd <= 0x02) rnd = 0x2000000 + (Math.random() * 0x1000000) | 0\r\n      r = rnd & 0xf\r\n      rnd = rnd >> 4\r\n      uuid[ i ] = chars[ (i === 19) ? (r & 0x3) | 0x8 : r ]\r\n    }\r\n  }\r\n\r\n  return uuid.join('')\r\n}\r\n\r\nfunction countSetBits (i) {\r\n  i = i - ((i >> 1) & 0x55555555)\r\n  i = (i & 0x33333333) + ((i >> 2) & 0x33333333)\r\n  return (((i + (i >> 4)) & 0x0F0F0F0F) * 0x01010101) >> 24\r\n}\r\n\r\nfunction normalize (value, min, max) {\r\n  return (value - min) / (max - min)\r\n}\r\n\r\nfunction clamp (value, min, max) {\r\n  return Math.max(min, Math.min(max, value))\r\n}\r\n\r\nfunction pclamp (value) {\r\n  return clamp(value, 0, 100)\r\n}\r\n\r\nfunction saturate (value) {\r\n  return clamp(value, 0, 1)\r\n}\r\n\r\nfunction lerp (start, stop, alpha) {\r\n  return start + (stop - start) * alpha\r\n}\r\n\r\nfunction spline (p0, p1, p2, p3, t, tension) {\r\n  var v0 = (p2 - p0) * tension\r\n  var v1 = (p3 - p1) * tension\r\n  var t2 = t * t\r\n  var t3 = t * t2\r\n  return (2 * p1 - 2 * p2 + v0 + v1) * t3 +\r\n         (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 +\r\n         v0 * t + p1\r\n}\r\n\r\nfunction smoothstep (min, max, x) {\r\n  x = saturate(normalize(x, min, max))\r\n  return x * x * (3 - 2 * x)\r\n}\r\n\r\nfunction smootherstep (min, max, x) {\r\n  x = saturate(normalize(x, min, max))\r\n  return x * x * x * (x * (x * 6 - 15) + 10)\r\n}\r\n\r\nfunction smootheststep (min, max, x) {\r\n  x = saturate(normalize(x, min, max))\r\n  return (\r\n    -20 * Math.pow(x, 7) +\r\n     70 * Math.pow(x, 6) -\r\n     84 * Math.pow(x, 5) +\r\n     35 * Math.pow(x, 4)\r\n  )\r\n}\r\n\r\nfunction almostIdentity (value, start, stop) {\r\n  if (value > start) return value\r\n  const a = 2 * stop - start\r\n  const b = 2 * start - 3 * stop\r\n  const t = value / start\r\n  return (a * t + b) * t * t + stop\r\n}\r\n\r\nexport {\r\n  degToRad,\r\n  radToDeg,\r\n  generateUUID,\r\n  countSetBits,\r\n  normalize,\r\n  clamp,\r\n  pclamp,\r\n  saturate,\r\n  lerp,\r\n  spline,\r\n  smoothstep,\r\n  smootherstep,\r\n  smootheststep,\r\n  almostIdentity\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/math-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1558,
    "kind": "variable",
    "name": "chars",
    "memberof": "src/math/math-utils.js",
    "static": true,
    "longname": "src/math/math-utils.js~chars",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1559,
    "kind": "variable",
    "name": "uuid",
    "memberof": "src/math/math-utils.js",
    "static": true,
    "longname": "src/math/math-utils.js~uuid",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1560,
    "kind": "function",
    "name": "degToRad",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~degToRad",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{degToRad}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Math Utils"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 1561,
    "kind": "function",
    "name": "radToDeg",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~radToDeg",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{radToDeg}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1562,
    "kind": "function",
    "name": "generateUUID",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~generateUUID",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{generateUUID}",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1563,
    "kind": "function",
    "name": "countSetBits",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~countSetBits",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{countSetBits}",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 1564,
    "kind": "function",
    "name": "normalize",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~normalize",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{normalize}",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 1565,
    "kind": "function",
    "name": "clamp",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~clamp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{clamp}",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 1566,
    "kind": "function",
    "name": "pclamp",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~pclamp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{pclamp}",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 1567,
    "kind": "function",
    "name": "saturate",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~saturate",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{saturate}",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 1568,
    "kind": "function",
    "name": "lerp",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~lerp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{lerp}",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 1569,
    "kind": "function",
    "name": "spline",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~spline",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{spline}",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 1570,
    "kind": "function",
    "name": "smoothstep",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~smoothstep",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{smoothstep}",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 1571,
    "kind": "function",
    "name": "smootherstep",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~smootherstep",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{smootherstep}",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 1572,
    "kind": "function",
    "name": "smootheststep",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~smootheststep",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{smootheststep}",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 1573,
    "kind": "function",
    "name": "almostIdentity",
    "memberof": "src/math/math-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/math-utils.js~almostIdentity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/math-utils.js",
    "importStyle": "{almostIdentity}",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 1574,
    "kind": "file",
    "name": "src/math/matrix-utils.js",
    "content": "/**\r\n * @file Matrix Utils\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n *\r\n * svd methods from Eugene Zatepyakin / http://inspirit.github.io/jsfeat/\r\n */\r\n\r\nimport { v3new, v3cross } from './vector-utils.js'\r\n\r\nfunction Matrix (columns, rows) {\r\n  this.cols = columns\r\n  this.rows = rows\r\n  this.size = this.cols * this.rows\r\n\r\n  this.data = new Float32Array(this.size)\r\n}\r\n\r\nMatrix.prototype = {\r\n\r\n  copyTo: function (matrix) {\r\n    matrix.data.set(this.data)\r\n  }\r\n\r\n}\r\n\r\nfunction transpose (At, A) {\r\n  var i = 0\r\n  var j = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ai = 0\r\n  var Ati = 0\r\n  var pAt = 0\r\n  var ad = A.data\r\n  var atd = At.data\r\n\r\n  for (; i < nrows; Ati += 1, Ai += ncols, i++) {\r\n    pAt = Ati\r\n    for (j = 0; j < ncols; pAt += nrows, j++) atd[pAt] = ad[Ai + j]\r\n  }\r\n}\r\n\r\n// C = A * B\r\nfunction multiply (C, A, B) {\r\n  var i = 0\r\n  var j = 0\r\n  var k = 0\r\n  var Ap = 0\r\n  var pA = 0\r\n  var pB = 0\r\n  var _pB = 0\r\n  var Cp = 0\r\n  var ncols = A.cols\r\n  var nrows = A.rows\r\n  var mcols = B.cols\r\n  var ad = A.data\r\n  var bd = B.data\r\n  var cd = C.data\r\n  var sum = 0.0\r\n\r\n  for (; i < nrows; Ap += ncols, i++) {\r\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n      pB = _pB\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < ncols; pA++, pB += mcols, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\n// C = A * B'\r\nfunction multiplyABt (C, A, B) {\r\n  var i = 0\r\n  var j = 0\r\n  var k = 0\r\n  var Ap = 0\r\n  var pA = 0\r\n  var pB = 0\r\n  var Cp = 0\r\n  var ncols = A.cols\r\n  var nrows = A.rows\r\n  var mrows = B.rows\r\n  var ad = A.data\r\n  var bd = B.data\r\n  var cd = C.data\r\n  var sum = 0.0\r\n\r\n  for (; i < nrows; Ap += ncols, i++) {\r\n    for (pB = 0, j = 0; j < mrows; Cp++, j++) {\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < ncols; pA++, pB++, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\n// C = A' * B\r\nfunction multiplyAtB (C, A, B) {\r\n  var i = 0\r\n  var j = 0\r\n  var k = 0\r\n  var Ap = 0\r\n  var pA = 0\r\n  var pB = 0\r\n  var _pB = 0\r\n  var Cp = 0\r\n  var ncols = A.cols\r\n  var nrows = A.rows\r\n  var mcols = B.cols\r\n  var ad = A.data\r\n  var bd = B.data\r\n  var cd = C.data\r\n  var sum = 0.0\r\n\r\n  for (; i < ncols; Ap++, i++) {\r\n    for (_pB = 0, j = 0; j < mcols; Cp++, _pB++, j++) {\r\n      pB = _pB\r\n      pA = Ap\r\n      sum = 0.0\r\n      for (k = 0; k < nrows; pA += ncols, pB += mcols, k++) {\r\n        sum += ad[pA] * bd[pB]\r\n      }\r\n      cd[Cp] = sum\r\n    }\r\n  }\r\n}\r\n\r\nfunction invert3x3 (from, to) {\r\n  var A = from.data\r\n  var invA = to.data\r\n  var t1 = A[4]\r\n  var t2 = A[8]\r\n  var t4 = A[5]\r\n  var t5 = A[7]\r\n  var t8 = A[0]\r\n\r\n  var t9 = t8 * t1\r\n  var t11 = t8 * t4\r\n  var t13 = A[3]\r\n  var t14 = A[1]\r\n  var t15 = t13 * t14\r\n  var t17 = A[2]\r\n  var t18 = t13 * t17\r\n  var t20 = A[6]\r\n  var t21 = t20 * t14\r\n  var t23 = t20 * t17\r\n  var t26 = 1.0 / (t9 * t2 - t11 * t5 - t15 * t2 + t18 * t5 + t21 * t4 - t23 * t1)\r\n  invA[0] = (t1 * t2 - t4 * t5) * t26\r\n  invA[1] = -(t14 * t2 - t17 * t5) * t26\r\n  invA[2] = -(-t14 * t4 + t17 * t1) * t26\r\n  invA[3] = -(t13 * t2 - t4 * t20) * t26\r\n  invA[4] = (t8 * t2 - t23) * t26\r\n  invA[5] = -(t11 - t18) * t26\r\n  invA[6] = -(-t13 * t5 + t1 * t20) * t26\r\n  invA[7] = -(t8 * t5 - t21) * t26\r\n  invA[8] = (t9 - t15) * t26\r\n}\r\n\r\nfunction mat3x3determinant (M) {\r\n  var md = M.data\r\n  return md[0] * md[4] * md[8] -\r\n    md[0] * md[5] * md[7] -\r\n    md[3] * md[1] * md[8] +\r\n    md[3] * md[2] * md[7] +\r\n    md[6] * md[1] * md[5] -\r\n    md[6] * md[2] * md[4]\r\n}\r\n\r\n// C = A * B\r\nfunction multiply3x3 (C, A, B) {\r\n  var Cd = C.data\r\n  var Ad = A.data\r\n  var Bd = B.data\r\n  var m10 = Ad[0]\r\n  var m11 = Ad[1]\r\n  var m12 = Ad[2]\r\n  var m13 = Ad[3]\r\n  var m14 = Ad[4]\r\n  var m15 = Ad[5]\r\n  var m16 = Ad[6]\r\n  var m17 = Ad[7]\r\n  var m18 = Ad[8]\r\n\r\n  var m20 = Bd[0]\r\n  var m21 = Bd[1]\r\n  var m22 = Bd[2]\r\n  var m23 = Bd[3]\r\n  var m24 = Bd[4]\r\n  var m25 = Bd[5]\r\n  var m26 = Bd[6]\r\n  var m27 = Bd[7]\r\n  var m28 = Bd[8]\r\n\r\n  Cd[0] = m10 * m20 + m11 * m23 + m12 * m26\r\n  Cd[1] = m10 * m21 + m11 * m24 + m12 * m27\r\n  Cd[2] = m10 * m22 + m11 * m25 + m12 * m28\r\n  Cd[3] = m13 * m20 + m14 * m23 + m15 * m26\r\n  Cd[4] = m13 * m21 + m14 * m24 + m15 * m27\r\n  Cd[5] = m13 * m22 + m14 * m25 + m15 * m28\r\n  Cd[6] = m16 * m20 + m17 * m23 + m18 * m26\r\n  Cd[7] = m16 * m21 + m17 * m24 + m18 * m27\r\n  Cd[8] = m16 * m22 + m17 * m25 + m18 * m28\r\n}\r\n\r\nfunction meanRows (A) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n  var mean = new Array(ncols)\r\n\r\n  for (j = 0; j < ncols; ++j) {\r\n    mean[ j ] = 0.0\r\n  }\r\n\r\n  for (i = 0; i < nrows; ++i) {\r\n    for (j = 0; j < ncols; ++j, ++p) {\r\n      mean[ j ] += Ad[ p ]\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < ncols; ++j) {\r\n    mean[ j ] /= nrows\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nfunction meanCols (A) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n  var mean = new Array(nrows)\r\n\r\n  for (j = 0; j < nrows; ++j) {\r\n    mean[ j ] = 0.0\r\n  }\r\n\r\n  for (i = 0; i < ncols; ++i) {\r\n    for (j = 0; j < nrows; ++j, ++p) {\r\n      mean[ j ] += Ad[ p ]\r\n    }\r\n  }\r\n\r\n  for (j = 0; j < nrows; ++j) {\r\n    mean[ j ] /= ncols\r\n  }\r\n\r\n  return mean\r\n}\r\n\r\nfunction subRows (A, row) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n\r\n  for (i = 0; i < nrows; ++i) {\r\n    for (j = 0; j < ncols; ++j, ++p) {\r\n      Ad[ p ] -= row[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction subCols (A, col) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n\r\n  for (i = 0; i < ncols; ++i) {\r\n    for (j = 0; j < nrows; ++j, ++p) {\r\n      Ad[ p ] -= col[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction addRows (A, row) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n\r\n  for (i = 0; i < nrows; ++i) {\r\n    for (j = 0; j < ncols; ++j, ++p) {\r\n      Ad[ p ] += row[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction addCols (A, col) {\r\n  var i, j\r\n  var p = 0\r\n  var nrows = A.rows\r\n  var ncols = A.cols\r\n  var Ad = A.data\r\n\r\n  for (i = 0; i < ncols; ++i) {\r\n    for (j = 0; j < nrows; ++j, ++p) {\r\n      Ad[ p ] += col[ j ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction swap (A, i0, i1, t) {\r\n  t = A[i0]\r\n  A[i0] = A[i1]\r\n  A[i1] = t\r\n}\r\n\r\nfunction hypot (a, b) {\r\n  a = Math.abs(a)\r\n  b = Math.abs(b)\r\n  if (a > b) {\r\n    b /= a\r\n    return a * Math.sqrt(1.0 + b * b)\r\n  }\r\n  if (b > 0) {\r\n    a /= b\r\n    return b * Math.sqrt(1.0 + a * a)\r\n  }\r\n  return 0.0\r\n}\r\n\r\nvar EPSILON = 0.0000001192092896\r\nvar FLT_MIN = 1E-37\r\n\r\nfunction JacobiSVDImpl (At, astep, _W, Vt, vstep, m, n, n1) {\r\n  var eps = EPSILON * 2.0\r\n  var minval = FLT_MIN\r\n  var i = 0\r\n  var j = 0\r\n  var k = 0\r\n  var iter = 0\r\n  var maxIter = Math.max(m, 30)\r\n  var Ai = 0\r\n  var Aj = 0\r\n  var Vi = 0\r\n  var Vj = 0\r\n  var changed = 0\r\n  var c = 0.0\r\n  var s = 0.0\r\n  var t = 0.0\r\n  var t0 = 0.0\r\n  var t1 = 0.0\r\n  var sd = 0.0\r\n  var beta = 0.0\r\n  var gamma = 0.0\r\n  var delta = 0.0\r\n  var a = 0.0\r\n  var p = 0.0\r\n  var b = 0.0\r\n  var seed = 0x1234\r\n  var val = 0.0\r\n  var val0 = 0.0\r\n  var asum = 0.0\r\n\r\n  var W = new Float64Array(n << 3)\r\n\r\n  for (; i < n; i++) {\r\n    for (k = 0, sd = 0; k < m; k++) {\r\n      t = At[i * astep + k]\r\n      sd += t * t\r\n    }\r\n    W[i] = sd\r\n\r\n    if (Vt) {\r\n      for (k = 0; k < n; k++) {\r\n        Vt[i * vstep + k] = 0\r\n      }\r\n      Vt[i * vstep + i] = 1\r\n    }\r\n  }\r\n\r\n  for (; iter < maxIter; iter++) {\r\n    changed = 0\r\n\r\n    for (i = 0; i < n - 1; i++) {\r\n      for (j = i + 1; j < n; j++) {\r\n        Ai = (i * astep) | 0\r\n        Aj = (j * astep) | 0\r\n        a = W[i]\r\n        p = 0\r\n        b = W[j]\r\n\r\n        k = 2\r\n        p += At[Ai] * At[Aj]\r\n        p += At[Ai + 1] * At[Aj + 1]\r\n\r\n        for (; k < m; k++) { p += At[Ai + k] * At[Aj + k] }\r\n\r\n        if (Math.abs(p) <= eps * Math.sqrt(a * b)) continue\r\n\r\n        p *= 2.0\r\n        beta = a - b\r\n        gamma = hypot(p, beta)\r\n        if (beta < 0) {\r\n          delta = (gamma - beta) * 0.5\r\n          s = Math.sqrt(delta / gamma)\r\n          c = (p / (gamma * s * 2.0))\r\n        } else {\r\n          c = Math.sqrt((gamma + beta) / (gamma * 2.0))\r\n          s = (p / (gamma * c * 2.0))\r\n        }\r\n\r\n        a = 0.0\r\n        b = 0.0\r\n\r\n        k = 2 // unroll\r\n        t0 = c * At[Ai] + s * At[Aj]\r\n        t1 = -s * At[Ai] + c * At[Aj]\r\n        At[Ai] = t0; At[Aj] = t1\r\n        a += t0 * t0; b += t1 * t1\r\n\r\n        t0 = c * At[Ai + 1] + s * At[Aj + 1]\r\n        t1 = -s * At[Ai + 1] + c * At[Aj + 1]\r\n        At[Ai + 1] = t0; At[Aj + 1] = t1\r\n        a += t0 * t0; b += t1 * t1\r\n\r\n        for (; k < m; k++) {\r\n          t0 = c * At[Ai + k] + s * At[Aj + k]\r\n          t1 = -s * At[Ai + k] + c * At[Aj + k]\r\n          At[Ai + k] = t0; At[Aj + k] = t1\r\n\r\n          a += t0 * t0; b += t1 * t1\r\n        }\r\n\r\n        W[i] = a\r\n        W[j] = b\r\n\r\n        changed = 1\r\n\r\n        if (Vt) {\r\n          Vi = (i * vstep) | 0\r\n          Vj = (j * vstep) | 0\r\n\r\n          k = 2\r\n          t0 = c * Vt[Vi] + s * Vt[Vj]\r\n          t1 = -s * Vt[Vi] + c * Vt[Vj]\r\n          Vt[Vi] = t0; Vt[Vj] = t1\r\n\r\n          t0 = c * Vt[Vi + 1] + s * Vt[Vj + 1]\r\n          t1 = -s * Vt[Vi + 1] + c * Vt[Vj + 1]\r\n          Vt[Vi + 1] = t0; Vt[Vj + 1] = t1\r\n\r\n          for (; k < n; k++) {\r\n            t0 = c * Vt[Vi + k] + s * Vt[Vj + k]\r\n            t1 = -s * Vt[Vi + k] + c * Vt[Vj + k]\r\n            Vt[Vi + k] = t0; Vt[Vj + k] = t1\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (changed === 0) break\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    for (k = 0, sd = 0; k < m; k++) {\r\n      t = At[i * astep + k]\r\n      sd += t * t\r\n    }\r\n    W[i] = Math.sqrt(sd)\r\n  }\r\n\r\n  for (i = 0; i < n - 1; i++) {\r\n    j = i\r\n    for (k = i + 1; k < n; k++) {\r\n      if (W[j] < W[k]) { j = k }\r\n    }\r\n    if (i !== j) {\r\n      swap(W, i, j, sd)\r\n      if (Vt) {\r\n        for (k = 0; k < m; k++) {\r\n          swap(At, i * astep + k, j * astep + k, t)\r\n        }\r\n\r\n        for (k = 0; k < n; k++) {\r\n          swap(Vt, i * vstep + k, j * vstep + k, t)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  for (i = 0; i < n; i++) {\r\n    _W[i] = W[i]\r\n  }\r\n\r\n  if (!Vt) {\r\n    return\r\n  }\r\n\r\n  for (i = 0; i < n1; i++) {\r\n    sd = i < n ? W[i] : 0\r\n\r\n    while (sd <= minval) {\r\n      // if we got a zero singular value, then in order to get the corresponding left singular vector\r\n      // we generate a random vector, project it to the previously computed left singular vectors,\r\n      // subtract the projection and normalize the difference.\r\n      val0 = (1.0 / m)\r\n      for (k = 0; k < m; k++) {\r\n        seed = (seed * 214013 + 2531011)\r\n        val = (((seed >> 16) & 0x7fff) & 256) !== 0 ? val0 : -val0\r\n        At[i * astep + k] = val\r\n      }\r\n      for (iter = 0; iter < 2; iter++) {\r\n        for (j = 0; j < i; j++) {\r\n          sd = 0\r\n          for (k = 0; k < m; k++) {\r\n            sd += At[i * astep + k] * At[j * astep + k]\r\n          }\r\n          asum = 0.0\r\n          for (k = 0; k < m; k++) {\r\n            t = (At[i * astep + k] - sd * At[j * astep + k])\r\n            At[i * astep + k] = t\r\n            asum += Math.abs(t)\r\n          }\r\n          asum = asum ? 1.0 / asum : 0\r\n          for (k = 0; k < m; k++) {\r\n            At[i * astep + k] *= asum\r\n          }\r\n        }\r\n      }\r\n      sd = 0\r\n      for (k = 0; k < m; k++) {\r\n        t = At[i * astep + k]\r\n        sd += t * t\r\n      }\r\n      sd = Math.sqrt(sd)\r\n    }\r\n\r\n    s = (1.0 / sd)\r\n    for (k = 0; k < m; k++) {\r\n      At[i * astep + k] *= s\r\n    }\r\n  }\r\n}\r\n\r\nfunction svd (A, W, U, V) {\r\n  var at = 0\r\n  var i = 0\r\n  var _m = A.rows\r\n  var _n = A.cols\r\n  var m = _m\r\n  var n = _n\r\n\r\n  if (m < n) {\r\n    at = 1\r\n    i = m\r\n    m = n\r\n    n = i\r\n  }\r\n\r\n  var amt = new Matrix(m, m)\r\n  var wmt = new Matrix(1, n)\r\n  var vmt = new Matrix(n, n)\r\n\r\n  if (at === 0) {\r\n    transpose(amt, A)\r\n  } else {\r\n    for (i = 0; i < _n * _m; i++) {\r\n      amt.data[i] = A.data[i]\r\n    }\r\n    for (; i < n * m; i++) {\r\n      amt.data[i] = 0\r\n    }\r\n  }\r\n\r\n  JacobiSVDImpl(amt.data, m, wmt.data, vmt.data, n, m, n, m)\r\n\r\n  if (W) {\r\n    for (i = 0; i < n; i++) {\r\n      W.data[i] = wmt.data[i]\r\n    }\r\n    for (; i < _n; i++) {\r\n      W.data[i] = 0\r\n    }\r\n  }\r\n\r\n  if (at === 0) {\r\n    if (U) transpose(U, amt)\r\n    if (V) transpose(V, vmt)\r\n  } else {\r\n    if (U) transpose(U, vmt)\r\n    if (V) transpose(V, amt)\r\n  }\r\n}\r\n\r\n//\r\n\r\nfunction m4new () {\r\n  return new Float32Array([\r\n    1, 0, 0, 0,\r\n    0, 1, 0, 0,\r\n    0, 0, 1, 0,\r\n    0, 0, 0, 1\r\n  ])\r\n}\r\n\r\nfunction m4set (out, n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\r\n  out[ 0 ] = n11; out[ 4 ] = n12; out[ 8 ] = n13; out[ 12 ] = n14\r\n  out[ 1 ] = n21; out[ 5 ] = n22; out[ 9 ] = n23; out[ 13 ] = n24\r\n  out[ 2 ] = n31; out[ 6 ] = n32; out[ 10 ] = n33; out[ 14 ] = n34\r\n  out[ 3 ] = n41; out[ 7 ] = n42; out[ 11 ] = n43; out[ 15 ] = n44\r\n}\r\n\r\nfunction m4identity (out) {\r\n  m4set(out,\r\n        1, 0, 0, 0,\r\n        0, 1, 0, 0,\r\n        0, 0, 1, 0,\r\n        0, 0, 0, 1\r\n    )\r\n}\r\nm4identity.__deps = [ m4set ]\r\n\r\nfunction m4multiply (out, a, b) {\r\n  var a11 = a[ 0 ]\r\n  var a12 = a[ 4 ]\r\n  var a13 = a[ 8 ]\r\n  var a14 = a[ 12 ]\r\n  var a21 = a[ 1 ]\r\n  var a22 = a[ 5 ]\r\n  var a23 = a[ 9 ]\r\n  var a24 = a[ 13 ]\r\n  var a31 = a[ 2 ]\r\n  var a32 = a[ 6 ]\r\n  var a33 = a[ 10 ]\r\n  var a34 = a[ 14 ]\r\n  var a41 = a[ 3 ]\r\n  var a42 = a[ 7 ]\r\n  var a43 = a[ 11 ]\r\n  var a44 = a[ 15 ]\r\n\r\n  var b11 = b[ 0 ]\r\n  var b12 = b[ 4 ]\r\n  var b13 = b[ 8 ]\r\n  var b14 = b[ 12 ]\r\n  var b21 = b[ 1 ]\r\n  var b22 = b[ 5 ]\r\n  var b23 = b[ 9 ]\r\n  var b24 = b[ 13 ]\r\n  var b31 = b[ 2 ]\r\n  var b32 = b[ 6 ]\r\n  var b33 = b[ 10 ]\r\n  var b34 = b[ 14 ]\r\n  var b41 = b[ 3 ]\r\n  var b42 = b[ 7 ]\r\n  var b43 = b[ 11 ]\r\n  var b44 = b[ 15 ]\r\n\r\n  out[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41\r\n  out[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42\r\n  out[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43\r\n  out[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44\r\n\r\n  out[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41\r\n  out[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42\r\n  out[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43\r\n  out[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44\r\n\r\n  out[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41\r\n  out[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42\r\n  out[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43\r\n  out[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44\r\n\r\n  out[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41\r\n  out[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42\r\n  out[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43\r\n  out[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44\r\n}\r\n\r\nfunction m4makeScale (out, x, y, z) {\r\n  m4set(out,\r\n    x, 0, 0, 0,\r\n    0, y, 0, 0,\r\n    0, 0, z, 0,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\nm4makeScale.__deps = [ m4set ]\r\n\r\nfunction m4makeTranslation (out, x, y, z) {\r\n  m4set(out,\r\n    1, 0, 0, x,\r\n    0, 1, 0, y,\r\n    0, 0, 1, z,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\nm4makeTranslation.__deps = [ m4set ]\r\n\r\nfunction m4makeRotationY (out, theta) {\r\n  var c = Math.cos(theta)\r\n  var s = Math.sin(theta)\r\n  m4set(out,\r\n    c, 0, s, 0,\r\n    0, 1, 0, 0,\r\n    -s, 0, c, 0,\r\n    0, 0, 0, 1\r\n  )\r\n}\r\nm4makeRotationY.__deps = [ m4set ]\r\n\r\n//\r\n\r\nfunction m3new () {\r\n  return new Float32Array([\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1\r\n  ])\r\n}\r\n\r\nfunction m3makeNormal (out, m4) {\r\n  var r0 = v3new([ m4[0], m4[1], m4[2] ])\r\n  var r1 = v3new([ m4[4], m4[5], m4[6] ])\r\n  var r2 = v3new([ m4[8], m4[9], m4[10] ])\r\n  var cp = v3new()\r\n  //        [ r0 ]       [ r1 x r2 ]\r\n  // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n  //        [ r2 ]       [ r0 x r1 ]\r\n  v3cross(cp, r1, r2)\r\n  out[ 0 ] = cp[ 0 ]\r\n  out[ 1 ] = cp[ 1 ]\r\n  out[ 2 ] = cp[ 2 ]\r\n  v3cross(cp, r2, r0)\r\n  out[ 3 ] = cp[ 0 ]\r\n  out[ 4 ] = cp[ 1 ]\r\n  out[ 5 ] = cp[ 2 ]\r\n  v3cross(cp, r0, r1)\r\n  out[ 6 ] = cp[ 0 ]\r\n  out[ 7 ] = cp[ 1 ]\r\n  out[ 8 ] = cp[ 2 ]\r\n}\r\nm3makeNormal.__deps = [ v3new, v3cross ]\r\n\r\nexport {\r\n  Matrix,\r\n  svd,\r\n  meanRows,\r\n  meanCols,\r\n  subRows,\r\n  subCols,\r\n  addRows,\r\n  addCols,\r\n  transpose,\r\n  multiply,\r\n  multiplyABt,\r\n  multiplyAtB,\r\n  invert3x3,\r\n  multiply3x3,\r\n  mat3x3determinant,\r\n\r\n  m4new,\r\n  m4identity,\r\n  m4multiply,\r\n  m4makeScale,\r\n  m4makeTranslation,\r\n  m4makeRotationY,\r\n\r\n  m3new,\r\n  m3makeNormal\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/matrix-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1575,
    "kind": "function",
    "name": "swap",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~swap",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 318,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1576,
    "kind": "function",
    "name": "hypot",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~hypot",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 324,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1577,
    "kind": "variable",
    "name": "EPSILON",
    "memberof": "src/math/matrix-utils.js",
    "static": true,
    "longname": "src/math/matrix-utils.js~EPSILON",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 338,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1578,
    "kind": "variable",
    "name": "FLT_MIN",
    "memberof": "src/math/matrix-utils.js",
    "static": true,
    "longname": "src/math/matrix-utils.js~FLT_MIN",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 339,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1579,
    "kind": "function",
    "name": "JacobiSVDImpl",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~JacobiSVDImpl",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 341,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1580,
    "kind": "function",
    "name": "m4set",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4set",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 612,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1581,
    "kind": "function",
    "name": "Matrix",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~Matrix",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{Matrix}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1582,
    "kind": "function",
    "name": "svd",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~svd",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{svd}",
    "description": null,
    "lineNumber": 551,
    "undocument": true
  },
  {
    "__docId__": 1583,
    "kind": "function",
    "name": "meanRows",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~meanRows",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{meanRows}",
    "description": null,
    "lineNumber": 212,
    "undocument": true
  },
  {
    "__docId__": 1584,
    "kind": "function",
    "name": "meanCols",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~meanCols",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{meanCols}",
    "description": null,
    "lineNumber": 237,
    "undocument": true
  },
  {
    "__docId__": 1585,
    "kind": "function",
    "name": "subRows",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~subRows",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{subRows}",
    "description": null,
    "lineNumber": 262,
    "undocument": true
  },
  {
    "__docId__": 1586,
    "kind": "function",
    "name": "subCols",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~subCols",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{subCols}",
    "description": null,
    "lineNumber": 276,
    "undocument": true
  },
  {
    "__docId__": 1587,
    "kind": "function",
    "name": "addRows",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~addRows",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{addRows}",
    "description": null,
    "lineNumber": 290,
    "undocument": true
  },
  {
    "__docId__": 1588,
    "kind": "function",
    "name": "addCols",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~addCols",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{addCols}",
    "description": null,
    "lineNumber": 304,
    "undocument": true
  },
  {
    "__docId__": 1589,
    "kind": "function",
    "name": "transpose",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~transpose",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{transpose}",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1590,
    "kind": "function",
    "name": "multiply",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~multiply",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{multiply}",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 1591,
    "kind": "function",
    "name": "multiplyABt",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~multiplyABt",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{multiplyABt}",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 1592,
    "kind": "function",
    "name": "multiplyAtB",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~multiplyAtB",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{multiplyAtB}",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 1593,
    "kind": "function",
    "name": "invert3x3",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~invert3x3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{invert3x3}",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 1594,
    "kind": "function",
    "name": "multiply3x3",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~multiply3x3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{multiply3x3}",
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 1595,
    "kind": "function",
    "name": "mat3x3determinant",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~mat3x3determinant",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{mat3x3determinant}",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 1596,
    "kind": "function",
    "name": "m4new",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4new",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4new}",
    "description": null,
    "lineNumber": 603,
    "undocument": true
  },
  {
    "__docId__": 1597,
    "kind": "function",
    "name": "m4identity",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4identity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4identity}",
    "description": null,
    "lineNumber": 619,
    "undocument": true
  },
  {
    "__docId__": 1598,
    "kind": "function",
    "name": "m4multiply",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4multiply",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4multiply}",
    "description": null,
    "lineNumber": 629,
    "undocument": true
  },
  {
    "__docId__": 1599,
    "kind": "function",
    "name": "m4makeScale",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4makeScale",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4makeScale}",
    "description": null,
    "lineNumber": 685,
    "undocument": true
  },
  {
    "__docId__": 1600,
    "kind": "function",
    "name": "m4makeTranslation",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4makeTranslation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4makeTranslation}",
    "description": null,
    "lineNumber": 695,
    "undocument": true
  },
  {
    "__docId__": 1601,
    "kind": "function",
    "name": "m4makeRotationY",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m4makeRotationY",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m4makeRotationY}",
    "description": null,
    "lineNumber": 705,
    "undocument": true
  },
  {
    "__docId__": 1602,
    "kind": "function",
    "name": "m3new",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m3new",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m3new}",
    "description": null,
    "lineNumber": 719,
    "undocument": true
  },
  {
    "__docId__": 1603,
    "kind": "function",
    "name": "m3makeNormal",
    "memberof": "src/math/matrix-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/matrix-utils.js~m3makeNormal",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/matrix-utils.js",
    "importStyle": "{m3makeNormal}",
    "description": null,
    "lineNumber": 727,
    "undocument": true
  },
  {
    "__docId__": 1604,
    "kind": "file",
    "name": "src/math/principal-axes.js",
    "content": "/**\r\n * @file Principal Axes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion } from '../../lib/three.es6.js'\r\n\r\nimport {\r\n    Matrix, meanRows, subRows, transpose, multiplyABt, svd\r\n} from './matrix-utils.js'\r\nimport { projectPointOnVector } from './vector-utils.js'\r\n\r\nconst negateVector = new Vector3(-1, -1, -1)\r\nconst tmpMatrix = new Matrix4()\r\n\r\n/**\r\n * Principal axes\r\n */\r\nclass PrincipalAxes {\r\n  /**\r\n   * @param  {Matrix} points - 3 by N matrix\r\n   */\r\n  constructor (points) {\r\n    // console.time( \"PrincipalAxes\" );\r\n\r\n    const n = points.rows\r\n    const n3 = n / 3\r\n    const pointsT = new Matrix(n, 3)\r\n    const A = new Matrix(3, 3)\r\n    const W = new Matrix(1, 3)\r\n    const U = new Matrix(3, 3)\r\n    const V = new Matrix(3, 3)\r\n\r\n        // calculate\r\n    const mean = meanRows(points)\r\n    subRows(points, mean)\r\n    transpose(pointsT, points)\r\n    multiplyABt(A, pointsT, pointsT)\r\n    svd(A, W, U, V)\r\n\r\n    // console.log( points, pointsT, mean )\r\n    // console.log( n, A, W, U, V );\r\n\r\n    // center\r\n    const vm = new Vector3(mean[0], mean[1], mean[2])\r\n\r\n    // normalized\r\n    const van = new Vector3(U.data[0], U.data[3], U.data[6])\r\n    const vbn = new Vector3(U.data[1], U.data[4], U.data[7])\r\n    const vcn = new Vector3(U.data[2], U.data[5], U.data[8])\r\n\r\n    // scaled\r\n    const va = van.clone().multiplyScalar(Math.sqrt(W.data[0] / n3))\r\n    const vb = vbn.clone().multiplyScalar(Math.sqrt(W.data[1] / n3))\r\n    const vc = vcn.clone().multiplyScalar(Math.sqrt(W.data[2] / n3))\r\n\r\n    // points\r\n    this.begA = vm.clone().sub(va)\r\n    this.endA = vm.clone().add(va)\r\n    this.begB = vm.clone().sub(vb)\r\n    this.endB = vm.clone().add(vb)\r\n    this.begC = vm.clone().sub(vc)\r\n    this.endC = vm.clone().add(vc)\r\n\r\n    //\r\n\r\n    this.center = vm\r\n\r\n    this.vecA = va\r\n    this.vecB = vb\r\n    this.vecC = vc\r\n\r\n    this.normVecA = van\r\n    this.normVecB = vbn\r\n    this.normVecC = vcn\r\n\r\n    // console.timeEnd( \"PrincipalAxes\" );\r\n  }\r\n\r\n  /**\r\n   * Get the basis matrix descriping the axes\r\n   * @param  {Matrix4} [optionalTarget] - target object\r\n   * @return {Matrix4} the basis\r\n   */\r\n  getBasisMatrix (optionalTarget) {\r\n    const basis = optionalTarget || new Matrix4()\r\n\r\n    basis.makeBasis(this.normVecB, this.normVecA, this.normVecC)\r\n    if (basis.determinant() < 0) {\r\n      basis.scale(negateVector)\r\n    }\r\n\r\n    return basis\r\n  }\r\n\r\n  /**\r\n   * Get a quaternion descriping the axes rotation\r\n   * @param  {Quaternion} [optionalTarget] - target object\r\n   * @return {Quaternion} the rotation\r\n   */\r\n  getRotationQuaternion (optionalTarget) {\r\n    const q = optionalTarget || new Quaternion()\r\n    q.setFromRotationMatrix(this.getBasisMatrix(tmpMatrix))\r\n\r\n    return q.inverse()\r\n  }\r\n\r\n  /**\r\n   * Get the scale/length for each dimension for a box around the axes\r\n   * to enclose the atoms of a structure\r\n   * @param  {Structure|StructureView} structure - the structure\r\n   * @return {{d1a: Number, d2a: Number, d3a: Number, d1b: Number, d2b: Number, d3b: Number}} scale\r\n   */\r\n  getProjectedScaleForAtoms (structure) {\r\n    let d1a = -Infinity\r\n    let d1b = -Infinity\r\n    let d2a = -Infinity\r\n    let d2b = -Infinity\r\n    let d3a = -Infinity\r\n    let d3b = -Infinity\r\n\r\n    const p = new Vector3()\r\n    const t = new Vector3()\r\n\r\n    const center = this.center\r\n    const ax1 = this.normVecA\r\n    const ax2 = this.normVecB\r\n    const ax3 = this.normVecC\r\n\r\n    structure.eachAtom(function (ap) {\r\n      projectPointOnVector(p.copy(ap), ax1, center)\r\n      const dp1 = t.subVectors(p, center).normalize().dot(ax1)\r\n      const dt1 = p.distanceTo(center)\r\n      if (dp1 > 0) {\r\n        if (dt1 > d1a) d1a = dt1\r\n      } else {\r\n        if (dt1 > d1b) d1b = dt1\r\n      }\r\n\r\n      projectPointOnVector(p.copy(ap), ax2, center)\r\n      const dp2 = t.subVectors(p, center).normalize().dot(ax2)\r\n      const dt2 = p.distanceTo(center)\r\n      if (dp2 > 0) {\r\n        if (dt2 > d2a) d2a = dt2\r\n      } else {\r\n        if (dt2 > d2b) d2b = dt2\r\n      }\r\n\r\n      projectPointOnVector(p.copy(ap), ax3, center)\r\n      const dp3 = t.subVectors(p, center).normalize().dot(ax3)\r\n      const dt3 = p.distanceTo(center)\r\n      if (dp3 > 0) {\r\n        if (dt3 > d3a) d3a = dt3\r\n      } else {\r\n        if (dt3 > d3b) d3b = dt3\r\n      }\r\n    })\r\n\r\n    return {\r\n      d1a: d1a,\r\n      d2a: d2a,\r\n      d3a: d3a,\r\n      d1b: -d1b,\r\n      d2b: -d2b,\r\n      d3b: -d3b\r\n    }\r\n  }\r\n}\r\n\r\nexport default PrincipalAxes\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/principal-axes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1605,
    "kind": "variable",
    "name": "negateVector",
    "memberof": "src/math/principal-axes.js",
    "static": true,
    "longname": "src/math/principal-axes.js~negateVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/principal-axes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1606,
    "kind": "variable",
    "name": "tmpMatrix",
    "memberof": "src/math/principal-axes.js",
    "static": true,
    "longname": "src/math/principal-axes.js~tmpMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/math/principal-axes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1607,
    "kind": "class",
    "name": "PrincipalAxes",
    "memberof": "src/math/principal-axes.js",
    "static": true,
    "longname": "src/math/principal-axes.js~PrincipalAxes",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/principal-axes.js",
    "importStyle": "PrincipalAxes",
    "description": "Principal axes",
    "lineNumber": 20,
    "interface": false
  },
  {
    "__docId__": 1608,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "3 by N matrix"
      }
    ]
  },
  {
    "__docId__": 1609,
    "kind": "member",
    "name": "begA",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#begA",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 1610,
    "kind": "member",
    "name": "endA",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#endA",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 1611,
    "kind": "member",
    "name": "begB",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#begB",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 1612,
    "kind": "member",
    "name": "endB",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#endB",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1613,
    "kind": "member",
    "name": "begC",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#begC",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 1614,
    "kind": "member",
    "name": "endC",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#endC",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 1615,
    "kind": "member",
    "name": "center",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#center",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 1616,
    "kind": "member",
    "name": "vecA",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#vecA",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 1617,
    "kind": "member",
    "name": "vecB",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#vecB",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 1618,
    "kind": "member",
    "name": "vecC",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#vecC",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 1619,
    "kind": "member",
    "name": "normVecA",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#normVecA",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 1620,
    "kind": "member",
    "name": "normVecB",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#normVecB",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 1621,
    "kind": "member",
    "name": "normVecC",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#normVecC",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 1622,
    "kind": "method",
    "name": "getBasisMatrix",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#getBasisMatrix",
    "access": "public",
    "description": "Get the basis matrix descriping the axes",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": true,
        "name": "optionalTarget",
        "description": "target object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": "the basis"
    }
  },
  {
    "__docId__": 1623,
    "kind": "method",
    "name": "getRotationQuaternion",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#getRotationQuaternion",
    "access": "public",
    "description": "Get a quaternion descriping the axes rotation",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "Quaternion"
        ],
        "spread": false,
        "optional": true,
        "name": "optionalTarget",
        "description": "target object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Quaternion"
      ],
      "spread": false,
      "description": "the rotation"
    }
  },
  {
    "__docId__": 1624,
    "kind": "method",
    "name": "getProjectedScaleForAtoms",
    "memberof": "src/math/principal-axes.js~PrincipalAxes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/math/principal-axes.js~PrincipalAxes#getProjectedScaleForAtoms",
    "access": "public",
    "description": "Get the scale/length for each dimension for a box around the axes\nto enclose the atoms of a structure",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure",
          "StructureView"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{d1a: Number, d2a: Number, d3a: Number, d1b: Number, d2b: Number, d3b: Number}"
      ],
      "spread": false,
      "description": "scale"
    }
  },
  {
    "__docId__": 1625,
    "kind": "file",
    "name": "src/math/vector-utils.js",
    "content": "/**\r\n * @file Vector Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { EPS } from './math-constants.js'\r\n\r\n/**\r\n * Converted to JavaScript from\r\n * {@link http://paulbourke.net/geometry/pointlineplane/lineline.c}\r\n *\r\n * @param  {Vector3} p1 - point 1\r\n * @param  {Vector3} p2 - point 2\r\n * @param  {Vector3} p3 - point 3\r\n * @param  {Vector3} p4 - point 4\r\n * @return {Array.<Vector3, Vector3>|null} the two intersection points\r\n */\r\nfunction lineLineIntersect (p1, p2, p3, p4) {\r\n  var p13 = new Vector3()\r\n  var p43 = new Vector3()\r\n  var p21 = new Vector3()\r\n  var d1343, d4321, d1321, d4343, d2121\r\n  var denom, numer\r\n\r\n  p13.x = p1.x - p3.x\r\n  p13.y = p1.y - p3.y\r\n  p13.z = p1.z - p3.z\r\n  p43.x = p4.x - p3.x\r\n  p43.y = p4.y - p3.y\r\n  p43.z = p4.z - p3.z\r\n  if (Math.abs(p43.x) < EPS && Math.abs(p43.y) < EPS && Math.abs(p43.z) < EPS) { return null }\r\n\r\n  p21.x = p2.x - p1.x\r\n  p21.y = p2.y - p1.y\r\n  p21.z = p2.z - p1.z\r\n  if (Math.abs(p21.x) < EPS && Math.abs(p21.y) < EPS && Math.abs(p21.z) < EPS) { return null }\r\n\r\n  d1343 = p13.x * p43.x + p13.y * p43.y + p13.z * p43.z\r\n  d4321 = p43.x * p21.x + p43.y * p21.y + p43.z * p21.z\r\n  d1321 = p13.x * p21.x + p13.y * p21.y + p13.z * p21.z\r\n  d4343 = p43.x * p43.x + p43.y * p43.y + p43.z * p43.z\r\n  d2121 = p21.x * p21.x + p21.y * p21.y + p21.z * p21.z\r\n\r\n  denom = d2121 * d4343 - d4321 * d4321\r\n  if (Math.abs(denom) < EPS) { return null }\r\n  numer = d1343 * d4321 - d1321 * d4343\r\n\r\n  var mua = numer / denom\r\n  var mub = (d1343 + d4321 * mua) / d4343\r\n\r\n  var pa = new Vector3(\r\n    p1.x + mua * p21.x,\r\n    p1.y + mua * p21.y,\r\n    p1.z + mua * p21.z\r\n  )\r\n  var pb = new Vector3(\r\n    p3.x + mub * p43.x,\r\n    p3.y + mub * p43.y,\r\n    p3.z + mub * p43.z\r\n  )\r\n\r\n  return [ pa, pb ]\r\n}\r\n\r\nfunction calculateMeanVector3 (array) {\r\n  var n = array.length\r\n  var m = array.length / 3\r\n\r\n  var x = 0\r\n  var y = 0\r\n  var z = 0\r\n\r\n  var i\r\n\r\n  for (i = 0; i < n; i += 3) {\r\n    x += array[ i + 0 ]\r\n    y += array[ i + 1 ]\r\n    z += array[ i + 2 ]\r\n  }\r\n\r\n  return new Vector3(x / m, y / m, z / m)\r\n}\r\n\r\nfunction isPointOnSegment (p, l1, l2) {\r\n  var len = l1.distanceTo(l2)\r\n\r\n  return p.distanceTo(l1) <= len && p.distanceTo(l2) <= len\r\n}\r\n\r\nfunction projectPointOnVector (point, vector, origin) {\r\n  if (origin) {\r\n    point.sub(origin).projectOnVector(vector).add(origin)\r\n  } else {\r\n    point.projectOnVector(vector)\r\n  }\r\n\r\n  return point\r\n}\r\n\r\nfunction computeBoundingBox (array) {\r\n  var minX = +Infinity\r\n  var minY = +Infinity\r\n  var minZ = +Infinity\r\n  var maxX = -Infinity\r\n  var maxY = -Infinity\r\n  var maxZ = -Infinity\r\n  for (var i = 0, l = array.length; i < l; i += 3) {\r\n    var x = array[ i ]\r\n    var y = array[ i + 1 ]\r\n    var z = array[ i + 2 ]\r\n    if (x < minX) minX = x\r\n    if (y < minY) minY = y\r\n    if (z < minZ) minZ = z\r\n    if (x > maxX) maxX = x\r\n    if (y > maxY) maxY = y\r\n    if (z > maxZ) maxZ = z\r\n  }\r\n  return [\r\n    v3new([ minX, minY, minZ ]),\r\n    v3new([ maxX, maxY, maxZ ])\r\n  ]\r\n}\r\nv3forEach.__deps = [ v3new ]\r\n\r\nfunction applyMatrix4toVector3array (m, a) {\r\n  for (var i = 0, il = a.length; i < il; i += 3) {\r\n    var x = a[ i ]\r\n    var y = a[ i + 1 ]\r\n    var z = a[ i + 2 ]\r\n    a[ i ] = m[ 0 ] * x + m[ 4 ] * y + m[ 8 ] * z + m[ 12 ]\r\n    a[ i + 1 ] = m[ 1 ] * x + m[ 5 ] * y + m[ 9 ] * z + m[ 13 ]\r\n    a[ i + 2 ] = m[ 2 ] * x + m[ 6 ] * y + m[ 10 ] * z + m[ 14 ]\r\n  }\r\n}\r\n\r\nfunction applyMatrix3toVector3array (m, a) {\r\n  for (var i = 0, il = a.length; i < il; i += 3) {\r\n    var x = a[ i ]\r\n    var y = a[ i + 1 ]\r\n    var z = a[ i + 2 ]\r\n    a[ i ] = m[ 0 ] * x + m[ 3 ] * y + m[ 6 ] * z\r\n    a[ i + 1 ] = m[ 1 ] * x + m[ 4 ] * y + m[ 7 ] * z\r\n    a[ i + 2 ] = m[ 2 ] * x + m[ 5 ] * y + m[ 8 ] * z\r\n  }\r\n}\r\n\r\nfunction normalizeVector3array (a) {\r\n  for (var i = 0, il = a.length; i < il; i += 3) {\r\n    var x = a[ i ]\r\n    var y = a[ i + 1 ]\r\n    var z = a[ i + 2 ]\r\n    var s = 1 / Math.sqrt(x * x + y * y + z * z)\r\n    a[ i ] = x * s\r\n    a[ i + 1 ] = y * s\r\n    a[ i + 2 ] = z * s\r\n  }\r\n}\r\n\r\nfunction v3new (array) {\r\n  return new Float32Array(array || 3)\r\n}\r\n\r\nfunction v3cross (out, a, b) {\r\n  var ax = a[0]\r\n  var ay = a[1]\r\n  var az = a[2]\r\n  var bx = b[0]\r\n  var by = b[1]\r\n  var bz = b[2]\r\n  out[0] = ay * bz - az * by\r\n  out[1] = az * bx - ax * bz\r\n  out[2] = ax * by - ay * bx\r\n}\r\n\r\nfunction v3dot (a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2]\r\n}\r\n\r\nfunction v3sub (out, a, b) {\r\n  out[0] = a[0] - b[0]\r\n  out[1] = a[1] - b[1]\r\n  out[2] = a[2] - b[2]\r\n}\r\n\r\nfunction v3add (out, a, b) {\r\n  out[0] = a[0] + b[0]\r\n  out[1] = a[1] + b[1]\r\n  out[2] = a[2] + b[2]\r\n}\r\n\r\nfunction v3fromArray (out, array, offset) {\r\n  out[0] = array[offset]\r\n  out[1] = array[offset + 1]\r\n  out[2] = array[offset + 2]\r\n}\r\n\r\nfunction v3toArray (input, array, offset) {\r\n  array[offset] = input[0]\r\n  array[offset + 1] = input[1]\r\n  array[offset + 2] = input[2]\r\n}\r\n\r\nfunction v3forEach (array, fn, b) {\r\n  var a = v3new(3)\r\n  for (var i = 0, n = array.length; i < n; i += 3) {\r\n    v3fromArray(a, array, i)\r\n    fn(a, a, b)\r\n    v3toArray(a, array, i)\r\n  }\r\n}\r\nv3forEach.__deps = [ v3new, v3fromArray, v3toArray ]\r\n\r\nfunction v3length (a) {\r\n  return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2])\r\n}\r\n\r\nfunction v3divide (out, a, b) {\r\n  out[0] = a[0] / b[0]\r\n  out[1] = a[1] / b[1]\r\n  out[2] = a[2] / b[2]\r\n}\r\n\r\nfunction v3multiply (out, a, b) {\r\n  out[0] = a[0] * b[0]\r\n  out[1] = a[1] * b[1]\r\n  out[2] = a[2] * b[2]\r\n}\r\n\r\nfunction v3divideScalar (out, a, s) {\r\n  v3multiplyScalar(out, a, 1 / s)\r\n}\r\nv3divideScalar.__deps = [ v3multiplyScalar ]\r\n\r\nfunction v3multiplyScalar (out, a, s) {\r\n  out[0] = a[0] * s\r\n  out[1] = a[1] * s\r\n  out[2] = a[2] * s\r\n}\r\n\r\nfunction v3normalize (out, a) {\r\n  v3multiplyScalar(out, a, 1 / v3length(a))\r\n}\r\nv3normalize.__deps = [ v3multiplyScalar, v3length ]\r\n\r\nfunction v3subScalar (out, a, s) {\r\n  out[0] = a[0] - s\r\n  out[1] = a[1] - s\r\n  out[2] = a[2] - s\r\n}\r\n\r\nfunction v3addScalar (out, a, s) {\r\n  out[0] = a[0] + s\r\n  out[1] = a[1] + s\r\n  out[2] = a[2] + s\r\n}\r\n\r\nfunction v3floor (out, a) {\r\n  out[0] = Math.floor(a[0])\r\n  out[1] = Math.floor(a[1])\r\n  out[2] = Math.floor(a[2])\r\n}\r\n\r\nfunction v3ceil (out, a) {\r\n  out[0] = Math.ceil(a[0])\r\n  out[1] = Math.ceil(a[1])\r\n  out[2] = Math.ceil(a[2])\r\n}\r\n\r\nfunction v3round (out, a) {\r\n  out[0] = Math.round(a[0])\r\n  out[1] = Math.round(a[1])\r\n  out[2] = Math.round(a[2])\r\n}\r\n\r\nfunction v3negate (out, a) {\r\n  out[0] = -a[0]\r\n  out[1] = -a[1]\r\n  out[2] = -a[2]\r\n}\r\n\r\nfunction v3angle (a, b) {\r\n  var ax = a[0]\r\n  var ay = a[1]\r\n  var az = a[2]\r\n  var bx = b[0]\r\n  var by = b[1]\r\n  var bz = b[2]\r\n  var cx = ay * bz - az * by\r\n  var cy = az * bx - ax * bz\r\n  var cz = ax * by - ay * bx\r\n  var s = Math.sqrt(cx * cx + cy * cy + cz * cz)\r\n  var c = ax * bx + ay * by + az * bz\r\n  return Math.atan2(s, c)\r\n}\r\n\r\nexport {\r\n  lineLineIntersect,\r\n  calculateMeanVector3,\r\n  isPointOnSegment,\r\n  projectPointOnVector,\r\n  computeBoundingBox,\r\n  applyMatrix4toVector3array,\r\n  applyMatrix3toVector3array,\r\n  normalizeVector3array,\r\n\r\n  v3new,\r\n  v3cross,\r\n  v3dot,\r\n  v3sub,\r\n  v3add,\r\n  v3fromArray,\r\n  v3toArray,\r\n  v3forEach,\r\n  v3length,\r\n  v3divide,\r\n  v3multiply,\r\n  v3divideScalar,\r\n  v3multiplyScalar,\r\n  v3normalize,\r\n  v3subScalar,\r\n  v3addScalar,\r\n  v3floor,\r\n  v3ceil,\r\n  v3round,\r\n  v3negate,\r\n  v3angle\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/math/vector-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1626,
    "kind": "function",
    "name": "lineLineIntersect",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~lineLineIntersect",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{lineLineIntersect}",
    "description": "Converted to JavaScript from\n{@link http://paulbourke.net/geometry/pointlineplane/lineline.c}",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p1",
        "description": "point 1"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p2",
        "description": "point 2"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p3",
        "description": "point 3"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "p4",
        "description": "point 4"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array.<Vector3, Vector3>",
        "null"
      ],
      "spread": false,
      "description": "the two intersection points"
    }
  },
  {
    "__docId__": 1627,
    "kind": "function",
    "name": "calculateMeanVector3",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~calculateMeanVector3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{calculateMeanVector3}",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 1628,
    "kind": "function",
    "name": "isPointOnSegment",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~isPointOnSegment",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{isPointOnSegment}",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 1629,
    "kind": "function",
    "name": "projectPointOnVector",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~projectPointOnVector",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{projectPointOnVector}",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 1630,
    "kind": "function",
    "name": "computeBoundingBox",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~computeBoundingBox",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{computeBoundingBox}",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 1631,
    "kind": "function",
    "name": "applyMatrix4toVector3array",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~applyMatrix4toVector3array",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{applyMatrix4toVector3array}",
    "description": null,
    "lineNumber": 128,
    "undocument": true
  },
  {
    "__docId__": 1632,
    "kind": "function",
    "name": "applyMatrix3toVector3array",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~applyMatrix3toVector3array",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{applyMatrix3toVector3array}",
    "description": null,
    "lineNumber": 139,
    "undocument": true
  },
  {
    "__docId__": 1633,
    "kind": "function",
    "name": "normalizeVector3array",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~normalizeVector3array",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{normalizeVector3array}",
    "description": null,
    "lineNumber": 150,
    "undocument": true
  },
  {
    "__docId__": 1634,
    "kind": "function",
    "name": "v3new",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3new",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3new}",
    "description": null,
    "lineNumber": 162,
    "undocument": true
  },
  {
    "__docId__": 1635,
    "kind": "function",
    "name": "v3cross",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3cross",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3cross}",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 1636,
    "kind": "function",
    "name": "v3dot",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3dot",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3dot}",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 1637,
    "kind": "function",
    "name": "v3sub",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3sub",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3sub}",
    "description": null,
    "lineNumber": 182,
    "undocument": true
  },
  {
    "__docId__": 1638,
    "kind": "function",
    "name": "v3add",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3add",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3add}",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 1639,
    "kind": "function",
    "name": "v3fromArray",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3fromArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3fromArray}",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 1640,
    "kind": "function",
    "name": "v3toArray",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3toArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3toArray}",
    "description": null,
    "lineNumber": 200,
    "undocument": true
  },
  {
    "__docId__": 1641,
    "kind": "function",
    "name": "v3forEach",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3forEach",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3forEach}",
    "description": null,
    "lineNumber": 206,
    "undocument": true
  },
  {
    "__docId__": 1642,
    "kind": "function",
    "name": "v3length",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3length",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3length}",
    "description": null,
    "lineNumber": 216,
    "undocument": true
  },
  {
    "__docId__": 1643,
    "kind": "function",
    "name": "v3divide",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3divide",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3divide}",
    "description": null,
    "lineNumber": 220,
    "undocument": true
  },
  {
    "__docId__": 1644,
    "kind": "function",
    "name": "v3multiply",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3multiply",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3multiply}",
    "description": null,
    "lineNumber": 226,
    "undocument": true
  },
  {
    "__docId__": 1645,
    "kind": "function",
    "name": "v3divideScalar",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3divideScalar",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3divideScalar}",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 1646,
    "kind": "function",
    "name": "v3multiplyScalar",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3multiplyScalar",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3multiplyScalar}",
    "description": null,
    "lineNumber": 237,
    "undocument": true
  },
  {
    "__docId__": 1647,
    "kind": "function",
    "name": "v3normalize",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3normalize",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3normalize}",
    "description": null,
    "lineNumber": 243,
    "undocument": true
  },
  {
    "__docId__": 1648,
    "kind": "function",
    "name": "v3subScalar",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3subScalar",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3subScalar}",
    "description": null,
    "lineNumber": 248,
    "undocument": true
  },
  {
    "__docId__": 1649,
    "kind": "function",
    "name": "v3addScalar",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3addScalar",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3addScalar}",
    "description": null,
    "lineNumber": 254,
    "undocument": true
  },
  {
    "__docId__": 1650,
    "kind": "function",
    "name": "v3floor",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3floor",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3floor}",
    "description": null,
    "lineNumber": 260,
    "undocument": true
  },
  {
    "__docId__": 1651,
    "kind": "function",
    "name": "v3ceil",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3ceil",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3ceil}",
    "description": null,
    "lineNumber": 266,
    "undocument": true
  },
  {
    "__docId__": 1652,
    "kind": "function",
    "name": "v3round",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3round",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3round}",
    "description": null,
    "lineNumber": 272,
    "undocument": true
  },
  {
    "__docId__": 1653,
    "kind": "function",
    "name": "v3negate",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3negate",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3negate}",
    "description": null,
    "lineNumber": 278,
    "undocument": true
  },
  {
    "__docId__": 1654,
    "kind": "function",
    "name": "v3angle",
    "memberof": "src/math/vector-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/math/vector-utils.js~v3angle",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/math/vector-utils.js",
    "importStyle": "{v3angle}",
    "description": null,
    "lineNumber": 284,
    "undocument": true
  },
  {
    "__docId__": 1655,
    "kind": "file",
    "name": "src/ngl.js",
    "content": "/**\r\n * @file ngl\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport './polyfills'\r\nimport _Promise from '../lib/promise.es6.js'\r\n\r\n/**\r\n * The NGL module. These members are available in the `NGL` namespace when using the {@link https://github.com/umdjs/umd|UMD} build in the `ngl.js` file.\r\n * @module NGL\r\n */\r\n\r\nimport {\r\n  Debug, setDebug,\r\n  ScriptExtensions, ColormakerRegistry,\r\n  DatasourceRegistry, DecompressorRegistry,\r\n  ParserRegistry, RepresentationRegistry\r\n} from './globals.js'\r\nimport { autoLoad, getDataInfo } from './loader/loader-utils.js'\r\nimport Selection from './selection/selection.js'\r\nimport PdbWriter from './writer/pdb-writer.js'\r\nimport SdfWriter from './writer/sdf-writer.js'\r\nimport StlWriter from './writer/stl-writer.js'\r\nimport Stage from './stage/stage.js'\r\nimport Collection from './component/collection.js'\r\nimport ComponentCollection from './component/component-collection.js'\r\nimport RepresentationCollection from './component/representation-collection.js'\r\nimport Assembly from './symmetry/assembly.js'\r\nimport TrajectoryPlayer from './trajectory/trajectory-player.js'\r\nimport { superpose } from './align/align-utils.js'\r\nimport Superposition from './align/superposition.js'\r\nimport { guessElement } from './structure/structure-utils.js'\r\n\r\nimport {\r\n  flatten, throttle, download, getQuery, uniqueArray, getFileInfo\r\n} from './utils.js'\r\nimport Queue from './utils/queue.js'\r\nimport Counter from './utils/counter.js'\r\n\r\n//\r\n\r\nimport Colormaker from './color/colormaker.js'\r\n\r\nimport './color/atomindex-colormaker.js'\r\nimport './color/bfactor-colormaker.js'\r\nimport './color/chainid-colormaker.js'\r\nimport './color/chainindex-colormaker.js'\r\nimport './color/chainname-colormaker.js'\r\nimport './color/densityfit-colormaker.js'\r\nimport './color/electrostatic-colormaker.js'\r\nimport './color/element-colormaker.js'\r\nimport './color/entityindex-colormaker.js'\r\nimport './color/entitytype-colormaker.js'\r\nimport './color/geoquality-colormaker.js'\r\nimport './color/hydrophobicity-colormaker.js'\r\nimport './color/modelindex-colormaker.js'\r\nimport './color/moleculetype-colormaker.js'\r\nimport './color/occupancy-colormaker.js'\r\nimport './color/partialcharge-colormaker.js'\r\nimport './color/random-colormaker.js'\r\nimport './color/residueindex-colormaker.js'\r\nimport './color/resname-colormaker.js'\r\nimport './color/sstruc-colormaker.js'\r\nimport './color/uniform-colormaker.js'\r\nimport './color/value-colormaker.js'\r\nimport './color/volume-colormaker.js'\r\n\r\n//\r\n\r\nimport './component/script-component.js'\r\nimport './component/shape-component.js'\r\nimport './component/structure-component.js'\r\nimport './component/surface-component.js'\r\nimport './component/volume-component.js'\r\n\r\n//\r\n\r\nimport './representation/angle-representation.js'\r\nimport './representation/axes-representation.js'\r\nimport './representation/backbone-representation.js'\r\nimport './representation/ballandstick-representation.js'\r\nimport './representation/base-representation.js'\r\nimport './representation/cartoon-representation.js'\r\nimport './representation/contact-representation.js'\r\nimport './representation/dihedral-representation.js'\r\nimport './representation/distance-representation.js'\r\nimport './representation/helixorient-representation.js'\r\nimport './representation/hyperball-representation.js'\r\nimport './representation/label-representation.js'\r\nimport './representation/licorice-representation.js'\r\nimport './representation/line-representation.js'\r\nimport './representation/molecularsurface-representation.js'\r\nimport './representation/point-representation.js'\r\nimport './representation/ribbon-representation.js'\r\nimport './representation/rocket-representation.js'\r\nimport './representation/rope-representation.js'\r\nimport './representation/spacefill-representation.js'\r\nimport './representation/trace-representation.js'\r\nimport './representation/tube-representation.js'\r\nimport './representation/unitcell-representation.js'\r\nimport './representation/validation-representation.js'\r\n\r\nimport BufferRepresentation from './representation/buffer-representation.js'\r\nimport ArrowBuffer from './buffer/arrow-buffer.js'\r\nimport BoxBuffer from './buffer/box-buffer.js'\r\nimport ConeBuffer from './buffer/cone-buffer.js'\r\nimport CylinderBuffer from './buffer/cylinder-buffer.js'\r\nimport EllipsoidBuffer from './buffer/ellipsoid-buffer.js'\r\nimport OctahedronBuffer from './buffer/octahedron-buffer.js'\r\nimport SphereBuffer from './buffer/sphere-buffer.js'\r\nimport TetrahedronBuffer from './buffer/tetrahedron-buffer.js'\r\nimport TextBuffer from './buffer/text-buffer.js'\r\nimport TorusBuffer from './buffer/torus-buffer.js'\r\n\r\n//\r\n\r\nimport './parser/cif-parser.js'\r\nimport './parser/gro-parser.js'\r\nimport './parser/mmtf-parser.js'\r\nimport './parser/mol2-parser.js'\r\nimport './parser/pdb-parser.js'\r\nimport './parser/pqr-parser.js'\r\nimport './parser/sdf-parser.js'\r\n\r\nimport './parser/prmtop-parser.js'\r\nimport './parser/psf-parser.js'\r\nimport './parser/top-parser.js'\r\n\r\nimport './parser/dcd-parser.js'\r\nimport './parser/nctraj-parser.js'\r\nimport './parser/trr-parser.js'\r\nimport './parser/xtc-parser.js'\r\n\r\nimport './parser/cube-parser.js'\r\nimport './parser/dsn6-parser.js'\r\nimport './parser/dx-parser.js'\r\nimport './parser/dxbin-parser.js'\r\nimport './parser/mrc-parser.js'\r\nimport './parser/xplor-parser.js'\r\n\r\nimport './parser/obj-parser.js'\r\nimport './parser/ply-parser.js'\r\n\r\nimport './parser/csv-parser.js'\r\nimport './parser/json-parser.js'\r\nimport './parser/msgpack-parser.js'\r\nimport './parser/netcdf-parser.js'\r\nimport './parser/text-parser.js'\r\nimport './parser/xml-parser.js'\r\n\r\nimport './parser/validation-parser.js'\r\n\r\n//\r\n\r\nimport Shape from './geometry/shape.js'\r\nimport Kdtree from './geometry/kdtree.js'\r\nimport SpatialHash from './geometry/spatial-hash.js'\r\nimport Structure from './structure/structure.js'\r\nimport MolecularSurface from './surface/molecular-surface.js'\r\nimport Volume from './surface/volume.js'\r\n\r\n//\r\n\r\nimport './utils/gzip-decompressor.js'\r\n\r\n//\r\n\r\nimport './datasource/rcsb-datasource.js'\r\nimport './datasource/pubchem-datasource.js'\r\nimport './datasource/passthrough-datasource.js'\r\nimport StaticDatasource from './datasource/static-datasource.js'\r\nimport MdsrvDatasource from './datasource/mdsrv-datasource.js'\r\n\r\n//\r\n\r\nimport {\r\n  LeftMouseButton, MiddleMouseButton, RightMouseButton\r\n} from './constants.js'\r\nimport MouseActions from './controls/mouse-actions.js'\r\nimport KeyActions from './controls/key-actions.js'\r\n\r\n//\r\n\r\nimport Signal from '../lib/signals.es6.js'\r\nimport {\r\n  Matrix3, Matrix4, Vector2, Vector3, Box3, Quaternion, Euler, Plane, Color\r\n} from '../lib/three.es6.js'\r\n\r\n//\r\n\r\nimport Version from './version.js'\r\n\r\nif (typeof window !== 'undefined' && !window.Promise) {\r\n  window.Promise = _Promise\r\n}\r\n\r\nexport {\r\n  Version,\r\n  Debug,\r\n  setDebug,\r\n  ScriptExtensions,\r\n  DatasourceRegistry,\r\n  DecompressorRegistry,\r\n  StaticDatasource,\r\n  MdsrvDatasource,\r\n  ParserRegistry,\r\n  autoLoad,\r\n  RepresentationRegistry,\r\n  ColormakerRegistry,\r\n  Colormaker,\r\n  Selection,\r\n  PdbWriter,\r\n  SdfWriter,\r\n  StlWriter,\r\n  Stage,\r\n  Collection,\r\n  ComponentCollection,\r\n  RepresentationCollection,\r\n\r\n  Assembly,\r\n  TrajectoryPlayer,\r\n\r\n  superpose,\r\n  Superposition,\r\n  guessElement,\r\n\r\n  flatten,\r\n\r\n  Queue,\r\n  Counter,\r\n  throttle,\r\n  download,\r\n  getQuery,\r\n  getDataInfo,\r\n  getFileInfo,\r\n  uniqueArray,\r\n\r\n  BufferRepresentation,\r\n  ArrowBuffer,\r\n  BoxBuffer,\r\n  ConeBuffer,\r\n  CylinderBuffer,\r\n  EllipsoidBuffer,\r\n  OctahedronBuffer,\r\n  SphereBuffer,\r\n  TetrahedronBuffer,\r\n  TextBuffer,\r\n  TorusBuffer,\r\n\r\n  Shape,\r\n\r\n  Structure,\r\n  Kdtree,\r\n  SpatialHash,\r\n  MolecularSurface,\r\n  Volume,\r\n\r\n  LeftMouseButton,\r\n  MiddleMouseButton,\r\n  RightMouseButton,\r\n  MouseActions,\r\n  KeyActions,\r\n\r\n  Signal,\r\n\r\n  Matrix3,\r\n  Matrix4,\r\n  Vector2,\r\n  Vector3,\r\n  Box3,\r\n  Quaternion,\r\n  Euler,\r\n  Plane,\r\n  Color\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/ngl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1656,
    "kind": "file",
    "name": "src/parser/cif-parser.js",
    "content": "/**\r\n * @file Cif Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport { HelixTypes } from './pdb-parser.js'\r\nimport Entity from '../structure/entity.js'\r\nimport Unitcell from '../symmetry/unitcell.js'\r\nimport Assembly from '../symmetry/assembly.js'\r\nimport Selection from '../selection/selection.js'\r\nimport {\r\n  assignResidueTypeBonds, assignSecondaryStructure, buildUnitcellAssembly,\r\n  calculateBonds, calculateSecondaryStructure\r\n} from '../structure/structure-utils.js'\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reQuotedWhitespace = /'((?:(?!'\\s).)*)'|\"((?:(?!\"\\s).)*)\"|(\\S+)/g\r\nconst reDoubleQuote = /\"/g\r\nconst reTrimQuotes = /^['\"]+|['\"]+$/g\r\n\r\nfunction trimQuotes (str) {\r\n  if (str && str[0] === str[ str.length - 1 ] && (str[0] === \"'\" || str[0] === '\"')) {\r\n    return str.substring(1, str.length - 1)\r\n  } else {\r\n    return str\r\n  }\r\n}\r\n\r\nfunction ensureArray (dict, field) {\r\n  if (!Array.isArray(dict[ field ])) {\r\n    Object.keys(dict).forEach(function (key) {\r\n      dict[ key ] = [ dict[ key ] ]\r\n    })\r\n  }\r\n}\r\n\r\nfunction hasValue (d) {\r\n  return d !== '?'\r\n}\r\n\r\nfunction cifDefaults (value, defaultValue) {\r\n  return hasValue(value) ? value : defaultValue\r\n}\r\n\r\nfunction getBondOrder (valueOrder) {\r\n  switch (valueOrder.toLowerCase()) {\r\n    case '?':  // assume single bond\r\n    case 'sing':\r\n      return 1\r\n    case 'doub':\r\n      return 2\r\n    case 'trip':\r\n      return 3\r\n    case 'quad':\r\n      return 4\r\n  }\r\n  return 0\r\n}\r\n\r\nfunction parseChemComp (cif, structure, structureBuilder) {\r\n  var atomStore = structure.atomStore\r\n  var atomMap = structure.atomMap\r\n\r\n  var i, n\r\n  var cc = cif.chem_comp\r\n  var cca = cif.chem_comp_atom\r\n  var ccb = cif.chem_comp_bond\r\n\r\n  if (cc) {\r\n    if (cc.name) {\r\n      structure.title = cc.name.trim().replace(reTrimQuotes, '')\r\n    }\r\n    if (cc.id) {\r\n      structure.id = cc.id.trim().replace(reTrimQuotes, '')\r\n    }\r\n  }\r\n\r\n  var atomnameDict = {}\r\n\r\n  if (cca) {\r\n    var atomname, element, resname, resno\r\n    n = cca.comp_id.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      atomStore.growIfFull()\r\n\r\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\r\n      element = cca.type_symbol[ i ]\r\n\r\n      atomnameDict[ atomname ] = i\r\n      atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\r\n\r\n      atomStore.x[ i ] = cca.model_Cartn_x[ i ]\r\n      atomStore.y[ i ] = cca.model_Cartn_y[ i ]\r\n      atomStore.z[ i ] = cca.model_Cartn_z[ i ]\r\n      atomStore.serial[ i ] = i\r\n\r\n      resname = cca.pdbx_component_comp_id[ i ]\r\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\r\n\r\n      structureBuilder.addAtom(0, '', '', resname, resno, 1)\r\n    }\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var j = i + n\r\n\r\n      atomStore.growIfFull()\r\n\r\n      atomname = cca.atom_id[ i ].replace(reDoubleQuote, '')\r\n      element = cca.type_symbol[ i ]\r\n\r\n      atomStore.atomTypeId[ j ] = atomMap.add(atomname, element)\r\n\r\n      atomStore.x[ j ] = cca.pdbx_model_Cartn_x_ideal[ i ]\r\n      atomStore.y[ j ] = cca.pdbx_model_Cartn_y_ideal[ i ]\r\n      atomStore.z[ j ] = cca.pdbx_model_Cartn_z_ideal[ i ]\r\n      atomStore.serial[ j ] = j\r\n\r\n      resname = cca.pdbx_component_comp_id[ i ]\r\n      resno = cca.pdbx_residue_numbering ? cca.pdbx_residue_numbering[ i ] : 1\r\n\r\n      structureBuilder.addAtom(1, '', '', resname, resno, 1)\r\n    }\r\n  }\r\n\r\n  if (cca && ccb) {\r\n    var atomname1, atomname2, bondOrder\r\n    n = ccb.comp_id.length\r\n    var na = cca.comp_id.length\r\n\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      atomname1 = ccb.atom_id_1[ i ].replace(reDoubleQuote, '')\r\n      atomname2 = ccb.atom_id_2[ i ].replace(reDoubleQuote, '')\r\n      bondOrder = getBondOrder(ccb.value_order[ i ])\r\n\r\n      ap1.index = atomnameDict[ atomname1 ]\r\n      ap2.index = atomnameDict[ atomname2 ]\r\n      structure.bondStore.growIfFull()\r\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\r\n\r\n      ap1.index += na\r\n      ap2.index += na\r\n      structure.bondStore.growIfFull()\r\n      structure.bondStore.addBond(ap1, ap2, bondOrder)\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseCore (cif, structure, structureBuilder) {\r\n  var atomStore = structure.atomStore\r\n  var atomMap = structure.atomMap\r\n\r\n  if (cif.data) {\r\n    structure.id = cif.data\r\n    structure.name = cif.data\r\n  }\r\n\r\n  structure.unitcell = new Unitcell({\r\n    a: parseFloat(cif.cell_length_a),\r\n    b: parseFloat(cif.cell_length_b),\r\n    c: parseFloat(cif.cell_length_c),\r\n    alpha: parseFloat(cif.cell_angle_alpha),\r\n    beta: parseFloat(cif.cell_angle_beta),\r\n    gamma: parseFloat(cif.cell_angle_gamma),\r\n    spacegroup: trimQuotes(cif.symmetry_space_group_name_H)\r\n  })\r\n\r\n  const v = new Vector3()\r\n  const c = new Vector3()\r\n  const n = cif.atom_site_type_symbol.length\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    atomStore.growIfFull()\r\n\r\n    const atomname = cif.atom_site_label[ i ]\r\n    const element = cif.atom_site_type_symbol[ i ]\r\n\r\n    atomStore.atomTypeId[ i ] = atomMap.add(atomname, element)\r\n\r\n    v.set(\r\n      cif.atom_site_fract_x[ i ],\r\n      cif.atom_site_fract_y[ i ],\r\n      cif.atom_site_fract_z[ i ]\r\n    )\r\n    v.applyMatrix4(structure.unitcell.fracToCart)\r\n    c.add(v)\r\n\r\n    atomStore.x[ i ] = v.x\r\n    atomStore.y[ i ] = v.y\r\n    atomStore.z[ i ] = v.z\r\n    if (cif.atom_site_occupancy) {\r\n      atomStore.occupancy[ i ] = parseFloat(cif.atom_site_occupancy[ i ])\r\n    }\r\n    atomStore.serial[ i ] = i\r\n\r\n    structureBuilder.addAtom(0, '', '', 'HET', 1, 1)\r\n  }\r\n\r\n  c.divideScalar(n)\r\n  structure.center = c\r\n  buildUnitcellAssembly(structure)\r\n\r\n  const v2 = new Vector3()\r\n  const v3 = new Vector3()\r\n  const ml = structure.biomolDict.SUPERCELL.partList[ 0 ].matrixList\r\n\r\n  let k = n\r\n\r\n  function covalent (idx) {\r\n    return atomMap.get(atomStore.atomTypeId[ idx ]).covalent\r\n  }\r\n  const identityMatrix = new Matrix4()\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const covalentI = covalent(i)\r\n\r\n    v.set(\r\n      atomStore.x[ i ],\r\n      atomStore.y[ i ],\r\n      atomStore.z[ i ]\r\n    )\r\n\r\n    ml.forEach(function (m) {\r\n      if (identityMatrix.equals(m)) return\r\n\r\n      v2.copy(v)\r\n      v2.applyMatrix4(m)\r\n\r\n      for (let j = 0; j < n; ++j) {\r\n        v3.set(\r\n          atomStore.x[ j ],\r\n          atomStore.y[ j ],\r\n          atomStore.z[ j ]\r\n        )\r\n\r\n        const distSquared = v2.distanceToSquared(v3)\r\n        const d = covalent(j) + covalentI\r\n        const d1 = d + 0.3\r\n        const d2 = d - 0.5\r\n\r\n        if (distSquared < (d1 * d1) && distSquared > (d2 * d2)) {\r\n          atomStore.growIfFull()\r\n\r\n          atomStore.atomTypeId[ k ] = atomStore.atomTypeId[ i ]\r\n          atomStore.x[ k ] = v2.x\r\n          atomStore.y[ k ] = v2.y\r\n          atomStore.z[ k ] = v2.z\r\n          atomStore.occupancy[ k ] = atomStore.occupancy[ i ]\r\n          atomStore.serial[ k ] = k\r\n          atomStore.altloc[ k ] = 'A'.charCodeAt(0)\r\n\r\n          structureBuilder.addAtom(0, '', '', 'HET', 1, 1)\r\n\r\n          k += 1\r\n          return\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction processSecondaryStructure (cif, structure, asymIdDict) {\r\n  var helices = []\r\n  var sheets = []\r\n\r\n  var i, il, begIcode, endIcode\r\n\r\n  // get helices\r\n  var sc = cif.struct_conf\r\n\r\n  if (sc) {\r\n    ensureArray(sc, 'id')\r\n\r\n    for (i = 0, il = sc.beg_auth_seq_id.length; i < il; ++i) {\r\n      var helixType = parseInt(sc.pdbx_PDB_helix_class[ i ])\r\n      if (!Number.isNaN(helixType)) {\r\n        begIcode = sc.pdbx_beg_PDB_ins_code[ i ]\r\n        endIcode = sc.pdbx_end_PDB_ins_code[ i ]\r\n        helices.push([\r\n          asymIdDict[ sc.beg_label_asym_id[ i ] ],\r\n          parseInt(sc.beg_auth_seq_id[ i ]),\r\n          cifDefaults(begIcode, ''),\r\n          asymIdDict[ sc.end_label_asym_id[ i ] ],\r\n          parseInt(sc.end_auth_seq_id[ i ]),\r\n          cifDefaults(endIcode, ''),\r\n          (HelixTypes[ helixType ] || HelixTypes['']).charCodeAt(0)\r\n        ])\r\n      }\r\n    }\r\n  }\r\n\r\n  // get sheets\r\n  var ssr = cif.struct_sheet_range\r\n\r\n  if (ssr) {\r\n    ensureArray(ssr, 'id')\r\n\r\n    for (i = 0, il = ssr.beg_auth_seq_id.length; i < il; ++i) {\r\n      begIcode = ssr.pdbx_beg_PDB_ins_code[ i ]\r\n      endIcode = ssr.pdbx_end_PDB_ins_code[ i ]\r\n      sheets.push([\r\n        asymIdDict[ ssr.beg_label_asym_id[ i ] ],\r\n        parseInt(ssr.beg_auth_seq_id[ i ]),\r\n        cifDefaults(begIcode, ''),\r\n        asymIdDict[ ssr.end_label_asym_id[ i ] ],\r\n        parseInt(ssr.end_auth_seq_id[ i ]),\r\n        cifDefaults(endIcode, '')\r\n      ])\r\n    }\r\n  }\r\n\r\n  if (sc || ssr) {\r\n    return {\r\n      helices: helices,\r\n      sheets: sheets\r\n    }\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction processSymmetry (cif, structure, asymIdDict) {\r\n  // biomol & ncs processing\r\n  var operDict = {}\r\n  var biomolDict = structure.biomolDict\r\n\r\n  if (cif.pdbx_struct_oper_list) {\r\n    var biomolOp = cif.pdbx_struct_oper_list\r\n    ensureArray(biomolOp, 'id')\r\n\r\n    biomolOp.id.forEach(function (id, i) {\r\n      var m = new Matrix4()\r\n      var elms = m.elements\r\n\r\n      elms[ 0 ] = parseFloat(biomolOp[ 'matrix[1][1]' ][ i ])\r\n      elms[ 1 ] = parseFloat(biomolOp[ 'matrix[1][2]' ][ i ])\r\n      elms[ 2 ] = parseFloat(biomolOp[ 'matrix[1][3]' ][ i ])\r\n\r\n      elms[ 4 ] = parseFloat(biomolOp[ 'matrix[2][1]' ][ i ])\r\n      elms[ 5 ] = parseFloat(biomolOp[ 'matrix[2][2]' ][ i ])\r\n      elms[ 6 ] = parseFloat(biomolOp[ 'matrix[2][3]' ][ i ])\r\n\r\n      elms[ 8 ] = parseFloat(biomolOp[ 'matrix[3][1]' ][ i ])\r\n      elms[ 9 ] = parseFloat(biomolOp[ 'matrix[3][2]' ][ i ])\r\n      elms[ 10 ] = parseFloat(biomolOp[ 'matrix[3][3]' ][ i ])\r\n\r\n      elms[ 3 ] = parseFloat(biomolOp[ 'vector[1]' ][ i ])\r\n      elms[ 7 ] = parseFloat(biomolOp[ 'vector[2]' ][ i ])\r\n      elms[ 11 ] = parseFloat(biomolOp[ 'vector[3]' ][ i ])\r\n\r\n      m.transpose()\r\n\r\n      operDict[ id ] = m\r\n    })\r\n  }\r\n\r\n  if (cif.pdbx_struct_assembly_gen) {\r\n    var gen = cif.pdbx_struct_assembly_gen\r\n    ensureArray(gen, 'assembly_id')\r\n\r\n    var getMatrixDict = function (expr) {\r\n      var matDict = {}\r\n\r\n      var l = expr.replace(/[()']/g, '').split(',')\r\n\r\n      l.forEach(function (e) {\r\n        if (e.includes('-')) {\r\n          var es = e.split('-')\r\n\r\n          var j = parseInt(es[ 0 ])\r\n          var m = parseInt(es[ 1 ])\r\n\r\n          for (; j <= m; ++j) {\r\n            matDict[ j ] = operDict[ j ]\r\n          }\r\n        } else {\r\n          matDict[ e ] = operDict[ e ]\r\n        }\r\n      })\r\n\r\n      return matDict\r\n    }\r\n\r\n    gen.assembly_id.forEach(function (id, i) {\r\n      var md = {}\r\n      var oe = gen.oper_expression[ i ].replace(/['\"]\\(|['\"]/g, '')\r\n\r\n      if (oe.includes(')(') || oe.indexOf('(') > 0) {\r\n        oe = oe.split('(')\r\n\r\n        var md1 = getMatrixDict(oe[ 0 ])\r\n        var md2 = getMatrixDict(oe[ 1 ])\r\n\r\n        Object.keys(md1).forEach(function (k1) {\r\n          Object.keys(md2).forEach(function (k2) {\r\n            var mat = new Matrix4()\r\n\r\n            mat.multiplyMatrices(md1[ k1 ], md2[ k2 ])\r\n            md[ k1 + 'x' + k2 ] = mat\r\n          })\r\n        })\r\n      } else {\r\n        md = getMatrixDict(oe)\r\n      }\r\n\r\n      var matrixList = []\r\n      for (var k in md) {\r\n        matrixList.push(md[ k ])\r\n      }\r\n\r\n      var name = id\r\n      if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\r\n\r\n      var chainList = gen.asym_id_list[ i ].split(',')\r\n      for (var j = 0, jl = chainList.length; j < jl; ++j) {\r\n        chainList[ j ] = asymIdDict[ chainList[ j ] ]\r\n      }\r\n\r\n      if (biomolDict[ name ] === undefined) {\r\n        biomolDict[ name ] = new Assembly(name)\r\n      }\r\n      biomolDict[ name ].addPart(matrixList, chainList)\r\n    })\r\n  }\r\n\r\n  // non-crystallographic symmetry operations\r\n  if (cif.struct_ncs_oper) {\r\n    var ncsOp = cif.struct_ncs_oper\r\n    ensureArray(ncsOp, 'id')\r\n\r\n    var ncsName = 'NCS'\r\n    biomolDict[ ncsName ] = new Assembly(ncsName)\r\n    var ncsPart = biomolDict[ ncsName ].addPart()\r\n\r\n    ncsOp.id.forEach(function (id, i) {\r\n      // ignore 'given' operators\r\n      if (ncsOp.code[ i ] === 'given') return\r\n\r\n      var m = new Matrix4()\r\n      var elms = m.elements\r\n\r\n      elms[ 0 ] = parseFloat(ncsOp[ 'matrix[1][1]' ][ i ])\r\n      elms[ 1 ] = parseFloat(ncsOp[ 'matrix[1][2]' ][ i ])\r\n      elms[ 2 ] = parseFloat(ncsOp[ 'matrix[1][3]' ][ i ])\r\n\r\n      elms[ 4 ] = parseFloat(ncsOp[ 'matrix[2][1]' ][ i ])\r\n      elms[ 5 ] = parseFloat(ncsOp[ 'matrix[2][2]' ][ i ])\r\n      elms[ 6 ] = parseFloat(ncsOp[ 'matrix[2][3]' ][ i ])\r\n\r\n      elms[ 8 ] = parseFloat(ncsOp[ 'matrix[3][1]' ][ i ])\r\n      elms[ 9 ] = parseFloat(ncsOp[ 'matrix[3][2]' ][ i ])\r\n      elms[ 10 ] = parseFloat(ncsOp[ 'matrix[3][3]' ][ i ])\r\n\r\n      elms[ 3 ] = parseFloat(ncsOp[ 'vector[1]' ][ i ])\r\n      elms[ 7 ] = parseFloat(ncsOp[ 'vector[2]' ][ i ])\r\n      elms[ 11 ] = parseFloat(ncsOp[ 'vector[3]' ][ i ])\r\n\r\n      m.transpose()\r\n\r\n      ncsPart.matrixList.push(m)\r\n    })\r\n\r\n    if (ncsPart.matrixList.length === 0) {\r\n      delete biomolDict[ ncsName ]\r\n    }\r\n  }\r\n\r\n  // cell & symmetry\r\n  var unitcellDict = {}\r\n\r\n  if (cif.cell) {\r\n    var cell = cif.cell\r\n\r\n    var a = parseFloat(cell.length_a)\r\n    var b = parseFloat(cell.length_b)\r\n    var c = parseFloat(cell.length_c)\r\n\r\n    var box = new Float32Array(9)\r\n    box[ 0 ] = a\r\n    box[ 4 ] = b\r\n    box[ 8 ] = c\r\n    structure.boxes.push(box)\r\n\r\n    unitcellDict.a = a\r\n    unitcellDict.b = b\r\n    unitcellDict.c = c\r\n    unitcellDict.alpha = parseFloat(cell.angle_alpha)\r\n    unitcellDict.beta = parseFloat(cell.angle_beta)\r\n    unitcellDict.gamma = parseFloat(cell.angle_gamma)\r\n  }\r\n\r\n  if (cif.symmetry) {\r\n    unitcellDict.spacegroup = trimQuotes(\r\n            cif.symmetry[ 'space_group_name_H-M' ]\r\n        )\r\n  }\r\n\r\n  // origx\r\n  var origx = new Matrix4()\r\n\r\n  if (cif.database_PDB_matrix) {\r\n    var origxMat = cif.database_PDB_matrix\r\n    var origxElms = origx.elements\r\n\r\n    origxElms[ 0 ] = parseFloat(origxMat[ 'origx[1][1]' ])\r\n    origxElms[ 1 ] = parseFloat(origxMat[ 'origx[1][2]' ])\r\n    origxElms[ 2 ] = parseFloat(origxMat[ 'origx[1][3]' ])\r\n\r\n    origxElms[ 4 ] = parseFloat(origxMat[ 'origx[2][1]' ])\r\n    origxElms[ 5 ] = parseFloat(origxMat[ 'origx[2][2]' ])\r\n    origxElms[ 6 ] = parseFloat(origxMat[ 'origx[2][3]' ])\r\n\r\n    origxElms[ 8 ] = parseFloat(origxMat[ 'origx[3][1]' ])\r\n    origxElms[ 9 ] = parseFloat(origxMat[ 'origx[3][2]' ])\r\n    origxElms[ 10 ] = parseFloat(origxMat[ 'origx[3][3]' ])\r\n\r\n    origxElms[ 3 ] = parseFloat(origxMat[ 'origx_vector[1]' ])\r\n    origxElms[ 7 ] = parseFloat(origxMat[ 'origx_vector[2]' ])\r\n    origxElms[ 11 ] = parseFloat(origxMat[ 'origx_vector[3]' ])\r\n\r\n    origx.transpose()\r\n\r\n    unitcellDict.origx = origx\r\n  }\r\n\r\n  // scale\r\n  var scale = new Matrix4()\r\n\r\n  if (cif.atom_sites) {\r\n    var scaleMat = cif.atom_sites\r\n    var scaleElms = scale.elements\r\n\r\n    scaleElms[ 0 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][1]' ])\r\n    scaleElms[ 1 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][2]' ])\r\n    scaleElms[ 2 ] = parseFloat(scaleMat[ 'fract_transf_matrix[1][3]' ])\r\n\r\n    scaleElms[ 4 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][1]' ])\r\n    scaleElms[ 5 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][2]' ])\r\n    scaleElms[ 6 ] = parseFloat(scaleMat[ 'fract_transf_matrix[2][3]' ])\r\n\r\n    scaleElms[ 8 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][1]' ])\r\n    scaleElms[ 9 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][2]' ])\r\n    scaleElms[ 10 ] = parseFloat(scaleMat[ 'fract_transf_matrix[3][3]' ])\r\n\r\n    scaleElms[ 3 ] = parseFloat(scaleMat[ 'fract_transf_vector[1]' ])\r\n    scaleElms[ 7 ] = parseFloat(scaleMat[ 'fract_transf_vector[2]' ])\r\n    scaleElms[ 11 ] = parseFloat(scaleMat[ 'fract_transf_vector[3]' ])\r\n\r\n    scale.transpose()\r\n\r\n    unitcellDict.scale = scale\r\n  }\r\n\r\n  if (unitcellDict.a !== undefined) {\r\n    structure.unitcell = new Unitcell(unitcellDict)\r\n  } else {\r\n    structure.unitcell = undefined\r\n  }\r\n}\r\n\r\nfunction processConnections (cif, structure, asymIdDict) {\r\n  // add connections\r\n  var sc = cif.struct_conn\r\n\r\n  if (sc) {\r\n    ensureArray(sc, 'id')\r\n\r\n    var reDoubleQuote = /\"/g\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n    var atomIndicesCache = {}\r\n\r\n    for (var i = 0, il = sc.id.length; i < il; ++i) {\r\n      // ignore:\r\n      // hydrog - hydrogen bond\r\n      // mismat - mismatched base pairs\r\n      // saltbr - ionic interaction\r\n\r\n      var connTypeId = sc.conn_type_id[ i ]\r\n      if (connTypeId === 'hydrog' ||\r\n          connTypeId === 'mismat' ||\r\n          connTypeId === 'saltbr') continue\r\n\r\n      // ignore bonds between symmetry mates\r\n      if (sc.ptnr1_symmetry[ i ] !== '1_555' ||\r\n          sc.ptnr2_symmetry[ i ] !== '1_555') continue\r\n\r\n      // process:\r\n      // covale - covalent bond\r\n      // covale_base -\r\n      //      covalent modification of a nucleotide base\r\n      // covale_phosphate -\r\n      //      covalent modification of a nucleotide phosphate\r\n      // covale_sugar -\r\n      //      covalent modification of a nucleotide sugar\r\n      // disulf - disulfide bridge\r\n      // metalc - metal coordination\r\n      // modres - covalent residue modification\r\n\r\n      var inscode1 = sc.pdbx_ptnr1_PDB_ins_code[ i ]\r\n      var altloc1 = sc.pdbx_ptnr1_label_alt_id[ i ]\r\n      var sele1 = (\r\n        sc.ptnr1_auth_seq_id[ i ] +\r\n        (hasValue(inscode1) ? ('^' + inscode1) : '') +\r\n        ':' + asymIdDict[ sc.ptnr1_label_asym_id[ i ] ] +\r\n        '.' + sc.ptnr1_label_atom_id[ i ].replace(reDoubleQuote, '') +\r\n        (hasValue(altloc1) ? ('%' + altloc1) : '')\r\n      )\r\n      var atomIndices1 = atomIndicesCache[ sele1 ]\r\n      if (!atomIndices1) {\r\n        var selection1 = new Selection(sele1)\r\n        if (selection1.selection.error) {\r\n          if (Debug) Log.warn('invalid selection for connection', sele1)\r\n          continue\r\n        }\r\n        atomIndices1 = structure.getAtomIndices(selection1)\r\n        atomIndicesCache[ sele1 ] = atomIndices1\r\n      }\r\n\r\n      var inscode2 = sc.pdbx_ptnr2_PDB_ins_code[ i ]\r\n      var altloc2 = sc.pdbx_ptnr2_label_alt_id[ i ]\r\n      var sele2 = (\r\n        sc.ptnr2_auth_seq_id[ i ] +\r\n        (hasValue(inscode2) ? ('^' + inscode2) : '') +\r\n        ':' + asymIdDict[ sc.ptnr2_label_asym_id[ i ] ] +\r\n        '.' + sc.ptnr2_label_atom_id[ i ].replace(reDoubleQuote, '') +\r\n        (hasValue(altloc2) ? ('%' + altloc2) : '')\r\n      )\r\n      var atomIndices2 = atomIndicesCache[ sele2 ]\r\n      if (!atomIndices2) {\r\n        var selection2 = new Selection(sele2)\r\n        if (selection2.selection.error) {\r\n          if (Debug) Log.warn('invalid selection for connection', sele2)\r\n          continue\r\n        }\r\n        atomIndices2 = structure.getAtomIndices(selection2)\r\n        atomIndicesCache[ sele2 ] = atomIndices2\r\n      }\r\n\r\n      // cases with more than one atom per selection\r\n      // - #altloc1 to #altloc2\r\n      // - #model to #model\r\n      // - #altloc1 * #model to #altloc2 * #model\r\n\r\n      var k = atomIndices1.length\r\n      var l = atomIndices2.length\r\n\r\n      if (k > l) {\r\n        var tmpA = k\r\n        k = l\r\n        l = tmpA\r\n        var tmpB = atomIndices1\r\n        atomIndices1 = atomIndices2\r\n        atomIndices2 = tmpB\r\n      }\r\n\r\n      // console.log( k, l );\r\n\r\n      if (k === 0 || l === 0) {\r\n        if (Debug) Log.warn('no atoms found for', sele1, sele2)\r\n        continue\r\n      }\r\n\r\n      for (var j = 0; j < l; ++j) {\r\n        ap1.index = atomIndices1[ j % k ]\r\n        ap2.index = atomIndices2[ j ]\r\n\r\n        if (ap1 && ap2) {\r\n          structure.bondStore.addBond(\r\n            ap1, ap2, getBondOrder(sc.pdbx_value_order[ i ])\r\n          )\r\n        } else {\r\n          Log.log('atoms for connection not found')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction processEntities (cif, structure, chainIndexDict) {\r\n  if (cif.entity) {\r\n    ensureArray(cif.entity, 'id')\r\n    var e = cif.entity\r\n    var n = e.id.length\r\n    for (var i = 0; i < n; ++i) {\r\n      var description = e.pdbx_description[ i ]\r\n      var type = e.type[ i ]\r\n      var chainIndexList = Array.from(chainIndexDict[ e.id[ i ] ])\r\n      structure.entityList[ i ] = new Entity(\r\n        structure, i, description, type, chainIndexList\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\n//\r\n\r\nclass CifParser extends StructureParser {\r\n  get type () { return 'cif' }\r\n\r\n  _parse () {\r\n    // http://mmcif.wwpdb.org/\r\n\r\n    Log.time('CifParser._parse ' + this.name)\r\n\r\n    var s = this.structure\r\n    var sb = this.structureBuilder\r\n\r\n    var firstModelOnly = this.firstModelOnly\r\n    var asTrajectory = this.asTrajectory\r\n    var cAlphaOnly = this.cAlphaOnly\r\n\r\n    var frames = s.frames\r\n    var currentFrame, currentCoord\r\n\r\n    var rawline, line\r\n\r\n    //\r\n\r\n    var cif = {}\r\n    var asymIdDict = {}\r\n    var chainIndexDict = {}\r\n\r\n    var pendingString = false\r\n    var currentString = null\r\n    var pendingValue = false\r\n    var pendingLoop = false\r\n    var pendingName = false\r\n    var loopPointers = []\r\n    var currentLoopIndex = null\r\n    var currentCategory = null\r\n    var currentName = null\r\n    var first = null\r\n    var pointerNames = []\r\n\r\n    var authAsymId, authSeqId,\r\n      labelAtomId, labelCompId, labelAsymId, labelEntityId, labelAltId,\r\n      groupPDB, id, typeSymbol, pdbxPDBmodelNum, pdbxPDBinsCode,\r\n      CartnX, CartnY, CartnZ, bIsoOrEquiv, occupancy\r\n\r\n    //\r\n\r\n    var atomMap = s.atomMap\r\n    var atomStore = s.atomStore\r\n    atomStore.resize(this.streamer.data.length / 100)\r\n\r\n    var idx = 0\r\n    var modelIdx = 0\r\n    var modelNum\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (var i = _i; i < _n; ++i) {\r\n        rawline = lines[i]\r\n        line = rawline.trim()\r\n\r\n        if ((!line && !pendingString && !pendingLoop) || line[0] === '#') {\r\n          // Log.log( \"NEW BLOCK\" );\r\n\r\n          pendingString = false\r\n          pendingLoop = false\r\n          pendingValue = false\r\n          loopPointers.length = 0\r\n          currentLoopIndex = null\r\n          currentCategory = null\r\n          currentName = null\r\n          first = null\r\n          pointerNames.length = 0\r\n        } else if (line.substring(0, 5) === 'data_') {\r\n          cif.data = line.substring(5).trim()\r\n\r\n          // Log.log( \"DATA\", data );\r\n        } else if (line[0] === ';') {\r\n          if (pendingString) {\r\n            // Log.log( \"STRING END\", currentString );\r\n\r\n            if (pendingLoop) {\r\n              if (currentLoopIndex === loopPointers.length) {\r\n                currentLoopIndex = 0\r\n              }\r\n              loopPointers[ currentLoopIndex ].push(currentString)\r\n              currentLoopIndex += 1\r\n            } else {\r\n              if (currentName === false) {\r\n                cif[ currentCategory ] = currentString\r\n              } else {\r\n                cif[ currentCategory ][ currentName ] = currentString\r\n              }\r\n            }\r\n\r\n            pendingString = false\r\n            currentString = null\r\n          } else {\r\n            // Log.log( \"STRING START\" );\r\n\r\n            pendingString = true\r\n            currentString = line.substring(1)\r\n          }\r\n        } else if (line === 'loop_') {\r\n          // Log.log( \"LOOP START\" );\r\n\r\n          pendingLoop = true\r\n          pendingName = true\r\n          loopPointers.length = 0\r\n          pointerNames.length = 0\r\n          currentLoopIndex = 0\r\n        } else if (line[0] === '_') {\r\n          var keyParts, category, name\r\n\r\n          if (pendingLoop && !pendingName) {\r\n            pendingLoop = false\r\n          }\r\n\r\n          if (pendingLoop) {\r\n            // Log.log( \"LOOP KEY\", line );\r\n\r\n            keyParts = line.split('.')\r\n            category = keyParts[ 0 ].substring(1)\r\n            name = keyParts[ 1 ]\r\n\r\n            if (keyParts.length === 1) {\r\n              name = false\r\n              if (!cif[ category ]) cif[ category ] = []\r\n              loopPointers.push(cif[ category ])\r\n            } else {\r\n              if (!cif[ category ]) cif[ category ] = {}\r\n              if (cif[ category ][ name ]) {\r\n                if (Debug) Log.warn(category, name, 'already exists')\r\n              } else {\r\n                cif[ category ][ name ] = []\r\n                loopPointers.push(cif[ category ][ name ])\r\n                pointerNames.push(name)\r\n              }\r\n            }\r\n\r\n            currentCategory = category\r\n            currentName = name\r\n            first = true\r\n          } else {\r\n            var keyValuePair = line.match(reQuotedWhitespace)\r\n            var key = keyValuePair[ 0 ]\r\n            var value = keyValuePair[ 1 ]\r\n            keyParts = key.split('.')\r\n            category = keyParts[ 0 ].substring(1)\r\n            name = keyParts[ 1 ]\r\n\r\n            if (keyParts.length === 1) {\r\n              name = false\r\n              cif[ category ] = value\r\n            } else {\r\n              if (!cif[ category ]) cif[ category ] = {}\r\n\r\n              if (cif[ category ][ name ]) {\r\n                if (Debug) Log.warn(category, name, 'already exists')\r\n              } else {\r\n                cif[ category ][ name ] = value\r\n              }\r\n            }\r\n\r\n            if (!value) pendingValue = true\r\n\r\n            currentCategory = category\r\n            currentName = name\r\n          }\r\n        } else {\r\n          if (pendingString) {\r\n            // Log.log( \"STRING VALUE\", line );\r\n\r\n            currentString += rawline\r\n          } else if (pendingLoop) {\r\n            // Log.log( \"LOOP VALUE\", line );\r\n\r\n            if (!line) {\r\n              continue\r\n            } else if (currentCategory === 'atom_site') {\r\n              const ls = line.split(reWhitespace)\r\n\r\n              if (first) {\r\n                authAsymId = pointerNames.indexOf('auth_asym_id')\r\n                authSeqId = pointerNames.indexOf('auth_seq_id')\r\n                labelAtomId = pointerNames.indexOf('label_atom_id')\r\n                labelCompId = pointerNames.indexOf('label_comp_id')\r\n                labelAsymId = pointerNames.indexOf('label_asym_id')\r\n                labelEntityId = pointerNames.indexOf('label_entity_id')\r\n                labelAltId = pointerNames.indexOf('label_alt_id')\r\n                CartnX = pointerNames.indexOf('Cartn_x')\r\n                CartnY = pointerNames.indexOf('Cartn_y')\r\n                CartnZ = pointerNames.indexOf('Cartn_z')\r\n                id = pointerNames.indexOf('id')\r\n                typeSymbol = pointerNames.indexOf('type_symbol')\r\n                groupPDB = pointerNames.indexOf('group_PDB')\r\n                bIsoOrEquiv = pointerNames.indexOf('B_iso_or_equiv')\r\n                pdbxPDBmodelNum = pointerNames.indexOf('pdbx_PDB_model_num')\r\n\r\n                pdbxPDBinsCode = pointerNames.indexOf('pdbx_PDB_ins_code')\r\n                occupancy = pointerNames.indexOf('occupancy')\r\n\r\n                first = false\r\n\r\n                modelNum = parseInt(ls[ pdbxPDBmodelNum ])\r\n\r\n                if (asTrajectory) {\r\n                  currentFrame = []\r\n                  currentCoord = 0\r\n                }\r\n              }\r\n\r\n              //\r\n\r\n              const _modelNum = parseInt(ls[ pdbxPDBmodelNum ])\r\n\r\n              if (modelNum !== _modelNum) {\r\n                if (asTrajectory) {\r\n                  if (modelIdx === 0) {\r\n                    frames.push(new Float32Array(currentFrame))\r\n                  }\r\n\r\n                  currentFrame = new Float32Array(atomStore.count * 3)\r\n                  frames.push(currentFrame)\r\n                  currentCoord = 0\r\n                }\r\n\r\n                modelIdx += 1\r\n              }\r\n\r\n              modelNum = _modelNum\r\n\r\n              if (firstModelOnly && modelIdx > 0) continue\r\n\r\n              //\r\n\r\n              const atomname = ls[ labelAtomId ].replace(reDoubleQuote, '')\r\n              if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n              const x = parseFloat(ls[ CartnX ])\r\n              const y = parseFloat(ls[ CartnY ])\r\n              const z = parseFloat(ls[ CartnZ ])\r\n\r\n              if (asTrajectory) {\r\n                const frameOffset = currentCoord * 3\r\n\r\n                currentFrame[ frameOffset + 0 ] = x\r\n                currentFrame[ frameOffset + 1 ] = y\r\n                currentFrame[ frameOffset + 2 ] = z\r\n\r\n                currentCoord += 1\r\n\r\n                if (modelIdx > 0) continue\r\n              }\r\n\r\n              //\r\n\r\n              const resname = ls[ labelCompId ]\r\n              const resno = parseInt(ls[ authSeqId ])\r\n              let inscode = ls[ pdbxPDBinsCode ]\r\n              inscode = (inscode === '?') ? '' : inscode\r\n              const chainname = ls[ authAsymId ]\r\n              const chainid = ls[ labelAsymId ]\r\n              const hetero = (ls[ groupPDB ][ 0 ] === 'H') ? 1 : 0\r\n\r\n              //\r\n\r\n              const element = ls[ typeSymbol ]\r\n              const bfactor = parseFloat(ls[ bIsoOrEquiv ])\r\n              const occ = parseFloat(ls[ occupancy ])\r\n              let altloc = ls[ labelAltId ]\r\n              altloc = (altloc === '.') ? '' : altloc\r\n\r\n              atomStore.growIfFull()\r\n              atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n              atomStore.x[ idx ] = x\r\n              atomStore.y[ idx ] = y\r\n              atomStore.z[ idx ] = z\r\n              atomStore.serial[ idx ] = parseInt(ls[ id ])\r\n              atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\r\n              atomStore.occupancy[ idx ] = isNaN(occ) ? 0 : occ\r\n              atomStore.altloc[ idx ] = altloc.charCodeAt(0)\r\n\r\n              sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\r\n\r\n              if (Debug) {\r\n                // check if one-to-many (chainname-asymId) relationship is\r\n                // actually a many-to-many mapping\r\n                const assignedChainname = asymIdDict[ chainid ]\r\n                if (assignedChainname !== undefined && assignedChainname !== chainname) {\r\n                  if (Debug) Log.warn(assignedChainname, chainname)\r\n                }\r\n              }\r\n              // chainname mapping: label_asym_id -> auth_asym_id\r\n              asymIdDict[ chainid ] = chainname\r\n\r\n              // entity mapping: chainIndex -> label_entity_id\r\n              const entityId = ls[ labelEntityId ]\r\n              if (!chainIndexDict[ entityId ]) {\r\n                chainIndexDict[ entityId ] = new Set()\r\n              }\r\n              chainIndexDict[ entityId ].add(s.chainStore.count - 1)\r\n\r\n              idx += 1\r\n            } else {\r\n              const ls = line.match(reQuotedWhitespace)\r\n              const nn = ls.length\r\n\r\n              if (currentLoopIndex === loopPointers.length) {\r\n                currentLoopIndex = 0\r\n              }/* else if( currentLoopIndex + nn > loopPointers.length ){\r\n                Log.warn( \"cif parsing error, wrong number of loop data entries\", nn, loopPointers.length );\r\n              } */\r\n\r\n              for (let j = 0; j < nn; ++j) {\r\n                loopPointers[ currentLoopIndex + j ].push(ls[ j ])\r\n              }\r\n\r\n              currentLoopIndex += nn\r\n            }\r\n\r\n            pendingName = false\r\n          } else if (line[0] === \"'\" && line[line.length - 1] === \"'\") {\r\n            // Log.log( \"NEWLINE STRING\", line );\r\n\r\n            const str = line.substring(1, line.length - 1)\r\n\r\n            if (currentName === false) {\r\n              cif[ currentCategory ] = str\r\n            } else {\r\n              cif[ currentCategory ][ currentName ] = str\r\n            }\r\n          } else if (pendingValue) {\r\n            // Log.log( \"NEWLINE VALUE\", line );\r\n\r\n            if (currentName === false) {\r\n              cif[ currentCategory ] = line\r\n            } else {\r\n              cif[ currentCategory ][ currentName ] = line\r\n            }\r\n          } else {\r\n            if (Debug) Log.log('CifParser._parse: unknown state', line)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    if (cif.chem_comp && cif.chem_comp_atom) {\r\n      parseChemComp(cif, s, sb)\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      s.finalizeBonds()\r\n      assignResidueTypeBonds(s)\r\n    } else if (cif.atom_site_type_symbol && cif.atom_site_label && cif.atom_site_fract_x) {\r\n      parseCore(cif, s, sb)\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      calculateBonds(s)\r\n      s.finalizeBonds()\r\n      // assignResidueTypeBonds( s );\r\n    } else {\r\n      var secStruct = processSecondaryStructure(cif, s, asymIdDict)\r\n      processSymmetry(cif, s, asymIdDict)\r\n      processConnections(cif, s, asymIdDict)\r\n      processEntities(cif, s, chainIndexDict)\r\n\r\n      if (cif.struct && cif.struct.title) {\r\n        s.title = cif.struct.title.trim().replace(reTrimQuotes, '')\r\n      }\r\n      if (cif.entry && cif.entry.id) {\r\n        s.id = cif.entry.id.trim().replace(reTrimQuotes, '')\r\n      }\r\n\r\n      // structure header (mimicking biojava)\r\n      if (cif.pdbx_audit_revision_history) {\r\n        if (cif.pdbx_audit_revision_history.revision_date) {\r\n          ensureArray(cif.pdbx_audit_revision_history, 'revision_date')\r\n          const dates = cif.pdbx_audit_revision_history.revision_date.filter(hasValue)\r\n          if (dates.length) {\r\n            s.header.releaseDate = dates[ 0 ]\r\n          }\r\n        }\r\n        if (cif.pdbx_database_status.recvd_initial_deposition_date) {\r\n          ensureArray(cif.pdbx_database_status, 'recvd_initial_deposition_date')\r\n          const depDates = cif.pdbx_database_status.recvd_initial_deposition_date.filter(hasValue)\r\n          if (depDates.length) {\r\n            s.header.depositionDate = depDates[ 0 ]\r\n          }\r\n        }\r\n      } else if (cif.database_PDB_rev) {\r\n        if (cif.database_PDB_rev.date) {\r\n          ensureArray(cif.database_PDB_rev, 'date')\r\n          const dates = cif.database_PDB_rev.date.filter(hasValue)\r\n          if (dates.length) {\r\n            s.header.releaseDate = dates[ 0 ]\r\n          }\r\n        }\r\n        if (cif.database_PDB_rev.date_original) {\r\n          ensureArray(cif.database_PDB_rev, 'date_original')\r\n          const depDates = cif.database_PDB_rev.date_original.filter(hasValue)\r\n          if (depDates.length) {\r\n            s.header.depositionDate = depDates[ 0 ]\r\n          }\r\n        }\r\n      }\r\n      if (cif.reflns && cif.reflns.d_resolution_high) {\r\n        if (hasValue(cif.reflns.d_resolution_high)) {\r\n          s.header.resolution = parseFloat(cif.reflns.d_resolution_high)\r\n        }\r\n      } else if (cif.refine && cif.refine.ls_d_res_high) {\r\n        if (hasValue(cif.refine.ls_d_res_high)) {\r\n          s.header.resolution = parseFloat(cif.refine.ls_d_res_high)\r\n        }\r\n      }\r\n      if (cif.refine && cif.refine.ls_R_factor_R_free) {\r\n        if (hasValue(cif.refine.ls_R_factor_R_free)) {\r\n          s.header.rFree = parseFloat(cif.refine.ls_R_factor_R_free)\r\n        }\r\n      }\r\n      if (cif.refine && cif.refine.ls_R_factor_R_work) {\r\n        if (hasValue(cif.refine.ls_R_factor_R_work)) {\r\n          s.header.rWork = parseFloat(cif.refine.ls_R_factor_R_work)\r\n        }\r\n      }\r\n      if (cif.exptl && cif.exptl.method) {\r\n        ensureArray(cif.exptl, 'method')\r\n        s.header.experimentalMethods = cif.exptl.method.map(function (m) {\r\n          return m.replace(reTrimQuotes, '')\r\n        })\r\n      }\r\n\r\n      sb.finalize()\r\n      s.finalizeAtoms()\r\n      calculateBonds(s)\r\n      s.finalizeBonds()\r\n\r\n      if (!secStruct) {\r\n        calculateSecondaryStructure(s)\r\n      } else {\r\n        assignSecondaryStructure(s, secStruct)\r\n      }\r\n      buildUnitcellAssembly(s)\r\n\r\n      s.extraData.cif = cif\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('CifParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('cif', CifParser)\r\nParserRegistry.add('mcif', CifParser)\r\nParserRegistry.add('mmcif', CifParser)\r\n\r\nexport default CifParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/cif-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1657,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/cif-parser.js",
    "static": true,
    "longname": "src/parser/cif-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1658,
    "kind": "variable",
    "name": "reQuotedWhitespace",
    "memberof": "src/parser/cif-parser.js",
    "static": true,
    "longname": "src/parser/cif-parser.js~reQuotedWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1659,
    "kind": "variable",
    "name": "reDoubleQuote",
    "memberof": "src/parser/cif-parser.js",
    "static": true,
    "longname": "src/parser/cif-parser.js~reDoubleQuote",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1660,
    "kind": "variable",
    "name": "reTrimQuotes",
    "memberof": "src/parser/cif-parser.js",
    "static": true,
    "longname": "src/parser/cif-parser.js~reTrimQuotes",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1661,
    "kind": "function",
    "name": "trimQuotes",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~trimQuotes",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1662,
    "kind": "function",
    "name": "ensureArray",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~ensureArray",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1663,
    "kind": "function",
    "name": "hasValue",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~hasValue",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1664,
    "kind": "function",
    "name": "cifDefaults",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~cifDefaults",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1665,
    "kind": "function",
    "name": "getBondOrder",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~getBondOrder",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1666,
    "kind": "function",
    "name": "parseChemComp",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~parseChemComp",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1667,
    "kind": "function",
    "name": "parseCore",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~parseCore",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 157,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1668,
    "kind": "function",
    "name": "processSecondaryStructure",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~processSecondaryStructure",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1669,
    "kind": "function",
    "name": "processSymmetry",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~processSymmetry",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1670,
    "kind": "function",
    "name": "processConnections",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~processConnections",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 569,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1671,
    "kind": "function",
    "name": "processEntities",
    "memberof": "src/parser/cif-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/cif-parser.js~processEntities",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 688,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1672,
    "kind": "class",
    "name": "CifParser",
    "memberof": "src/parser/cif-parser.js",
    "static": true,
    "longname": "src/parser/cif-parser.js~CifParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/cif-parser.js",
    "importStyle": "CifParser",
    "description": null,
    "lineNumber": 706,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1673,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/cif-parser.js~CifParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/cif-parser.js~CifParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 707,
    "undocument": true
  },
  {
    "__docId__": 1674,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/cif-parser.js~CifParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/cif-parser.js~CifParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 709,
    "undocument": true
  },
  {
    "__docId__": 1675,
    "kind": "file",
    "name": "src/parser/csv-parser.js",
    "content": "/**\r\n * @file Csv Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { ParserRegistry } from '../globals.js'\r\nimport Parser from './parser.js'\r\n\r\n/**\r\n * CSV parser\r\n */\r\nclass CsvParser extends Parser {\r\n    /**\r\n     * [constructor description]\r\n     * @param  {Streamer} streamer - the streamer object\r\n     * @param  {Object} params - parameter object\r\n     * @param  {Char} params.delimiter - delimiter character\r\n     * @param  {Char} params.comment - comment character\r\n     * @param  {Boolean} params.columnNames - use first data line as column names\r\n     */\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.delimiter = defaults(p.delimiter, ',')\r\n    this.comment = defaults(p.comment, '#')\r\n    this.columnNames = defaults(p.columnNames, false)\r\n\r\n    this.table = {\r\n      name: this.name,\r\n      path: this.path,\r\n      columnNames: [],\r\n      data: []\r\n    }\r\n  }\r\n\r\n  get type () { return 'csv' }\r\n  get __objName () { return 'table' }\r\n\r\n  _parse () {\r\n    const data = this.table.data\r\n    const reDelimiter = new RegExp('\\\\s*' + this.delimiter + '\\\\s*')\r\n\r\n    let j = 0\r\n\r\n    this.streamer.eachChunkOfLines(chunk => {\r\n      const n = chunk.length\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        var line = chunk[ i ].trim()\r\n        if (line.startsWith(this.comment)) continue\r\n        const values = line.split(reDelimiter)\r\n\r\n        if (j === 0) {\r\n          this.table.columnNames = values\r\n        } else if (line) {\r\n          data.push(values)\r\n        }\r\n        ++j\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nParserRegistry.add('csv', CsvParser)\r\n\r\nexport default CsvParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/csv-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1676,
    "kind": "class",
    "name": "CsvParser",
    "memberof": "src/parser/csv-parser.js",
    "static": true,
    "longname": "src/parser/csv-parser.js~CsvParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/csv-parser.js",
    "importStyle": "CsvParser",
    "description": "CSV parser",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1677,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#constructor",
    "access": "public",
    "description": "[constructor description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Streamer"
        ],
        "spread": false,
        "optional": false,
        "name": "streamer",
        "description": "the streamer object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      },
      {
        "nullable": null,
        "types": [
          "Char"
        ],
        "spread": false,
        "optional": false,
        "name": "params.delimiter",
        "description": "delimiter character"
      },
      {
        "nullable": null,
        "types": [
          "Char"
        ],
        "spread": false,
        "optional": false,
        "name": "params.comment",
        "description": "comment character"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.columnNames",
        "description": "use first data line as column names"
      }
    ]
  },
  {
    "__docId__": 1678,
    "kind": "member",
    "name": "delimiter",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#delimiter",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1679,
    "kind": "member",
    "name": "comment",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#comment",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1680,
    "kind": "member",
    "name": "columnNames",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#columnNames",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 1681,
    "kind": "member",
    "name": "table",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#table",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 1682,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 1683,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 1684,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/csv-parser.js~CsvParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/csv-parser.js~CsvParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 1685,
    "kind": "file",
    "name": "src/parser/cube-parser.js",
    "content": "/**\r\n * @file Cube Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport VolumeParser from './volume-parser.js'\r\n\r\n// @author Johanna Tiemann <johanna.tiemann@googlemail.com>\r\n// @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reScientificNotation = /-?\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?/g\r\nconst bohrToAngstromFactor = 0.529177210859\r\n\r\nclass CubeParser extends VolumeParser {\r\n  get type () { return 'cube' }\r\n\r\n  _parse () {\r\n    // http://paulbourke.net/dataformats/cube/\r\n\r\n    if (Debug) Log.time('CubeParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(6)\r\n    const header = {}\r\n\r\n    const scaleFactor = bohrToAngstromFactor * this.voxelSize\r\n\r\n    function h (k, l) {\r\n      var field = headerLines[ k ].trim().split(reWhitespace)[ l ]\r\n      return parseFloat(field)\r\n    }\r\n\r\n    header.atomCount = Math.abs(h(2, 0))  // Number of atoms\r\n    header.originX = h(2, 1) * bohrToAngstromFactor  // Position of origin of volumetric data\r\n    header.originY = h(2, 2) * bohrToAngstromFactor\r\n    header.originZ = h(2, 3) * bohrToAngstromFactor\r\n    header.NVX = h(3, 0)  // Number of voxels\r\n    header.NVY = h(4, 0)\r\n    header.NVZ = h(5, 0)\r\n\r\n    header.basisX = new Vector3(h(3, 1), h(3, 2), h(3, 3))\r\n      .multiplyScalar(scaleFactor)\r\n    header.basisY = new Vector3(h(4, 1), h(4, 2), h(4, 3))\r\n      .multiplyScalar(scaleFactor)\r\n    header.basisZ = new Vector3(h(5, 1), h(5, 2), h(5, 3))\r\n      .multiplyScalar(scaleFactor)\r\n\r\n    const data = new Float32Array(header.NVX * header.NVY * header.NVZ)\r\n    let count = 0\r\n    let lineNo = 0\r\n    const oribitalFlag = h(2, 0) > 0 ? 0 : 1\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (line !== '' && lineNo >= header.atomCount + 6 + oribitalFlag) {\r\n          const m = line.match(reScientificNotation)\r\n          for (let j = 0, lj = m.length; j < lj; ++j) {\r\n            data[ count ] = parseFloat(m[ j ])\r\n            ++count\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.header = header\r\n    v.setData(data, header.NVZ, header.NVY, header.NVX)\r\n\r\n    if (Debug) Log.timeEnd('CubeParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeTranslation(\r\n        h.originX, h.originY, h.originZ\r\n      )\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeBasis(\r\n        h.basisZ, h.basisY, h.basisX\r\n      )\r\n    )\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('cub', CubeParser)\r\nParserRegistry.add('cube', CubeParser)\r\n\r\nexport default CubeParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/cube-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1686,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/cube-parser.js",
    "static": true,
    "longname": "src/parser/cube-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cube-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1687,
    "kind": "variable",
    "name": "reScientificNotation",
    "memberof": "src/parser/cube-parser.js",
    "static": true,
    "longname": "src/parser/cube-parser.js~reScientificNotation",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cube-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1688,
    "kind": "variable",
    "name": "bohrToAngstromFactor",
    "memberof": "src/parser/cube-parser.js",
    "static": true,
    "longname": "src/parser/cube-parser.js~bohrToAngstromFactor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/cube-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1689,
    "kind": "class",
    "name": "CubeParser",
    "memberof": "src/parser/cube-parser.js",
    "static": true,
    "longname": "src/parser/cube-parser.js~CubeParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/cube-parser.js",
    "importStyle": "CubeParser",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/volume-parser.js~VolumeParser"
    ]
  },
  {
    "__docId__": 1690,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/cube-parser.js~CubeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/cube-parser.js~CubeParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 1691,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/cube-parser.js~CubeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/cube-parser.js~CubeParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1692,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/cube-parser.js~CubeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/cube-parser.js~CubeParser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 1693,
    "kind": "file",
    "name": "src/parser/dcd-parser.js",
    "content": "/**\r\n * @file Dcd Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { uint8ToString, ensureBuffer } from '../utils.js'\r\nimport TrajectoryParser from './trajectory-parser.js'\r\n\r\nconst charmmTimeUnitFactor = 20.45482949774598\r\n\r\nclass DcdParser extends TrajectoryParser {\r\n  get type () { return 'dcd' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/dcdplugin.html\r\n\r\n    // The DCD format is structured as follows\r\n    //   (FORTRAN UNFORMATTED, with Fortran data type descriptions):\r\n    // HDR     NSET    ISTRT   NSAVC   5-ZEROS NATOM-NFREAT    DELTA   9-ZEROS\r\n    // `CORD'  #files  step 1  step    zeroes  (zero)          timestep  (zeroes)\r\n    //                         interval\r\n    // C*4     INT     INT     INT     5INT    INT             DOUBLE  9INT\r\n    // ==========================================================================\r\n    // NTITLE          TITLE\r\n    // INT (=2)        C*MAXTITL\r\n    //                 (=32)\r\n    // ==========================================================================\r\n    // NATOM\r\n    // #atoms\r\n    // INT\r\n    // ==========================================================================\r\n    // X(I), I=1,NATOM         (DOUBLE)\r\n    // Y(I), I=1,NATOM\r\n    // Z(I), I=1,NATOM\r\n    // ==========================================================================\r\n\r\n    if (Debug) Log.time('DcdParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const header = {}\r\n\r\n    let nextPos = 0\r\n\r\n    // header block\r\n\r\n    const intView = new Int32Array(bin, 0, 23)\r\n    const ef = intView[ 0 ] !== dv.getInt32(0)  // endianess flag\r\n    // swap byte order when big endian (84 indicates little endian)\r\n    if (intView[ 0 ] !== 84) {\r\n      const n = bin.byteLength\r\n      for (let i = 0; i < n; i += 4) {\r\n        dv.setFloat32(i, dv.getFloat32(i), true)\r\n      }\r\n    }\r\n    if (intView[ 0 ] !== 84) {\r\n      Log.error('dcd bad format, header block start')\r\n    }\r\n    // format indicator, should read 'CORD'\r\n    const formatString = String.fromCharCode(\r\n      dv.getUint8(4), dv.getUint8(5),\r\n      dv.getUint8(6), dv.getUint8(7)\r\n    )\r\n    if (formatString !== 'CORD') {\r\n      Log.error('dcd bad format, format string')\r\n    }\r\n    let isCharmm = false\r\n    let extraBlock = false\r\n    let fourDims = false\r\n    // version field in charmm, unused in X-PLOR\r\n    if (intView[ 22 ] !== 0) {\r\n      isCharmm = true\r\n      if (intView[ 12 ] !== 0) extraBlock = true\r\n      if (intView[ 13 ] === 1) fourDims = true\r\n    }\r\n    header.NSET = intView[ 2 ]\r\n    header.ISTART = intView[ 3 ]\r\n    header.NSAVC = intView[ 4 ]\r\n    header.NAMNF = intView[ 10 ]\r\n    if (isCharmm) {\r\n      header.DELTA = dv.getFloat32(44, ef)\r\n    } else {\r\n      header.DELTA = dv.getFloat64(44, ef)\r\n    }\r\n    if (intView[ 22 ] !== 84) {\r\n      Log.error('dcd bad format, header block end')\r\n    }\r\n    nextPos = nextPos + 21 * 4 + 8\r\n\r\n    // title block\r\n\r\n    const titleLength = dv.getInt32(nextPos, ef)\r\n    const titlePos = nextPos + 1\r\n    if ((titleLength - 4) % 80 !== 0) {\r\n      Log.error('dcd bad format, title block start')\r\n    }\r\n    header.TITLE = uint8ToString(\r\n      new Uint8Array(bin, titlePos, titleLength)\r\n    )\r\n    if (dv.getInt32(titlePos + titleLength + 4 - 1, ef) !== titleLength) {\r\n      Log.error('dcd bad format, title block end')\r\n    }\r\n    nextPos = nextPos + titleLength + 8\r\n\r\n    // natom block\r\n\r\n    if (dv.getInt32(nextPos, ef) !== 4) {\r\n      Log.error('dcd bad format, natom block start')\r\n    }\r\n    header.NATOM = dv.getInt32(nextPos + 4, ef)\r\n    if (dv.getInt32(nextPos + 8, ef) !== 4) {\r\n      Log.error('dcd bad format, natom block end')\r\n    }\r\n    nextPos = nextPos + 4 + 8\r\n\r\n    // fixed atoms block\r\n\r\n    if (header.NAMNF > 0) {\r\n      // TODO read coordinates and indices of fixed atoms\r\n      Log.error('dcd format with fixed atoms unsupported, aborting')\r\n      return\r\n    }\r\n\r\n    // frames\r\n\r\n    const natom = header.NATOM\r\n    const natom4 = natom * 4\r\n\r\n    for (let i = 0, n = header.NSET; i < n; ++i) {\r\n      if (extraBlock) {\r\n        nextPos += 4  // block start\r\n        // unitcell: A, alpha, B, beta, gamma, C (doubles)\r\n        const box = new Float32Array(9)\r\n        box[ 0 ] = dv.getFloat64(nextPos, ef)\r\n        box[ 4 ] = dv.getFloat64(nextPos + 2 * 8, ef)\r\n        box[ 8 ] = dv.getFloat64(nextPos + 5 * 8, ef)\r\n        boxes.push(box)\r\n        nextPos += 48\r\n        nextPos += 4  // block end\r\n      }\r\n\r\n      // xyz coordinates\r\n      const coord = new Float32Array(natom * 3)\r\n      for (let j = 0; j < 3; ++j) {\r\n        if (dv.getInt32(nextPos, ef) !== natom4) {\r\n          Log.error('dcd bad format, coord block start', i, j)\r\n        }\r\n        nextPos += 4  // block start\r\n        const c = new Float32Array(bin, nextPos, natom)\r\n        for (let k = 0; k < natom; ++k) {\r\n          coord[ 3 * k + j ] = c[ k ]\r\n        }\r\n        nextPos += natom4\r\n        if (dv.getInt32(nextPos, ef) !== natom4) {\r\n          Log.error('dcd bad format, coord block end', i, j)\r\n        }\r\n        nextPos += 4  // block end\r\n      }\r\n      coordinates.push(coord)\r\n\r\n      if (fourDims) {\r\n        const bytes = dv.getInt32(nextPos, ef)\r\n        nextPos += 4 + bytes + 4  // block start + skip + block end\r\n      }\r\n    }\r\n\r\n    if (header.DELTA) {\r\n      f.deltaTime = header.DELTA * charmmTimeUnitFactor\r\n    }\r\n    if (header.ISTART >= 1) {\r\n      f.timeOffset = (header.ISTART - 1) * f.deltaTime\r\n    }\r\n\r\n    // console.log(header)\r\n    // console.log(header.TITLE)\r\n    // console.log('isCharmm', isCharmm, 'extraBlock', extraBlock, 'fourDims, fourDims)\r\n\r\n    if (Debug) Log.timeEnd('DcdParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('dcd', DcdParser)\r\n\r\nexport default DcdParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/dcd-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1694,
    "kind": "variable",
    "name": "charmmTimeUnitFactor",
    "memberof": "src/parser/dcd-parser.js",
    "static": true,
    "longname": "src/parser/dcd-parser.js~charmmTimeUnitFactor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/dcd-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1695,
    "kind": "class",
    "name": "DcdParser",
    "memberof": "src/parser/dcd-parser.js",
    "static": true,
    "longname": "src/parser/dcd-parser.js~DcdParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/dcd-parser.js",
    "importStyle": "DcdParser",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/trajectory-parser.js~TrajectoryParser"
    ]
  },
  {
    "__docId__": 1696,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/dcd-parser.js~DcdParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dcd-parser.js~DcdParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1697,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/dcd-parser.js~DcdParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dcd-parser.js~DcdParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1698,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/dcd-parser.js~DcdParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dcd-parser.js~DcdParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1699,
    "kind": "file",
    "name": "src/parser/dsn6-parser.js",
    "content": "/**\r\n * @file Dsn6 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { ensureBuffer } from '../utils.js'\r\nimport { degToRad } from '../math/math-utils.js'\r\nimport VolumeParser from './volume-parser.js'\r\n\r\nclass Dsn6Parser extends VolumeParser {\r\n  get type () { return 'dsn6' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // DSN6 http://www.uoxray.uoregon.edu/tnt/manual/node104.html\r\n    // BRIX http://svn.cgl.ucsf.edu/svn/chimera/trunk/libs/VolumeData/dsn6/brix-1.html\r\n\r\n    if (Debug) Log.time('Dsn6Parser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const header = {}\r\n    let divisor, summand\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const intView = new Int16Array(bin)\r\n    const byteView = new Uint8Array(bin)\r\n    const brixStr = String.fromCharCode.apply(null, byteView.subarray(0, 512))\r\n\r\n    if (brixStr.startsWith(':-)')) {\r\n      header.xStart = parseInt(brixStr.substr(10, 5))  // NXSTART\r\n      header.yStart = parseInt(brixStr.substr(15, 5))\r\n      header.zStart = parseInt(brixStr.substr(20, 5))\r\n\r\n      header.xExtent = parseInt(brixStr.substr(32, 5))  // NX\r\n      header.yExtent = parseInt(brixStr.substr(38, 5))\r\n      header.zExtent = parseInt(brixStr.substr(42, 5))\r\n\r\n      header.xRate = parseInt(brixStr.substr(52, 5))  // MX\r\n      header.yRate = parseInt(brixStr.substr(58, 5))\r\n      header.zRate = parseInt(brixStr.substr(62, 5))\r\n\r\n      header.xlen = parseFloat(brixStr.substr(73, 10)) * this.voxelSize\r\n      header.ylen = parseFloat(brixStr.substr(83, 10)) * this.voxelSize\r\n      header.zlen = parseFloat(brixStr.substr(93, 10)) * this.voxelSize\r\n\r\n      header.alpha = parseFloat(brixStr.substr(103, 10))\r\n      header.beta = parseFloat(brixStr.substr(113, 10))\r\n      header.gamma = parseFloat(brixStr.substr(123, 10))\r\n\r\n      divisor = parseFloat(brixStr.substr(138, 12)) / 100\r\n      summand = parseInt(brixStr.substr(155, 8))\r\n\r\n      header.sigma = parseFloat(brixStr.substr(170, 12)) * 100\r\n    } else {\r\n      // swap byte order when big endian\r\n      if (intView[ 18 ] !== 100) {\r\n        for (let i = 0, n = intView.length; i < n; ++i) {\r\n          const val = intView[ i ]\r\n          intView[ i ] = ((val & 0xff) << 8) | ((val >> 8) & 0xff)\r\n        }\r\n      }\r\n\r\n      header.xStart = intView[ 0 ]  // NXSTART\r\n      header.yStart = intView[ 1 ]\r\n      header.zStart = intView[ 2 ]\r\n\r\n      header.xExtent = intView[ 3 ]  // NX\r\n      header.yExtent = intView[ 4 ]\r\n      header.zExtent = intView[ 5 ]\r\n\r\n      header.xRate = intView[ 6 ]  // MX\r\n      header.yRate = intView[ 7 ]\r\n      header.zRate = intView[ 8 ]\r\n\r\n      const factor = 1 / intView[ 17 ]\r\n      const scalingFactor = factor * this.voxelSize\r\n\r\n      header.xlen = intView[ 9 ] * scalingFactor\r\n      header.ylen = intView[ 10 ] * scalingFactor\r\n      header.zlen = intView[ 11 ] * scalingFactor\r\n\r\n      header.alpha = intView[ 12 ] * factor\r\n      header.beta = intView[ 13 ] * factor\r\n      header.gamma = intView[ 14 ] * factor\r\n\r\n      divisor = intView[ 15 ] / 100\r\n      summand = intView[ 16 ]\r\n      header.gamma = intView[ 14 ] * factor\r\n    }\r\n\r\n    v.header = header\r\n\r\n    if (Debug) Log.log(header, divisor, summand)\r\n\r\n    const data = new Float32Array(\r\n      header.xExtent * header.yExtent * header.zExtent\r\n    )\r\n\r\n    let offset = 512\r\n    const xBlocks = Math.ceil(header.xExtent / 8)\r\n    const yBlocks = Math.ceil(header.yExtent / 8)\r\n    const zBlocks = Math.ceil(header.zExtent / 8)\r\n\r\n    // loop over blocks\r\n    for (var zz = 0; zz < zBlocks; ++zz) {\r\n      for (var yy = 0; yy < yBlocks; ++yy) {\r\n        for (var xx = 0; xx < xBlocks; ++xx) {\r\n          // loop inside block\r\n          for (var k = 0; k < 8; ++k) {\r\n            var z = 8 * zz + k\r\n            for (var j = 0; j < 8; ++j) {\r\n              var y = 8 * yy + j\r\n              for (var i = 0; i < 8; ++i) {\r\n                var x = 8 * xx + i\r\n\r\n                // check if remaining slice-part contains data\r\n                if (x < header.xExtent && y < header.yExtent && z < header.zExtent) {\r\n                  var idx = ((((x * header.yExtent) + y) * header.zExtent) + z)\r\n                  data[ idx ] = (byteView[ offset ] - summand) / divisor\r\n                  ++offset\r\n                } else {\r\n                  offset += 8 - i\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    v.setData(data, header.zExtent, header.yExtent, header.xExtent)\r\n    if (header.sigma) {\r\n      v.setStats(undefined, undefined, undefined, header.sigma)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Dsn6Parser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n\r\n    const basisX = [\r\n      h.xlen,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.zlen * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ 0, basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.xRate, h.yRate, h.zRate ]\r\n    const mapcrs = [ 0, 1, 2, 3 ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeRotationY(degToRad(90))\r\n    )\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      -h.zStart, h.yStart, h.xStart\r\n    ))\r\n\r\n    matrix.multiply(new Matrix4().makeScale(\r\n      -1, 1, 1\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('dsn6', Dsn6Parser)\r\nParserRegistry.add('brix', Dsn6Parser)\r\n\r\nexport default Dsn6Parser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/dsn6-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1700,
    "kind": "class",
    "name": "Dsn6Parser",
    "memberof": "src/parser/dsn6-parser.js",
    "static": true,
    "longname": "src/parser/dsn6-parser.js~Dsn6Parser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/dsn6-parser.js",
    "importStyle": "Dsn6Parser",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/volume-parser.js~VolumeParser"
    ]
  },
  {
    "__docId__": 1701,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/dsn6-parser.js~Dsn6Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dsn6-parser.js~Dsn6Parser#type",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1702,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/dsn6-parser.js~Dsn6Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dsn6-parser.js~Dsn6Parser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1703,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/dsn6-parser.js~Dsn6Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dsn6-parser.js~Dsn6Parser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1704,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/dsn6-parser.js~Dsn6Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dsn6-parser.js~Dsn6Parser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 1705,
    "kind": "file",
    "name": "src/parser/dx-parser.js",
    "content": "/**\r\n * @file Dx Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { degToRad } from '../math/math-utils.js'\r\nimport VolumeParser from './volume-parser.js'\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\nclass DxParser extends VolumeParser {\r\n  get type () { return 'dx' }\r\n\r\n  _parse () {\r\n    // http://apbs-pdb2pqr.readthedocs.io/en/latest/formats/opendx.html\r\n\r\n    if (Debug) Log.time('DxParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(30)\r\n    const headerInfo = this.parseHeaderLines(headerLines)\r\n    const header = this.volume.header\r\n    const dataLineStart = headerInfo.dataLineStart\r\n\r\n    const size = header.nx * header.ny * header.nz\r\n    const data = new Float32Array(size)\r\n    let count = 0\r\n    let lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        if (count < size && lineNo > dataLineStart) {\r\n          const line = lines[ i ].trim()\r\n\r\n          if (line !== '') {\r\n            const ls = line.split(reWhitespace)\r\n\r\n            for (let j = 0, lj = ls.length; j < lj; ++j) {\r\n              data[ count ] = parseFloat(ls[ j ])\r\n              ++count\r\n            }\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.setData(data, header.nz, header.ny, header.nx)\r\n\r\n    if (Debug) Log.timeEnd('DxParser._parse ' + this.name)\r\n  }\r\n\r\n  parseHeaderLines (headerLines) {\r\n    const header = {}\r\n    const n = headerLines.length\r\n\r\n    let dataLineStart = 0\r\n    let headerByteCount = 0\r\n    let deltaLineCount = 0\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      let ls\r\n      const line = headerLines[ i ]\r\n\r\n      if (line.startsWith('object 1')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        header.nx = parseInt(ls[ 5 ])\r\n        header.ny = parseInt(ls[ 6 ])\r\n        header.nz = parseInt(ls[ 7 ])\r\n      } else if (line.startsWith('origin')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        header.xmin = parseFloat(ls[ 1 ])\r\n        header.ymin = parseFloat(ls[ 2 ])\r\n        header.zmin = parseFloat(ls[ 3 ])\r\n      } else if (line.startsWith('delta')) {\r\n        ls = line.split(reWhitespace)\r\n\r\n        if (deltaLineCount === 0) {\r\n          header.hx = parseFloat(ls[ 1 ]) * this.voxelSize\r\n        } else if (deltaLineCount === 1) {\r\n          header.hy = parseFloat(ls[ 2 ]) * this.voxelSize\r\n        } else if (deltaLineCount === 2) {\r\n          header.hz = parseFloat(ls[ 3 ]) * this.voxelSize\r\n        }\r\n\r\n        deltaLineCount += 1\r\n      } else if (line.startsWith('object 3')) {\r\n        dataLineStart = i\r\n        headerByteCount += line.length + 1\r\n        break\r\n      }\r\n\r\n      headerByteCount += line.length + 1\r\n    }\r\n\r\n    this.volume.header = header\r\n\r\n    return {\r\n      dataLineStart: dataLineStart,\r\n      headerByteCount: headerByteCount\r\n    }\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeRotationY(degToRad(90))\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeTranslation(\r\n        -h.zmin, h.ymin, h.xmin\r\n      )\r\n    )\r\n\r\n    matrix.multiply(\r\n      new Matrix4().makeScale(\r\n        -h.hz, h.hy, h.hx\r\n      )\r\n    )\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('dx', DxParser)\r\n\r\nexport default DxParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/dx-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1706,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/dx-parser.js",
    "static": true,
    "longname": "src/parser/dx-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/dx-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1707,
    "kind": "class",
    "name": "DxParser",
    "memberof": "src/parser/dx-parser.js",
    "static": true,
    "longname": "src/parser/dx-parser.js~DxParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/dx-parser.js",
    "importStyle": "DxParser",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/volume-parser.js~VolumeParser"
    ]
  },
  {
    "__docId__": 1708,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/dx-parser.js~DxParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dx-parser.js~DxParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1709,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/dx-parser.js~DxParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dx-parser.js~DxParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1710,
    "kind": "method",
    "name": "parseHeaderLines",
    "memberof": "src/parser/dx-parser.js~DxParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dx-parser.js~DxParser#parseHeaderLines",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1711,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/dx-parser.js~DxParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dx-parser.js~DxParser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 1712,
    "kind": "file",
    "name": "src/parser/dxbin-parser.js",
    "content": "/**\r\n * @file Dxbin Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { uint8ToLines, ensureBuffer } from '../utils.js'\r\nimport DxParser from './dx-parser.js'\r\n\r\nclass DxbinParser extends DxParser {\r\n  get type () { return 'dxbin' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/Electrostatics/apbs-pdb2pqr/issues/216\r\n\r\n    if (Debug) Log.time('DxbinParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const headerLines = uint8ToLines(new Uint8Array(bin, 0, 1000))\r\n    const headerInfo = this.parseHeaderLines(headerLines)\r\n    const header = this.volume.header\r\n    const headerByteCount = headerInfo.headerByteCount\r\n\r\n    const size = header.nx * header.ny * header.nz\r\n    const dv = new DataView(bin)\r\n    const data = new Float32Array(size)\r\n\r\n    for (let i = 0; i < size; ++i) {\r\n      data[ i ] = dv.getFloat64(i * 8 + headerByteCount, true)\r\n    }\r\n\r\n    this.volume.setData(data, header.nz, header.ny, header.nx)\r\n\r\n    if (Debug) Log.timeEnd('DxbinParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('dxbin', DxbinParser)\r\n\r\nexport default DxbinParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/dxbin-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1713,
    "kind": "class",
    "name": "DxbinParser",
    "memberof": "src/parser/dxbin-parser.js",
    "static": true,
    "longname": "src/parser/dxbin-parser.js~DxbinParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/dxbin-parser.js",
    "importStyle": "DxbinParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/dx-parser.js~DxParser"
    ]
  },
  {
    "__docId__": 1714,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/dxbin-parser.js~DxbinParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dxbin-parser.js~DxbinParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1715,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/dxbin-parser.js~DxbinParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dxbin-parser.js~DxbinParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1716,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/dxbin-parser.js~DxbinParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/dxbin-parser.js~DxbinParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1717,
    "kind": "file",
    "name": "src/parser/gro-parser.js",
    "content": "/**\r\n * @file Gro Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport {\r\n    calculateBonds, calculateChainnames, calculateSecondaryStructure\r\n} from '../structure/structure-utils.js'\r\n\r\nclass GroParser extends StructureParser {\r\n  get type () { return 'gro' }\r\n\r\n  _parse () {\r\n        // http://manual.gromacs.org/current/online/gro.html\r\n\r\n    if (Debug) Log.time('GroParser._parse ' + this.name)\r\n\r\n    var s = this.structure\r\n    var sb = this.structureBuilder\r\n\r\n    var firstModelOnly = this.firstModelOnly\r\n    var asTrajectory = this.asTrajectory\r\n    var cAlphaOnly = this.cAlphaOnly\r\n\r\n    var frames = s.frames\r\n    var boxes = s.boxes\r\n    var currentFrame, currentCoord\r\n\r\n    var firstLines = this.streamer.peekLines(3)\r\n\r\n    s.title = firstLines[ 0 ].trim()\r\n\r\n        // determine number of decimal places\r\n    var ndec = firstLines[ 2 ].length - firstLines[ 2 ].lastIndexOf('.') - 1\r\n    var lpos = 5 + ndec\r\n    var xpos = 20\r\n    var ypos = 20 + lpos\r\n    var zpos = 20 + 2 * lpos\r\n\r\n        //\r\n\r\n    var atomname, resname, resno, serial\r\n\r\n    var atomCount = parseInt(firstLines[ 1 ])\r\n    var modelLineCount = atomCount + 3\r\n\r\n    var atomMap = s.atomMap\r\n    var atomStore = s.atomStore\r\n    atomStore.resize(atomCount)\r\n\r\n    var idx = 0\r\n    var modelIdx = 0\r\n    var lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (var i = _i; i < _n; ++i) {\r\n        ++lineNo\r\n        var l = lineNo - 1\r\n\r\n        var line = lines[ i ]\r\n\r\n        if (!line) continue\r\n\r\n        if (l % modelLineCount === 0) {\r\n                    // Log.log( \"title\", line )\r\n\r\n          if (asTrajectory) {\r\n            currentFrame = new Float32Array(atomCount * 3)\r\n            frames.push(currentFrame)\r\n            currentCoord = 0\r\n          }\r\n        } else if (l % modelLineCount === 1) {\r\n\r\n                    // Log.log( \"atomCount\", line )\r\n\r\n        } else if (l % modelLineCount === modelLineCount - 1) {\r\n          var str = line.trim().split(/\\s+/)\r\n          var box = new Float32Array(9)\r\n          box[ 0 ] = parseFloat(str[ 0 ]) * 10\r\n          box[ 4 ] = parseFloat(str[ 1 ]) * 10\r\n          box[ 8 ] = parseFloat(str[ 2 ]) * 10\r\n          boxes.push(box)\r\n\r\n          if (firstModelOnly) {\r\n            return true\r\n          }\r\n\r\n          modelIdx += 1\r\n        } else {\r\n          atomname = line.substr(10, 5).trim()\r\n          if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n          var x = parseFloat(line.substr(xpos, lpos)) * 10\r\n          var y = parseFloat(line.substr(ypos, lpos)) * 10\r\n          var z = parseFloat(line.substr(zpos, lpos)) * 10\r\n\r\n          if (asTrajectory) {\r\n            var j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (l > modelLineCount) continue\r\n          }\r\n\r\n          resname = line.substr(5, 5).trim()\r\n          resno = parseInt(line.substr(0, 5))\r\n          serial = parseInt(line.substr(15, 5))\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n\r\n          sb.addAtom(modelIdx, '', '', resname, resno, 0, 'l')\r\n\r\n          idx += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    calculateChainnames(s)\r\n    calculateBonds(s)\r\n    s.finalizeBonds()\r\n\r\n    calculateSecondaryStructure(s)\r\n\r\n    if (Debug) Log.timeEnd('GroParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('gro', GroParser)\r\n\r\nexport default GroParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/gro-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1718,
    "kind": "class",
    "name": "GroParser",
    "memberof": "src/parser/gro-parser.js",
    "static": true,
    "longname": "src/parser/gro-parser.js~GroParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/gro-parser.js",
    "importStyle": "GroParser",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1719,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/gro-parser.js~GroParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/gro-parser.js~GroParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1720,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/gro-parser.js~GroParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/gro-parser.js~GroParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1721,
    "kind": "file",
    "name": "src/parser/json-parser.js",
    "content": "/**\r\n * @file Json Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Parser from './parser.js'\r\n\r\nclass JsonParser extends Parser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.string = defaults(p.string, false)\r\n\r\n    this.json = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  get type () { return 'json' }\r\n  get __objName () { return 'json' }\r\n  get isJson () { return true }\r\n\r\n  _parse () {\r\n    if (this.streamer.isBinary() || this.string) {\r\n      this.json.data = JSON.parse(this.streamer.asText())\r\n    } else {\r\n      this.json.data = this.streamer.data\r\n    }\r\n  }\r\n}\r\n\r\nParserRegistry.add('json', JsonParser)\r\n\r\nexport default JsonParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/json-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1722,
    "kind": "class",
    "name": "JsonParser",
    "memberof": "src/parser/json-parser.js",
    "static": true,
    "longname": "src/parser/json-parser.js~JsonParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/json-parser.js",
    "importStyle": "JsonParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1723,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1724,
    "kind": "member",
    "name": "string",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#string",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1725,
    "kind": "member",
    "name": "json",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#json",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1726,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1727,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1728,
    "kind": "get",
    "name": "isJson",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#isJson",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1729,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/json-parser.js~JsonParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/json-parser.js~JsonParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 1730,
    "kind": "file",
    "name": "src/parser/mmtf-parser.js",
    "content": "/**\r\n * @file Mmtf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport {\r\n    buildUnitcellAssembly, calculateBondsBetween, calculateBondsWithin\r\n} from '../structure/structure-utils.js'\r\nimport { ChemCompHetero } from '../structure/structure-constants.js'\r\nimport Entity from '../structure/entity.js'\r\nimport Unitcell from '../symmetry/unitcell.js'\r\nimport Assembly from '../symmetry/assembly.js'\r\n\r\nimport { decodeMsgpack, decodeMmtf } from '../../lib/mmtf.es6.js'\r\n\r\nconst SstrucMap = {\r\n  '0': 'i'.charCodeAt(0),  // pi helix\r\n  '1': 's'.charCodeAt(0),  // bend\r\n  '2': 'h'.charCodeAt(0),  // alpha helix\r\n  '3': 'e'.charCodeAt(0),  // extended\r\n  '4': 'g'.charCodeAt(0),  // 3-10 helix\r\n  '5': 'b'.charCodeAt(0),  // bridge\r\n  '6': 't'.charCodeAt(0),  // turn\r\n  '7': 'l'.charCodeAt(0),  // coil\r\n  '-1': ''.charCodeAt(0)   // NA\r\n}\r\n\r\nclass MmtfParser extends StructureParser {\r\n  get type () { return 'mmtf' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/rcsb/mmtf\r\n\r\n    if (Debug) Log.time('MmtfParser._parse ' + this.name)\r\n\r\n    var i, il, j, jl, groupData\r\n\r\n    var s = this.structure\r\n    var sd = decodeMmtf(decodeMsgpack(this.streamer.data))\r\n\r\n        // structure header\r\n    var headerFields = [\r\n      'depositionDate', 'releaseDate', 'resolution',\r\n      'rFree', 'rWork', 'experimentalMethods'\r\n    ]\r\n    headerFields.forEach(function (name) {\r\n      if (sd[ name ] !== undefined) {\r\n        s.header[ name ] = sd[ name ]\r\n      }\r\n    })\r\n\r\n    var numBonds, numAtoms, numGroups, numChains, numModels\r\n    var chainsPerModel\r\n\r\n    s.id = sd.structureId\r\n    s.title = sd.title\r\n\r\n    if (this.firstModelOnly || this.asTrajectory) {\r\n      numModels = 1\r\n      numChains = sd.chainsPerModel[ 0 ]\r\n\r\n      numGroups = 0\r\n      for (i = 0, il = numChains; i < il; ++i) {\r\n        numGroups += sd.groupsPerChain[ i ]\r\n      }\r\n\r\n      numAtoms = 0\r\n      for (i = 0, il = numGroups; i < il; ++i) {\r\n        groupData = sd.groupList[ sd.groupTypeList[ i ] ]\r\n        numAtoms += groupData.atomNameList.length\r\n      }\r\n\r\n      numBonds = sd.numBonds\r\n\r\n      chainsPerModel = [ numChains ]\r\n    } else {\r\n      numBonds = sd.numBonds\r\n      numAtoms = sd.numAtoms\r\n      numGroups = sd.numGroups\r\n      numChains = sd.numChains\r\n      numModels = sd.numModels\r\n\r\n      chainsPerModel = sd.chainsPerModel\r\n    }\r\n\r\n    numBonds += numGroups  // add numGroups to have space for polymer bonds\r\n\r\n    //\r\n\r\n    if (this.asTrajectory) {\r\n      for (i = 0, il = sd.numModels; i < il; ++i) {\r\n        var frame = new Float32Array(numAtoms * 3)\r\n        var frameAtomOffset = numAtoms * i\r\n\r\n        for (j = 0; j < numAtoms; ++j) {\r\n          var j3 = j * 3\r\n          var offset = j + frameAtomOffset\r\n          frame[ j3 ] = sd.xCoordList[ offset ]\r\n          frame[ j3 + 1 ] = sd.yCoordList[ offset ]\r\n          frame[ j3 + 2 ] = sd.zCoordList[ offset ]\r\n        }\r\n\r\n        s.frames.push(frame)\r\n      }\r\n    }\r\n\r\n    // bondStore\r\n    var bAtomIndex1 = new Uint32Array(numBonds)\r\n    var bAtomIndex2 = new Uint32Array(numBonds)\r\n    var bBondOrder = new Uint8Array(numBonds)\r\n\r\n    var aGroupIndex = new Uint32Array(numAtoms)\r\n\r\n    var gChainIndex = new Uint32Array(numGroups)\r\n    var gAtomOffset = new Uint32Array(numGroups)\r\n    var gAtomCount = new Uint16Array(numGroups)\r\n\r\n    var cModelIndex = new Uint16Array(numChains)\r\n    var cGroupOffset = new Uint32Array(numChains)\r\n    var cGroupCount = new Uint32Array(numChains)\r\n\r\n    var mChainOffset = new Uint32Array(numModels)\r\n    var mChainCount = new Uint32Array(numModels)\r\n\r\n    // set-up model-chain relations\r\n    var chainOffset = 0\r\n    for (i = 0, il = numModels; i < il; ++i) {\r\n      var modelChainCount = chainsPerModel[ i ]\r\n      mChainOffset[ i ] = chainOffset\r\n      mChainCount[ i ] = modelChainCount\r\n      for (j = 0; j < modelChainCount; ++j) {\r\n        cModelIndex[ j + chainOffset ] = i\r\n      }\r\n      chainOffset += modelChainCount\r\n    }\r\n\r\n    // set-up chain-residue relations\r\n    var groupsPerChain = sd.groupsPerChain\r\n    var groupOffset = 0\r\n    for (i = 0, il = numChains; i < il; ++i) {\r\n      var chainGroupCount = groupsPerChain[ i ]\r\n      cGroupOffset[ i ] = groupOffset\r\n      cGroupCount[ i ] = chainGroupCount\r\n      for (j = 0; j < chainGroupCount; ++j) {\r\n        gChainIndex[ j + groupOffset ] = i\r\n      }\r\n      groupOffset += chainGroupCount\r\n    }\r\n\r\n    /// ///\r\n    // get data from group map\r\n\r\n    var atomOffset = 0\r\n    var bondOffset = 0\r\n\r\n    for (i = 0, il = numGroups; i < il; ++i) {\r\n      groupData = sd.groupList[ sd.groupTypeList[ i ] ]\r\n      var groupAtomCount = groupData.atomNameList.length\r\n\r\n      var groupBondAtomList = groupData.bondAtomList\r\n      var groupBondOrderList = groupData.bondOrderList\r\n\r\n      for (j = 0, jl = groupBondOrderList.length; j < jl; ++j) {\r\n        bAtomIndex1[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 ]\r\n        bAtomIndex2[ bondOffset ] = atomOffset + groupBondAtomList[ j * 2 + 1 ]\r\n        bBondOrder[ bondOffset ] = groupBondOrderList[ j ]\r\n        bondOffset += 1\r\n      }\r\n\r\n      //\r\n\r\n      gAtomOffset[ i ] = atomOffset\r\n      gAtomCount[ i ] = groupAtomCount\r\n\r\n      for (j = 0; j < groupAtomCount; ++j) {\r\n        aGroupIndex[ atomOffset ] = i\r\n        atomOffset += 1\r\n      }\r\n    }\r\n\r\n    // extra bonds\r\n\r\n    var bondAtomList = sd.bondAtomList\r\n    if (bondAtomList) {\r\n      if (sd.bondOrderList) {\r\n        bBondOrder.set(sd.bondOrderList, bondOffset)\r\n      }\r\n\r\n      for (i = 0, il = bondAtomList.length; i < il; i += 2) {\r\n        var atomIndex1 = bondAtomList[ i ]\r\n        var atomIndex2 = bondAtomList[ i + 1 ]\r\n        if (atomIndex1 < numAtoms && atomIndex2 < numAtoms) {\r\n          bAtomIndex1[ bondOffset ] = atomIndex1\r\n          bAtomIndex2[ bondOffset ] = atomIndex2\r\n          bondOffset += 1\r\n        }\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    s.bondStore.length = bBondOrder.length\r\n    s.bondStore.count = bondOffset\r\n    s.bondStore.atomIndex1 = bAtomIndex1\r\n    s.bondStore.atomIndex2 = bAtomIndex2\r\n    s.bondStore.bondOrder = bBondOrder\r\n\r\n    s.atomStore.length = numAtoms\r\n    s.atomStore.count = numAtoms\r\n    s.atomStore.residueIndex = aGroupIndex\r\n    s.atomStore.atomTypeId = new Uint16Array(numAtoms)\r\n    s.atomStore.x = sd.xCoordList.subarray(0, numAtoms)\r\n    s.atomStore.y = sd.yCoordList.subarray(0, numAtoms)\r\n    s.atomStore.z = sd.zCoordList.subarray(0, numAtoms)\r\n    s.atomStore.serial = sd.atomIdList.subarray(0, numAtoms)\r\n    s.atomStore.bfactor = sd.bFactorList.subarray(0, numAtoms)\r\n    s.atomStore.altloc = sd.altLocList.subarray(0, numAtoms)\r\n    s.atomStore.occupancy = sd.occupancyList.subarray(0, numAtoms)\r\n\r\n    s.residueStore.length = numGroups\r\n    s.residueStore.count = numGroups\r\n    s.residueStore.chainIndex = gChainIndex\r\n    s.residueStore.residueTypeId = sd.groupTypeList\r\n    s.residueStore.atomOffset = gAtomOffset\r\n    s.residueStore.atomCount = gAtomCount\r\n    s.residueStore.resno = sd.groupIdList.subarray(0, numGroups)\r\n    s.residueStore.sstruc = sd.secStructList.subarray(0, numGroups)\r\n    s.residueStore.inscode = sd.insCodeList.subarray(0, numGroups)\r\n\r\n    s.chainStore.length = numChains\r\n    s.chainStore.count = numChains\r\n    s.chainStore.entityIndex = new Uint16Array(numChains)\r\n    s.chainStore.modelIndex = cModelIndex\r\n    s.chainStore.residueOffset = cGroupOffset\r\n    s.chainStore.residueCount = cGroupCount\r\n    s.chainStore.chainname = sd.chainNameList.subarray(0, numChains * 4)\r\n    s.chainStore.chainid = sd.chainIdList.subarray(0, numChains * 4)\r\n\r\n    s.modelStore.length = numModels\r\n    s.modelStore.count = numModels\r\n    s.modelStore.chainOffset = mChainOffset\r\n    s.modelStore.chainCount = mChainCount\r\n\r\n    //\r\n\r\n    var groupTypeDict = {}\r\n    for (i = 0, il = sd.groupList.length; i < il; ++i) {\r\n      var groupType = sd.groupList[ i ]\r\n      var atomTypeIdList = []\r\n      for (j = 0, jl = groupType.atomNameList.length; j < jl; ++j) {\r\n        var element = groupType.elementList[ j ].toUpperCase()\r\n        var atomname = groupType.atomNameList[ j ]\r\n        atomTypeIdList.push(s.atomMap.add(atomname, element))\r\n      }\r\n      var chemCompType = groupType.chemCompType.toUpperCase()\r\n      var hetFlag = ChemCompHetero.includes(chemCompType)\r\n\r\n      var numGroupBonds = groupType.bondOrderList.length\r\n      var atomIndices1 = new Array(numGroupBonds)\r\n      var atomIndices2 = new Array(numGroupBonds)\r\n      for (j = 0; j < numGroupBonds; ++j) {\r\n        atomIndices1[ j ] = groupType.bondAtomList[ j * 2 ]\r\n        atomIndices2[ j ] = groupType.bondAtomList[ j * 2 + 1 ]\r\n      }\r\n      var bonds = {\r\n        atomIndices1: atomIndices1,\r\n        atomIndices2: atomIndices2,\r\n        bondOrders: groupType.bondOrderList\r\n      }\r\n\r\n      groupTypeDict[ i ] = s.residueMap.add(\r\n        groupType.groupName, atomTypeIdList, hetFlag, chemCompType, bonds\r\n      )\r\n    }\r\n\r\n    for (i = 0, il = numGroups; i < il; ++i) {\r\n      s.residueStore.residueTypeId[ i ] = groupTypeDict[ s.residueStore.residueTypeId[ i ] ]\r\n    }\r\n\r\n    for (i = 0, il = s.atomStore.count; i < il; ++i) {\r\n      var residueIndex = s.atomStore.residueIndex[ i ]\r\n      var residueType = s.residueMap.list[ s.residueStore.residueTypeId[ residueIndex ] ]\r\n      var resAtomOffset = s.residueStore.atomOffset[ residueIndex ]\r\n      s.atomStore.atomTypeId[ i ] = residueType.atomTypeIdList[ i - resAtomOffset ]\r\n    }\r\n\r\n    if (sd.secStructList) {\r\n      var secStructLength = sd.secStructList.length\r\n      for (i = 0, il = s.residueStore.count; i < il; ++i) {\r\n        // with ( i % secStructLength ) secStruct entries are reused\r\n        var sstruc = SstrucMap[ s.residueStore.sstruc[ i % secStructLength ] ]\r\n        if (sstruc !== undefined) s.residueStore.sstruc[ i ] = sstruc\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (sd.entityList) {\r\n      sd.entityList.forEach(function (e, i) {\r\n        s.entityList[ i ] = new Entity(\r\n                    s, i, e.description, e.type, e.chainIndexList\r\n                )\r\n      })\r\n    }\r\n\r\n    if (sd.bioAssemblyList) {\r\n      sd.bioAssemblyList.forEach(function (_assembly, k) {\r\n        var id = k + 1\r\n        var assembly = new Assembly(id)\r\n        s.biomolDict[ 'BU' + id ] = assembly\r\n        var chainToPart = {}\r\n        _assembly.transformList.forEach(function (_transform) {\r\n          var matrix = new Matrix4().fromArray(_transform.matrix).transpose()\r\n          var chainList = _transform.chainIndexList.map(function (chainIndex) {\r\n            var chainname = ''\r\n            for (var k = 0; k < 4; ++k) {\r\n              var code = sd.chainNameList[ chainIndex * 4 + k ]\r\n              if (code) {\r\n                chainname += String.fromCharCode(code)\r\n              } else {\r\n                break\r\n              }\r\n            }\r\n            return chainname\r\n          })\r\n          var part = chainToPart[ chainList ]\r\n          if (part) {\r\n            part.matrixList.push(matrix)\r\n          } else {\r\n            chainToPart[ chainList ] = assembly.addPart([ matrix ], chainList)\r\n          }\r\n        })\r\n      })\r\n    }\r\n\r\n    if (sd.ncsOperatorList) {\r\n      var ncsName = 'NCS'\r\n      var ncsAssembly = new Assembly(ncsName)\r\n      var ncsPart = ncsAssembly.addPart()\r\n      sd.ncsOperatorList.forEach(function (_operator) {\r\n        var matrix = new Matrix4().fromArray(_operator).transpose()\r\n        ncsPart.matrixList.push(matrix)\r\n      })\r\n      if (ncsPart.matrixList.length > 0) {\r\n        s.biomolDict[ ncsName ] = ncsAssembly\r\n      }\r\n    }\r\n\r\n    var uc = sd.unitCell\r\n    if (uc && Array.isArray(uc) && uc[ 0 ]) {\r\n      s.unitcell = new Unitcell({\r\n        a: uc[ 0 ],\r\n        b: uc[ 1 ],\r\n        c: uc[ 2 ],\r\n        alpha: uc[ 3 ],\r\n        beta: uc[ 4 ],\r\n        gamma: uc[ 5 ],\r\n        spacegroup: sd.spaceGroup\r\n      })\r\n    } else {\r\n      s.unitcell = undefined\r\n    }\r\n\r\n    // calculate backbone bonds\r\n    calculateBondsBetween(s, true)\r\n\r\n    // calculate rung bonds\r\n    calculateBondsWithin(s, true)\r\n\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n\r\n    buildUnitcellAssembly(s)\r\n\r\n    if (Debug) Log.timeEnd('MmtfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('mmtf', MmtfParser)\r\n\r\nexport default MmtfParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/mmtf-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1731,
    "kind": "variable",
    "name": "SstrucMap",
    "memberof": "src/parser/mmtf-parser.js",
    "static": true,
    "longname": "src/parser/mmtf-parser.js~SstrucMap",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/mmtf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1732,
    "kind": "class",
    "name": "MmtfParser",
    "memberof": "src/parser/mmtf-parser.js",
    "static": true,
    "longname": "src/parser/mmtf-parser.js~MmtfParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/mmtf-parser.js",
    "importStyle": "MmtfParser",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1733,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/mmtf-parser.js~MmtfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mmtf-parser.js~MmtfParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1734,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/mmtf-parser.js~MmtfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mmtf-parser.js~MmtfParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1735,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/mmtf-parser.js~MmtfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mmtf-parser.js~MmtfParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 1736,
    "kind": "file",
    "name": "src/parser/mol2-parser.js",
    "content": "/**\r\n * @file Mol2 Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport {\r\n  assignResidueTypeBonds,\r\n  calculateChainnames, calculateSecondaryStructure,\r\n  calculateBondsBetween, calculateBondsWithin\r\n} from '../structure/structure-utils.js'\r\nimport StructureParser from './structure-parser.js'\r\n\r\nconst reWhitespace = /\\s+/\r\nconst bondTypes = {\r\n  '1': 1,\r\n  '2': 2,\r\n  '3': 3,\r\n  'am': 1,  // amide\r\n  'ar': 1,  // aromatic\r\n  'du': 1,  // dummy\r\n  'un': 1,  // unknown\r\n  'nc': 0   // not connected\r\n}\r\n\r\nclass Mol2Parser extends StructureParser {\r\n  get type () { return 'mol2' }\r\n\r\n  _parse () {\r\n    // http://paulbourke.net/dataformats/mol2/\r\n\r\n    if (Debug) Log.time('Mol2Parser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n\r\n    const frames = s.frames\r\n    let doFrames = false\r\n    let currentFrame, currentCoord\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 60))\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    let idx = 0\r\n    let moleculeLineNo = 0\r\n    let modelAtomIdxStart = 0\r\n    let modelIdx = -1\r\n    let numAtoms = 0\r\n\r\n    let currentRecordType = 0\r\n    let moleculeRecordType = 1\r\n    let atomRecordType = 2\r\n    let bondRecordType = 3\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (line === '' || line[ 0 ] === '#') continue\r\n\r\n        if (line[ 0 ] === '@') {\r\n          if (line === '@<TRIPOS>MOLECULE') {\r\n            currentRecordType = moleculeRecordType\r\n            moleculeLineNo = 0\r\n\r\n            ++modelIdx\r\n          } else if (line === '@<TRIPOS>ATOM') {\r\n            currentRecordType = atomRecordType\r\n            modelAtomIdxStart = atomStore.count\r\n\r\n            if (asTrajectory) {\r\n              currentCoord = 0\r\n              currentFrame = new Float32Array(numAtoms * 3)\r\n              frames.push(currentFrame)\r\n\r\n              if (modelIdx > 0) doFrames = true\r\n            }\r\n          } else if (line === '@<TRIPOS>BOND') {\r\n            currentRecordType = bondRecordType\r\n          } else {\r\n            currentRecordType = 0\r\n          }\r\n        } else if (currentRecordType === moleculeRecordType) {\r\n          if (moleculeLineNo === 0) {\r\n            s.title = line\r\n            s.id = line\r\n          } else if (moleculeLineNo === 1) {\r\n            const ls = line.split(reWhitespace)\r\n            numAtoms = parseInt(ls[ 0 ])\r\n            // num_atoms [num_bonds [num_subst [num_feat [num_sets]]]]\r\n          } else if (moleculeLineNo === 2) {\r\n\r\n            // const molType = line;\r\n            // SMALL, BIOPOLYMER, PROTEIN, NUCLEIC_ACID, SACCHARIDE\r\n\r\n          } else if (moleculeLineNo === 3) {\r\n\r\n            // const chargeType = line;\r\n            // NO_CHARGES, DEL_RE, GASTEIGER, GAST_HUCK, HUCKEL,\r\n            // PULLMAN, GAUSS80_CHARGES, AMPAC_CHARGES,\r\n            // MULLIKEN_CHARGES, DICT_ CHARGES, MMFF94_CHARGES,\r\n            // USER_CHARGES\r\n\r\n          } else if (moleculeLineNo === 4) {\r\n\r\n            // const statusBits = line;\r\n\r\n          } else if (moleculeLineNo === 5) {\r\n\r\n            // const molComment = line;\r\n\r\n          }\r\n\r\n          ++moleculeLineNo\r\n        } else if (currentRecordType === atomRecordType) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          const x = parseFloat(ls[ 2 ])\r\n          const y = parseFloat(ls[ 3 ])\r\n          const z = parseFloat(ls[ 4 ])\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          const serial = ls[ 0 ]\r\n          const atomname = ls[ 1 ]\r\n          const element = ls[ 5 ].split('.')[ 0 ]\r\n          const resno = ls[ 6 ] ? parseInt(ls[ 6 ]) : 1\r\n          const resname = ls[ 7 ] ? ls[ 7 ] : ''\r\n          const partialCharge = ls[ 8 ] ? parseFloat(ls[ 8 ]) : 0.0\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.partialCharge[ idx ] = partialCharge\r\n\r\n          sb.addAtom(modelIdx, '', '', resname, resno, 1)\r\n\r\n          idx += 1\r\n        } else if (currentRecordType === bondRecordType) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n          if (asTrajectory && modelIdx > 0) continue\r\n\r\n          const ls = line.split(reWhitespace)\r\n\r\n          // ls[ 0 ] is bond id\r\n          ap1.index = parseInt(ls[ 1 ]) - 1 + modelAtomIdxStart\r\n          ap2.index = parseInt(ls[ 2 ]) - 1 + modelAtomIdxStart\r\n          const order = bondTypes[ ls[ 3 ] ]\r\n\r\n          s.bondStore.addBond(ap1, ap2, order)\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    calculateChainnames(s)\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true)\r\n    s.finalizeBonds()\r\n    assignResidueTypeBonds(s)\r\n    calculateSecondaryStructure(s)\r\n\r\n    if (Debug) Log.timeEnd('Mol2Parser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('mol2', Mol2Parser)\r\n\r\nexport default Mol2Parser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/mol2-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1737,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/mol2-parser.js",
    "static": true,
    "longname": "src/parser/mol2-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/mol2-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1738,
    "kind": "variable",
    "name": "bondTypes",
    "memberof": "src/parser/mol2-parser.js",
    "static": true,
    "longname": "src/parser/mol2-parser.js~bondTypes",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/mol2-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1739,
    "kind": "class",
    "name": "Mol2Parser",
    "memberof": "src/parser/mol2-parser.js",
    "static": true,
    "longname": "src/parser/mol2-parser.js~Mol2Parser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/mol2-parser.js",
    "importStyle": "Mol2Parser",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1740,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/mol2-parser.js~Mol2Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mol2-parser.js~Mol2Parser#type",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1741,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/mol2-parser.js~Mol2Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mol2-parser.js~Mol2Parser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 1742,
    "kind": "file",
    "name": "src/parser/mrc-parser.js",
    "content": "/**\r\n * @file Mrc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { ensureBuffer } from '../utils.js'\r\nimport VolumeParser from './volume-parser.js'\r\n\r\nclass MrcParser extends VolumeParser {\r\n  get type () { return 'mrc' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // MRC\r\n    // http://ami.scripps.edu/software/mrctools/mrc_specification.php\r\n    // http://www2.mrc-lmb.cam.ac.uk/research/locally-developed-software/image-processing-software/#image\r\n    // http://bio3d.colorado.edu/imod/doc/mrc_format.txt\r\n\r\n    // CCP4 (MAP)\r\n    // http://www.ccp4.ac.uk/html/maplib.html\r\n\r\n    // MRC format does not use the skew transformation header records (words 25-37)\r\n    // CCP4 format does not use the ORIGIN header records (words 50-52)\r\n\r\n    if (Debug) Log.time('MrcParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const header = {}\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const intView = new Int32Array(bin, 0, 56)\r\n    const floatView = new Float32Array(bin, 0, 56)\r\n    const dv = new DataView(bin)\r\n\r\n    // 53  MAP         Character string 'MAP ' to identify file type\r\n    header.MAP = String.fromCharCode(\r\n      dv.getUint8(52 * 4), dv.getUint8(52 * 4 + 1),\r\n      dv.getUint8(52 * 4 + 2), dv.getUint8(52 * 4 + 3)\r\n    )\r\n\r\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n    //                 17 and 17 for big-endian or 68 and 65 for little-endian\r\n    header.MACHST = [ dv.getUint8(53 * 4), dv.getUint8(53 * 4 + 1) ]\r\n\r\n    // swap byte order when big endian\r\n    if (header.MACHST[ 0 ] === 17 && header.MACHST[ 1 ] === 17) {\r\n      const n = bin.byteLength\r\n      for (let i = 0; i < n; i += 4) {\r\n        dv.setFloat32(i, dv.getFloat32(i), true)\r\n      }\r\n    }\r\n\r\n    header.NX = intView[ 0 ]  // NC - columns (fastest changing)\r\n    header.NY = intView[ 1 ]  // NR - rows\r\n    header.NZ = intView[ 2 ]  // NS - sections (slowest changing)\r\n\r\n    // mode\r\n    //  0 image : signed 8-bit bytes range -128 to 127\r\n    //  1 image : 16-bit halfwords\r\n    //  2 image : 32-bit reals\r\n    //  3 transform : complex 16-bit integers\r\n    //  4 transform : complex 32-bit reals\r\n    //  6 image : unsigned 16-bit range 0 to 65535\r\n    // 16 image: unsigned char * 3 (for rgb data, non-standard)\r\n    //\r\n    // Note: Mode 2 is the normal mode used in the CCP4 programs.\r\n    //       Other modes than 2 and 0 may NOT WORK\r\n    header.MODE = intView[ 3 ]\r\n\r\n    // start\r\n    header.NXSTART = intView[ 4 ]  // NCSTART - first column\r\n    header.NYSTART = intView[ 5 ]  // NRSTART - first row\r\n    header.NZSTART = intView[ 6 ]  // NSSTART - first section\r\n\r\n    // intervals\r\n    header.MX = intView[ 7 ]  // intervals along x\r\n    header.MY = intView[ 8 ]  // intervals along y\r\n    header.MZ = intView[ 9 ]  // intervals along z\r\n\r\n    // cell length (Angstroms in CCP4)\r\n    header.xlen = floatView[ 10 ] * this.voxelSize\r\n    header.ylen = floatView[ 11 ] * this.voxelSize\r\n    header.zlen = floatView[ 12 ] * this.voxelSize\r\n\r\n    // cell angle (Degrees)\r\n    header.alpha = floatView[ 13 ]\r\n    header.beta = floatView[ 14 ]\r\n    header.gamma = floatView[ 15 ]\r\n\r\n    // axis correspondence (1,2,3 for X,Y,Z)\r\n    header.MAPC = intView[ 16 ]  // column\r\n    header.MAPR = intView[ 17 ]  // row\r\n    header.MAPS = intView[ 18 ]  // section\r\n\r\n    // density statistics\r\n    header.DMIN = floatView[ 19 ]\r\n    header.DMAX = floatView[ 20 ]\r\n    header.DMEAN = floatView[ 21 ]\r\n\r\n    // space group number 0 or 1 (default=0)\r\n    header.ISPG = intView[ 22 ]\r\n\r\n    // number of bytes used for symmetry data (0 or 80)\r\n    header.NSYMBT = intView[ 23 ]\r\n\r\n    // Flag for skew transformation, =0 none, =1 if foll\r\n    header.LSKFLG = intView[ 24 ]\r\n\r\n    // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\r\n    //                LSKFLG .ne. 0.\r\n    // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\r\n    //                Skew transformation is from standard orthogonal\r\n    //                coordinate frame (as used for atoms) to orthogonal\r\n    //                map frame, as Xo(map) = S * (Xo(atoms) - t)\r\n\r\n    // 38      future use       (some of these are used by the MSUBSX routines\r\n    //  .          \"              in MAPBRICK, MAPCONT and FRODO)\r\n    //  .          \"   (all set to zero by default)\r\n    //  .          \"\r\n    // 52          \"\r\n\r\n    // 50-52 origin in X,Y,Z used for transforms\r\n    header.originX = floatView[ 49 ]\r\n    header.originY = floatView[ 50 ]\r\n    header.originZ = floatView[ 51 ]\r\n\r\n    // 53  MAP         Character string 'MAP ' to identify file type\r\n    // => see top of this parser\r\n\r\n    // 54  MACHST      Machine stamp indicating machine type which wrote file\r\n    // => see top of this parser\r\n\r\n    // Rms deviation of map from mean density\r\n    header.ARMS = floatView[ 54 ]\r\n\r\n    // 56      NLABL           Number of labels being used\r\n    // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\r\n\r\n    v.header = header\r\n\r\n    // Log.log( header );\r\n\r\n    let data\r\n    if (header.MODE === 2) {\r\n      data = new Float32Array(\r\n        bin, 256 * 4 + header.NSYMBT,\r\n        header.NX * header.NY * header.NZ\r\n      )\r\n    } else if (header.MODE === 0) {\r\n      data = new Float32Array(new Int8Array(\r\n        bin, 256 * 4 + header.NSYMBT,\r\n        header.NX * header.NY * header.NZ\r\n      ))\r\n\r\n      // based on uglymol (https://github.com/uglymol/uglymol) by Marcin Wojdyr (wojdyr)\r\n      // if the file was converted by mapmode2to0 - scale the data\r\n      if (intView[ 39 ] === -128 && intView[ 40 ] === 127) {\r\n        // scaling f(x)=b1*x+b0 such that f(-128)=min and f(127)=max\r\n        const b1 = (header.DMAX - header.DMIN) / 255.0\r\n        const b0 = 0.5 * (header.DMIN + header.DMAX + b1)\r\n        for (let j = 0, jl = data.length; j < jl; ++j) {\r\n          data[ j ] = b1 * data[ j ] + b0\r\n        }\r\n      }\r\n    } else {\r\n      Log.error('MrcParser unknown mode', header.MODE)\r\n    }\r\n\r\n    v.setData(data, header.NX, header.NY, header.NZ)\r\n    if (header.ARMS !== 0) {\r\n      v.setStats(header.DMIN, header.DMAX, header.DMEAN, header.ARMS)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('MrcParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n\r\n    const basisX = [\r\n      h.xlen,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.zlen * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ 0, basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.MX, h.MY, h.MZ ]\r\n    const mapcrs = [ 0, h.MAPC, h.MAPR, h.MAPS ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.setPosition(new Vector3(\r\n      h.originX, h.originY, h.originZ\r\n    ))\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      h.NXSTART, h.NYSTART, h.NZSTART\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('mrc', MrcParser)\r\nParserRegistry.add('ccp4', MrcParser)\r\nParserRegistry.add('map', MrcParser)\r\n\r\nexport default MrcParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/mrc-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1743,
    "kind": "class",
    "name": "MrcParser",
    "memberof": "src/parser/mrc-parser.js",
    "static": true,
    "longname": "src/parser/mrc-parser.js~MrcParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/mrc-parser.js",
    "importStyle": "MrcParser",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/volume-parser.js~VolumeParser"
    ]
  },
  {
    "__docId__": 1744,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/mrc-parser.js~MrcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mrc-parser.js~MrcParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1745,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/mrc-parser.js~MrcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mrc-parser.js~MrcParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1746,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/mrc-parser.js~MrcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mrc-parser.js~MrcParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1747,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/mrc-parser.js~MrcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/mrc-parser.js~MrcParser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true
  },
  {
    "__docId__": 1748,
    "kind": "file",
    "name": "src/parser/msgpack-parser.js",
    "content": "/**\r\n * @file Msgpack Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport Parser from './parser.js'\r\n\r\nimport { decodeMsgpack } from '../../lib/mmtf.es6.js'\r\n\r\nclass MsgpackParser extends Parser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.msgpack = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  get type () { return 'msgpack' }\r\n  get __objName () { return 'msgpack' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('MsgpackParser._parse ' + this.name)\r\n\r\n    this.msgpack.data = decodeMsgpack(this.streamer.data)\r\n\r\n    if (Debug) Log.timeEnd('MsgpackParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('msgpack', MsgpackParser)\r\n\r\nexport default MsgpackParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/msgpack-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1749,
    "kind": "class",
    "name": "MsgpackParser",
    "memberof": "src/parser/msgpack-parser.js",
    "static": true,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/msgpack-parser.js",
    "importStyle": "MsgpackParser",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1750,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1751,
    "kind": "member",
    "name": "msgpack",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#msgpack",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1752,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1753,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1754,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1755,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/msgpack-parser.js~MsgpackParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/msgpack-parser.js~MsgpackParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1756,
    "kind": "file",
    "name": "src/parser/nctraj-parser.js",
    "content": "/**\r\n * @file Nctraj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport TrajectoryParser from './trajectory-parser.js'\r\nimport NetcdfReader from '../utils/netcdf-reader'\r\n\r\nclass NctrajParser extends TrajectoryParser {\r\n  get type () { return 'nctraj' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // http://ambermd.org/netcdf/nctraj.xhtml\r\n\r\n    if (Debug) Log.time('NctrajParser._parse ' + this.name)\r\n\r\n    const netcdfReader = new NetcdfReader(this.streamer.data)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    netcdfReader.getDataVariable('coordinates').forEach(function (c) {\r\n      coordinates.push(new Float32Array(c))\r\n    })\r\n\r\n    if (netcdfReader.hasDataVariable('cell_lengths')) {\r\n      netcdfReader.getDataVariable('cell_lengths').forEach(function (b) {\r\n        boxes.push(new Float32Array(b))\r\n      })\r\n    }\r\n\r\n    if (netcdfReader.hasDataVariable('time')) {\r\n      netcdfReader.getDataVariable('time').forEach(function (t) {\r\n        times.push(t)\r\n      })\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('NctrajParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('nctraj', NctrajParser)\r\nParserRegistry.add('ncdf', NctrajParser)\r\nParserRegistry.add('nc', NctrajParser)\r\n\r\nexport default NctrajParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/nctraj-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1757,
    "kind": "class",
    "name": "NctrajParser",
    "memberof": "src/parser/nctraj-parser.js",
    "static": true,
    "longname": "src/parser/nctraj-parser.js~NctrajParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/nctraj-parser.js",
    "importStyle": "NctrajParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/trajectory-parser.js~TrajectoryParser"
    ]
  },
  {
    "__docId__": 1758,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/nctraj-parser.js~NctrajParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/nctraj-parser.js~NctrajParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1759,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/nctraj-parser.js~NctrajParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/nctraj-parser.js~NctrajParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1760,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/nctraj-parser.js~NctrajParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/nctraj-parser.js~NctrajParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1761,
    "kind": "file",
    "name": "src/parser/netcdf-parser.js",
    "content": "/**\r\n * @file Netcdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport Parser from './parser.js'\r\nimport NetcdfReader from '../utils/netcdf-reader'\r\n\r\nclass NetcdfParser extends Parser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.netcdf = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: undefined\r\n    }\r\n  }\r\n\r\n  get type () { return 'netcdf' }\r\n  get __objName () { return 'netcdf' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('NetcdfParser._parse ' + this.name)\r\n\r\n    this.netcdf.data = new NetcdfReader(this.streamer.data)\r\n\r\n    if (Debug) Log.timeEnd('NetcdfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('netcdf', NetcdfParser)\r\n\r\nexport default NetcdfParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/netcdf-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1762,
    "kind": "class",
    "name": "NetcdfParser",
    "memberof": "src/parser/netcdf-parser.js",
    "static": true,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/netcdf-parser.js",
    "importStyle": "NetcdfParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1763,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1764,
    "kind": "member",
    "name": "netcdf",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#netcdf",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1765,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1766,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1767,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1768,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/netcdf-parser.js~NetcdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/netcdf-parser.js~NetcdfParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1769,
    "kind": "file",
    "name": "src/parser/obj-parser.js",
    "content": "/**\r\n * @file Obj Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  BufferGeometry, BufferAttribute\r\n} from '../../lib/three.es6.js'\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport SurfaceParser from './surface-parser.js'\r\n\r\n/**\r\n * OBJLoader\r\n * @class\r\n * @private\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\nfunction OBJLoader () {\r\n  this.regexp = {\r\n    // v float float float\r\n    vertex_pattern: /^v\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // vn float float float\r\n    normal_pattern: /^vn\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // vt float float\r\n    uv_pattern: /^vt\\s+([\\d.+\\-eE]+)\\s+([\\d.+\\-eE]+)/,\r\n    // f vertex vertex vertex\r\n    face_vertex: /^f\\s+(-?\\d+)\\s+(-?\\d+)\\s+(-?\\d+)(?:\\s+(-?\\d+))?/,\r\n    // f vertex/uv vertex/uv vertex/uv\r\n    face_vertex_uv: /^f\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+))?/,\r\n    // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n    face_vertex_uv_normal: /^f\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+)(?:\\s+(-?\\d+)\\/(-?\\d+)\\/(-?\\d+))?/,\r\n    // f vertex//normal vertex//normal vertex//normal\r\n    face_vertex_normal: /^f\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)\\s+(-?\\d+)\\/\\/(-?\\d+)(?:\\s+(-?\\d+)\\/\\/(-?\\d+))?/,\r\n    // o object_name | g group_name\r\n    object_pattern: /^[og]\\s*(.+)?/,\r\n    // s boolean\r\n    smoothing_pattern: /^s\\s+(\\d+|on|off)/,\r\n    // mtllib file_reference\r\n    material_library_pattern: /^mtllib /,\r\n    // usemtl material_name\r\n    material_use_pattern: /^usemtl /\r\n  }\r\n}\r\n\r\nOBJLoader.prototype = {\r\n\r\n  constructor: OBJLoader,\r\n\r\n  setPath: function (value) {\r\n    this.path = value\r\n  },\r\n\r\n  _createParserState: function () {\r\n    var state = {\r\n      objects: [],\r\n      object: {},\r\n\r\n      vertices: [],\r\n      normals: [],\r\n\r\n      startObject: function (name, fromDeclaration) {\r\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n        // file. We need to use it for the first parsed g/o to keep things in sync.\r\n        if (this.object && this.object.fromDeclaration === false) {\r\n          this.object.name = name\r\n          this.object.fromDeclaration = (fromDeclaration !== false)\r\n          return\r\n        }\r\n\r\n        this.object = {\r\n          name: name || '',\r\n          geometry: {\r\n            vertices: [],\r\n            normals: []\r\n          },\r\n          fromDeclaration: (fromDeclaration !== false)\r\n        }\r\n\r\n        this.objects.push(this.object)\r\n      },\r\n\r\n      parseVertexIndex: function (value, len) {\r\n        var index = parseInt(value, 10)\r\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\r\n      },\r\n\r\n      parseNormalIndex: function (value, len) {\r\n        var index = parseInt(value, 10)\r\n        return (index >= 0 ? index - 1 : index + len / 3) * 3\r\n      },\r\n\r\n      addVertex: function (a, b, c) {\r\n        var src = this.vertices\r\n        var dst = this.object.geometry.vertices\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n        dst.push(src[ b + 0 ])\r\n        dst.push(src[ b + 1 ])\r\n        dst.push(src[ b + 2 ])\r\n        dst.push(src[ c + 0 ])\r\n        dst.push(src[ c + 1 ])\r\n        dst.push(src[ c + 2 ])\r\n      },\r\n\r\n      addVertexLine: function (a) {\r\n        var src = this.vertices\r\n        var dst = this.object.geometry.vertices\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n      },\r\n\r\n      addNormal: function (a, b, c) {\r\n        var src = this.normals\r\n        var dst = this.object.geometry.normals\r\n\r\n        dst.push(src[ a + 0 ])\r\n        dst.push(src[ a + 1 ])\r\n        dst.push(src[ a + 2 ])\r\n        dst.push(src[ b + 0 ])\r\n        dst.push(src[ b + 1 ])\r\n        dst.push(src[ b + 2 ])\r\n        dst.push(src[ c + 0 ])\r\n        dst.push(src[ c + 1 ])\r\n        dst.push(src[ c + 2 ])\r\n      },\r\n\r\n      addFace: function (a, b, c, d, na, nb, nc, nd) {\r\n        var vLen = this.vertices.length\r\n\r\n        var ia = this.parseVertexIndex(a, vLen)\r\n        var ib = this.parseVertexIndex(b, vLen)\r\n        var ic = this.parseVertexIndex(c, vLen)\r\n        var id\r\n\r\n        if (d === undefined) {\r\n          this.addVertex(ia, ib, ic)\r\n        } else {\r\n          id = this.parseVertexIndex(d, vLen)\r\n\r\n          this.addVertex(ia, ib, id)\r\n          this.addVertex(ib, ic, id)\r\n        }\r\n\r\n        if (na !== undefined) {\r\n          // Normals are many times the same. If so, skip function call and parseInt.\r\n          var nLen = this.normals.length\r\n          ia = this.parseNormalIndex(na, nLen)\r\n\r\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen)\r\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen)\r\n\r\n          if (d === undefined) {\r\n            this.addNormal(ia, ib, ic)\r\n          } else {\r\n            id = this.parseNormalIndex(nd, nLen)\r\n\r\n            this.addNormal(ia, ib, id)\r\n            this.addNormal(ib, ic, id)\r\n          }\r\n        }\r\n      },\r\n\r\n      addLineGeometry: function (vertices) {\r\n        this.object.geometry.type = 'Line'\r\n\r\n        var vLen = this.vertices.length\r\n\r\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\r\n          this.addVertexLine(this.parseVertexIndex(vertices[ vi ], vLen))\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n    state.startObject('', false)\r\n\r\n    return state\r\n  },\r\n\r\n  parse: function (text) {\r\n    var state = this._createParserState()\r\n\r\n    if (text.indexOf('\\r\\n') !== -1) {\r\n            // This is faster than String.split with regex that splits on both\r\n      text = text.replace(/\\r\\n/g, '\\n')\r\n    }\r\n\r\n    if (text.indexOf('\\\\\\n') !== -1) {\r\n            // join lines separated by a line continuation character (\\)\r\n      text = text.replace(/\\\\\\n/g, '')\r\n    }\r\n\r\n    var i, l\r\n    var lines = text.split('\\n')\r\n    var line = ''\r\n    var lineFirstChar = ''\r\n    var lineSecondChar = ''\r\n    var lineLength = 0\r\n    var result = []\r\n\r\n        // Faster to just trim left side of the line. Use if available.\r\n    var trimLeft = (typeof ''.trimLeft === 'function')\r\n\r\n    for (i = 0, l = lines.length; i < l; i++) {\r\n      line = lines[ i ]\r\n\r\n      line = trimLeft ? line.trimLeft() : line.trim()\r\n\r\n      lineLength = line.length\r\n\r\n      if (lineLength === 0) continue\r\n\r\n      lineFirstChar = line.charAt(0)\r\n\r\n      // @todo invoke passed in handler if any\r\n      if (lineFirstChar === '#') continue\r\n\r\n      if (lineFirstChar === 'v') {\r\n        lineSecondChar = line.charAt(1)\r\n\r\n        if (lineSecondChar === ' ' && (result = this.regexp.vertex_pattern.exec(line)) !== null) {\r\n          // 0                  1      2      3\r\n          // [\"v 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n          state.vertices.push(\r\n            parseFloat(result[ 1 ]),\r\n            parseFloat(result[ 2 ]),\r\n            parseFloat(result[ 3 ])\r\n          )\r\n        } else if (lineSecondChar === 'n' && (result = this.regexp.normal_pattern.exec(line)) !== null) {\r\n          // 0                   1      2      3\r\n          // [\"vn 1.0 2.0 3.0\", \"1.0\", \"2.0\", \"3.0\"]\r\n\r\n          state.normals.push(\r\n            parseFloat(result[ 1 ]),\r\n            parseFloat(result[ 2 ]),\r\n            parseFloat(result[ 3 ])\r\n          )\r\n        } else if (lineSecondChar === 't' && this.regexp.uv_pattern.exec(line) !== null) {\r\n\r\n          // ignore uv line\r\n\r\n        } else {\r\n          throw new Error(\"Unexpected vertex/normal/uv line: '\" + line + \"'\")\r\n        }\r\n      } else if (lineFirstChar === 'f') {\r\n        if ((result = this.regexp.face_vertex_uv_normal.exec(line)) !== null) {\r\n          // f vertex/uv/normal vertex/uv/normal vertex/uv/normal\r\n          // 0                        1    2    3    4    5    6    7    8    9   10         11         12\r\n          // [\"f 1/1/1 2/2/2 3/3/3\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\", \"3\", undefined, undefined, undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 4 ], result[ 7 ], result[ 10 ],\r\n            // result[ 2 ], result[ 5 ], result[ 8 ], result[ 11 ],  // ignore uv part\r\n            result[ 3 ], result[ 6 ], result[ 9 ], result[ 12 ]\r\n          )\r\n        } else if (this.regexp.face_vertex_uv.exec(line) !== null) {\r\n\r\n          // ignore uv line\r\n\r\n        } else if ((result = this.regexp.face_vertex_normal.exec(line)) !== null) {\r\n          // f vertex//normal vertex//normal vertex//normal\r\n          // 0                     1    2    3    4    5    6   7          8\r\n          // [\"f 1//1 2//2 3//3\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", undefined, undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 3 ], result[ 5 ], result[ 7 ],\r\n            result[ 2 ], result[ 4 ], result[ 6 ], result[ 8 ]\r\n          )\r\n        } else if ((result = this.regexp.face_vertex.exec(line)) !== null) {\r\n          // f vertex vertex vertex\r\n          // 0            1    2    3   4\r\n          // [\"f 1 2 3\", \"1\", \"2\", \"3\", undefined]\r\n\r\n          state.addFace(\r\n            result[ 1 ], result[ 2 ], result[ 3 ], result[ 4 ]\r\n          )\r\n        } else {\r\n          throw new Error(\"Unexpected face line: '\" + line + \"'\")\r\n        }\r\n      } else if (lineFirstChar === 'l') {\r\n        var lineParts = line.substring(1).trim().split(' ')\r\n        var lineVertices = []\r\n        var lineUVs = []\r\n\r\n        if (line.indexOf('/') === -1) {\r\n          lineVertices = lineParts\r\n        } else {\r\n          for (var li = 0, llen = lineParts.length; li < llen; li++) {\r\n            var parts = lineParts[ li ].split('/')\r\n\r\n            if (parts[ 0 ] !== '') lineVertices.push(parts[ 0 ])\r\n            if (parts[ 1 ] !== '') lineUVs.push(parts[ 1 ])\r\n          }\r\n        }\r\n        state.addLineGeometry(lineVertices, lineUVs)\r\n      } else if ((result = this.regexp.object_pattern.exec(line)) !== null) {\r\n        // o object_name\r\n        // or\r\n        // g group_name\r\n\r\n        var name = result[ 0 ].substr(1).trim()\r\n        state.startObject(name)\r\n\r\n        // ignore material related lines\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.material_use_pattern.test(line)) {\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.material_library_pattern.test(line)) {\r\n        // eslint-disable-next-line no-empty\r\n      } else if (this.regexp.smoothing_pattern.exec(line) !== null) {\r\n      } else {\r\n        // Handle null terminated files without exception\r\n        if (line === '\\0') continue\r\n\r\n        throw new Error(\"Unexpected line: '\" + line + \"'\")\r\n      }\r\n    }\r\n\r\n    var container = []\r\n\r\n    for (i = 0, l = state.objects.length; i < l; i++) {\r\n      var object = state.objects[ i ]\r\n      var geometry = object.geometry\r\n\r\n      // Skip o/g line declarations that did not follow with any faces\r\n      if (geometry.vertices.length === 0) continue\r\n\r\n      var buffergeometry = new BufferGeometry()\r\n\r\n      buffergeometry.addAttribute('position', new BufferAttribute(new Float32Array(geometry.vertices), 3))\r\n\r\n      if (geometry.normals.length > 0) {\r\n        buffergeometry.addAttribute('normal', new BufferAttribute(new Float32Array(geometry.normals), 3))\r\n      } else {\r\n        buffergeometry.computeVertexNormals()\r\n      }\r\n\r\n      container.push(buffergeometry)\r\n    }\r\n\r\n    return container\r\n  }\r\n\r\n}\r\n\r\nclass ObjParser extends SurfaceParser {\r\n  get type () { return 'obj' }\r\n\r\n  getLoader () {\r\n    return new OBJLoader()\r\n  }\r\n}\r\n\r\nParserRegistry.add('obj', ObjParser)\r\n\r\nexport default ObjParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/obj-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1770,
    "kind": "function",
    "name": "OBJLoader",
    "memberof": "src/parser/obj-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/obj-parser.js~OBJLoader",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/parser/obj-parser.js",
    "importStyle": null,
    "description": "OBJLoader",
    "lineNumber": 20,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "mrdoob / http://mrdoob.com/"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 1771,
    "kind": "class",
    "name": "ObjParser",
    "memberof": "src/parser/obj-parser.js",
    "static": true,
    "longname": "src/parser/obj-parser.js~ObjParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/obj-parser.js",
    "importStyle": "ObjParser",
    "description": null,
    "lineNumber": 353,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/surface-parser.js~SurfaceParser"
    ]
  },
  {
    "__docId__": 1772,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/obj-parser.js~ObjParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/obj-parser.js~ObjParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 354,
    "undocument": true
  },
  {
    "__docId__": 1773,
    "kind": "method",
    "name": "getLoader",
    "memberof": "src/parser/obj-parser.js~ObjParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/obj-parser.js~ObjParser#getLoader",
    "access": "public",
    "description": null,
    "lineNumber": 356,
    "undocument": true
  },
  {
    "__docId__": 1774,
    "kind": "file",
    "name": "src/parser/parser-registry.js",
    "content": "/**\r\n * @file Parser Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Registry from '../utils/registry.js'\r\n\r\nclass ParserRegistry extends Registry {\r\n  constructor () {\r\n    super('parser')\r\n  }\r\n\r\n  __hasObjName (key, objName) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.__objName === objName\r\n  }\r\n\r\n  isTrajectory (key) {\r\n    return this.__hasObjName(key, 'frames')\r\n  }\r\n\r\n  isStructure (key) {\r\n    return this.__hasObjName(key, 'structure')\r\n  }\r\n\r\n  isVolume (key) {\r\n    return this.__hasObjName(key, 'volume')\r\n  }\r\n\r\n  isSurface (key) {\r\n    return this.__hasObjName(key, 'surface')\r\n  }\r\n\r\n  isBinary (key) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isBinary\r\n  }\r\n\r\n  isXml (key) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isXml\r\n  }\r\n\r\n  isJson (key) {\r\n    const parser = this.get(key)\r\n    return parser && parser.prototype.isJson\r\n  }\r\n\r\n  getTrajectoryExtensions () {\r\n    return this.names.filter(name => this.isTrajectory(name))\r\n  }\r\n\r\n  getStructureExtensions () {\r\n    return this.names.filter(name => this.isStructure(name))\r\n  }\r\n\r\n  getVolumeExtensions () {\r\n    return this.names.filter(name => this.isVolume(name))\r\n  }\r\n\r\n  getSurfaceExtensions () {\r\n    return this.names.filter(name => this.isSurface(name))\r\n  }\r\n}\r\n\r\nexport default ParserRegistry\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/parser-registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1775,
    "kind": "class",
    "name": "ParserRegistry",
    "memberof": "src/parser/parser-registry.js",
    "static": true,
    "longname": "src/parser/parser-registry.js~ParserRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/parser-registry.js",
    "importStyle": "ParserRegistry",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/utils/registry.js~Registry"
    ]
  },
  {
    "__docId__": 1776,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 1777,
    "kind": "method",
    "name": "__hasObjName",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#__hasObjName",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1778,
    "kind": "method",
    "name": "isTrajectory",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isTrajectory",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1779,
    "kind": "method",
    "name": "isStructure",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isStructure",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1780,
    "kind": "method",
    "name": "isVolume",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isVolume",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1781,
    "kind": "method",
    "name": "isSurface",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isSurface",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 1782,
    "kind": "method",
    "name": "isBinary",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1783,
    "kind": "method",
    "name": "isXml",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isXml",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 1784,
    "kind": "method",
    "name": "isJson",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#isJson",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 1785,
    "kind": "method",
    "name": "getTrajectoryExtensions",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#getTrajectoryExtensions",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 1786,
    "kind": "method",
    "name": "getStructureExtensions",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#getStructureExtensions",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 1787,
    "kind": "method",
    "name": "getVolumeExtensions",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#getVolumeExtensions",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 1788,
    "kind": "method",
    "name": "getSurfaceExtensions",
    "memberof": "src/parser/parser-registry.js~ParserRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser-registry.js~ParserRegistry#getSurfaceExtensions",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 1789,
    "kind": "file",
    "name": "src/parser/parser.js",
    "content": "/**\r\n * @file Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\n\r\nclass Parser {\r\n  constructor (streamer, params) {\r\n    var p = params || {}\r\n\r\n    this.streamer = streamer\r\n\r\n    this.name = defaults(p.name, '')\r\n    this.path = defaults(p.path, '')\r\n  }\r\n\r\n  get type () { return '' }\r\n  get __objName () { return '' }\r\n  get isBinary () { return false }\r\n  get isJson () { return false }\r\n  get isXml () { return false }\r\n\r\n  parse () {\r\n    return this.streamer.read().then(() => {\r\n      this._beforeParse()\r\n      this._parse()\r\n      this._afterParse()\r\n      return this[ this.__objName ]\r\n    })\r\n  }\r\n\r\n  _parse () {}\r\n\r\n  _beforeParse () {}\r\n\r\n  _afterParse () {\r\n    if (Debug) Log.log(this[ this.__objName ])\r\n  }\r\n}\r\n\r\nexport default Parser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1790,
    "kind": "class",
    "name": "Parser",
    "memberof": "src/parser/parser.js",
    "static": true,
    "longname": "src/parser/parser.js~Parser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/parser.js",
    "importStyle": "Parser",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 1791,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1792,
    "kind": "member",
    "name": "streamer",
    "memberof": "src/parser/parser.js~Parser",
    "static": false,
    "longname": "src/parser/parser.js~Parser#streamer",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1793,
    "kind": "member",
    "name": "name",
    "memberof": "src/parser/parser.js~Parser",
    "static": false,
    "longname": "src/parser/parser.js~Parser#name",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1794,
    "kind": "member",
    "name": "path",
    "memberof": "src/parser/parser.js~Parser",
    "static": false,
    "longname": "src/parser/parser.js~Parser#path",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1795,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 1796,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1797,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1798,
    "kind": "get",
    "name": "isJson",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#isJson",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1799,
    "kind": "get",
    "name": "isXml",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#isXml",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1800,
    "kind": "method",
    "name": "parse",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#parse",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1801,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1802,
    "kind": "method",
    "name": "_beforeParse",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#_beforeParse",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 1803,
    "kind": "method",
    "name": "_afterParse",
    "memberof": "src/parser/parser.js~Parser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/parser.js~Parser#_afterParse",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 1804,
    "kind": "file",
    "name": "src/parser/pdb-parser.js",
    "content": "/**\r\n * @file Pdb Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport Entity from '../structure/entity.js'\r\nimport Unitcell from '../symmetry/unitcell.js'\r\nimport Assembly from '../symmetry/assembly.js'\r\nimport { WaterNames } from '../structure/structure-constants.js'\r\nimport {\r\n    assignSecondaryStructure, buildUnitcellAssembly,\r\n    calculateBonds, calculateChainnames, calculateSecondaryStructure\r\n} from '../structure/structure-utils.js'\r\n\r\n// PDB helix record encoding\r\nconst HelixTypes = {\r\n  1: 'h',  // Right-handed alpha (default)\r\n  2: 'h',  // Right-handed omega\r\n  3: 'i',  // Right-handed pi\r\n  4: 'h',  // Right-handed gamma\r\n  5: 'g',  // Right-handed 310\r\n  6: 'h',  // Left-handed alpha\r\n  7: 'h',  // Left-handed omega\r\n  8: 'h',  // Left-handed gamma\r\n  9: 'h',  // 27 ribbon/helix\r\n  10: 'h',  // Polyproline\r\n  '': 'h'\r\n}\r\n\r\nconst dAminoAcids = [\r\n  'DAL',  // D-ALANINE\r\n  'DAR',  // D-ARGININE\r\n  'DSG',  // D-ASPARAGINE\r\n  'DAS',  // D-ASPARTIC ACID\r\n  'DCY',  // D-CYSTEINE\r\n  'DGL',  // D-GLUTAMIC ACID\r\n  'DGN',  // D-GLUTAMINE\r\n  'DHI',  // D-HISTIDINE\r\n  'DIL',  // D-ISOLEUCINE\r\n  'DLE',  // D-LEUCINE\r\n  'DLY',  // D-LYSINE\r\n  'MED',  // D-METHIONINE\r\n  'DPN',  // D-PHENYLALANINE\r\n  'DPR',  // D-PROLINE\r\n  'DSN',  // D-SERINE\r\n  'DTH',  // D-THREONINE\r\n  'DTR',  // D-TRYPTOPHAN\r\n  'DTY',  // D-TYROSINE\r\n  'DVA',  // D-VALINE\r\n\r\n  'DNE'  // D-NORLEUCINE\r\n\r\n  // ???  // D-SELENOCYSTEINE\r\n]\r\n\r\nconst entityKeyList = [\r\n  'MOL_ID', 'MOLECULE', 'CHAIN', 'FRAGMENT', 'SYNONYM',\r\n  'EC', 'ENGINEERED', 'MUTATION', 'OTHER_DETAILS'\r\n]\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\nfunction getModresId (resno, chainname, inscode) {\r\n  let id = `${resno}`\r\n  if (chainname) id += `:${chainname}`\r\n  if (inscode) id += `^${inscode}`\r\n  return id\r\n}\r\n\r\nclass PdbParser extends StructureParser {\r\n  /**\r\n   * Create a pdb parser\r\n   * @param  {Streamer} streamer - streamer object\r\n   * @param  {Object} params - params object\r\n   * @param  {Boolean} params.hex - hexadecimal parsing of\r\n   *                                atom numbers >99.999 and\r\n   *                                residue numbers >9.999\r\n   * @return {undefined}\r\n   */\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.hex = defaults(p.hex, false)\r\n  }\r\n\r\n  get type () { return 'pdb' }\r\n\r\n  _parse () {\r\n    // http://www.wwpdb.org/documentation/file-format.php\r\n\r\n    if (Debug) Log.time('PdbParser._parse ' + this.name)\r\n\r\n    let isLegacy = false\r\n    const headerLine = this.streamer.peekLines(1)[ 0 ]\r\n    const headerId = headerLine.substr(62, 4)\r\n    const legacyId = headerLine.substr(72, 4)\r\n    if (headerId === legacyId && legacyId.trim()) {\r\n      isLegacy = true\r\n    }\r\n\r\n    const isPqr = this.type === 'pqr'\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const hex = this.hex\r\n    let serialRadix = 10\r\n    let resnoRadix = 10\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n    const cAlphaOnly = this.cAlphaOnly\r\n\r\n    const frames = s.frames\r\n    const boxes = s.boxes\r\n    let doFrames = false\r\n    let currentFrame, currentCoord\r\n\r\n    const biomolDict = s.biomolDict\r\n    let currentBiomol\r\n    let currentPart\r\n    let currentMatrix\r\n\r\n    let line, recordName\r\n    let serial, chainname, resno, resname, occupancy\r\n    let inscode, atomname, hetero, bfactor, altloc\r\n\r\n    let startChain, startResi, startIcode\r\n    let endChain, endResi, endIcode\r\n\r\n    let serialDict = {}\r\n    const unitcellDict = {}\r\n    const bondDict = {}\r\n\r\n    const entityDataList = []\r\n    let currentEntityData\r\n    let currentEntityKey\r\n    // MOL_ID                 Numbers each component; also used in  SOURCE to associate\r\n    //                        the information.\r\n    // MOLECULE               Name of the macromolecule.\r\n    // CHAIN                  Comma-separated list of chain  identifier(s).\r\n    // FRAGMENT               Specifies a domain or region of the  molecule.\r\n    // SYNONYM                Comma-separated list of synonyms for  the MOLECULE.\r\n    // EC                     The Enzyme Commission number associated  with the molecule.\r\n    //                        If there is more than one EC number,  they are presented\r\n    //                        as a comma-separated list.\r\n    // ENGINEERED             Indicates that the molecule was  produced using\r\n    //                        recombinant technology or by purely  chemical synthesis.\r\n    // MUTATION               Indicates if there is a mutation.\r\n    // OTHER_DETAILS          Additional comments.\r\n\r\n    const hetnameDict = {}\r\n    const modresDict = {}\r\n\r\n    const chainDict = {}\r\n    let chainIdx, chainid, newChain\r\n    let currentChainname, currentResno, currentResname, currentInscode\r\n\r\n    const seqresDict = {}\r\n    let currentSeqresChainname\r\n\r\n    const secStruct = {\r\n      helices: [],\r\n      sheets: []\r\n    }\r\n    const helices = secStruct.helices\r\n    const sheets = secStruct.sheets\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 80))\r\n    if (isPqr) {\r\n      atomStore.addField('partialCharge', 1, 'float32')\r\n      atomStore.addField('radius', 1, 'float32')\r\n    }\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    let idx = 0\r\n    let modelIdx = 0\r\n    let pendingStart = true\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        line = lines[ i ]\r\n        recordName = line.substr(0, 6)\r\n\r\n        if (recordName === 'ATOM  ' || recordName === 'HETATM') {\r\n          // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\r\n          // PQR: Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius\r\n\r\n          if (pendingStart) {\r\n            if (asTrajectory) {\r\n              if (doFrames) {\r\n                currentFrame = new Float32Array(atomStore.count * 3)\r\n                frames.push(currentFrame)\r\n              } else {\r\n                currentFrame = []\r\n              }\r\n              currentCoord = 0\r\n            } else {\r\n              if (!firstModelOnly) serialDict = {}\r\n            }\r\n\r\n            chainIdx = 1\r\n            chainid = chainIdx.toString()\r\n            newChain = true\r\n\r\n            pendingStart = false\r\n          }\r\n\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          let x, y, z, ls, dd\r\n\r\n          if (isPqr) {\r\n            ls = line.split(reWhitespace)\r\n            dd = ls.length === 10 ? 1 : 0\r\n\r\n            atomname = ls[ 2 ]\r\n            if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n            x = parseFloat(ls[ 6 - dd ])\r\n            y = parseFloat(ls[ 7 - dd ])\r\n            z = parseFloat(ls[ 8 - dd ])\r\n          } else {\r\n            atomname = line.substr(12, 4).trim()\r\n            if (cAlphaOnly && atomname !== 'CA') continue\r\n\r\n            x = parseFloat(line.substr(30, 8))\r\n            y = parseFloat(line.substr(38, 8))\r\n            z = parseFloat(line.substr(46, 8))\r\n          }\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          let element\r\n\r\n          if (isPqr) {\r\n            serial = parseInt(ls[ 1 ])\r\n            element = ''\r\n            hetero = (line[ 0 ] === 'H') ? 1 : 0\r\n            chainname = dd ? '' : ls[ 4 ]\r\n            resno = parseInt(ls[ 5 - dd ])\r\n            inscode = ''\r\n            resname = ls[ 3 ]\r\n            altloc = ''\r\n            occupancy = 0.0\r\n          } else {\r\n            serial = parseInt(line.substr(6, 5), serialRadix)\r\n            if (hex && serial === 99999) {\r\n              serialRadix = 16\r\n            }\r\n            hetero = (line[ 0 ] === 'H') ? 1 : 0\r\n            chainname = line[ 21 ].trim()\r\n            resno = parseInt(line.substr(22, 4), resnoRadix)\r\n            if (hex && resno === 9999) {\r\n              resnoRadix = 16\r\n            }\r\n            inscode = line[ 26 ].trim()\r\n            resname = line.substr(17, 4).trim() || 'MOL'\r\n            bfactor = parseFloat(line.substr(60, 6))\r\n            altloc = line[ 16 ].trim()\r\n            occupancy = parseFloat(line.substr(54, 6))\r\n\r\n            if (!isLegacy) {\r\n              element = line.substr(76, 2).trim()\r\n              if (!chainname) {\r\n                chainname = line.substr(72, 4).trim()  // segid\r\n              }\r\n            }\r\n          }\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.altloc[ idx ] = altloc.charCodeAt(0)\r\n          atomStore.occupancy[ idx ] = isNaN(occupancy) ? 0 : occupancy\r\n\r\n          if (isPqr) {\r\n            atomStore.partialCharge[ idx ] = parseFloat(ls[ 9 - dd ])\r\n            atomStore.radius[ idx ] = parseFloat(ls[ 10 - dd ])\r\n          } else {\r\n            atomStore.bfactor[ idx ] = isNaN(bfactor) ? 0 : bfactor\r\n          }\r\n\r\n          const modresId = getModresId(resno, chainname, inscode)\r\n\r\n          // TODO instead of looking at MODRES look at SEQRES and\r\n          //      missing residues in REMARK 465\r\n          if (hetero && !modresDict[modresId] && !dAminoAcids.includes(resname)) {\r\n            if (currentChainname !== chainname || currentResname !== resname ||\r\n                (!WaterNames.includes(resname) &&\r\n                  (currentResno !== resno || currentInscode !== inscode))\r\n            ) {\r\n              chainIdx += 1\r\n              chainid = chainIdx.toString()\r\n\r\n              currentResno = resno\r\n              currentResname = resname\r\n              currentInscode = inscode\r\n            }\r\n          } else if (!newChain && currentChainname !== chainname) {\r\n            chainIdx += 1\r\n            chainid = chainIdx.toString()\r\n          }\r\n\r\n          sb.addAtom(modelIdx, chainname, chainid, resname, resno, hetero, undefined, inscode)\r\n\r\n          serialDict[ serial ] = idx\r\n          idx += 1\r\n          newChain = false\r\n          currentChainname = chainname\r\n        } else if (recordName === 'CONECT') {\r\n          const fromIdx = serialDict[ parseInt(line.substr(6, 5)) ]\r\n          const pos = [ 11, 16, 21, 26 ]\r\n          const bondIndex = {}\r\n\r\n          if (fromIdx === undefined) {\r\n            // Log.log( \"missing CONNECT serial\" );\r\n            continue\r\n          }\r\n\r\n          for (let j = 0; j < 4; ++j) {\r\n            let toIdx = parseInt(line.substr(pos[ j ], 5))\r\n            if (Number.isNaN(toIdx)) continue\r\n            toIdx = serialDict[ toIdx ]\r\n            if (toIdx === undefined) {\r\n              // Log.log( \"missing CONNECT serial\" );\r\n              continue\r\n            }/* else if( toIdx < fromIdx ){\r\n                // likely a duplicate in standard PDB format\r\n                // but not necessarily, so better remove duplicates\r\n                // in a pass after parsing (and auto bonding)\r\n                continue;\r\n            } */\r\n\r\n            if (fromIdx < toIdx) {\r\n              ap1.index = fromIdx\r\n              ap2.index = toIdx\r\n            } else {\r\n              ap1.index = toIdx\r\n              ap2.index = fromIdx\r\n            }\r\n\r\n            // interpret records where a 'toIdx' atom is given multiple times\r\n            // as double/triple bonds, e.g. CONECT 1529 1528 1528 is a double bond\r\n            if (bondIndex[ toIdx ] !== undefined) {\r\n              s.bondStore.bondOrder[ bondIndex[ toIdx ] ] += 1\r\n            } else {\r\n              const hash = ap1.index + '|' + ap2.index\r\n              if (bondDict[ hash ] === undefined) {\r\n                bondDict[ hash ] = true\r\n                bondIndex[ toIdx ] = s.bondStore.count\r\n                s.bondStore.addBond(ap1, ap2, 1)  // start/assume with single bond\r\n              }\r\n            }\r\n          }\r\n        } else if (recordName === 'HELIX ') {\r\n          startChain = line[ 19 ].trim()\r\n          startResi = parseInt(line.substr(21, 4))\r\n          startIcode = line[ 25 ].trim()\r\n          endChain = line[ 31 ].trim()\r\n          endResi = parseInt(line.substr(33, 4))\r\n          endIcode = line[ 37 ].trim()\r\n          let helixType = parseInt(line.substr(39, 1))\r\n          helixType = (HelixTypes[ helixType ] || HelixTypes['']).charCodeAt(0)\r\n          helices.push([\r\n            startChain, startResi, startIcode,\r\n            endChain, endResi, endIcode,\r\n            helixType\r\n          ])\r\n        } else if (recordName === 'SHEET ') {\r\n          startChain = line[ 21 ].trim()\r\n          startResi = parseInt(line.substr(22, 4))\r\n          startIcode = line[ 26 ].trim()\r\n          endChain = line[ 32 ].trim()\r\n          endResi = parseInt(line.substr(33, 4))\r\n          endIcode = line[ 37 ].trim()\r\n          sheets.push([\r\n            startChain, startResi, startIcode,\r\n            endChain, endResi, endIcode\r\n          ])\r\n        } else if (recordName === 'HETNAM') {\r\n          hetnameDict[ line.substr(11, 3) ] = line.substr(15).trim()\r\n        } else if (recordName === 'SEQRES') {\r\n          const seqresChainname = line[11].trim()\r\n          if (seqresChainname !== currentSeqresChainname) {\r\n            seqresDict[ seqresChainname ] = []\r\n            currentSeqresChainname = seqresChainname\r\n          }\r\n          seqresDict[ seqresChainname ].push(\r\n            ...line.substr(19).trim().split(reWhitespace)\r\n          )\r\n        } else if (recordName === 'MODRES') {\r\n          // MODRES 2SRC PTR A  527  TYR  O-PHOSPHOTYROSINE\r\n          const resname = line.substr(12, 3).trim()\r\n          const chainname = line[16].trim()\r\n          const inscode = line[22].trim()\r\n          const resno = parseInt(line.substr(18, 4).trim())\r\n          const id = getModresId(resno, chainname, inscode)\r\n          modresDict[ id ] = { resname, chainname, inscode, resno }\r\n        } else if (recordName === 'COMPND') {\r\n          const comp = line.substr(10, 70).trim()\r\n          const keyEnd = comp.indexOf(':')\r\n          const key = comp.substring(0, keyEnd)\r\n          let value\r\n\r\n          if (entityKeyList.includes(key)) {\r\n            currentEntityKey = key\r\n            value = comp.substring(keyEnd + 2)\r\n          } else {\r\n            value = comp\r\n          }\r\n          value = value.replace(/;$/, '')\r\n\r\n          if (currentEntityKey === 'MOL_ID') {\r\n            currentEntityData = {\r\n              chainList: [],\r\n              name: ''\r\n            }\r\n            entityDataList.push(currentEntityData)\r\n          } else if (currentEntityKey === 'MOLECULE') {\r\n            if (currentEntityData.name) currentEntityData.name += ' '\r\n            currentEntityData.name += value\r\n          } else if (currentEntityKey === 'CHAIN') {\r\n            Array.prototype.push.apply(\r\n              currentEntityData.chainList,\r\n              value.split(/\\s*,\\s*/)\r\n            )\r\n          }\r\n        } else if (line.startsWith('TER')) {\r\n          const cp = s.getChainProxy(s.chainStore.count - 1)\r\n          chainDict[ cp.chainname ] = cp.index\r\n          chainIdx += 1\r\n          chainid = chainIdx.toString()\r\n          newChain = true\r\n        } else if (recordName === 'REMARK' && line.substr(7, 3) === '350') {\r\n          if (line.substr(11, 12) === 'BIOMOLECULE:') {\r\n            let name = line.substr(23).trim()\r\n            if (/^(0|[1-9][0-9]*)$/.test(name)) name = 'BU' + name\r\n\r\n            currentBiomol = new Assembly(name)\r\n            biomolDict[ name ] = currentBiomol\r\n          } else if (line.substr(13, 5) === 'BIOMT') {\r\n            const biomt = line.split(/\\s+/)\r\n            const row = parseInt(line[ 18 ]) - 1\r\n\r\n            if (row === 0) {\r\n              currentMatrix = new Matrix4()\r\n              currentPart.matrixList.push(currentMatrix)\r\n            }\r\n\r\n            const biomtElms = currentMatrix.elements\r\n\r\n            biomtElms[ 4 * 0 + row ] = parseFloat(biomt[ 4 ])\r\n            biomtElms[ 4 * 1 + row ] = parseFloat(biomt[ 5 ])\r\n            biomtElms[ 4 * 2 + row ] = parseFloat(biomt[ 6 ])\r\n            biomtElms[ 4 * 3 + row ] = parseFloat(biomt[ 7 ])\r\n          } else if (\r\n            line.substr(11, 30) === 'APPLY THE FOLLOWING TO CHAINS:' ||\r\n            line.substr(11, 30) === '                   AND CHAINS:'\r\n          ) {\r\n            if (line.substr(11, 5) === 'APPLY') {\r\n              currentPart = currentBiomol.addPart()\r\n            }\r\n\r\n            const chainList = line.substr(41, 30).split(',')\r\n            for (let j = 0, jl = chainList.length; j < jl; ++j) {\r\n              const c = chainList[ j ].trim()\r\n              if (c) currentPart.chainList.push(c)\r\n            }\r\n          }\r\n        } else if (recordName === 'HEADER') {\r\n          s.id = line.substr(62, 4)\r\n        } else if (recordName === 'TITLE ') {\r\n          s.title += (s.title ? ' ' : '') + line.substr(10, 70).trim()\r\n        } else if (recordName === 'MODEL ') {\r\n          pendingStart = true\r\n        } else if (recordName === 'ENDMDL' || line.startsWith('END')) {\r\n          if (pendingStart) continue\r\n\r\n          if (asTrajectory && !doFrames) {\r\n            frames.push(new Float32Array(currentFrame))\r\n            doFrames = true\r\n          }\r\n\r\n          modelIdx += 1\r\n          pendingStart = true\r\n        } else if (line.substr(0, 5) === 'MTRIX') {\r\n          // ignore 'given' operators\r\n          if (line[ 59 ] === '1') continue\r\n\r\n          if (!currentBiomol || currentBiomol.name !== 'NCS') {\r\n            const ncsName = 'NCS'\r\n            currentBiomol = new Assembly(ncsName)\r\n            biomolDict[ ncsName ] = currentBiomol\r\n            currentPart = currentBiomol.addPart()\r\n          }\r\n\r\n          const ncs = line.split(/\\s+/)\r\n          const ncsRow = parseInt(line[ 5 ]) - 1\r\n\r\n          if (ncsRow === 0) {\r\n            currentMatrix = new Matrix4()\r\n            currentPart.matrixList.push(currentMatrix)\r\n          }\r\n\r\n          const ncsElms = currentMatrix.elements\r\n\r\n          ncsElms[ 4 * 0 + ncsRow ] = parseFloat(ncs[ 2 ])\r\n          ncsElms[ 4 * 1 + ncsRow ] = parseFloat(ncs[ 3 ])\r\n          ncsElms[ 4 * 2 + ncsRow ] = parseFloat(ncs[ 4 ])\r\n          ncsElms[ 4 * 3 + ncsRow ] = parseFloat(ncs[ 5 ])\r\n        } else if (line.substr(0, 5) === 'ORIGX') {\r\n          if (!unitcellDict.origx) {\r\n            unitcellDict.origx = new Matrix4()\r\n          }\r\n\r\n          const orgix = line.split(/\\s+/)\r\n          const origxRow = parseInt(line[ 5 ]) - 1\r\n          const origxElms = unitcellDict.origx.elements\r\n\r\n          origxElms[ 4 * 0 + origxRow ] = parseFloat(orgix[ 1 ])\r\n          origxElms[ 4 * 1 + origxRow ] = parseFloat(orgix[ 2 ])\r\n          origxElms[ 4 * 2 + origxRow ] = parseFloat(orgix[ 3 ])\r\n          origxElms[ 4 * 3 + origxRow ] = parseFloat(orgix[ 4 ])\r\n        } else if (line.substr(0, 5) === 'SCALE') {\r\n          if (!unitcellDict.scale) {\r\n            unitcellDict.scale = new Matrix4()\r\n          }\r\n\r\n          const scale = line.split(/\\s+/)\r\n          const scaleRow = parseInt(line[ 5 ]) - 1\r\n          const scaleElms = unitcellDict.scale.elements\r\n\r\n          scaleElms[ 4 * 0 + scaleRow ] = parseFloat(scale[ 1 ])\r\n          scaleElms[ 4 * 1 + scaleRow ] = parseFloat(scale[ 2 ])\r\n          scaleElms[ 4 * 2 + scaleRow ] = parseFloat(scale[ 3 ])\r\n          scaleElms[ 4 * 3 + scaleRow ] = parseFloat(scale[ 4 ])\r\n        } else if (recordName === 'CRYST1') {\r\n          // CRYST1   55.989   55.989   55.989  90.00  90.00  90.00 P 1           1\r\n          //  7 - 15       Real(9.3)      a (Angstroms)\r\n          // 16 - 24       Real(9.3)      b (Angstroms)\r\n          // 25 - 33       Real(9.3)      c (Angstroms)\r\n          // 34 - 40       Real(7.2)      alpha         alpha (degrees).\r\n          // 41 - 47       Real(7.2)      beta          beta (degrees).\r\n          // 48 - 54       Real(7.2)      gamma         gamma (degrees).\r\n          // 56 - 66       LString        sGroup        Space group.\r\n          // 67 - 70       Integer        z             Z value.\r\n\r\n          const aLength = parseFloat(line.substr(6, 9))\r\n          const bLength = parseFloat(line.substr(15, 9))\r\n          const cLength = parseFloat(line.substr(24, 9))\r\n\r\n          const alpha = parseFloat(line.substr(33, 7))\r\n          const beta = parseFloat(line.substr(40, 7))\r\n          const gamma = parseFloat(line.substr(47, 7))\r\n\r\n          const sGroup = line.substr(55, 11).trim()\r\n          // const zValue = parseInt( line.substr( 66, 4 ) );\r\n\r\n          const box = new Float32Array(9)\r\n          box[ 0 ] = aLength\r\n          box[ 4 ] = bLength\r\n          box[ 8 ] = cLength\r\n          boxes.push(box)\r\n\r\n          if (modelIdx === 0) {\r\n            unitcellDict.a = aLength\r\n            unitcellDict.b = bLength\r\n            unitcellDict.c = cLength\r\n            unitcellDict.alpha = alpha\r\n            unitcellDict.beta = beta\r\n            unitcellDict.gamma = gamma\r\n            unitcellDict.spacegroup = sGroup\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    //\r\n\r\n    const en = entityDataList.length\r\n\r\n    if (en) {\r\n      s.eachChain(function (cp) {\r\n        cp.entityIndex = en\r\n      })\r\n\r\n      entityDataList.forEach(function (e, i) {\r\n        const chainIndexList = e.chainList.map(function (chainname) {\r\n          return chainDict[ chainname ]\r\n        })\r\n        s.entityList.push(new Entity(\r\n          s, i, e.name, 'polymer', chainIndexList\r\n        ))\r\n      })\r\n\r\n      let ei = entityDataList.length\r\n      const rp = s.getResidueProxy()\r\n      const residueDict = {}\r\n\r\n      s.eachChain(function (cp) {\r\n        if (cp.entityIndex === en) {\r\n          rp.index = cp.residueOffset\r\n          if (!residueDict[ rp.resname ]) {\r\n            residueDict[ rp.resname ] = []\r\n          }\r\n          residueDict[ rp.resname ].push(cp.index)\r\n        }\r\n      })\r\n\r\n      Object.keys(residueDict).forEach(function (resname) {\r\n        const chainList = residueDict[ resname ]\r\n        let type = 'non-polymer'\r\n        let name = hetnameDict[ resname ] || resname\r\n        if (WaterNames.includes(resname)) {\r\n          name = 'water'\r\n          type = 'water'\r\n        }\r\n        s.entityList.push(new Entity(\r\n          s, ei, name, type, chainList\r\n        ))\r\n        ei += 1\r\n      })\r\n    }\r\n\r\n    //\r\n\r\n    if (unitcellDict.a !== undefined) {\r\n      s.unitcell = new Unitcell(unitcellDict)\r\n    } else {\r\n      s.unitcell = undefined\r\n    }\r\n\r\n    if (helices.length || sheets.length) {\r\n      assignSecondaryStructure(s, secStruct)\r\n    }\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    if (!isLegacy) calculateChainnames(s)\r\n    calculateBonds(s)\r\n    s.finalizeBonds()\r\n\r\n    if (!helices.length && !sheets.length) {\r\n      calculateSecondaryStructure(s)\r\n    }\r\n    buildUnitcellAssembly(s)\r\n\r\n    if (Debug) Log.timeEnd('PdbParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('pdb', PdbParser)\r\nParserRegistry.add('pdb1', PdbParser)\r\nParserRegistry.add('ent', PdbParser)\r\n\r\nexport default PdbParser\r\n\r\nexport {\r\n  HelixTypes\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/pdb-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1805,
    "kind": "variable",
    "name": "dAminoAcids",
    "memberof": "src/parser/pdb-parser.js",
    "static": true,
    "longname": "src/parser/pdb-parser.js~dAminoAcids",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1806,
    "kind": "variable",
    "name": "entityKeyList",
    "memberof": "src/parser/pdb-parser.js",
    "static": true,
    "longname": "src/parser/pdb-parser.js~entityKeyList",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1807,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/pdb-parser.js",
    "static": true,
    "longname": "src/parser/pdb-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 67,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1808,
    "kind": "function",
    "name": "getModresId",
    "memberof": "src/parser/pdb-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/pdb-parser.js~getModresId",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1809,
    "kind": "class",
    "name": "PdbParser",
    "memberof": "src/parser/pdb-parser.js",
    "static": true,
    "longname": "src/parser/pdb-parser.js~PdbParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": "PdbParser",
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1810,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/pdb-parser.js~PdbParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/pdb-parser.js~PdbParser#constructor",
    "access": "public",
    "description": "Create a pdb parser",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Streamer"
        ],
        "spread": false,
        "optional": false,
        "name": "streamer",
        "description": "streamer object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "params object"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.hex",
        "description": "hexadecimal parsing of\n                               atom numbers >99.999 and\n                               residue numbers >9.999"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 1811,
    "kind": "member",
    "name": "hex",
    "memberof": "src/parser/pdb-parser.js~PdbParser",
    "static": false,
    "longname": "src/parser/pdb-parser.js~PdbParser#hex",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 1812,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/pdb-parser.js~PdbParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/pdb-parser.js~PdbParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 1813,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/pdb-parser.js~PdbParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/pdb-parser.js~PdbParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 1814,
    "kind": "variable",
    "name": "HelixTypes",
    "memberof": "src/parser/pdb-parser.js",
    "static": true,
    "longname": "src/parser/pdb-parser.js~HelixTypes",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/pdb-parser.js",
    "importStyle": "{HelixTypes}",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1815,
    "kind": "file",
    "name": "src/parser/ply-parser.js",
    "content": "/**\r\n * @file Ply Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    Geometry, Vector3, Face3, Color\r\n} from '../../lib/three.es6.js'\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport SurfaceParser from './surface-parser.js'\r\n\r\n/**\r\n * PLYLoader\r\n * @class\r\n * @private\r\n * @author Wei Meng / http://about.me/menway\r\n *\r\n * @description\r\n * A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\r\n *\r\n * Limitations: ASCII decoding assumes file is UTF-8.\r\n *\r\n * @example\r\n * var loader = new THREE.PLYLoader();\r\n * loader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\r\n *     scene.add( new THREE.Mesh( geometry ) );\r\n * } );\r\n *\r\n * // If the PLY file uses non standard property names, they can be mapped while\r\n * // loading. For example, the following maps the properties\r\n * // “diffuse_(red|green|blue)” in the file to standard color names.\r\n *\r\n * loader.setPropertyNameMapping( {\r\n *     diffuse_red: 'red',\r\n *     diffuse_green: 'green',\r\n *     diffuse_blue: 'blue'\r\n * } );\r\n *\r\n */\r\nfunction PLYLoader () {\r\n  this.propertyNameMapping = {}\r\n}\r\n\r\nPLYLoader.prototype = {\r\n\r\n  constructor: PLYLoader,\r\n\r\n  setPropertyNameMapping: function (mapping) {\r\n    this.propertyNameMapping = mapping\r\n  },\r\n\r\n  bin2str: function (buf) {\r\n    var arrayBuffer = new Uint8Array(buf)\r\n    var str = ''\r\n    for (var i = 0; i < buf.byteLength; i++) {\r\n      str += String.fromCharCode(arrayBuffer[ i ]) // implicitly assumes little-endian\r\n    }\r\n\r\n    return str\r\n  },\r\n\r\n  isASCII: function (data) {\r\n    var header = this.parseHeader(this.bin2str(data))\r\n\r\n    return header.format === 'ascii'\r\n  },\r\n\r\n  parse: function (data) {\r\n    if (data instanceof ArrayBuffer) {\r\n      return (\r\n                this.isASCII(data)\r\n                    ? this.parseASCII(this.bin2str(data))\r\n                    : this.parseBinary(data)\r\n      )\r\n    } else {\r\n      return this.parseASCII(data)\r\n    }\r\n  },\r\n\r\n  parseHeader: function (data) {\r\n    var patternHeader = /ply([\\s\\S]*)end_header\\s/\r\n    var headerText = ''\r\n    var headerLength = 0\r\n    var result = patternHeader.exec(data)\r\n    if (result !== null) {\r\n      headerText = result[ 1 ]\r\n      headerLength = result[ 0 ].length\r\n    }\r\n\r\n    var header = {\r\n      comments: [],\r\n      elements: [],\r\n      headerLength: headerLength\r\n    }\r\n\r\n    var lines = headerText.split('\\n')\r\n    var currentElement, lineType, lineValues\r\n\r\n    function makePlyElementProperty (propertValues, propertyNameMapping) {\r\n      var property = {\r\n        type: propertValues[ 0 ]\r\n      }\r\n\r\n      if (property.type === 'list') {\r\n        property.name = propertValues[ 3 ]\r\n        property.countType = propertValues[ 1 ]\r\n        property.itemType = propertValues[ 2 ]\r\n      } else {\r\n        property.name = propertValues[ 1 ]\r\n      }\r\n\r\n      if (property.name in propertyNameMapping) {\r\n        property.name = propertyNameMapping[ property.name ]\r\n      }\r\n\r\n      return property\r\n    }\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n      var line = lines[ i ]\r\n      line = line.trim()\r\n      if (line === '') {\r\n        continue\r\n      }\r\n      lineValues = line.split(/\\s+/)\r\n      lineType = lineValues.shift()\r\n      line = lineValues.join(' ')\r\n\r\n      switch (lineType) {\r\n        case 'format':\r\n\r\n          header.format = lineValues[ 0 ]\r\n          header.version = lineValues[ 1 ]\r\n\r\n          break\r\n\r\n        case 'comment':\r\n\r\n          header.comments.push(line)\r\n\r\n          break\r\n\r\n        case 'element':\r\n\r\n          if (currentElement !== undefined) {\r\n            header.elements.push(currentElement)\r\n          }\r\n\r\n          currentElement = {}\r\n          currentElement.name = lineValues[ 0 ]\r\n          currentElement.count = parseInt(lineValues[ 1 ])\r\n          currentElement.properties = []\r\n\r\n          break\r\n\r\n        case 'property':\r\n\r\n          currentElement.properties.push(makePlyElementProperty(lineValues, this.propertyNameMapping))\r\n\r\n          break\r\n\r\n        default:\r\n\r\n          console.log('unhandled', lineType, lineValues)\r\n      }\r\n    }\r\n\r\n    if (currentElement !== undefined) {\r\n      header.elements.push(currentElement)\r\n    }\r\n\r\n    return header\r\n  },\r\n\r\n  parseASCIINumber: function (n, type) {\r\n    switch (type) {\r\n      case 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\r\n      case 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\r\n\r\n        return parseInt(n)\r\n\r\n      case 'float': case 'double': case 'float32': case 'float64':\r\n\r\n        return parseFloat(n)\r\n    }\r\n  },\r\n\r\n  parseASCIIElement: function (properties, line) {\r\n    var values = line.split(/\\s+/)\r\n\r\n    var element = {}\r\n\r\n    for (var i = 0; i < properties.length; i++) {\r\n      if (properties[ i ].type === 'list') {\r\n        var list = []\r\n        var n = this.parseASCIINumber(values.shift(), properties[ i ].countType)\r\n\r\n        for (var j = 0; j < n; j++) {\r\n          list.push(this.parseASCIINumber(values.shift(), properties[ i ].itemType))\r\n        }\r\n\r\n        element[ properties[ i ].name ] = list\r\n      } else {\r\n        element[ properties[ i ].name ] = this.parseASCIINumber(values.shift(), properties[ i ].type)\r\n      }\r\n    }\r\n\r\n    return element\r\n  },\r\n\r\n  parseASCII: function (data) {\r\n        // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n\r\n    var geometry = new Geometry()\r\n\r\n    var result\r\n\r\n    var header = this.parseHeader(data)\r\n\r\n    var patternBody = /end_header\\s([\\s\\S]*)$/\r\n    var body = ''\r\n    if ((result = patternBody.exec(data)) !== null) {\r\n      body = result[ 1 ]\r\n    }\r\n\r\n    var lines = body.split('\\n')\r\n    var currentElement = 0\r\n    var currentElementCount = 0\r\n    geometry.useColor = false\r\n\r\n    for (var i = 0; i < lines.length; i++) {\r\n      var line = lines[ i ]\r\n      line = line.trim()\r\n      if (line === '') {\r\n        continue\r\n      }\r\n\r\n      if (currentElementCount >= header.elements[ currentElement ].count) {\r\n        currentElement++\r\n        currentElementCount = 0\r\n      }\r\n\r\n      var element = this.parseASCIIElement(header.elements[ currentElement ].properties, line)\r\n\r\n      this.handleElement(geometry, header.elements[ currentElement ].name, element)\r\n\r\n      currentElementCount++\r\n    }\r\n\r\n    return this.postProcess(geometry)\r\n  },\r\n\r\n  postProcess: function (geometry) {\r\n    if (geometry.useColor) {\r\n      for (var i = 0; i < geometry.faces.length; i++) {\r\n        geometry.faces[ i ].vertexColors = [\r\n          geometry.colors[ geometry.faces[ i ].a ],\r\n          geometry.colors[ geometry.faces[ i ].b ],\r\n          geometry.colors[ geometry.faces[ i ].c ]\r\n        ]\r\n      }\r\n\r\n      geometry.elementsNeedUpdate = true\r\n    }\r\n\r\n    geometry.computeBoundingSphere()\r\n\r\n    return geometry\r\n  },\r\n\r\n  handleElement: function (geometry, elementName, element) {\r\n    if (elementName === 'vertex') {\r\n      geometry.vertices.push(\r\n                new Vector3(element.x, element.y, element.z)\r\n            )\r\n\r\n      if ('red' in element && 'green' in element && 'blue' in element) {\r\n        geometry.useColor = true\r\n\r\n        var color = new Color()\r\n        color.setRGB(element.red / 255.0, element.green / 255.0, element.blue / 255.0)\r\n        geometry.colors.push(color)\r\n      }\r\n    } else if (elementName === 'face') {\r\n      var vertexIndices = element.vertex_indices\r\n\r\n      if (vertexIndices.length === 3) {\r\n        geometry.faces.push(\r\n                    new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 2 ])\r\n                )\r\n      } else if (vertexIndices.length === 4) {\r\n        geometry.faces.push(\r\n                    new Face3(vertexIndices[ 0 ], vertexIndices[ 1 ], vertexIndices[ 3 ]),\r\n                    new Face3(vertexIndices[ 1 ], vertexIndices[ 2 ], vertexIndices[ 3 ])\r\n                )\r\n      }\r\n    }\r\n  },\r\n\r\n  binaryRead: function (dataview, at, type, littleEndian) {\r\n    switch (type) {\r\n            // corespondences for non-specific length types here match rply:\r\n      case 'int8': case 'char': return [ dataview.getInt8(at), 1 ]\r\n\r\n      case 'uint8': case 'uchar': return [ dataview.getUint8(at), 1 ]\r\n\r\n      case 'int16': case 'short': return [ dataview.getInt16(at, littleEndian), 2 ]\r\n\r\n      case 'uint16': case 'ushort': return [ dataview.getUint16(at, littleEndian), 2 ]\r\n\r\n      case 'int32': case 'int': return [ dataview.getInt32(at, littleEndian), 4 ]\r\n\r\n      case 'uint32': case 'uint': return [ dataview.getUint32(at, littleEndian), 4 ]\r\n\r\n      case 'float32': case 'float': return [ dataview.getFloat32(at, littleEndian), 4 ]\r\n\r\n      case 'float64': case 'double': return [ dataview.getFloat64(at, littleEndian), 8 ]\r\n    }\r\n  },\r\n\r\n  binaryReadElement: function (dataview, at, properties, littleEndian) {\r\n    var element = {}\r\n    var result\r\n    var read = 0\r\n\r\n    for (var i = 0; i < properties.length; i++) {\r\n      if (properties[ i ].type === 'list') {\r\n        var list = []\r\n\r\n        result = this.binaryRead(dataview, at + read, properties[ i ].countType, littleEndian)\r\n        var n = result[ 0 ]\r\n        read += result[ 1 ]\r\n\r\n        for (var j = 0; j < n; j++) {\r\n          result = this.binaryRead(dataview, at + read, properties[ i ].itemType, littleEndian)\r\n          list.push(result[ 0 ])\r\n          read += result[ 1 ]\r\n        }\r\n\r\n        element[ properties[ i ].name ] = list\r\n      } else {\r\n        result = this.binaryRead(dataview, at + read, properties[ i ].type, littleEndian)\r\n        element[ properties[ i ].name ] = result[ 0 ]\r\n        read += result[ 1 ]\r\n      }\r\n    }\r\n\r\n    return [ element, read ]\r\n  },\r\n\r\n  parseBinary: function (data) {\r\n    var geometry = new Geometry()\r\n\r\n    var header = this.parseHeader(this.bin2str(data))\r\n    var littleEndian = (header.format === 'binary_little_endian')\r\n    var body = new DataView(data, header.headerLength)\r\n    var result\r\n    var loc = 0\r\n\r\n    for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\r\n      for (var currentElementCount = 0; currentElementCount < header.elements[ currentElement ].count; currentElementCount++) {\r\n        result = this.binaryReadElement(body, loc, header.elements[ currentElement ].properties, littleEndian)\r\n        loc += result[ 1 ]\r\n        var element = result[ 0 ]\r\n\r\n        this.handleElement(geometry, header.elements[ currentElement ].name, element)\r\n      }\r\n    }\r\n\r\n    return this.postProcess(geometry)\r\n  }\r\n\r\n}\r\n\r\nclass PlyParser extends SurfaceParser {\r\n  get type () { return 'ply' }\r\n\r\n  getLoader () {\r\n    return new PLYLoader()\r\n  }\r\n}\r\n\r\nParserRegistry.add('ply', PlyParser)\r\n\r\nexport default PlyParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/ply-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1816,
    "kind": "function",
    "name": "PLYLoader",
    "memberof": "src/parser/ply-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/ply-parser.js~PLYLoader",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/parser/ply-parser.js",
    "importStyle": null,
    "description": "PLYLoader",
    "examples": [
      "var loader = new THREE.PLYLoader();\nloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\n    scene.add( new THREE.Mesh( geometry ) );\n} );\n\n// If the PLY file uses non standard property names, they can be mapped while\n// loading. For example, the following maps the properties\n// “diffuse_(red|green|blue)” in the file to standard color names.\n\nloader.setPropertyNameMapping( {\n    diffuse_red: 'red',\n    diffuse_green: 'green',\n    diffuse_blue: 'blue'\n} );"
    ],
    "lineNumber": 42,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "Wei Meng / http://about.me/menway"
      },
      {
        "tagName": "@description",
        "tagValue": "A THREE loader for PLY ASCII files (known as the Polygon File Format or the Stanford Triangle Format).\n\nLimitations: ASCII decoding assumes file is UTF-8."
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 1817,
    "kind": "class",
    "name": "PlyParser",
    "memberof": "src/parser/ply-parser.js",
    "static": true,
    "longname": "src/parser/ply-parser.js~PlyParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/ply-parser.js",
    "importStyle": "PlyParser",
    "description": null,
    "lineNumber": 377,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/surface-parser.js~SurfaceParser"
    ]
  },
  {
    "__docId__": 1818,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/ply-parser.js~PlyParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/ply-parser.js~PlyParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 378,
    "undocument": true
  },
  {
    "__docId__": 1819,
    "kind": "method",
    "name": "getLoader",
    "memberof": "src/parser/ply-parser.js~PlyParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/ply-parser.js~PlyParser#getLoader",
    "access": "public",
    "description": null,
    "lineNumber": 380,
    "undocument": true
  },
  {
    "__docId__": 1820,
    "kind": "file",
    "name": "src/parser/pqr-parser.js",
    "content": "/**\r\n * @file Pqr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport PdbParser from './pdb-parser.js'\r\n\r\n// http://www.poissonboltzmann.org/docs/file-format-info/\r\n\r\nclass PqrParser extends PdbParser {\r\n  get type () { return 'pqr' }\r\n}\r\n\r\nParserRegistry.add('pqr', PqrParser)\r\n\r\nexport default PqrParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/pqr-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1821,
    "kind": "class",
    "name": "PqrParser",
    "memberof": "src/parser/pqr-parser.js",
    "static": true,
    "longname": "src/parser/pqr-parser.js~PqrParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/pqr-parser.js",
    "importStyle": "PqrParser",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/pdb-parser.js~PdbParser"
    ]
  },
  {
    "__docId__": 1822,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/pqr-parser.js~PqrParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/pqr-parser.js~PqrParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1823,
    "kind": "file",
    "name": "src/parser/prmtop-parser.js",
    "content": "/**\r\n * @file Prmtop Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport {\r\n    assignResidueTypeBonds, calculateBondsBetween,\r\n    calculateBondsWithin, calculateChainnames\r\n} from '../structure/structure-utils.js'\r\n\r\nconst amberChargeUnitFactor = 18.2223\r\n\r\nconst TitleMode = 1\r\nconst PointersMode = 2\r\nconst AtomNameMode = 3\r\nconst ChargeMode = 4\r\nconst MassMode = 5\r\nconst ResidueLabelMode = 6\r\nconst ResiduePointerMode = 7\r\nconst BondsIncHydrogenMode = 8\r\nconst BondsWithoutHydrogenMode = 9\r\nconst RadiiMode = 10\r\n\r\nfunction parseIntSubstr (line, start, length) {\r\n  return parseInt(line.substr(start, length).trim())\r\n}\r\n\r\nclass PrmtopParser extends StructureParser {\r\n  get type () { return 'prmtop' }\r\n\r\n  _parse () {\r\n    // http://ambermd.org/prmtop.pdf\r\n    // http://ambermd.org/formats.html#topology\r\n\r\n    if (Debug) Log.time('PrmtopParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n    atomStore.addField('radius', 1, 'float32')\r\n\r\n    const title = []\r\n    const pointersDict = {}\r\n    const pointers = [\r\n      'NATOM', 'NTYPES', 'NBONH', 'MBONA', 'NTHETH', 'MTHETA',\r\n      'NPHIH', 'MPHIA', 'NHPARM', 'NPARM', 'NNB', 'NRES',\r\n      'NBONA', 'NTHETA', 'NPHIA', 'NUMBND', 'NUMANG', 'NPTRA',\r\n      'NATYP', 'NPHB', 'IFPERT', 'NBPER', 'NGPER', 'NDPER',\r\n      'MBPER', 'MGPER', 'MDPER', 'IFBOX', 'NMXRS', 'IFCAP',\r\n      'NUMEXTRA', 'NCOPY'\r\n    ]\r\n    pointers.forEach(name => { pointersDict[ name ] = 0 })\r\n\r\n    let atomNames\r\n    let charges\r\n    let radii\r\n    let bAtomIndex1\r\n    let bAtomIndex2\r\n    let bBondOrder\r\n    let residueLabels\r\n    let residuePointers\r\n\r\n    let mode\r\n    // let currentFormat\r\n    let curIdx\r\n    let bondIdx\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n        const lt = line.trim()\r\n\r\n        if (!lt) {\r\n          continue\r\n        } else if (line.startsWith('%FORMAT')) {\r\n          // currentFormat = lt.substring(8, lt.length - 1)\r\n        } else if (line.startsWith('%FLAG')) {\r\n          const flag = line.substr(5).trim()\r\n          curIdx = 0\r\n\r\n          if (flag === 'TITLE') {\r\n            mode = TitleMode\r\n          } else if (flag === 'POINTERS') {\r\n            mode = PointersMode\r\n          } else if (flag === 'ATOM_NAME') {\r\n            mode = AtomNameMode\r\n          } else if (flag === 'CHARGE') {\r\n            mode = ChargeMode\r\n          } else if (flag === 'MASS') {\r\n            mode = MassMode\r\n          } else if (flag === 'RESIDUE_LABEL') {\r\n            mode = ResidueLabelMode\r\n          } else if (flag === 'RESIDUE_POINTER') {\r\n            mode = ResiduePointerMode\r\n          } else if (flag === 'BONDS_INC_HYDROGEN') {\r\n            bondIdx = 0\r\n            mode = BondsIncHydrogenMode\r\n          } else if (flag === 'BONDS_WITHOUT_HYDROGEN') {\r\n            bondIdx = pointersDict['NBONH']\r\n            mode = BondsWithoutHydrogenMode\r\n          } else if (flag === 'RADII') {\r\n            mode = RadiiMode\r\n          } else {\r\n            mode = undefined\r\n          }\r\n        } else if (mode === TitleMode) {\r\n          title.push(lt)\r\n        } else if (mode === PointersMode) {\r\n          const n = Math.min(curIdx + 10, 32)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            pointersDict[pointers[curIdx]] = parseInt(\r\n              line.substr(i * 8, 8).trim()\r\n            )\r\n          }\r\n          atomNames = new Array(pointersDict.NATOM)\r\n          charges = new Float32Array(pointersDict.NATOM)\r\n          radii = new Float32Array(pointersDict.NATOM)\r\n          atomStore.resize(pointersDict.NATOM)\r\n          const bondCount = pointersDict.NBONH + pointersDict.MBONA\r\n          bAtomIndex1 = new Uint32Array(bondCount)\r\n          bAtomIndex2 = new Uint32Array(bondCount)\r\n          bBondOrder = new Uint8Array(bondCount)\r\n          residueLabels = new Array(pointersDict.NRES)\r\n          residuePointers = new Uint32Array(pointersDict.NRES)\r\n        } else if (mode === AtomNameMode) {\r\n          const n = Math.min(curIdx + 20, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            atomNames[curIdx] = line.substr(i * 4, 4).trim()\r\n          }\r\n        } else if (mode === ChargeMode) {\r\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            charges[curIdx] = parseFloat(line.substr(i * 16, 16)) / amberChargeUnitFactor\r\n          }\r\n        } else if (mode === MassMode) {\r\n\r\n          // not currently used\r\n\r\n        } else if (mode === ResidueLabelMode) {\r\n          const n = Math.min(curIdx + 20, pointersDict.NRES)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            residueLabels[curIdx] = line.substr(i * 4, 4).trim()\r\n          }\r\n        } else if (mode === ResiduePointerMode) {\r\n          const n = Math.min(curIdx + 10, pointersDict.NRES)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            residuePointers[curIdx] = parseIntSubstr(line, i * 8, 8)\r\n          }\r\n        } else if (mode === BondsIncHydrogenMode) {\r\n          const n = Math.min(curIdx + 10, pointersDict.NBONH * 3)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            const r = curIdx % 3\r\n            if (r === 0) {\r\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n            } if (r === 1) {\r\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n              bBondOrder[bondIdx] = 1\r\n              ++bondIdx\r\n            }\r\n          }\r\n        } else if (mode === BondsWithoutHydrogenMode) {\r\n          const n = Math.min(curIdx + 10, pointersDict.MBONA * 3)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            const r = curIdx % 3\r\n            if (r === 0) {\r\n              bAtomIndex1[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n            } if (r === 1) {\r\n              bAtomIndex2[bondIdx] = parseIntSubstr(line, i * 8, 8) / 3\r\n              bBondOrder[bondIdx] = 1\r\n              ++bondIdx\r\n            }\r\n          }\r\n        } else if (mode === RadiiMode) {\r\n          const n = Math.min(curIdx + 5, pointersDict.NATOM)\r\n          for (let i = 0; curIdx < n; ++i, ++curIdx) {\r\n            radii[curIdx] = parseFloat(line.substr(i * 16, 16))\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    s.title = title.join(' ')\r\n\r\n    const atomCount = pointersDict.NATOM\r\n    let curResIdx = 0\r\n    let curResname = residueLabels[0]\r\n    let curResno = 1\r\n    for (let i = 0; i < atomCount; ++i) {\r\n      if (i + 1 === residuePointers[curResIdx + 1]) {\r\n        ++curResIdx\r\n        curResname = residueLabels[curResIdx]\r\n        curResno = curResIdx + 1\r\n      }\r\n      atomStore.atomTypeId[i] = atomMap.add(atomNames[i])\r\n      atomStore.serial[i] = i + 1\r\n      sb.addAtom(0, '', '', curResname, curResno)\r\n    }\r\n\r\n    atomStore.partialCharge.set(charges)\r\n    atomStore.radius.set(radii)\r\n\r\n    s.bondStore.length = bBondOrder.length\r\n    s.bondStore.count = bBondOrder.length\r\n    s.bondStore.atomIndex1 = bAtomIndex1\r\n    s.bondStore.atomIndex2 = bAtomIndex2\r\n    s.bondStore.bondOrder = bBondOrder\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    calculateChainnames(s, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('PrmtopParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('prmtop', PrmtopParser)\r\nParserRegistry.add('parm7', PrmtopParser)\r\n\r\nexport default PrmtopParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/prmtop-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1824,
    "kind": "variable",
    "name": "amberChargeUnitFactor",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~amberChargeUnitFactor",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1825,
    "kind": "variable",
    "name": "TitleMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~TitleMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1826,
    "kind": "variable",
    "name": "PointersMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~PointersMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1827,
    "kind": "variable",
    "name": "AtomNameMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~AtomNameMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1828,
    "kind": "variable",
    "name": "ChargeMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~ChargeMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1829,
    "kind": "variable",
    "name": "MassMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~MassMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1830,
    "kind": "variable",
    "name": "ResidueLabelMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~ResidueLabelMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1831,
    "kind": "variable",
    "name": "ResiduePointerMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~ResiduePointerMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1832,
    "kind": "variable",
    "name": "BondsIncHydrogenMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~BondsIncHydrogenMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1833,
    "kind": "variable",
    "name": "BondsWithoutHydrogenMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~BondsWithoutHydrogenMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1834,
    "kind": "variable",
    "name": "RadiiMode",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~RadiiMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1835,
    "kind": "function",
    "name": "parseIntSubstr",
    "memberof": "src/parser/prmtop-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/prmtop-parser.js~parseIntSubstr",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1836,
    "kind": "class",
    "name": "PrmtopParser",
    "memberof": "src/parser/prmtop-parser.js",
    "static": true,
    "longname": "src/parser/prmtop-parser.js~PrmtopParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/prmtop-parser.js",
    "importStyle": "PrmtopParser",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1837,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/prmtop-parser.js~PrmtopParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/prmtop-parser.js~PrmtopParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 1838,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/prmtop-parser.js~PrmtopParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/prmtop-parser.js~PrmtopParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 1839,
    "kind": "file",
    "name": "src/parser/psf-parser.js",
    "content": "/**\r\n * @file Psf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport {\r\n  assignResidueTypeBonds, calculateBondsBetween,\r\n  calculateBondsWithin, getChainname\r\n} from '../structure/structure-utils.js'\r\n\r\nconst TitleMode = 1\r\nconst AtomMode = 2\r\nconst BondMode = 3\r\nconst AngleMode = 4\r\nconst DihedralMode = 5\r\nconst ImproperMode = 6\r\n\r\nconst reWhitespace = /\\s+/\r\nconst reTitle = /(^\\*|REMARK)*/\r\n\r\nclass PsfParser extends StructureParser {\r\n  get type () { return 'psf' }\r\n\r\n  _parse () {\r\n    // http://www.ks.uiuc.edu/Training/Tutorials/namd/namd-tutorial-unix-html/node23.html\r\n\r\n    if (Debug) Log.time('PsfParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    const title = []\r\n\r\n    let mode\r\n    let chainid\r\n    let lastSegid\r\n    let idx = 0\r\n    let chainIdx = 0\r\n    let bondIdx = 0\r\n    let bAtomIndex1, bAtomIndex2, bBondOrder\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ].trim()\r\n\r\n        if (!line) {\r\n          mode = undefined\r\n          continue\r\n        }\r\n\r\n        if (mode === AtomMode) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          const serial = parseInt(ls[ 0 ])\r\n          const segid = ls[ 1 ]\r\n          const resno = parseInt(ls[ 2 ])\r\n          const resname = ls[ 3 ]\r\n          const atomname = ls[ 4 ]\r\n          const charge = parseFloat(ls[ 6 ])\r\n\r\n          if (segid !== lastSegid) {\r\n            chainid = getChainname(chainIdx)\r\n            ++chainIdx\r\n          }\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname)\r\n\r\n          atomStore.serial[ idx ] = serial\r\n          atomStore.partialCharge[ idx ] = charge\r\n\r\n          sb.addAtom(0, chainid, chainid, resname, resno)\r\n\r\n          idx += 1\r\n          lastSegid = segid\r\n        } else if (mode === BondMode) {\r\n          const ls = line.split(reWhitespace)\r\n\r\n          for (let j = 0, m = ls.length; j < m; j += 2) {\r\n            bAtomIndex1[ bondIdx ] = parseInt(ls[ j ]) - 1\r\n            bAtomIndex2[ bondIdx ] = parseInt(ls[ j + 1 ]) - 1\r\n            bBondOrder[ bondIdx ] = 1\r\n            bondIdx += 1\r\n          }\r\n        } else if (mode === TitleMode) {\r\n          title.push(line.replace(reTitle, '').trim())\r\n        } else if (mode === AngleMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (mode === DihedralMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (mode === ImproperMode) {\r\n\r\n          // currently not used\r\n\r\n        } else if (line.includes('!NATOM')) {\r\n          mode = AtomMode\r\n\r\n          const numAtoms = parseInt(line.split(reWhitespace)[ 0 ])\r\n          atomStore.resize(numAtoms)\r\n        } else if (line.includes('!NBOND')) {\r\n          mode = BondMode\r\n\r\n          const numBonds = parseInt(line.split(reWhitespace)[ 0 ])\r\n          bAtomIndex1 = new Uint32Array(numBonds)\r\n          bAtomIndex2 = new Uint32Array(numBonds)\r\n          bBondOrder = new Uint8Array(numBonds)\r\n        } else if (line.includes('!NTITLE')) {\r\n          mode = TitleMode\r\n        } else if (line.includes('!NTHETA')) {\r\n          mode = AngleMode\r\n        } else if (line.includes('!NPHI')) {\r\n          mode = DihedralMode\r\n        } else if (line.includes('!NIMPHI')) {\r\n          mode = ImproperMode\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    s.title = title.join(' ')\r\n\r\n    s.bondStore.length = bBondOrder.length\r\n    s.bondStore.count = bondIdx\r\n    s.bondStore.atomIndex1 = bAtomIndex1\r\n    s.bondStore.atomIndex2 = bAtomIndex2\r\n    s.bondStore.bondOrder = bBondOrder\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('PsfParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('psf', PsfParser)\r\n\r\nexport default PsfParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/psf-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1840,
    "kind": "variable",
    "name": "TitleMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~TitleMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1841,
    "kind": "variable",
    "name": "AtomMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~AtomMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1842,
    "kind": "variable",
    "name": "BondMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~BondMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1843,
    "kind": "variable",
    "name": "AngleMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~AngleMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1844,
    "kind": "variable",
    "name": "DihedralMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~DihedralMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1845,
    "kind": "variable",
    "name": "ImproperMode",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~ImproperMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1846,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1847,
    "kind": "variable",
    "name": "reTitle",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~reTitle",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1848,
    "kind": "class",
    "name": "PsfParser",
    "memberof": "src/parser/psf-parser.js",
    "static": true,
    "longname": "src/parser/psf-parser.js~PsfParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/psf-parser.js",
    "importStyle": "PsfParser",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1849,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/psf-parser.js~PsfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/psf-parser.js~PsfParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1850,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/psf-parser.js~PsfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/psf-parser.js~PsfParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1851,
    "kind": "file",
    "name": "src/parser/sdf-parser.js",
    "content": "/**\r\n * @file Sdf Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { assignResidueTypeBonds } from '../structure/structure-utils.js'\r\nimport StructureParser from './structure-parser.js'\r\n\r\nconst reItem = /> <(.+)>/\r\n\r\nclass SdfParser extends StructureParser {\r\n  get type () { return 'sdf' }\r\n\r\n  _parse () {\r\n    // https://en.wikipedia.org/wiki/Chemical_table_file#SDF\r\n    // http://download.accelrys.com/freeware/ctfile-formats/ctfile-formats.zip\r\n\r\n    if (Debug) Log.time('SdfParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    const firstModelOnly = this.firstModelOnly\r\n    const asTrajectory = this.asTrajectory\r\n\r\n    const headerLines = this.streamer.peekLines(2)\r\n\r\n    s.id = headerLines[ 0 ].trim()\r\n    s.title = headerLines[ 1 ].trim()\r\n\r\n    const frames = s.frames\r\n    let doFrames = false\r\n    let currentFrame, currentCoord\r\n\r\n    const atomMap = s.atomMap\r\n    const atomStore = s.atomStore\r\n    atomStore.resize(Math.round(this.streamer.data.length / 50))\r\n    atomStore.addField('formalCharge', 1, 'int8')\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n\r\n    let idx = 0\r\n    let lineNo = 0\r\n    let modelIdx = 0\r\n    let modelAtomIdxStart = 0\r\n\r\n    const sdfData = []\r\n    let currentItem = false\r\n    let currentData = {}\r\n    let mItem\r\n    s.extraData.sdf = sdfData\r\n\r\n    let atomCount, bondCount, atomStart, atomEnd, bondStart, bondEnd\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n\r\n        if (line.substr(0, 4) === '$$$$') {\r\n          lineNo = -1\r\n          ++modelIdx\r\n          modelAtomIdxStart = atomStore.count\r\n          sdfData.push(currentData)\r\n          currentData = {}\r\n          currentItem = false\r\n        } else if (lineNo === 3) {\r\n          atomCount = parseInt(line.substr(0, 3))\r\n          bondCount = parseInt(line.substr(3, 3))\r\n\r\n          atomStart = 4\r\n          atomEnd = atomStart + atomCount\r\n          bondStart = atomEnd\r\n          bondEnd = bondStart + bondCount\r\n\r\n          if (asTrajectory) {\r\n            currentCoord = 0\r\n            currentFrame = new Float32Array(atomCount * 3)\r\n            frames.push(currentFrame)\r\n\r\n            if (modelIdx > 0) doFrames = true\r\n          }\r\n        } else if (lineNo >= atomStart && lineNo < atomEnd) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n\r\n          const x = parseFloat(line.substr(0, 10))\r\n          const y = parseFloat(line.substr(10, 10))\r\n          const z = parseFloat(line.substr(20, 10))\r\n\r\n          if (asTrajectory) {\r\n            const j = currentCoord * 3\r\n\r\n            currentFrame[ j + 0 ] = x\r\n            currentFrame[ j + 1 ] = y\r\n            currentFrame[ j + 2 ] = z\r\n\r\n            currentCoord += 1\r\n\r\n            if (doFrames) continue\r\n          }\r\n\r\n          const element = line.substr(31, 3).trim()\r\n          const atomname = element + (idx + 1)\r\n\r\n          atomStore.growIfFull()\r\n          atomStore.atomTypeId[ idx ] = atomMap.add(atomname, element)\r\n\r\n          atomStore.x[ idx ] = x\r\n          atomStore.y[ idx ] = y\r\n          atomStore.z[ idx ] = z\r\n          atomStore.serial[ idx ] = idx\r\n          atomStore.formalCharge[ idx ] = 0\r\n\r\n          sb.addAtom(modelIdx, '', '', 'HET', 1, 1)\r\n\r\n          idx += 1\r\n        } else if (lineNo >= bondStart && lineNo < bondEnd) {\r\n          if (firstModelOnly && modelIdx > 0) continue\r\n          if (asTrajectory && modelIdx > 0) continue\r\n\r\n          ap1.index = parseInt(line.substr(0, 3)) - 1 + modelAtomIdxStart\r\n          ap2.index = parseInt(line.substr(3, 3)) - 1 + modelAtomIdxStart\r\n          const order = parseInt(line.substr(6, 3))\r\n\r\n          s.bondStore.addBond(ap1, ap2, order)\r\n        } else if (line.match(/M {2}CHG/)) {\r\n          const chargeCount = parseInt(line.substr(6, 3))\r\n          for (let ci = 0, coffset = 10; ci < chargeCount; ++ci, coffset += 8) {\r\n            const aToken = parseInt(line.substr(coffset, 3))\r\n            const atomIdx = aToken - 1 + modelAtomIdxStart\r\n            const cToken = parseInt(line.substr(coffset + 4, 3))\r\n            atomStore.formalCharge[ atomIdx ] = cToken\r\n          }\r\n        // eslint-disable-next-line no-cond-assign\r\n        } else if (mItem = line.match(reItem)) {\r\n          currentItem = mItem[ 1 ]\r\n          currentData[ currentItem ] = []\r\n        } else if (currentItem !== false && line) {\r\n          currentData[ currentItem ].push(line)\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('SdfParser._parse ' + this.name)\r\n  }\r\n\r\n  _postProcess () {\r\n    assignResidueTypeBonds(this.structure)\r\n  }\r\n}\r\n\r\nParserRegistry.add('sdf', SdfParser)\r\nParserRegistry.add('sd', SdfParser)\r\n\r\nexport default SdfParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/sdf-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1852,
    "kind": "variable",
    "name": "reItem",
    "memberof": "src/parser/sdf-parser.js",
    "static": true,
    "longname": "src/parser/sdf-parser.js~reItem",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/sdf-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1853,
    "kind": "class",
    "name": "SdfParser",
    "memberof": "src/parser/sdf-parser.js",
    "static": true,
    "longname": "src/parser/sdf-parser.js~SdfParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/sdf-parser.js",
    "importStyle": "SdfParser",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1854,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/sdf-parser.js~SdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/sdf-parser.js~SdfParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1855,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/sdf-parser.js~SdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/sdf-parser.js~SdfParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 1856,
    "kind": "method",
    "name": "_postProcess",
    "memberof": "src/parser/sdf-parser.js~SdfParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/sdf-parser.js~SdfParser#_postProcess",
    "access": "private",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 1857,
    "kind": "file",
    "name": "src/parser/structure-parser.js",
    "content": "/**\r\n * @file Structure Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Parser from './parser.js'\r\nimport Structure from '../structure/structure.js'\r\nimport StructureBuilder from '../structure/structure-builder.js'\r\n\r\nclass StructureParser extends Parser {\r\n  constructor (streamer, params) {\r\n    var p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.firstModelOnly = defaults(p.firstModelOnly, false)\r\n    this.asTrajectory = defaults(p.asTrajectory, false)\r\n    this.cAlphaOnly = defaults(p.cAlphaOnly, false)\r\n\r\n    this.structure = new Structure(this.name, this.path)\r\n    this.structureBuilder = new StructureBuilder(this.structure)\r\n  }\r\n\r\n  get type () { return 'structure' }\r\n  get __objName () { return 'structure' }\r\n}\r\n\r\nexport default StructureParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/structure-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1858,
    "kind": "class",
    "name": "StructureParser",
    "memberof": "src/parser/structure-parser.js",
    "static": true,
    "longname": "src/parser/structure-parser.js~StructureParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/structure-parser.js",
    "importStyle": "StructureParser",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1859,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1860,
    "kind": "member",
    "name": "firstModelOnly",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#firstModelOnly",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1861,
    "kind": "member",
    "name": "asTrajectory",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#asTrajectory",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1862,
    "kind": "member",
    "name": "cAlphaOnly",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#cAlphaOnly",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 1863,
    "kind": "member",
    "name": "structure",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#structure",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1864,
    "kind": "member",
    "name": "structureBuilder",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#structureBuilder",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1865,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1866,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/structure-parser.js~StructureParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/structure-parser.js~StructureParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1867,
    "kind": "file",
    "name": "src/parser/surface-parser.js",
    "content": "/**\r\n * @file Surface Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Parser from './parser.js'\r\nimport Surface from '../surface/surface.js'\r\n\r\nclass SurfaceParser extends Parser {\r\n  constructor (streamer, params) {\r\n    super(streamer, params)\r\n\r\n    this.loader = this.getLoader()\r\n    this.surface = new Surface(this.name, this.path)\r\n  }\r\n\r\n  get type () { return 'surface' }\r\n  get __objName () { return 'surface' }\r\n\r\n  _parse () {\r\n    var geometry = this.loader.parse(this.streamer.asText())\r\n\r\n    this.surface.fromGeometry(geometry)\r\n  }\r\n}\r\n\r\nexport default SurfaceParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/surface-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1868,
    "kind": "class",
    "name": "SurfaceParser",
    "memberof": "src/parser/surface-parser.js",
    "static": true,
    "longname": "src/parser/surface-parser.js~SurfaceParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/surface-parser.js",
    "importStyle": "SurfaceParser",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1869,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1870,
    "kind": "member",
    "name": "loader",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#loader",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1871,
    "kind": "member",
    "name": "surface",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#surface",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1872,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1873,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1874,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/surface-parser.js~SurfaceParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/surface-parser.js~SurfaceParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1875,
    "kind": "file",
    "name": "src/parser/text-parser.js",
    "content": "/**\r\n * @file Text Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ParserRegistry } from '../globals.js'\r\nimport Parser from './parser.js'\r\n\r\nclass TextParser extends Parser {\r\n  constructor (streamer, params) {\r\n    super(streamer, params)\r\n\r\n    this.text = {\r\n\r\n      name: this.name,\r\n      path: this.path,\r\n      data: ''\r\n\r\n    }\r\n  }\r\n\r\n  get type () { return 'text' }\r\n  get __objName () { return 'text' }\r\n\r\n  _parse () {\r\n    this.text.data = this.streamer.asText()\r\n  }\r\n}\r\n\r\nParserRegistry.add('txt', TextParser)\r\nParserRegistry.add('text', TextParser)\r\n\r\nexport default TextParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/text-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1876,
    "kind": "class",
    "name": "TextParser",
    "memberof": "src/parser/text-parser.js",
    "static": true,
    "longname": "src/parser/text-parser.js~TextParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/text-parser.js",
    "importStyle": "TextParser",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1877,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/text-parser.js~TextParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/text-parser.js~TextParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1878,
    "kind": "member",
    "name": "text",
    "memberof": "src/parser/text-parser.js~TextParser",
    "static": false,
    "longname": "src/parser/text-parser.js~TextParser#text",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1879,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/text-parser.js~TextParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/text-parser.js~TextParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1880,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/text-parser.js~TextParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/text-parser.js~TextParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1881,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/text-parser.js~TextParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/text-parser.js~TextParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1882,
    "kind": "file",
    "name": "src/parser/top-parser.js",
    "content": "/**\r\n * @file Top Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport StructureParser from './structure-parser.js'\r\nimport { WaterNames } from '../structure/structure-constants.js'\r\nimport {\r\n  assignResidueTypeBonds, calculateBondsBetween,\r\n  calculateBondsWithin, getChainname\r\n} from '../structure/structure-utils.js'\r\n\r\nconst SystemMode = 1\r\nconst MoleculesMode = 2\r\nconst MoleculetypeMode = 3\r\nconst AtomsMode = 4\r\nconst BondsMode = 5\r\n\r\nconst reField = /\\[ (.+) \\]/\r\nconst reWhitespace = /\\s+/\r\n\r\nclass TopParser extends StructureParser {\r\n  get type () { return 'top' }\r\n\r\n  _parse () {\r\n    // http://manual.gromacs.org/online/top.html\r\n\r\n    if (Debug) Log.time('TopParser._parse ' + this.name)\r\n\r\n    const s = this.structure\r\n    const sb = this.structureBuilder\r\n\r\n    //\r\n\r\n    const atomMap = s.atomMap\r\n    const bondStore = s.bondStore\r\n\r\n    const atomStore = s.atomStore\r\n    atomStore.addField('partialCharge', 1, 'float32')\r\n\r\n    const molecules = []\r\n    const moleculetypeDict = {}\r\n\r\n    let currentMoleculetype\r\n    let mode\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n        let lt = line.trim()\r\n\r\n        if (!lt || lt[0] === '*' || lt[0] === ';') {\r\n          continue\r\n        }\r\n\r\n        if (lt.startsWith('#include')) {\r\n          throw new Error('TopParser: #include statements not allowed')\r\n        }\r\n\r\n        const fieldMatch = line.match(reField)\r\n        if (fieldMatch !== null) {\r\n          const name = fieldMatch[1]\r\n          if (name === 'moleculetype') {\r\n            mode = MoleculetypeMode\r\n            currentMoleculetype = {\r\n              atoms: [],\r\n              bonds: []\r\n            }\r\n          } else if (name === 'atoms') {\r\n            mode = AtomsMode\r\n          } else if (name === 'bonds') {\r\n            mode = BondsMode\r\n          } else if (name === 'system') {\r\n            mode = SystemMode\r\n          } else if (name === 'molecules') {\r\n            mode = MoleculesMode\r\n          } else {\r\n            mode = undefined\r\n          }\r\n          continue\r\n        }\r\n\r\n        const cIdx = lt.indexOf(';')\r\n        if (cIdx !== -1) {\r\n          lt = lt.substring(0, cIdx).trim()\r\n        }\r\n        if (mode === MoleculetypeMode) {\r\n          const molName = lt.split(reWhitespace)[0]\r\n          moleculetypeDict[molName] = currentMoleculetype\r\n        } else if (mode === AtomsMode) {\r\n          const ls = lt.split(reWhitespace)\r\n          currentMoleculetype.atoms.push([\r\n            parseInt(ls[2]),   // resnr\r\n            ls[3],             // residue\r\n            ls[4],             // atom\r\n            parseFloat(ls[6])  // charge\r\n          ])\r\n        } else if (mode === BondsMode) {\r\n          const ls = lt.split(reWhitespace)\r\n          currentMoleculetype.bonds.push([\r\n            parseInt(ls[0]),  // ai\r\n            parseInt(ls[1])   // aj\r\n          ])\r\n        } else if (mode === SystemMode) {\r\n          s.title = lt\r\n        } else if (mode === MoleculesMode) {\r\n          const ls = lt.split(reWhitespace)\r\n          molecules.push([\r\n            ls[0],           // name\r\n            parseInt(ls[1])  // count\r\n          ])\r\n        }\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    let atomCount = 0\r\n    let bondCount = 0\r\n    molecules.forEach(function (val) {\r\n      const [name, molCount] = val\r\n      const molType = moleculetypeDict[name]\r\n      atomCount += molCount * molType.atoms.length\r\n      bondCount += molCount * molType.bonds.length\r\n    })\r\n\r\n    atomStore.resize(atomCount)\r\n    bondStore.resize(bondCount)\r\n\r\n    let atomIdx = 0\r\n    let resIdx = 0\r\n    let chainidIdx = 0\r\n    let chainnameIdx = 0\r\n    let bondIdx = 0\r\n    let atomOffset = 0\r\n    let lastResno\r\n\r\n    molecules.forEach(function (val) {\r\n      const [name, molCount] = val\r\n      const molType = moleculetypeDict[name]\r\n      const chainname = getChainname(chainnameIdx)\r\n      for (let i = 0; i < molCount; ++i) {\r\n        lastResno = -1\r\n        const chainid = WaterNames.includes(name) ? chainname : getChainname(chainidIdx)\r\n        molType.atoms.forEach(function (atomData) {\r\n          const [resno, resname, atomname, charge] = atomData\r\n          if (resno !== lastResno) {\r\n            ++resIdx\r\n          }\r\n          atomStore.atomTypeId[atomIdx] = atomMap.add(atomname)\r\n          atomStore.serial[atomIdx] = atomIdx + 1\r\n          atomStore.partialCharge[atomIdx] = charge\r\n          sb.addAtom(0, chainname, chainid, resname, resIdx + 1)\r\n          ++atomIdx\r\n          lastResno = resno\r\n        })\r\n        molType.bonds.forEach(function (bondData) {\r\n          bondStore.atomIndex1[bondIdx] = atomOffset + bondData[0] - 1\r\n          bondStore.atomIndex2[bondIdx] = atomOffset + bondData[1] - 1\r\n          ++bondIdx\r\n        })\r\n        ++chainidIdx\r\n        atomOffset += molType.atoms.length\r\n      }\r\n      ++chainnameIdx\r\n    })\r\n\r\n    bondStore.count = bondCount\r\n\r\n    sb.finalize()\r\n    s.finalizeAtoms()\r\n    s.finalizeBonds()\r\n    calculateBondsWithin(s, true)\r\n    calculateBondsBetween(s, true, true)\r\n    assignResidueTypeBonds(s)\r\n\r\n    if (Debug) Log.timeEnd('TopParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('top', TopParser)\r\n\r\nexport default TopParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/top-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1883,
    "kind": "variable",
    "name": "SystemMode",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~SystemMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1884,
    "kind": "variable",
    "name": "MoleculesMode",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~MoleculesMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1885,
    "kind": "variable",
    "name": "MoleculetypeMode",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~MoleculetypeMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1886,
    "kind": "variable",
    "name": "AtomsMode",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~AtomsMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1887,
    "kind": "variable",
    "name": "BondsMode",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~BondsMode",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1888,
    "kind": "variable",
    "name": "reField",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~reField",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1889,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1890,
    "kind": "class",
    "name": "TopParser",
    "memberof": "src/parser/top-parser.js",
    "static": true,
    "longname": "src/parser/top-parser.js~TopParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/top-parser.js",
    "importStyle": "TopParser",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/structure-parser.js~StructureParser"
    ]
  },
  {
    "__docId__": 1891,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/top-parser.js~TopParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/top-parser.js~TopParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 1892,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/top-parser.js~TopParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/top-parser.js~TopParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1893,
    "kind": "file",
    "name": "src/parser/trajectory-parser.js",
    "content": "/**\r\n * @file Trajectory Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Parser from './parser.js'\r\nimport Frames from '../trajectory/frames.js'\r\n\r\nclass TrajectoryParser extends Parser {\r\n  constructor (streamer, params) {\r\n    super(streamer, params)\r\n\r\n    this.frames = new Frames(this.name, this.path)\r\n  }\r\n\r\n  get type () { return 'trajectory' }\r\n  get __objName () { return 'frames' }\r\n}\r\n\r\nexport default TrajectoryParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/trajectory-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1894,
    "kind": "class",
    "name": "TrajectoryParser",
    "memberof": "src/parser/trajectory-parser.js",
    "static": true,
    "longname": "src/parser/trajectory-parser.js~TrajectoryParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/trajectory-parser.js",
    "importStyle": "TrajectoryParser",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1895,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/trajectory-parser.js~TrajectoryParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trajectory-parser.js~TrajectoryParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 1896,
    "kind": "member",
    "name": "frames",
    "memberof": "src/parser/trajectory-parser.js~TrajectoryParser",
    "static": false,
    "longname": "src/parser/trajectory-parser.js~TrajectoryParser#frames",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1897,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/trajectory-parser.js~TrajectoryParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trajectory-parser.js~TrajectoryParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1898,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/trajectory-parser.js~TrajectoryParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trajectory-parser.js~TrajectoryParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1899,
    "kind": "file",
    "name": "src/parser/trr-parser.js",
    "content": "/**\r\n * @file Trr Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { ensureBuffer } from '../utils.js'\r\nimport TrajectoryParser from './trajectory-parser.js'\r\n\r\nclass TrrParser extends TrajectoryParser {\r\n  get type () { return 'trr' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/trrio.cpp\r\n\r\n    if (Debug) Log.time('TrrParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    let offset = 0\r\n\r\n    while (true) {\r\n      // const magicnum = dv.getInt32(offset)\r\n      // const i1 = dv.getFloat32(offset + 4)\r\n      offset += 8\r\n\r\n      const versionSize = dv.getInt32(offset)\r\n      offset += 4\r\n      offset += versionSize\r\n\r\n      // const irSize = dv.getInt32(offset)\r\n      // const eSize = dv.getInt32(offset + 4)\r\n      const boxSize = dv.getInt32(offset + 8)\r\n      const virSize = dv.getInt32(offset + 12)\r\n      const presSize = dv.getInt32(offset + 16)\r\n      // const topSize = dv.getInt32(offset + 20)\r\n      // const symSize = dv.getInt32(offset + 24)\r\n      const coordSize = dv.getInt32(offset + 28)\r\n      const velocitySize = dv.getInt32(offset + 32)\r\n      const forceSize = dv.getInt32(offset + 36)\r\n      const natoms = dv.getInt32(offset + 40)\r\n      // const step = dv.getInt32(offset + 44)\r\n      // const nre = dv.getInt32(offset + 48)\r\n      offset += 52\r\n\r\n      const floatSize = boxSize / 9\r\n      const natoms3 = natoms * 3\r\n\r\n      // let lambda\r\n      if (floatSize === 8) {\r\n        times.push(dv.getFloat64(offset))\r\n        // lambda = dv.getFloat64(offset + 8)\r\n      } else {\r\n        times.push(dv.getFloat32(offset))\r\n        // lambda = dv.getFloat32(offset + 4)\r\n      }\r\n      offset += 2 * floatSize\r\n\r\n      if (boxSize) {\r\n        const box = new Float32Array(9)\r\n        if (floatSize === 8) {\r\n          for (let i = 0; i < 9; ++i) {\r\n            box[i] = dv.getFloat64(offset) * 10\r\n            offset += 8\r\n          }\r\n        } else {\r\n          for (let i = 0; i < 9; ++i) {\r\n            box[i] = dv.getFloat32(offset) * 10\r\n            offset += 4\r\n          }\r\n        }\r\n        boxes.push(box)\r\n      }\r\n\r\n      // ignore, unused\r\n      offset += virSize\r\n\r\n      // ignore, unused\r\n      offset += presSize\r\n\r\n      if (coordSize) {\r\n        let frameCoords\r\n        if (floatSize === 8) {\r\n          frameCoords = new Float32Array(natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            frameCoords[i] = dv.getFloat64(offset) * 10\r\n            offset += 8\r\n          }\r\n        } else {\r\n          const tmp = new Uint32Array(bin, offset, natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            const value = tmp[i]\r\n            tmp[i] = (\r\n              ((value & 0xFF) << 24) | ((value & 0xFF00) << 8) |\r\n              ((value >> 8) & 0xFF00) | ((value >> 24) & 0xFF)\r\n            )\r\n          }\r\n          frameCoords = new Float32Array(bin, offset, natoms3)\r\n          for (let i = 0; i < natoms3; ++i) {\r\n            frameCoords[i] *= 10\r\n            offset += 4\r\n          }\r\n        }\r\n        coordinates.push(frameCoords)\r\n      }\r\n\r\n      // ignore, unused\r\n      offset += velocitySize\r\n\r\n      // ignore, unused\r\n      offset += forceSize\r\n\r\n      if (offset >= bin.byteLength) break\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('TrrParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('trr', TrrParser)\r\n\r\nexport default TrrParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/trr-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1900,
    "kind": "class",
    "name": "TrrParser",
    "memberof": "src/parser/trr-parser.js",
    "static": true,
    "longname": "src/parser/trr-parser.js~TrrParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/trr-parser.js",
    "importStyle": "TrrParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/trajectory-parser.js~TrajectoryParser"
    ]
  },
  {
    "__docId__": 1901,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/trr-parser.js~TrrParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trr-parser.js~TrrParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1902,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/trr-parser.js~TrrParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trr-parser.js~TrrParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1903,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/trr-parser.js~TrrParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/trr-parser.js~TrrParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 1904,
    "kind": "file",
    "name": "src/parser/validation-parser.js",
    "content": "/**\r\n * @file Validation Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport XmlParser from './xml-parser.js'\r\nimport Validation from '../structure/validation.js'\r\n\r\nclass ValidationParser extends XmlParser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.useDomParser = true\r\n    this.validation = new Validation(this.name, this.path)\r\n  }\r\n\r\n  get __objName () { return 'validation' }\r\n  get isXml () { return true }\r\n\r\n  _parse () {\r\n    super._parse()\r\n\r\n    if (Debug) Log.time('ValidationParser._parse ' + this.name)\r\n\r\n    this.validation.fromXml(this.xml.data)\r\n\r\n    if (Debug) Log.timeEnd('ValidationParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('validation', ValidationParser)\r\n\r\nexport default ValidationParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/validation-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1905,
    "kind": "class",
    "name": "ValidationParser",
    "memberof": "src/parser/validation-parser.js",
    "static": true,
    "longname": "src/parser/validation-parser.js~ValidationParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/validation-parser.js",
    "importStyle": "ValidationParser",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/xml-parser.js~XmlParser"
    ]
  },
  {
    "__docId__": 1906,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 1907,
    "kind": "member",
    "name": "useDomParser",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#useDomParser",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 1908,
    "kind": "member",
    "name": "validation",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#validation",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1909,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1910,
    "kind": "get",
    "name": "isXml",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#isXml",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 1911,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/validation-parser.js~ValidationParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/validation-parser.js~ValidationParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1912,
    "kind": "file",
    "name": "src/parser/volume-parser.js",
    "content": "/**\r\n * @file Volume Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Parser from './parser.js'\r\nimport Volume from '../surface/volume.js'\r\n\r\nclass VolumeParser extends Parser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.volume = new Volume(this.name, this.path)\r\n    this.voxelSize = defaults(p.voxelSize, 1)\r\n  }\r\n\r\n  get type () { return 'volume' }\r\n  get __objName () { return 'volume' }\r\n\r\n  _afterParse () {\r\n    this.volume.setMatrix(this.getMatrix())\r\n    super._afterParse()\r\n  }\r\n\r\n  getMatrix () {\r\n    return new Matrix4()\r\n  }\r\n}\r\n\r\nexport default VolumeParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/volume-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1913,
    "kind": "class",
    "name": "VolumeParser",
    "memberof": "src/parser/volume-parser.js",
    "static": true,
    "longname": "src/parser/volume-parser.js~VolumeParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/volume-parser.js",
    "importStyle": "VolumeParser",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1914,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 1915,
    "kind": "member",
    "name": "volume",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#volume",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1916,
    "kind": "member",
    "name": "voxelSize",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#voxelSize",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 1917,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 1918,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 1919,
    "kind": "method",
    "name": "_afterParse",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#_afterParse",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 1920,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/volume-parser.js~VolumeParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/volume-parser.js~VolumeParser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 1921,
    "kind": "file",
    "name": "src/parser/xml-parser.js",
    "content": "/**\r\n * @file Xml Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { parseXml } from '../utils/parse-xml.js'\r\nimport Parser from './parser.js'\r\n\r\nclass XmlParser extends Parser {\r\n  constructor (streamer, params) {\r\n    const p = params || {}\r\n\r\n    super(streamer, p)\r\n\r\n    this.useDomParser = defaults(p.useDomParser, false)\r\n\r\n    this.xml = {\r\n      name: this.name,\r\n      path: this.path,\r\n      data: {}\r\n    }\r\n  }\r\n\r\n  get type () { return 'xml' }\r\n  get __objName () { return 'xml' }\r\n  get isXml () { return true }\r\n\r\n  __xmlParser (xml) {\r\n    return parseXml(xml)\r\n  }\r\n\r\n  __domParser (xml) {\r\n    const domParser = new window.DOMParser()\r\n    return domParser.parseFromString(xml, 'text/xml')\r\n  }\r\n\r\n  _parse () {\r\n    if (Debug) Log.time('XmlParser._parse ' + this.name)\r\n\r\n    if (this.useDomParser) {\r\n      if (this.streamer.data instanceof window.Document) {\r\n        this.xml.data = this.streamer.data\r\n      } else {\r\n        this.xml.data = this.__domParser(this.streamer.asText())\r\n      }\r\n    } else {\r\n      this.xml.data = this.__xmlParser(this.streamer.asText())\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XmlParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('xml', XmlParser)\r\n\r\nexport default XmlParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/xml-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1922,
    "kind": "class",
    "name": "XmlParser",
    "memberof": "src/parser/xml-parser.js",
    "static": true,
    "longname": "src/parser/xml-parser.js~XmlParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/xml-parser.js",
    "importStyle": "XmlParser",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/parser.js~Parser"
    ]
  },
  {
    "__docId__": 1923,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 1924,
    "kind": "member",
    "name": "useDomParser",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#useDomParser",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 1925,
    "kind": "member",
    "name": "xml",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#xml",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 1926,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 1927,
    "kind": "get",
    "name": "__objName",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#__objName",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 1928,
    "kind": "get",
    "name": "isXml",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#isXml",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 1929,
    "kind": "method",
    "name": "__xmlParser",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#__xmlParser",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 1930,
    "kind": "method",
    "name": "__domParser",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#__domParser",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 1931,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/xml-parser.js~XmlParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xml-parser.js~XmlParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 1932,
    "kind": "file",
    "name": "src/parser/xplor-parser.js",
    "content": "/**\r\n * @file Xplor Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport VolumeParser from './volume-parser.js'\r\n\r\nconst reWhitespace = /\\s+/\r\n\r\nfunction parseNumberLine (line) {\r\n  return line.trim().split(reWhitespace).map(parseFloat)\r\n}\r\n\r\nclass XplorParser extends VolumeParser {\r\n  get type () { return 'xplor' }\r\n\r\n  _parse () {\r\n    // http://hincklab.uthscsa.edu/html/soft_packs/msi_docs/insight980/xplor/formats.html\r\n    // http://www.mrc-lmb.cam.ac.uk/public/xtal/doc/cns/cns_1.3/tutorial/formats/maps/text.html\r\n\r\n    if (Debug) Log.time('XplorParser._parse ' + this.name)\r\n\r\n    const v = this.volume\r\n    const headerLines = this.streamer.peekLines(8)\r\n    const header = {}\r\n\r\n    let infoStart\r\n    if (headerLines[ 2 ].startsWith('REMARKS')) {\r\n      infoStart = parseInt(headerLines[ 1 ].substring(0, 8)) + 2\r\n    } else {\r\n      infoStart = 5\r\n    }\r\n    const dataStart = infoStart + 3\r\n\r\n    const gridInfo = parseNumberLine(headerLines[ infoStart ])\r\n    header.NA = gridInfo[ 0 ]\r\n    header.AMIN = gridInfo[ 1 ]\r\n    header.AMAX = gridInfo[ 2 ]\r\n    header.NB = gridInfo[ 3 ]\r\n    header.BMIN = gridInfo[ 4 ]\r\n    header.BMAX = gridInfo[ 5 ]\r\n    header.NC = gridInfo[ 6 ]\r\n    header.CMIN = gridInfo[ 7 ]\r\n    header.CMAX = gridInfo[ 8 ]\r\n\r\n    const cellInfo = parseNumberLine(headerLines[ infoStart + 1 ])\r\n    header.a = cellInfo[ 0 ] * this.voxelSize\r\n    header.b = cellInfo[ 1 ] * this.voxelSize\r\n    header.c = cellInfo[ 2 ] * this.voxelSize\r\n    header.alpha = cellInfo[ 3 ]\r\n    header.beta = cellInfo[ 4 ]\r\n    header.gamma = cellInfo[ 5 ]\r\n\r\n    const na = header.AMAX - header.AMIN + 1\r\n    const nb = header.BMAX - header.BMIN + 1\r\n    const nc = header.CMAX - header.CMIN + 1\r\n    const n = na * nb * nc\r\n\r\n    const data = new Float32Array(n)\r\n    const lineSection = 1 + (na * nb) / 6\r\n    let count = 0\r\n    let lineNo = 0\r\n\r\n    function _parseChunkOfLines (_i, _n, lines) {\r\n      for (let i = _i; i < _n; ++i) {\r\n        const line = lines[ i ]\r\n\r\n        if (lineNo >= dataStart && (lineNo - dataStart) % lineSection !== 0 && count < n) {\r\n          for (let j = 0, lj = 6; j < lj; ++j) {\r\n            data[ count ] = parseFloat(line.substr(12 * j, 12))\r\n            ++count\r\n          }\r\n        } else if (count === n) {\r\n          const lt = line.trim()\r\n          if (lt && lt !== '-9999') {\r\n            const ls = parseNumberLine(line)\r\n            header.RAVE = ls[0]\r\n            header.RSIGMA = ls[1]\r\n          }\r\n        }\r\n\r\n        ++lineNo\r\n      }\r\n    }\r\n\r\n    this.streamer.eachChunkOfLines(function (lines/*, chunkNo, chunkCount */) {\r\n      _parseChunkOfLines(0, lines.length, lines)\r\n    })\r\n\r\n    v.header = header\r\n    v.setData(data, na, nb, nc)\r\n    if (header.RAVE !== 0 && header.RSIGMA !== 1) {\r\n      v.setStats(undefined, undefined, header.RAVE, header.RSIGMA)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XplorParser._parse ' + this.name)\r\n  }\r\n\r\n  getMatrix () {\r\n    const h = this.volume.header\r\n\r\n    const basisX = [\r\n      h.a,\r\n      0,\r\n      0\r\n    ]\r\n\r\n    const basisY = [\r\n      h.b * Math.cos(Math.PI / 180.0 * h.gamma),\r\n      h.b * Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n\r\n    const basisZ = [\r\n      h.c * Math.cos(Math.PI / 180.0 * h.beta),\r\n      h.c * (\r\n        Math.cos(Math.PI / 180.0 * h.alpha) -\r\n        Math.cos(Math.PI / 180.0 * h.gamma) *\r\n        Math.cos(Math.PI / 180.0 * h.beta)\r\n      ) / Math.sin(Math.PI / 180.0 * h.gamma),\r\n      0\r\n    ]\r\n    basisZ[ 2 ] = Math.sqrt(\r\n      h.c * h.c * Math.sin(Math.PI / 180.0 * h.beta) *\r\n      Math.sin(Math.PI / 180.0 * h.beta) - basisZ[ 1 ] * basisZ[ 1 ]\r\n    )\r\n\r\n    const basis = [ 0, basisX, basisY, basisZ ]\r\n    const nxyz = [ 0, h.NA, h.NB, h.NC ]\r\n    const mapcrs = [ 0, 1, 2, 3 ]\r\n\r\n    const matrix = new Matrix4()\r\n\r\n    matrix.set(\r\n      basis[ mapcrs[1] ][0] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][0] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][0] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][1] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][1] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][1] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      basis[ mapcrs[1] ][2] / nxyz[ mapcrs[1] ],\r\n      basis[ mapcrs[2] ][2] / nxyz[ mapcrs[2] ],\r\n      basis[ mapcrs[3] ][2] / nxyz[ mapcrs[3] ],\r\n      0,\r\n      0, 0, 0, 1\r\n    )\r\n\r\n    matrix.multiply(new Matrix4().makeTranslation(\r\n      h.AMIN, h.BMIN, h.CMIN\r\n    ))\r\n\r\n    return matrix\r\n  }\r\n}\r\n\r\nParserRegistry.add('xplor', XplorParser)\r\nParserRegistry.add('cns', XplorParser)\r\n\r\nexport default XplorParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/xplor-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1933,
    "kind": "variable",
    "name": "reWhitespace",
    "memberof": "src/parser/xplor-parser.js",
    "static": true,
    "longname": "src/parser/xplor-parser.js~reWhitespace",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xplor-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1934,
    "kind": "function",
    "name": "parseNumberLine",
    "memberof": "src/parser/xplor-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/xplor-parser.js~parseNumberLine",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xplor-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1935,
    "kind": "class",
    "name": "XplorParser",
    "memberof": "src/parser/xplor-parser.js",
    "static": true,
    "longname": "src/parser/xplor-parser.js~XplorParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/xplor-parser.js",
    "importStyle": "XplorParser",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/volume-parser.js~VolumeParser"
    ]
  },
  {
    "__docId__": 1936,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/xplor-parser.js~XplorParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xplor-parser.js~XplorParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 1937,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/xplor-parser.js~XplorParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xplor-parser.js~XplorParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 1938,
    "kind": "method",
    "name": "getMatrix",
    "memberof": "src/parser/xplor-parser.js~XplorParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xplor-parser.js~XplorParser#getMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 1939,
    "kind": "file",
    "name": "src/parser/xtc-parser.js",
    "content": "/**\r\n * @file Xtc Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, ParserRegistry } from '../globals.js'\r\nimport { ensureBuffer } from '../utils.js'\r\nimport TrajectoryParser from './trajectory-parser.js'\r\n\r\nconst MagicInts = new Uint32Array([\r\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 10, 12, 16, 20, 25, 32, 40, 50, 64,\r\n  80, 101, 128, 161, 203, 256, 322, 406, 512, 645, 812, 1024, 1290,\r\n  1625, 2048, 2580, 3250, 4096, 5060, 6501, 8192, 10321, 13003,\r\n  16384, 20642, 26007, 32768, 41285, 52015, 65536, 82570, 104031,\r\n  131072, 165140, 208063, 262144, 330280, 416127, 524287, 660561,\r\n  832255, 1048576, 1321122, 1664510, 2097152, 2642245, 3329021,\r\n  4194304, 5284491, 6658042, 8388607, 10568983, 13316085, 16777216\r\n])\r\nconst FirstIdx = 9\r\n// const LastIdx = MagicInts.length\r\n\r\nfunction sizeOfInt (size) {\r\n  let num = 1\r\n  let numOfBits = 0\r\n  while (size >= num && numOfBits < 32) {\r\n    numOfBits++\r\n    num <<= 1\r\n  }\r\n  return numOfBits\r\n}\r\n\r\nconst _tmpBytes = new Uint8Array(32)\r\n\r\nfunction sizeOfInts (numOfInts, sizes) {\r\n  let numOfBytes = 1\r\n  let numOfBits = 0\r\n  _tmpBytes[0] = 1\r\n  for (let i = 0; i < numOfInts; i++) {\r\n    let bytecnt\r\n    let tmp = 0\r\n    for (bytecnt = 0; bytecnt < numOfBytes; bytecnt++) {\r\n      tmp += _tmpBytes[bytecnt] * sizes[i]\r\n      _tmpBytes[bytecnt] = tmp & 0xff\r\n      tmp >>= 8\r\n    }\r\n    while (tmp !== 0) {\r\n      _tmpBytes[bytecnt++] = tmp & 0xff\r\n      tmp >>= 8\r\n    }\r\n    numOfBytes = bytecnt\r\n  }\r\n  let num = 1\r\n  numOfBytes--\r\n  while (_tmpBytes[numOfBytes] >= num) {\r\n    numOfBits++\r\n    num *= 2\r\n  }\r\n  return numOfBits + numOfBytes * 8\r\n}\r\n\r\nfunction decodeBits (buf, cbuf, numOfBits, buf2) {\r\n  const mask = (1 << numOfBits) - 1\r\n  let lastBB0 = buf2[1]\r\n  let lastBB1 = buf2[2]\r\n  let cnt = buf[0]\r\n  let num = 0\r\n\r\n  while (numOfBits >= 8) {\r\n    lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\r\n    num |= (lastBB1 >> lastBB0) << (numOfBits - 8)\r\n    numOfBits -= 8\r\n  }\r\n\r\n  if (numOfBits > 0) {\r\n    if (lastBB0 < numOfBits) {\r\n      lastBB0 += 8\r\n      lastBB1 = (lastBB1 << 8) | cbuf[cnt++]\r\n    }\r\n    lastBB0 -= numOfBits\r\n    num |= (lastBB1 >> lastBB0) & ((1 << numOfBits) - 1)\r\n  }\r\n\r\n  num &= mask\r\n  buf[0] = cnt\r\n  buf[1] = lastBB0\r\n  buf[2] = lastBB1\r\n\r\n  return num\r\n}\r\n\r\nconst _tmpIntBytes = new Int32Array(32)\r\n\r\nfunction decodeInts (buf, cbuf, numOfInts, numOfBits, sizes, nums, buf2) {\r\n  let numOfBytes = 0\r\n  _tmpIntBytes[1] = 0\r\n  _tmpIntBytes[2] = 0\r\n  _tmpIntBytes[3] = 0\r\n\r\n  while (numOfBits > 8) {\r\n    // this is inversed??? why??? because of the endiannness???\r\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, 8, buf2)\r\n    numOfBits -= 8\r\n  }\r\n\r\n  if (numOfBits > 0) {\r\n    _tmpIntBytes[numOfBytes++] = decodeBits(buf, cbuf, numOfBits, buf2)\r\n  }\r\n\r\n  for (let i = numOfInts - 1; i > 0; i--) {\r\n    let num = 0\r\n    for (let j = numOfBytes - 1; j >= 0; j--) {\r\n      num = (num << 8) | _tmpIntBytes[j]\r\n      const p = (num / sizes[i]) | 0\r\n      _tmpIntBytes[j] = p\r\n      num = num - p * sizes[i]\r\n    }\r\n    nums[i] = num\r\n  }\r\n  nums[0] = (\r\n    _tmpIntBytes[0] |\r\n    (_tmpIntBytes[1] << 8) |\r\n    (_tmpIntBytes[2] << 16) |\r\n    (_tmpIntBytes[3] << 24)\r\n  )\r\n}\r\n\r\nclass XtcParser extends TrajectoryParser {\r\n  get type () { return 'xtc' }\r\n  get isBinary () { return true }\r\n\r\n  _parse () {\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/xtcio.cpp\r\n    // https://github.com/gromacs/gromacs/blob/master/src/gromacs/fileio/libxdrf.cpp\r\n\r\n    if (Debug) Log.time('XtcParser._parse ' + this.name)\r\n\r\n    const bin = ensureBuffer(this.streamer.data)\r\n    const dv = new DataView(bin)\r\n\r\n    const f = this.frames\r\n    const coordinates = f.coordinates\r\n    const boxes = f.boxes\r\n    const times = f.times\r\n\r\n    const minMaxInt = new Int32Array(6)\r\n    const sizeint = new Int32Array(3)\r\n    const bitsizeint = new Int32Array(3)\r\n    const sizesmall = new Uint32Array(3)\r\n    const thiscoord = new Float32Array(3)\r\n    const prevcoord = new Float32Array(3)\r\n\r\n    let offset = 0\r\n    const buf = new Int32Array(3)\r\n    const buf2 = new Uint32Array(buf.buffer)\r\n\r\n    while (true) {\r\n      let frameCoords\r\n\r\n      // const magicnum = dv.getInt32(offset)\r\n      const natoms = dv.getInt32(offset + 4)\r\n      // const step = dv.getInt32(offset + 8)\r\n      offset += 12\r\n\r\n      const natoms3 = natoms * 3\r\n\r\n      times.push(dv.getFloat32(offset))\r\n      offset += 4\r\n\r\n      const box = new Float32Array(9)\r\n      for (let i = 0; i < 9; ++i) {\r\n        box[i] = dv.getFloat32(offset) * 10\r\n        offset += 4\r\n      }\r\n      boxes.push(box)\r\n\r\n      if (natoms <= 9) {  // no compression\r\n        for (let i = 0; i < natoms; ++i) {\r\n          frameCoords[i] = dv.getFloat32(offset)\r\n          offset += 4\r\n        }\r\n      } else {\r\n        buf[0] = buf[1] = buf[2] = 0.0\r\n        sizeint[0] = sizeint[1] = sizeint[2] = 0\r\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = 0\r\n        bitsizeint[0] = bitsizeint[1] = bitsizeint[2] = 0\r\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n        prevcoord[0] = prevcoord[1] = prevcoord[2] = 0\r\n\r\n        frameCoords = new Float32Array(natoms3)\r\n        let lfp = 0\r\n\r\n        const lsize = dv.getInt32(offset)\r\n        offset += 4\r\n        const precision = dv.getFloat32(offset)\r\n        offset += 4\r\n\r\n        minMaxInt[0] = dv.getInt32(offset)\r\n        minMaxInt[1] = dv.getInt32(offset + 4)\r\n        minMaxInt[2] = dv.getInt32(offset + 8)\r\n        minMaxInt[3] = dv.getInt32(offset + 12)\r\n        minMaxInt[4] = dv.getInt32(offset + 16)\r\n        minMaxInt[5] = dv.getInt32(offset + 20)\r\n        sizeint[0] = minMaxInt[3] - minMaxInt[0] + 1\r\n        sizeint[1] = minMaxInt[4] - minMaxInt[1] + 1\r\n        sizeint[2] = minMaxInt[5] - minMaxInt[2] + 1\r\n        offset += 24\r\n\r\n        let bitsize\r\n        if ((sizeint[0] | sizeint[1] | sizeint[2]) > 0xffffff) {\r\n          bitsizeint[0] = sizeOfInt(sizeint[0])\r\n          bitsizeint[1] = sizeOfInt(sizeint[1])\r\n          bitsizeint[2] = sizeOfInt(sizeint[2])\r\n          bitsize = 0  // flag the use of large sizes\r\n        } else {\r\n          bitsize = sizeOfInts(3, sizeint)\r\n        }\r\n\r\n        let smallidx = dv.getInt32(offset)\r\n        offset += 4\r\n        // if (smallidx == 0) {alert(\"Undocumented error 1\"); return;}\r\n\r\n        // let tmpIdx = smallidx + 8\r\n        // const maxidx = (LastIdx < tmpIdx) ? LastIdx : tmpIdx\r\n        // const minidx = maxidx - 8  // often this equal smallidx\r\n        let tmpIdx = smallidx - 1\r\n        tmpIdx = (FirstIdx > tmpIdx) ? FirstIdx : tmpIdx\r\n        let smaller = (MagicInts[tmpIdx] / 2) | 0\r\n        let smallnum = (MagicInts[smallidx] / 2) | 0\r\n\r\n        sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\r\n        // larger = MagicInts[maxidx]\r\n\r\n        let adz = Math.ceil(dv.getInt32(offset) / 4) * 4\r\n        offset += 4\r\n        // if (tmpIdx == 0) {alert(\"Undocumented error 2\"); return;}\r\n\r\n        // buf = new Int32Array(bin, offset);\r\n        // buf8 = new Uint8Array(bin, offset);\r\n\r\n        // tmpIdx += 3; rndup = tmpIdx%4;\r\n        // for (i=tmpIdx+rndup-1; i>=tmpIdx; i--) buf8[i] = 0;\r\n\r\n        // now unpack buf2...\r\n\r\n        const invPrecision = 1.0 / precision\r\n        let run = 0\r\n        let i = 0\r\n\r\n        const buf8 = new Uint8Array(bin, offset)  // 229...\r\n\r\n        thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n\r\n        while (i < lsize) {\r\n          if (bitsize === 0) {\r\n            thiscoord[0] = decodeBits(buf, buf8, bitsizeint[0], buf2)\r\n            thiscoord[1] = decodeBits(buf, buf8, bitsizeint[1], buf2)\r\n            thiscoord[2] = decodeBits(buf, buf8, bitsizeint[2], buf2)\r\n          } else {\r\n            decodeInts(buf, buf8, 3, bitsize, sizeint, thiscoord, buf2)\r\n          }\r\n\r\n          i++\r\n\r\n          thiscoord[0] += minMaxInt[0]\r\n          thiscoord[1] += minMaxInt[1]\r\n          thiscoord[2] += minMaxInt[2]\r\n\r\n          prevcoord[0] = thiscoord[0]\r\n          prevcoord[1] = thiscoord[1]\r\n          prevcoord[2] = thiscoord[2]\r\n\r\n          const flag = decodeBits(buf, buf8, 1, buf2)\r\n          let isSmaller = 0\r\n\r\n          if (flag === 1) {\r\n            run = decodeBits(buf, buf8, 5, buf2)\r\n            isSmaller = run % 3\r\n            run -= isSmaller\r\n            isSmaller--\r\n          }\r\n\r\n          // if ((lfp-ptrstart)+run > size3){\r\n          //   fprintf(stderr, \"(xdrfile error) Buffer overrun during decompression.\\n\");\r\n          //   return 0;\r\n          // }\r\n\r\n          if (run > 0) {\r\n            thiscoord[0] = thiscoord[1] = thiscoord[2] = 0\r\n\r\n            for (let k = 0; k < run; k += 3) {\r\n              decodeInts(buf, buf8, 3, smallidx, sizesmall, thiscoord, buf2)\r\n              i++\r\n\r\n              thiscoord[0] += prevcoord[0] - smallnum\r\n              thiscoord[1] += prevcoord[1] - smallnum\r\n              thiscoord[2] += prevcoord[2] - smallnum\r\n\r\n              if (k === 0) {\r\n                // interchange first with second atom for\r\n                // better compression of water molecules\r\n                let tmpSwap = thiscoord[0]\r\n                thiscoord[0] = prevcoord[0]\r\n                prevcoord[0] = tmpSwap\r\n\r\n                tmpSwap = thiscoord[1]\r\n                thiscoord[1] = prevcoord[1]\r\n                prevcoord[1] = tmpSwap\r\n\r\n                tmpSwap = thiscoord[2]\r\n                thiscoord[2] = prevcoord[2]\r\n                prevcoord[2] = tmpSwap\r\n\r\n                frameCoords[lfp++] = prevcoord[0] * invPrecision\r\n                frameCoords[lfp++] = prevcoord[1] * invPrecision\r\n                frameCoords[lfp++] = prevcoord[2] * invPrecision\r\n              } else {\r\n                prevcoord[0] = thiscoord[0]\r\n                prevcoord[1] = thiscoord[1]\r\n                prevcoord[2] = thiscoord[2]\r\n              }\r\n              frameCoords[lfp++] = thiscoord[0] * invPrecision\r\n              frameCoords[lfp++] = thiscoord[1] * invPrecision\r\n              frameCoords[lfp++] = thiscoord[2] * invPrecision\r\n            }\r\n          } else {\r\n            frameCoords[lfp++] = thiscoord[0] * invPrecision\r\n            frameCoords[lfp++] = thiscoord[1] * invPrecision\r\n            frameCoords[lfp++] = thiscoord[2] * invPrecision\r\n          }\r\n\r\n          smallidx += isSmaller\r\n\r\n          if (isSmaller < 0) {\r\n            smallnum = smaller\r\n            if (smallidx > FirstIdx) {\r\n              smaller = (MagicInts[smallidx - 1] / 2) | 0\r\n            } else {\r\n              smaller = 0\r\n            }\r\n          } else if (isSmaller > 0) {\r\n            smaller = smallnum\r\n            smallnum = (MagicInts[smallidx] / 2) | 0\r\n          }\r\n          sizesmall[0] = sizesmall[1] = sizesmall[2] = MagicInts[smallidx]\r\n\r\n          if (sizesmall[0] === 0 || sizesmall[1] === 0 || sizesmall[2] === 0) {\r\n            console.error('(xdrfile error) Undefined error.')\r\n            return\r\n          }\r\n        }\r\n        offset += adz\r\n      }\r\n\r\n      for (let c = 0; c < natoms3; c++) {\r\n        frameCoords[c] *= 10\r\n      }\r\n\r\n      coordinates.push(frameCoords)\r\n\r\n      if (offset >= bin.byteLength) break\r\n    }\r\n\r\n    if (times.length >= 1) {\r\n      f.timeOffset = times[0]\r\n    }\r\n    if (times.length >= 2) {\r\n      f.deltaTime = times[1] - times[0]\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('XtcParser._parse ' + this.name)\r\n  }\r\n}\r\n\r\nParserRegistry.add('xtc', XtcParser)\r\n\r\nexport default XtcParser\r\n",
    "static": true,
    "longname": "D:/nglLib/src/parser/xtc-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1940,
    "kind": "variable",
    "name": "MagicInts",
    "memberof": "src/parser/xtc-parser.js",
    "static": true,
    "longname": "src/parser/xtc-parser.js~MagicInts",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1941,
    "kind": "variable",
    "name": "FirstIdx",
    "memberof": "src/parser/xtc-parser.js",
    "static": true,
    "longname": "src/parser/xtc-parser.js~FirstIdx",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1942,
    "kind": "function",
    "name": "sizeOfInt",
    "memberof": "src/parser/xtc-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/xtc-parser.js~sizeOfInt",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1943,
    "kind": "variable",
    "name": "_tmpBytes",
    "memberof": "src/parser/xtc-parser.js",
    "static": true,
    "longname": "src/parser/xtc-parser.js~_tmpBytes",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1944,
    "kind": "function",
    "name": "sizeOfInts",
    "memberof": "src/parser/xtc-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/xtc-parser.js~sizeOfInts",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1945,
    "kind": "function",
    "name": "decodeBits",
    "memberof": "src/parser/xtc-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/xtc-parser.js~decodeBits",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1946,
    "kind": "variable",
    "name": "_tmpIntBytes",
    "memberof": "src/parser/xtc-parser.js",
    "static": true,
    "longname": "src/parser/xtc-parser.js~_tmpIntBytes",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1947,
    "kind": "function",
    "name": "decodeInts",
    "memberof": "src/parser/xtc-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/parser/xtc-parser.js~decodeInts",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 1948,
    "kind": "class",
    "name": "XtcParser",
    "memberof": "src/parser/xtc-parser.js",
    "static": true,
    "longname": "src/parser/xtc-parser.js~XtcParser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/parser/xtc-parser.js",
    "importStyle": "XtcParser",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/parser/trajectory-parser.js~TrajectoryParser"
    ]
  },
  {
    "__docId__": 1949,
    "kind": "get",
    "name": "type",
    "memberof": "src/parser/xtc-parser.js~XtcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xtc-parser.js~XtcParser#type",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 1950,
    "kind": "get",
    "name": "isBinary",
    "memberof": "src/parser/xtc-parser.js~XtcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xtc-parser.js~XtcParser#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true
  },
  {
    "__docId__": 1951,
    "kind": "method",
    "name": "_parse",
    "memberof": "src/parser/xtc-parser.js~XtcParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/parser/xtc-parser.js~XtcParser#_parse",
    "access": "private",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 1952,
    "kind": "file",
    "name": "src/polyfills.js",
    "content": "/**\r\n * @file shims\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\n/// ///////////\r\n// Polyfills\r\n\r\nif (typeof window !== 'undefined') {\r\n  (function () {\r\n    'use strict'\r\n    // Console-polyfill. MIT license.\r\n    // https://github.com/paulmillr/console-polyfill\r\n    // Make it safe to do console.log() always.\r\n\r\n    window.console = window.console || {}\r\n    var con = window.console\r\n    var prop, method\r\n    var empty = {}\r\n    var dummy = function () {}\r\n    var properties = 'memory'.split(',')\r\n    var methods = (\r\n      'assert,clear,count,debug,dir,dirxml,error,exception,group,' +\r\n      'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\r\n      'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn'\r\n    ).split(',')\r\n\r\n    while ((prop = properties.pop())) if (!con[prop]) con[prop] = empty\r\n    while ((method = methods.pop())) if (!con[method]) con[method] = dummy\r\n  })()\r\n}\r\n\r\nif (typeof window.HTMLCanvasElement !== 'undefined' && !window.HTMLCanvasElement.prototype.toBlob) {\r\n  // http://code.google.com/p/chromium/issues/detail?id=67587#57\r\n  Object.defineProperty(window.HTMLCanvasElement.prototype, 'toBlob', {\r\n\r\n    value: function (callback, type, quality) {\r\n      var bin = window.atob(this.toDataURL(type, quality).split(',')[ 1 ])\r\n      var len = bin.length\r\n      var len32 = len >> 2\r\n      var a8 = new Uint8Array(len)\r\n      var a32 = new Uint32Array(a8.buffer, 0, len32)\r\n\r\n      for (var i = 0, j = 0; i < len32; i++) {\r\n        a32[i] = (\r\n          bin.charCodeAt(j++) |\r\n          bin.charCodeAt(j++) << 8 |\r\n          bin.charCodeAt(j++) << 16 |\r\n          bin.charCodeAt(j++) << 24\r\n        )\r\n      }\r\n\r\n      var tailLength = len & 3\r\n\r\n      while (tailLength--) {\r\n        a8[ j ] = bin.charCodeAt(j++)\r\n      }\r\n\r\n      callback(new window.Blob([ a8 ], { 'type': type || 'image/png' }))\r\n    }\r\n\r\n  })\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/cbrt\r\nMath.cbrt = Math.cbrt || function (x) {\r\n  var y = Math.pow(Math.abs(x), 1 / 3)\r\n  return x < 0 ? -y : y\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\nif (!Math.sign) {\r\n  Math.sign = function (x) {\r\n    // If x is NaN, the result is NaN.\r\n    // If x is -0, the result is -0.\r\n    // If x is +0, the result is +0.\r\n    // If x is negative and not -0, the result is -1.\r\n    // If x is positive and not +0, the result is +1.\r\n    x = +x // convert to a number\r\n    if (x === 0 || isNaN(x)) {\r\n      return Number(x)\r\n    }\r\n    return x > 0 ? 1 : -1\r\n  }\r\n}\r\n\r\nif (!Number.isInteger) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\r\n  Number.isInteger = function isInteger (nVal) {\r\n    return typeof nVal === 'number' && isFinite(nVal) && nVal > -9007199254740992 && nVal < 9007199254740992 && Math.floor(nVal) === nVal\r\n  }\r\n}\r\n\r\nif (!Number.isNaN) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\r\n  Number.isNaN = function isNaN (value) {\r\n    return value !== value  // eslint-disable-line no-self-compare\r\n  }\r\n}\r\n\r\nif (!Object.assign) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n  Object.defineProperty(Object, 'assign', {\r\n\r\n    enumerable: false,\r\n    configurable: true,\r\n    writable: true,\r\n\r\n    value: function (target/*, firstSource */) {\r\n      'use strict'\r\n      if (target === undefined || target === null) { throw new TypeError('Cannot convert first argument to object') }\r\n\r\n      var to = Object(target)\r\n\r\n      var hasPendingException = false\r\n      var pendingException\r\n\r\n      for (var i = 1; i < arguments.length; i++) {\r\n        var nextSource = arguments[i]\r\n        if (nextSource === undefined || nextSource === null) { continue }\r\n\r\n        var keysArray = Object.keys(Object(nextSource))\r\n        for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\r\n          var nextKey = keysArray[nextIndex]\r\n          try {\r\n            var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey)\r\n            if (desc !== undefined && desc.enumerable) { to[nextKey] = nextSource[nextKey] }\r\n          } catch (e) {\r\n            if (!hasPendingException) {\r\n              hasPendingException = true\r\n              pendingException = e\r\n            }\r\n          }\r\n        }\r\n\r\n        if (hasPendingException) { throw pendingException }\r\n      }\r\n\r\n      return to\r\n    }\r\n\r\n  })\r\n}\r\n\r\nif (!String.prototype.startsWith) {\r\n  /*! https://mths.be/startswith v0.2.0 by @mathias */\r\n\r\n  (function () {\r\n    'use strict' // needed to support `apply`/`call` with `undefined`/`null`\r\n    var defineProperty = (function () {\r\n            // IE 8 only supports `Object.defineProperty` on DOM elements\r\n      var result\r\n      try {\r\n        var object = {}\r\n        var $defineProperty = Object.defineProperty\r\n        result = $defineProperty(object, object, object) && $defineProperty\r\n      } catch (error) {}  // eslint-disable-line no-empty\r\n      return result\r\n    }())\r\n    var toString = {}.toString\r\n    var startsWith = function (search) {\r\n      if (this === null) {\r\n        throw TypeError()\r\n      }\r\n      var string = String(this)\r\n      if (search && toString.call(search) === '[object RegExp]') {\r\n        throw TypeError()\r\n      }\r\n      var stringLength = string.length\r\n      var searchString = String(search)\r\n      var searchLength = searchString.length\r\n      var position = arguments.length > 1 ? arguments[1] : undefined\r\n      // `ToInteger`\r\n      var pos = position ? Number(position) : 0\r\n      if (Number.isNaN(pos)) {\r\n        pos = 0\r\n      }\r\n      var start = Math.min(Math.max(pos, 0), stringLength)\r\n      // Avoid the `indexOf` call if no match is possible\r\n      if (searchLength + start > stringLength) {\r\n        return false\r\n      }\r\n      var index = -1\r\n      while (++index < searchLength) {\r\n        if (string.charCodeAt(start + index) !== searchString.charCodeAt(index)) {\r\n          return false\r\n        }\r\n      }\r\n      return true\r\n    }\r\n    if (defineProperty) {\r\n      defineProperty(String.prototype, 'startsWith', {\r\n        'value': startsWith,\r\n        'configurable': true,\r\n        'writable': true\r\n      })\r\n    } else {\r\n      // eslint-disable-next-line no-extend-native\r\n      String.prototype.startsWith = startsWith\r\n    }\r\n  }())\r\n}\r\n\r\nif (!String.prototype.endsWith) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.endsWith = function (searchString, position) {\r\n    var subjectString = this.toString()\r\n    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n      position = subjectString.length\r\n    }\r\n    position -= searchString.length\r\n    var lastIndex = subjectString.indexOf(searchString, position)\r\n    return lastIndex !== -1 && lastIndex === position\r\n  }\r\n}\r\n\r\nif (!String.prototype.repeat) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.repeat = function (count) {\r\n    'use strict'\r\n    if (this === null) {\r\n      throw new TypeError('can\\'t convert ' + this + ' to object')\r\n    }\r\n    var str = '' + this\r\n    count = +count\r\n    if (Number.isNaN(count)) {\r\n      count = 0\r\n    }\r\n    if (count < 0) {\r\n      throw new RangeError('repeat count must be non-negative')\r\n    }\r\n    if (count === Infinity) {\r\n      throw new RangeError('repeat count must be less than infinity')\r\n    }\r\n    count = Math.floor(count)\r\n    if (str.length === 0 || count === 0) {\r\n      return ''\r\n    }\r\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\r\n    // main part. But anyway, most current (August 2014) browsers can't handle\r\n    // strings 1 << 28 chars or longer, so:\r\n    if (str.length * count >= 1 << 28) {\r\n      throw new RangeError('repeat count must not overflow maximum string size')\r\n    }\r\n    var rpt = ''\r\n    for (;;) {\r\n      if ((count & 1) === 1) {\r\n        rpt += str\r\n      }\r\n      count >>>= 1\r\n      if (count === 0) {\r\n        break\r\n      }\r\n      str += str\r\n    }\r\n    // Could we try:\r\n    // return Array(count + 1).join(this);\r\n    return rpt\r\n  }\r\n}\r\n\r\nif (!String.prototype.includes) {\r\n  // eslint-disable-next-line no-extend-native\r\n  String.prototype.includes = function (search, start) {\r\n    'use strict'\r\n    if (typeof start !== 'number') {\r\n      start = 0\r\n    }\r\n\r\n    if (start + search.length > this.length) {\r\n      return false\r\n    } else {\r\n      return this.indexOf(search, start) !== -1\r\n    }\r\n  }\r\n}\r\n\r\nif (!Array.prototype.includes) {\r\n  // eslint-disable-next-line no-extend-native\r\n  Array.prototype.includes = function (searchElement /*, fromIndex */) {\r\n    'use strict'\r\n    if (this == null) {\r\n      throw new TypeError('Array.prototype.includes called on null or undefined')\r\n    }\r\n\r\n    var O = Object(this)\r\n    var len = parseInt(O.length, 10) || 0\r\n    if (len === 0) {\r\n      return false\r\n    }\r\n    var n = parseInt(arguments[1], 10) || 0\r\n    var k\r\n    if (n >= 0) {\r\n      k = n\r\n    } else {\r\n      k = len + n\r\n      if (k < 0) { k = 0 }\r\n    }\r\n    var currentElement\r\n    while (k < len) {\r\n      currentElement = O[k]\r\n      if (searchElement === currentElement ||\r\n          (Number.isNaN(searchElement) && Number.isNaN(currentElement))\r\n      ) {\r\n        return true\r\n      }\r\n      k++\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\r\n// Reference: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-array.from\r\nif (!Array.from) {\r\n  Array.from = (function () {\r\n    var toStr = Object.prototype.toString\r\n    var isCallable = function (fn) {\r\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]'\r\n    }\r\n    var toInteger = function (value) {\r\n      var number = Number(value)\r\n      if (isNaN(number)) { return 0 }\r\n      if (number === 0 || !isFinite(number)) { return number }\r\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number))\r\n    }\r\n    var maxSafeInteger = Math.pow(2, 53) - 1\r\n    var toLength = function (value) {\r\n      var len = toInteger(value)\r\n      return Math.min(Math.max(len, 0), maxSafeInteger)\r\n    }\r\n\r\n    // The length property of the from method is 1.\r\n    return function from (arrayLike/*, mapFn, thisArg */) {\r\n            // 1. Let C be the this value.\r\n      var C = this\r\n\r\n      // 2. Let items be ToObject(arrayLike).\r\n      var items = Object(arrayLike)\r\n\r\n      // 3. ReturnIfAbrupt(items).\r\n      if (arrayLike == null) {\r\n        throw new TypeError('Array.from requires an array-like object - not null or undefined')\r\n      }\r\n\r\n      // 4. If mapfn is undefined, then let mapping be false.\r\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined\r\n      var T\r\n      if (typeof mapFn !== 'undefined') {\r\n        // 5. else\r\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\r\n        if (!isCallable(mapFn)) {\r\n          throw new TypeError('Array.from: when provided, the second argument must be a function')\r\n        }\r\n\r\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n        if (arguments.length > 2) {\r\n          T = arguments[2]\r\n        }\r\n      }\r\n\r\n      // 10. Let lenValue be Get(items, \"length\").\r\n      // 11. Let len be ToLength(lenValue).\r\n      var len = toLength(items.length)\r\n\r\n      // 13. If IsConstructor(C) is true, then\r\n      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\r\n      // 14. a. Else, Let A be ArrayCreate(len).\r\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len)\r\n\r\n      // 16. Let k be 0.\r\n      var k = 0\r\n      // 17. Repeat, while k < len… (also steps a - h)\r\n      var kValue\r\n      while (k < len) {\r\n        kValue = items[k]\r\n        if (mapFn) {\r\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k)\r\n        } else {\r\n          A[k] = kValue\r\n        }\r\n        k += 1\r\n      }\r\n      // 18. Let putStatus be Put(A, \"length\", len, true).\r\n      A.length = len\r\n      // 20. Return A.\r\n      return A\r\n    }\r\n  }())\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n  (function () {\r\n    // http://paulirish.com/2011/requestanimationframe-for-smart-animating/\r\n    // http://my.opera.com/emoller/blog/2011/12/20/requestanimationframe-for-smart-er-animating\r\n\r\n    // requestAnimationFrame polyfill by Erik Möller. fixes from Paul Irish and Tino Zijdel\r\n\r\n    // MIT license\r\n\r\n    var lastTime = 0\r\n    var vendors = [ 'ms', 'moz', 'webkit', 'o' ]\r\n\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n      window.requestAnimationFrame = (\r\n        window[ vendors[ x ] + 'RequestAnimationFrame' ]\r\n      )\r\n\r\n      window.cancelAnimationFrame = (\r\n        window[ vendors[ x ] + 'CancelAnimationFrame' ] ||\r\n        window[ vendors[ x ] + 'CancelRequestAnimationFrame' ]\r\n      )\r\n    }\r\n\r\n    if (!window.requestAnimationFrame) {\r\n      window.requestAnimationFrame = function (callback/*, element */) {\r\n        var currTime = new Date().getTime()\r\n        var timeToCall = Math.max(0, 16 - (currTime - lastTime))\r\n\r\n        var id = window.setTimeout(function () {\r\n          var time = currTime + timeToCall\r\n          callback(time)\r\n        }, timeToCall)\r\n\r\n        lastTime = currTime + timeToCall\r\n\r\n        return id\r\n      }\r\n    }\r\n\r\n    if (!window.cancelAnimationFrame) {\r\n      window.cancelAnimationFrame = function (id) {\r\n        clearTimeout(id)\r\n      }\r\n    }\r\n  }())\r\n}\r\n\r\nif (Function.prototype.name === undefined && Object.defineProperty !== undefined) {\r\n    // Missing in IE9-11.\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n  // eslint-disable-next-line no-extend-native\r\n  Object.defineProperty(Function.prototype, 'name', {\r\n\r\n    get: function () {\r\n      return this.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[ 1 ]\r\n    }\r\n\r\n  })\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n  if (window.performance === undefined) {\r\n    /* global self */\r\n    self.performance = {}\r\n  }\r\n\r\n  if (window.performance.now === undefined) {\r\n    (function () {\r\n      var start = Date.now()\r\n\r\n      window.performance.now = function () {\r\n        return Date.now() - start\r\n      }\r\n    })()\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/polyfills.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1953,
    "kind": "file",
    "name": "src/proxy/atom-proxy.js",
    "content": "/**\r\n * @file Atom Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport {\r\n    SecStrucHelix, SecStrucSheet, SecStrucTurn,\r\n    ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\r\n    CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Atom proxy\r\n */\r\nclass AtomProxy {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (structure, index) {\r\n    /**\r\n     * The structure the atom belongs to.\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n\r\n    /**\r\n     * @type {ChainStore}\r\n     */\r\n    this.chainStore = structure.chainStore\r\n    /**\r\n     * @type {ResidueStore}\r\n     */\r\n    this.residueStore = structure.residueStore\r\n    /**\r\n     * @type {AtomStore}\r\n     */\r\n    this.atomStore = structure.atomStore\r\n\r\n    /**\r\n     * @type {ResidueMap}\r\n     */\r\n    this.residueMap = structure.residueMap\r\n    /**\r\n     * @type {AtomMap}\r\n     */\r\n    this.atomMap = structure.atomMap\r\n\r\n    /**\r\n     * The index of the atom, pointing to the data in the corresponding {@link AtomStore}\r\n     * @type {Integer}\r\n     */\r\n    this.index = index\r\n  }\r\n\r\n  /**\r\n   * @type {BondHash}\r\n   */\r\n  get bondHash () { return this.structure.bondHash }\r\n\r\n  /**\r\n   * Molecular enity\r\n   * @type {Entity}\r\n   */\r\n  get entity () {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.chainIndex ]\r\n  }\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.residueIndex ]\r\n  }\r\n  /**\r\n   * @type {ResidueProxy}\r\n   */\r\n  get residue () {\r\n    console.warn('residue - might be expensive')\r\n    return this.structure.getResidueProxy(this.residueIndex)\r\n  }\r\n\r\n  get residueIndex () {\r\n    return this.atomStore.residueIndex[ this.index ]\r\n  }\r\n  set residueIndex (value) {\r\n    this.atomStore.residueIndex[ this.index ] = value\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Secondary structure code\r\n   * @type {String}\r\n   */\r\n  get sstruc () {\r\n    return this.residueStore.getSstruc(this.residueIndex)\r\n  }\r\n  /**\r\n   * Insertion code\r\n   * @type {String}\r\n   */\r\n  get inscode () {\r\n    return this.residueStore.getInscode(this.residueIndex)\r\n  }\r\n  /**\r\n   * Residue number/label\r\n   * @type {Integer}\r\n   */\r\n  get resno () {\r\n    return this.residueStore.resno[ this.residueIndex ]\r\n  }\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * @type {ResidueType}\r\n   */\r\n  get residueType () {\r\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.residueIndex ])\r\n  }\r\n  /**\r\n   * @type {AtomType}\r\n   */\r\n  get atomType () {\r\n    return this.atomMap.get(this.atomStore.atomTypeId[ this.index ])\r\n  }\r\n  get residueAtomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueIndex ]\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Residue name\r\n   * @type {String}\r\n   */\r\n  get resname () {\r\n    return this.residueType.resname\r\n  }\r\n  /**\r\n   * Hetero flag\r\n   * @type {Boolean}\r\n   */\r\n  get hetero () {\r\n    return this.residueType.hetero\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom name\r\n   * @type {String}\r\n   */\r\n  get atomname () {\r\n    return this.atomType.atomname\r\n  }\r\n  /**\r\n   * Element\r\n   * @type {String}\r\n   */\r\n  get element () {\r\n    return this.atomType.element\r\n  }\r\n  /**\r\n   * Van-der-Waals radius\r\n   * @type {Float}\r\n   */\r\n  get vdw () {\r\n    return this.atomType.vdw\r\n  }\r\n  /**\r\n   * Covalent radius\r\n   * @type {Float}\r\n   */\r\n  get covalent () {\r\n    return this.atomType.covalent\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * X coordinate\r\n   * @type {Float}\r\n   */\r\n  get x () {\r\n    return this.atomStore.x[ this.index ]\r\n  }\r\n  set x (value) {\r\n    this.atomStore.x[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Y coordinate\r\n   * @type {Float}\r\n   */\r\n  get y () {\r\n    return this.atomStore.y[ this.index ]\r\n  }\r\n  set y (value) {\r\n    this.atomStore.y[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Z coordinate\r\n   * @type {Float}\r\n   */\r\n  get z () {\r\n    return this.atomStore.z[ this.index ]\r\n  }\r\n  set z (value) {\r\n    this.atomStore.z[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Serial number\r\n   * @type {Integer}\r\n   */\r\n  get serial () {\r\n    return this.atomStore.serial[ this.index ]\r\n  }\r\n  set serial (value) {\r\n    this.atomStore.serial[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * B-factor value\r\n   * @type {Float}\r\n   */\r\n  get bfactor () {\r\n    return this.atomStore.bfactor[ this.index ]\r\n  }\r\n  set bfactor (value) {\r\n    this.atomStore.bfactor[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Occupancy value\r\n   * @type {Float}\r\n   */\r\n  get occupancy () {\r\n    return this.atomStore.occupancy[ this.index ]\r\n  }\r\n  set occupancy (value) {\r\n    this.atomStore.occupancy[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Alternate location identifier\r\n   * @type {String}\r\n   */\r\n  get altloc () {\r\n    return this.atomStore.getAltloc(this.index)\r\n  }\r\n  set altloc (value) {\r\n    this.atomStore.setAltloc(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Partial charge\r\n   * @type {Float|null}\r\n   */\r\n  get partialCharge () {\r\n    return this.atomStore.partialCharge ? this.atomStore.partialCharge[ this.index ] : null\r\n  }\r\n  set partialCharge (value) {\r\n    if (this.atomStore.partialCharge) {\r\n      this.atomStore.partialCharge[ this.index ] = value\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Formal charge\r\n   * @type {Integer|null}\r\n   */\r\n  get formalCharge () {\r\n    return this.atomStore.formalCharge ? this.atomStore.formalCharge[ this.index ] : null\r\n  }\r\n  set formalCharge (value) {\r\n    if (this.atomStore.formalCharge) {\r\n      this.atomStore.formalCharge[ this.index ] = value\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Iterate over each bond\r\n   * @param  {function(bond: BondProxy)} callback - iterator callback function\r\n   * @param  {BondProxy} [bp] - optional target bond proxy for use in the callback\r\n   * @return {undefined}\r\n   */\r\n  eachBond (callback, bp) {\r\n    bp = bp || this.structure._bp\r\n    const idx = this.index\r\n    const bondHash = this.bondHash\r\n    const indexArray = bondHash.indexArray\r\n    const n = bondHash.countArray[ idx ]\r\n    const offset = bondHash.offsetArray[ idx ]\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      bp.index = indexArray[ offset + i ]\r\n      callback(bp)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Iterate over each bonded atom\r\n   * @param  {function(atom: AtomProxy)} callback - iterator callback function\r\n   * @param  {AtomProxy} [ap] - optional target atom proxy for use in the callback\r\n   * @return {undefined}\r\n   */\r\n  eachBondedAtom (callback, ap) {\r\n    ap = ap || this.structure._ap\r\n    var idx = this.index\r\n\r\n    this.eachBond(function (bp) {\r\n      if (idx !== bp.atomIndex1) {\r\n        ap.index = bp.atomIndex1\r\n      } else {\r\n        ap.index = bp.atomIndex2\r\n      }\r\n      callback(ap)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Check if this atom is bonded to the given atom,\r\n   * assumes both atoms are from the same structure\r\n   * @param  {AtomProxy} ap - the given atom\r\n   * @return {Boolean} whether a bond exists or not\r\n   */\r\n  hasBondTo (ap) {\r\n    let hasBond = false\r\n    this.eachBondedAtom(function (bap) {\r\n      if (ap.index === bap.index) hasBond = true\r\n    })\r\n    return hasBond\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If atom is part of a backbone\r\n   * @return {Boolean} flag\r\n   */\r\n  isBackbone () {\r\n    var backboneIndexList = this.residueType.backboneIndexList\r\n    if (backboneIndexList.length > 0) {\r\n      var atomOffset = this.residueStore.atomOffset[ this.residueIndex ]\r\n      return backboneIndexList.includes(this.index - atomOffset)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a polymer\r\n   * @return {Boolean} flag\r\n   */\r\n  isPolymer () {\r\n    if (this.structure.entityList.length > 0) {\r\n      return this.entity.isPolymer()\r\n    } else {\r\n      var moleculeType = this.residueType.moleculeType\r\n      return (\r\n                moleculeType === ProteinType ||\r\n                moleculeType === RnaType ||\r\n                moleculeType === DnaType\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a sidechin\r\n   * @return {Boolean} flag\r\n   */\r\n  isSidechain () {\r\n    return this.isPolymer() && !this.isBackbone()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a coarse-grain group\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    var backboneType = this.residueType.backboneType\r\n    return (\r\n            backboneType === CgProteinBackboneType ||\r\n            backboneType === CgRnaBackboneType ||\r\n            backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a hetero group\r\n   * @return {Boolean} flag\r\n   */\r\n  isHetero () {\r\n    return this.residueType.hetero === 1\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a protein molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    return this.residueType.moleculeType === ProteinType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a nucleic molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    const moleculeType = this.residueType.moleculeType\r\n    return (\r\n            moleculeType === RnaType ||\r\n            moleculeType === DnaType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a rna\r\n   * @return {Boolean} flag\r\n   */\r\n  isRna () {\r\n    return this.residueType.moleculeType === RnaType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a dna\r\n   * @return {Boolean} flag\r\n   */\r\n  isDna () {\r\n    return this.residueType.moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a water molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isWater () {\r\n    return this.residueType.moleculeType === WaterType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of an ion\r\n   * @return {Boolean} flag\r\n   */\r\n  isIon () {\r\n    return this.residueType.moleculeType === IonType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a saccharide\r\n   * @return {Boolean} flag\r\n   */\r\n  isSaccharide () {\r\n    return this.residueType.moleculeType === SaccharideType\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a helix\r\n   * @return {Boolean} flag\r\n   */\r\n  isHelix () {\r\n    return SecStrucHelix.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a sheet\r\n   * @return {Boolean} flag\r\n   */\r\n  isSheet () {\r\n    return SecStrucSheet.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a turn\r\n   * @return {Boolean} flag\r\n   */\r\n  isTurn () {\r\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\r\n  }\r\n\r\n  isBonded () {\r\n    return this.bondHash.countArray[ this.index ] !== 0\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a ring\r\n   * @return {Boolean} flag\r\n   */\r\n  isRing () {\r\n    var ringFlags = this.residueType.getRings().flags\r\n    return ringFlags[ this.index - this.residueAtomOffset ] === 1\r\n  }\r\n\r\n  /**\r\n   * Distance to another atom\r\n   * @param  {AtomProxy} atom - the other atom\r\n   * @return {Number} the distance\r\n   */\r\n  distanceTo (atom) {\r\n    var taa = this.atomStore\r\n    var aaa = atom.atomStore\r\n    var ti = this.index\r\n    var ai = atom.index\r\n    var x = taa.x[ ti ] - aaa.x[ ai ]\r\n    var y = taa.y[ ti ] - aaa.y[ ai ]\r\n    var z = taa.z[ ti ] - aaa.z[ ai ]\r\n    var distSquared = x * x + y * y + z * z\r\n    return Math.sqrt(distSquared)\r\n  }\r\n\r\n  /**\r\n   * If connected to another atom\r\n   * @param  {AtomProxy} atom - the other atom\r\n   * @return {Boolean} flag\r\n   */\r\n  connectedTo (atom) {\r\n    var taa = this.atomStore\r\n    var aaa = atom.atomStore\r\n    var ti = this.index\r\n    var ai = atom.index\r\n\r\n    if (taa.altloc && aaa.altloc) {\r\n      var ta = taa.altloc[ ti ]  // use Uint8 value to compare\r\n      var aa = aaa.altloc[ ai ]  // no need to convert to char\r\n      // 0 is the Null character, 32 is the space character\r\n      if (!(ta === 0 || aa === 0 || ta === 32 || aa === 32 || (ta === aa))) return false\r\n    }\r\n\r\n    var x = taa.x[ ti ] - aaa.x[ ai ]\r\n    var y = taa.y[ ti ] - aaa.y[ ai ]\r\n    var z = taa.z[ ti ] - aaa.z[ ai ]\r\n\r\n    var distSquared = x * x + y * y + z * z\r\n\r\n    // if( this.residue.isCg() ) console.log( this.qualifiedName(), Math.sqrt( distSquared ), distSquared )\r\n    if (distSquared < 64.0 && this.isCg()) return true\r\n\r\n    if (isNaN(distSquared)) return false\r\n\r\n    var d = this.covalent + atom.covalent\r\n    var d1 = d + 0.3\r\n    var d2 = d - 0.5\r\n\r\n    return distSquared < (d1 * d1) && distSquared > (d2 * d2)\r\n  }\r\n\r\n  /**\r\n   * Set atom position from array\r\n   * @param  {Array|TypedArray} array - input array\r\n   * @param  {Integer} [offset] - the offset\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionFromArray (array, offset) {\r\n    if (offset === undefined) offset = 0\r\n\r\n    this.x = array[ offset + 0 ]\r\n    this.y = array[ offset + 1 ]\r\n    this.z = array[ offset + 2 ]\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write atom position to array\r\n   * @param  {Array|TypedArray} [array] - target array\r\n   * @param  {Integer} [offset] - the offset\r\n   * @return {Array|TypedArray} target array\r\n   */\r\n  positionToArray (array, offset) {\r\n    if (array === undefined) array = []\r\n    if (offset === undefined) offset = 0\r\n\r\n    var index = this.index\r\n    var atomStore = this.atomStore\r\n\r\n    array[ offset + 0 ] = atomStore.x[ index ]\r\n    array[ offset + 1 ] = atomStore.y[ index ]\r\n    array[ offset + 2 ] = atomStore.z[ index ]\r\n\r\n    return array\r\n  }\r\n\r\n  /**\r\n   * Write atom position to vector\r\n   * @param  {Vector3} [v] - target vector\r\n   * @return {Vector3} target vector\r\n   */\r\n  positionToVector3 (v) {\r\n    if (v === undefined) v = new Vector3()\r\n\r\n    v.x = this.x\r\n    v.y = this.y\r\n    v.z = this.z\r\n\r\n    return v\r\n  }\r\n\r\n  /**\r\n   * Set atom position from vector\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionFromVector3 (v) {\r\n    this.x = v.x\r\n    this.y = v.y\r\n    this.z = v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Add vector to atom position\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionAdd (v) {\r\n    this.x += v.x\r\n    this.y += v.y\r\n    this.z += v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Subtract vector from atom position\r\n   * @param  {Vector3} v - input vector\r\n   * @return {AtomProxy} this object\r\n   */\r\n  positionSub (v) {\r\n    this.x -= v.x\r\n    this.y -= v.y\r\n    this.z -= v.z\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get intra group/residue bonds\r\n   * @param  {Boolean} firstOnly - immediately return the first connected atomIndex\r\n   * @return {Integer[]|Integer|undefined} connected atomIndices\r\n   */\r\n  getResidueBonds (firstOnly) {\r\n    var residueAtomOffset = this.residueAtomOffset\r\n    var relativeIndex = this.index - this.residueAtomOffset\r\n    var bonds = this.residueType.getBonds()\r\n    var atomIndices1 = bonds.atomIndices1\r\n    var atomIndices2 = bonds.atomIndices2\r\n    var idx1, idx2, connectedAtomIndex, connectedAtomIndices\r\n\r\n    if (!firstOnly) connectedAtomIndices = []\r\n\r\n    idx1 = atomIndices1.indexOf(relativeIndex)\r\n    while (idx1 !== -1) {\r\n      connectedAtomIndex = atomIndices2[ idx1 ] + residueAtomOffset\r\n      if (firstOnly) return connectedAtomIndex\r\n      connectedAtomIndices.push(connectedAtomIndex)\r\n      idx1 = atomIndices1.indexOf(relativeIndex, idx1 + 1)\r\n    }\r\n\r\n    idx2 = atomIndices2.indexOf(relativeIndex)\r\n    while (idx2 !== -1) {\r\n      connectedAtomIndex = atomIndices1[ idx2 ] + residueAtomOffset\r\n      if (firstOnly) return connectedAtomIndex\r\n      connectedAtomIndices.push(connectedAtomIndex)\r\n      idx2 = atomIndices2.indexOf(relativeIndex, idx2 + 1)\r\n    }\r\n\r\n    return connectedAtomIndices\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName (noResname) {\r\n    var name = ''\r\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\r\n    if (this.resno !== undefined) name += this.resno\r\n    if (this.inscode) name += '^' + this.inscode\r\n    if (this.chainname) name += ':' + this.chainname\r\n    if (this.atomname) name += '.' + this.atomname\r\n    if (this.altloc) name += '%' + this.altloc\r\n    if (this.structure.modelStore.count > 1) name += '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {AtomProxy} cloned atom\r\n   */\r\n  clone () {\r\n    return new this.constructor(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      residueIndex: this.residueIndex,\r\n\r\n      atomno: this.atomno,\r\n      resname: this.resname,\r\n      x: this.x,\r\n      y: this.y,\r\n      z: this.z,\r\n      element: this.element,\r\n      chainname: this.chainname,\r\n      resno: this.resno,\r\n      serial: this.serial,\r\n      vdw: this.vdw,\r\n      covalent: this.covalent,\r\n      hetero: this.hetero,\r\n      bfactor: this.bfactor,\r\n      altloc: this.altloc,\r\n      atomname: this.atomname,\r\n      modelindex: this.modelindex\r\n    }\r\n  }\r\n}\r\n\r\nexport default AtomProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/atom-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1954,
    "kind": "class",
    "name": "AtomProxy",
    "memberof": "src/proxy/atom-proxy.js",
    "static": true,
    "longname": "src/proxy/atom-proxy.js~AtomProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/atom-proxy.js",
    "importStyle": "AtomProxy",
    "description": "Atom proxy",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 1955,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ]
  },
  {
    "__docId__": 1956,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#structure",
    "access": "public",
    "description": "The structure the atom belongs to.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1957,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#chainStore",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "ChainStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1958,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueStore",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "ResidueStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1959,
    "kind": "member",
    "name": "atomStore",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#atomStore",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "AtomStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1960,
    "kind": "member",
    "name": "residueMap",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueMap",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "ResidueMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1961,
    "kind": "member",
    "name": "atomMap",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#atomMap",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "AtomMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1962,
    "kind": "member",
    "name": "index",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#index",
    "access": "public",
    "description": "The index of the atom, pointing to the data in the corresponding {@link AtomStore}",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1963,
    "kind": "get",
    "name": "bondHash",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#bondHash",
    "access": "public",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "BondHash"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1964,
    "kind": "get",
    "name": "entity",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#entity",
    "access": "public",
    "description": "Molecular enity",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1965,
    "kind": "get",
    "name": "entityIndex",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#entityIndex",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 1966,
    "kind": "get",
    "name": "modelIndex",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#modelIndex",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 1967,
    "kind": "get",
    "name": "chainIndex",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#chainIndex",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 1968,
    "kind": "get",
    "name": "residue",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residue",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "ResidueProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1969,
    "kind": "get",
    "name": "residueIndex",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueIndex",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 1970,
    "kind": "set",
    "name": "residueIndex",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueIndex",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 1971,
    "kind": "get",
    "name": "sstruc",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#sstruc",
    "access": "public",
    "description": "Secondary structure code",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1972,
    "kind": "get",
    "name": "inscode",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#inscode",
    "access": "public",
    "description": "Insertion code",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1973,
    "kind": "get",
    "name": "resno",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#resno",
    "access": "public",
    "description": "Residue number/label",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1974,
    "kind": "get",
    "name": "chainname",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#chainname",
    "access": "public",
    "description": "Chain name",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1975,
    "kind": "get",
    "name": "chainid",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#chainid",
    "access": "public",
    "description": "Chain id",
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1976,
    "kind": "get",
    "name": "residueType",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueType",
    "access": "public",
    "description": "",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "ResidueType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1977,
    "kind": "get",
    "name": "atomType",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#atomType",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "type": {
      "nullable": null,
      "types": [
        "AtomType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1978,
    "kind": "get",
    "name": "residueAtomOffset",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#residueAtomOffset",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 1979,
    "kind": "get",
    "name": "resname",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#resname",
    "access": "public",
    "description": "Residue name",
    "lineNumber": 157,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1980,
    "kind": "get",
    "name": "hetero",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#hetero",
    "access": "public",
    "description": "Hetero flag",
    "lineNumber": 164,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1981,
    "kind": "get",
    "name": "atomname",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#atomname",
    "access": "public",
    "description": "Atom name",
    "lineNumber": 174,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1982,
    "kind": "get",
    "name": "element",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#element",
    "access": "public",
    "description": "Element",
    "lineNumber": 181,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1983,
    "kind": "get",
    "name": "vdw",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#vdw",
    "access": "public",
    "description": "Van-der-Waals radius",
    "lineNumber": 188,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1984,
    "kind": "get",
    "name": "covalent",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#covalent",
    "access": "public",
    "description": "Covalent radius",
    "lineNumber": 195,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1985,
    "kind": "get",
    "name": "x",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#x",
    "access": "public",
    "description": "X coordinate",
    "lineNumber": 205,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1986,
    "kind": "set",
    "name": "x",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#x",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true
  },
  {
    "__docId__": 1987,
    "kind": "get",
    "name": "y",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#y",
    "access": "public",
    "description": "Y coordinate",
    "lineNumber": 216,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1988,
    "kind": "set",
    "name": "y",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#y",
    "access": "public",
    "description": null,
    "lineNumber": 219,
    "undocument": true
  },
  {
    "__docId__": 1989,
    "kind": "get",
    "name": "z",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#z",
    "access": "public",
    "description": "Z coordinate",
    "lineNumber": 227,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1990,
    "kind": "set",
    "name": "z",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#z",
    "access": "public",
    "description": null,
    "lineNumber": 230,
    "undocument": true
  },
  {
    "__docId__": 1991,
    "kind": "get",
    "name": "serial",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#serial",
    "access": "public",
    "description": "Serial number",
    "lineNumber": 238,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1992,
    "kind": "set",
    "name": "serial",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#serial",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true
  },
  {
    "__docId__": 1993,
    "kind": "get",
    "name": "bfactor",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#bfactor",
    "access": "public",
    "description": "B-factor value",
    "lineNumber": 249,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1994,
    "kind": "set",
    "name": "bfactor",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#bfactor",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "undocument": true
  },
  {
    "__docId__": 1995,
    "kind": "get",
    "name": "occupancy",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#occupancy",
    "access": "public",
    "description": "Occupancy value",
    "lineNumber": 260,
    "type": {
      "nullable": null,
      "types": [
        "Float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1996,
    "kind": "set",
    "name": "occupancy",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#occupancy",
    "access": "public",
    "description": null,
    "lineNumber": 263,
    "undocument": true
  },
  {
    "__docId__": 1997,
    "kind": "get",
    "name": "altloc",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#altloc",
    "access": "public",
    "description": "Alternate location identifier",
    "lineNumber": 271,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 1998,
    "kind": "set",
    "name": "altloc",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#altloc",
    "access": "public",
    "description": null,
    "lineNumber": 274,
    "undocument": true
  },
  {
    "__docId__": 1999,
    "kind": "get",
    "name": "partialCharge",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#partialCharge",
    "access": "public",
    "description": "Partial charge",
    "lineNumber": 282,
    "type": {
      "nullable": null,
      "types": [
        "Float",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2000,
    "kind": "set",
    "name": "partialCharge",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#partialCharge",
    "access": "public",
    "description": null,
    "lineNumber": 285,
    "undocument": true
  },
  {
    "__docId__": 2001,
    "kind": "get",
    "name": "formalCharge",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#formalCharge",
    "access": "public",
    "description": "Formal charge",
    "lineNumber": 295,
    "type": {
      "nullable": null,
      "types": [
        "Integer",
        "null"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2002,
    "kind": "set",
    "name": "formalCharge",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#formalCharge",
    "access": "public",
    "description": null,
    "lineNumber": 298,
    "undocument": true
  },
  {
    "__docId__": 2003,
    "kind": "method",
    "name": "eachBond",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#eachBond",
    "access": "public",
    "description": "Iterate over each bond",
    "lineNumber": 312,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(bond: BondProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "iterator callback function"
      },
      {
        "nullable": null,
        "types": [
          "BondProxy"
        ],
        "spread": false,
        "optional": true,
        "name": "bp",
        "description": "optional target bond proxy for use in the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2004,
    "kind": "method",
    "name": "eachBondedAtom",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#eachBondedAtom",
    "access": "public",
    "description": "Iterate over each bonded atom",
    "lineNumber": 332,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "iterator callback function"
      },
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": true,
        "name": "ap",
        "description": "optional target atom proxy for use in the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2005,
    "kind": "method",
    "name": "hasBondTo",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#hasBondTo",
    "access": "public",
    "description": "Check if this atom is bonded to the given atom,\nassumes both atoms are from the same structure",
    "lineNumber": 352,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "ap",
        "description": "the given atom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "whether a bond exists or not"
    }
  },
  {
    "__docId__": 2006,
    "kind": "method",
    "name": "isBackbone",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isBackbone",
    "access": "public",
    "description": "If atom is part of a backbone",
    "lineNumber": 366,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2007,
    "kind": "method",
    "name": "isPolymer",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isPolymer",
    "access": "public",
    "description": "If atom is part of a polymer",
    "lineNumber": 380,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2008,
    "kind": "method",
    "name": "isSidechain",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isSidechain",
    "access": "public",
    "description": "If atom is part of a sidechin",
    "lineNumber": 397,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2009,
    "kind": "method",
    "name": "isCg",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isCg",
    "access": "public",
    "description": "If atom is part of a coarse-grain group",
    "lineNumber": 405,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2010,
    "kind": "method",
    "name": "isHetero",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isHetero",
    "access": "public",
    "description": "If atom is part of a hetero group",
    "lineNumber": 418,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2011,
    "kind": "method",
    "name": "isProtein",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isProtein",
    "access": "public",
    "description": "If atom is part of a protein molecule",
    "lineNumber": 426,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2012,
    "kind": "method",
    "name": "isNucleic",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isNucleic",
    "access": "public",
    "description": "If atom is part of a nucleic molecule",
    "lineNumber": 434,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2013,
    "kind": "method",
    "name": "isRna",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isRna",
    "access": "public",
    "description": "If atom is part of a rna",
    "lineNumber": 446,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2014,
    "kind": "method",
    "name": "isDna",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isDna",
    "access": "public",
    "description": "If atom is part of a dna",
    "lineNumber": 454,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2015,
    "kind": "method",
    "name": "isWater",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isWater",
    "access": "public",
    "description": "If atom is part of a water molecule",
    "lineNumber": 462,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2016,
    "kind": "method",
    "name": "isIon",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isIon",
    "access": "public",
    "description": "If atom is part of an ion",
    "lineNumber": 470,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2017,
    "kind": "method",
    "name": "isSaccharide",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isSaccharide",
    "access": "public",
    "description": "If atom is part of a saccharide",
    "lineNumber": 478,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2018,
    "kind": "method",
    "name": "isHelix",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isHelix",
    "access": "public",
    "description": "If atom is part of a helix",
    "lineNumber": 486,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2019,
    "kind": "method",
    "name": "isSheet",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isSheet",
    "access": "public",
    "description": "If atom is part of a sheet",
    "lineNumber": 494,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2020,
    "kind": "method",
    "name": "isTurn",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isTurn",
    "access": "public",
    "description": "If atom is part of a turn",
    "lineNumber": 502,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2021,
    "kind": "method",
    "name": "isBonded",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isBonded",
    "access": "public",
    "description": null,
    "lineNumber": 506,
    "undocument": true
  },
  {
    "__docId__": 2022,
    "kind": "method",
    "name": "isRing",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#isRing",
    "access": "public",
    "description": "If atom is part of a ring",
    "lineNumber": 514,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2023,
    "kind": "method",
    "name": "distanceTo",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#distanceTo",
    "access": "public",
    "description": "Distance to another atom",
    "lineNumber": 524,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "atom",
        "description": "the other atom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "the distance"
    }
  },
  {
    "__docId__": 2024,
    "kind": "method",
    "name": "connectedTo",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#connectedTo",
    "access": "public",
    "description": "If connected to another atom",
    "lineNumber": 541,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "atom",
        "description": "the other atom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2025,
    "kind": "method",
    "name": "positionFromArray",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionFromArray",
    "access": "public",
    "description": "Set atom position from array",
    "lineNumber": 578,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "input array"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "offset",
        "description": "the offset"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2029,
    "kind": "method",
    "name": "positionToArray",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionToArray",
    "access": "public",
    "description": "Write atom position to array",
    "lineNumber": 594,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": true,
        "name": "array",
        "description": "target array"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "offset",
        "description": "the offset"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array",
        "TypedArray"
      ],
      "spread": false,
      "description": "target array"
    }
  },
  {
    "__docId__": 2030,
    "kind": "method",
    "name": "positionToVector3",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionToVector3",
    "access": "public",
    "description": "Write atom position to vector",
    "lineNumber": 613,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "target vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "target vector"
    }
  },
  {
    "__docId__": 2031,
    "kind": "method",
    "name": "positionFromVector3",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionFromVector3",
    "access": "public",
    "description": "Set atom position from vector",
    "lineNumber": 628,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "input vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2035,
    "kind": "method",
    "name": "positionAdd",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionAdd",
    "access": "public",
    "description": "Add vector to atom position",
    "lineNumber": 641,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "input vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2039,
    "kind": "method",
    "name": "positionSub",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#positionSub",
    "access": "public",
    "description": "Subtract vector from atom position",
    "lineNumber": 654,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "input vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2043,
    "kind": "method",
    "name": "getResidueBonds",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#getResidueBonds",
    "access": "public",
    "description": "Get intra group/residue bonds",
    "lineNumber": 667,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "firstOnly",
        "description": "immediately return the first connected atomIndex"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer[]",
        "Integer",
        "undefined"
      ],
      "spread": false,
      "description": "connected atomIndices"
    }
  },
  {
    "__docId__": 2044,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 698,
    "undocument": true
  },
  {
    "__docId__": 2045,
    "kind": "method",
    "name": "clone",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#clone",
    "access": "public",
    "description": "Clone object",
    "lineNumber": 714,
    "return": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": "cloned atom"
    }
  },
  {
    "__docId__": 2046,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/proxy/atom-proxy.js~AtomProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/atom-proxy.js~AtomProxy#toObject",
    "access": "public",
    "description": null,
    "lineNumber": 718,
    "undocument": true
  },
  {
    "__docId__": 2047,
    "kind": "file",
    "name": "src/proxy/bond-proxy.js",
    "content": "/**\r\n * @file Bond Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\n/**\r\n * Bond proxy\r\n */\r\nclass BondProxy {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (structure, index) {\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n    /**\r\n     * @type {BondStore}\r\n     */\r\n    this.bondStore = structure.bondStore\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.index = index\r\n\r\n    this._v12 = new Vector3()\r\n    this._v13 = new Vector3()\r\n    this._ap1 = this.structure.getAtomProxy()\r\n    this._ap2 = this.structure.getAtomProxy()\r\n    this._ap3 = this.structure.getAtomProxy()\r\n  }\r\n\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom1 () {\r\n    return this.structure.getAtomProxy(this.atomIndex1)\r\n  }\r\n\r\n  /**\r\n   * @type {AtomProxy}\r\n   */\r\n  get atom2 () {\r\n    return this.structure.getAtomProxy(this.atomIndex2)\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get atomIndex1 () {\r\n    return this.bondStore.atomIndex1[ this.index ]\r\n  }\r\n  set atomIndex1 (value) {\r\n    this.bondStore.atomIndex1[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get atomIndex2 () {\r\n    return this.bondStore.atomIndex2[ this.index ]\r\n  }\r\n  set atomIndex2 (value) {\r\n    this.bondStore.atomIndex2[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * @type {Integer}\r\n   */\r\n  get bondOrder () {\r\n    return this.bondStore.bondOrder[ this.index ]\r\n  }\r\n  set bondOrder (value) {\r\n    this.bondStore.bondOrder[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Get reference atom index for the bond\r\n   * @return {Integer|undefined} atom index, or `undefined` if unavailable\r\n   */\r\n  getReferenceAtomIndex () {\r\n    var ap1 = this._ap1\r\n    var ap2 = this._ap2\r\n    ap1.index = this.atomIndex1\r\n    ap2.index = this.atomIndex2\r\n    if (ap1.residueIndex !== ap2.residueIndex) {\r\n      return undefined  // Bond between residues, for now ignore (could detect)\r\n    }\r\n    var typeAtomIndex1 = ap1.index - ap1.residueAtomOffset\r\n    var typeAtomIndex2 = ap2.index - ap2.residueAtomOffset\r\n    var residueType = ap1.residueType\r\n    var ix = residueType.getBondReferenceAtomIndex(typeAtomIndex1, typeAtomIndex2)\r\n    if (ix !== undefined) {\r\n      return ix + ap1.residueAtomOffset\r\n    } else {\r\n      console.warn('No reference atom found', ap1.index, ap2.index)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * calculate shift direction for displaying double/triple bonds\r\n   * @param  {Vector3} [v] pre-allocated output vector\r\n   * @return {Vector3} the shift direction vector\r\n   */\r\n  calculateShiftDir (v) {\r\n    if (!v) v = new Vector3()\r\n\r\n    var ap1 = this._ap1\r\n    var ap2 = this._ap2\r\n    var ap3 = this._ap3\r\n    var v12 = this._v12\r\n    var v13 = this._v13\r\n\r\n    ap1.index = this.atomIndex1\r\n    ap2.index = this.atomIndex2\r\n    var ai3 = this.getReferenceAtomIndex()\r\n\r\n    v12.subVectors(ap1, ap2).normalize()\r\n    if (ai3 !== undefined) {\r\n      ap3.index = ai3\r\n      v13.subVectors(ap1, ap3)\r\n    } else {\r\n      v13.copy(ap1)  // no reference point, use origin\r\n    }\r\n    v13.normalize()\r\n\r\n    // make sure v13 and v12 are not colinear\r\n    var dp = v12.dot(v13)\r\n    if (1 - Math.abs(dp) < 1e-5) {\r\n      v13.set(1, 0, 0)\r\n      dp = v12.dot(v13)\r\n      if (1 - Math.abs(dp) < 1e-5) {\r\n        v13.set(0, 1, 0)\r\n        dp = v12.dot(v13)\r\n      }\r\n    }\r\n\r\n    return v.copy(v13.sub(v12.multiplyScalar(dp))).normalize()\r\n  }\r\n\r\n  qualifiedName () {\r\n    return this.atomIndex1 + '=' + this.atomIndex2\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {BondProxy} cloned bond\r\n   */\r\n  clone () {\r\n    return new this.constructor(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      atomIndex1: this.atomIndex1,\r\n      atomIndex2: this.atomIndex2,\r\n      bondOrder: this.bondOrder\r\n    }\r\n  }\r\n}\r\n\r\nexport default BondProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/bond-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2048,
    "kind": "class",
    "name": "BondProxy",
    "memberof": "src/proxy/bond-proxy.js",
    "static": true,
    "longname": "src/proxy/bond-proxy.js~BondProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/bond-proxy.js",
    "importStyle": "BondProxy",
    "description": "Bond proxy",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 2049,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ]
  },
  {
    "__docId__": 2050,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#structure",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2051,
    "kind": "member",
    "name": "bondStore",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#bondStore",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "BondStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2052,
    "kind": "member",
    "name": "index",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#index",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2053,
    "kind": "member",
    "name": "_v12",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#_v12",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 2054,
    "kind": "member",
    "name": "_v13",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#_v13",
    "access": "private",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 2055,
    "kind": "member",
    "name": "_ap1",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#_ap1",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 2056,
    "kind": "member",
    "name": "_ap2",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#_ap2",
    "access": "private",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2057,
    "kind": "member",
    "name": "_ap3",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#_ap3",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 2058,
    "kind": "get",
    "name": "atom1",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atom1",
    "access": "public",
    "description": "",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2059,
    "kind": "get",
    "name": "atom2",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atom2",
    "access": "public",
    "description": "",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "AtomProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2060,
    "kind": "get",
    "name": "atomIndex1",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atomIndex1",
    "access": "public",
    "description": "",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2061,
    "kind": "set",
    "name": "atomIndex1",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atomIndex1",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 2062,
    "kind": "get",
    "name": "atomIndex2",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atomIndex2",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2063,
    "kind": "set",
    "name": "atomIndex2",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#atomIndex2",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2064,
    "kind": "get",
    "name": "bondOrder",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#bondOrder",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2065,
    "kind": "set",
    "name": "bondOrder",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#bondOrder",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 2066,
    "kind": "method",
    "name": "getReferenceAtomIndex",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#getReferenceAtomIndex",
    "access": "public",
    "description": "Get reference atom index for the bond",
    "lineNumber": 86,
    "return": {
      "nullable": null,
      "types": [
        "Integer",
        "undefined"
      ],
      "spread": false,
      "description": "atom index, or `undefined` if unavailable"
    }
  },
  {
    "__docId__": 2067,
    "kind": "method",
    "name": "calculateShiftDir",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#calculateShiftDir",
    "access": "public",
    "description": "calculate shift direction for displaying double/triple bonds",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "v",
        "description": "pre-allocated output vector"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the shift direction vector"
    }
  },
  {
    "__docId__": 2068,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 2069,
    "kind": "method",
    "name": "clone",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#clone",
    "access": "public",
    "description": "Clone object",
    "lineNumber": 154,
    "return": {
      "nullable": null,
      "types": [
        "BondProxy"
      ],
      "spread": false,
      "description": "cloned bond"
    }
  },
  {
    "__docId__": 2070,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/proxy/bond-proxy.js~BondProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/bond-proxy.js~BondProxy#toObject",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 2071,
    "kind": "file",
    "name": "src/proxy/chain-proxy.js",
    "content": "/**\r\n * @file Chain Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { UnknownBackboneType } from '../structure/structure-constants.js'\r\nimport Polymer from './polymer.js'\r\n\r\n/**\r\n * Chain proxy\r\n */\r\nclass ChainProxy {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (structure, index) {\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n    /**\r\n     * @type {ChainStore}\r\n     */\r\n    this.chainStore = structure.chainStore\r\n    /**\r\n     * @type {ResidueStore}\r\n     */\r\n    this.residueStore = structure.residueStore\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.index = index\r\n  }\r\n\r\n  /**\r\n   * Entity\r\n   * @type {Entity}\r\n   */\r\n  get entity () {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  /**\r\n   * Model\r\n   * @type {ModelProxy}\r\n   */\r\n  get model () {\r\n    return this.structure.getModelProxy(this.modelIndex)\r\n  }\r\n\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.index ]\r\n  }\r\n  set entityIndex (value) {\r\n    this.chainStore.entityIndex[ this.index ] = value\r\n  }\r\n\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.index ]\r\n  }\r\n  set modelIndex (value) {\r\n    this.chainStore.modelIndex[ this.index ] = value\r\n  }\r\n\r\n  get residueOffset () {\r\n    return this.chainStore.residueOffset[ this.index ]\r\n  }\r\n  set residueOffset (value) {\r\n    this.chainStore.residueOffset[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Residue count\r\n   * @type {Integer}\r\n   */\r\n  get residueCount () {\r\n    return this.chainStore.residueCount[ this.index ]\r\n  }\r\n  set residueCount (value) {\r\n    this.chainStore.residueCount[ this.index ] = value\r\n  }\r\n\r\n  get residueEnd () {\r\n    return this.residueOffset + this.residueCount - 1\r\n  }\r\n\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueOffset ]\r\n  }\r\n  get atomEnd () {\r\n    return (\r\n      this.residueStore.atomOffset[ this.residueEnd ] +\r\n      this.residueStore.atomCount[ this.residueEnd ] - 1\r\n    )\r\n  }\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    if (this.residueCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.atomEnd - this.atomOffset + 1\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.index)\r\n  }\r\n  set chainname (value) {\r\n    this.chainStore.setChainname(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.index)\r\n  }\r\n  set chainid (value) {\r\n    this.chainStore.setChainid(this.index, value)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback, selection) {\r\n    this.eachResidue(function (rp) {\r\n      rp.eachAtom(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback, selection) {\r\n    var i\r\n    var count = this.residueCount\r\n    var offset = this.residueOffset\r\n    var rp = this.structure._rp\r\n    var end = offset + count\r\n\r\n    if (selection && selection.test) {\r\n      var residueOnlyTest = selection.residueOnlyTest\r\n      if (residueOnlyTest) {\r\n        for (i = offset; i < end; ++i) {\r\n          rp.index = i\r\n          if (residueOnlyTest(rp)) {\r\n            callback(rp, selection)\r\n          }\r\n        }\r\n      } else {\r\n        for (i = offset; i < end; ++i) {\r\n          rp.index = i\r\n          callback(rp, selection)\r\n        }\r\n      }\r\n    } else {\r\n      for (i = offset; i < end; ++i) {\r\n        rp.index = i\r\n        callback(rp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Multi-residue iterator\r\n   * @param {Integer} n - window size\r\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidueN (n, callback) {\r\n    var i\r\n    var count = this.residueCount\r\n    var offset = this.residueOffset\r\n    var end = offset + count\r\n    if (count < n) return\r\n    var array = new Array(n)\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      array[ i ] = this.structure.getResidueProxy(offset + i)\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (var j = offset + n; j < end; ++j) {\r\n      for (i = 0; i < n; ++i) {\r\n        array[ i ].index += 1\r\n      }\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback, selection) {\r\n    var rStartIndex, rNextIndex\r\n    var test = selection ? selection.residueOnlyTest : undefined\r\n    var structure = this.model.structure\r\n\r\n    var count = this.residueCount\r\n    var offset = this.residueOffset\r\n    var end = offset + count\r\n\r\n    var rp1 = this.structure.getResidueProxy()\r\n    var rp2 = this.structure.getResidueProxy(offset)\r\n\r\n    var ap1 = this.structure.getAtomProxy()\r\n    var ap2 = this.structure.getAtomProxy()\r\n\r\n    var first = true\r\n\r\n    for (var i = offset + 1; i < end; ++i) {\r\n      rp1.index = rp2.index\r\n      rp2.index = i\r\n\r\n      var bbType1 = first ? rp1.backboneEndType : rp1.backboneType\r\n      var bbType2 = rp2.backboneType\r\n\r\n      if (first) {\r\n        rStartIndex = rp1.index\r\n        first = false\r\n      }\r\n      rNextIndex = rp2.index\r\n\r\n      if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n        ap1.index = rp1.backboneEndAtomIndex\r\n        ap2.index = rp2.backboneStartAtomIndex\r\n      } else {\r\n        if (bbType1 !== UnknownBackboneType) {\r\n          if (rp1.index - rStartIndex > 1) {\r\n            // console.log(\"FOO1\",rStartIndex, rp1.index)\r\n            callback(new Polymer(structure, rStartIndex, rp1.index))\r\n          }\r\n        }\r\n        rStartIndex = rNextIndex\r\n\r\n        continue\r\n      }\r\n\r\n      if (!ap1 || !ap2 || !ap1.connectedTo(ap2) ||\r\n        (test && (!test(rp1) || !test(rp2)))\r\n      ) {\r\n        if (rp1.index - rStartIndex > 1) {\r\n          // console.log(\"FOO2\",rStartIndex, rp1.index)\r\n          callback(new Polymer(structure, rStartIndex, rp1.index))\r\n        }\r\n        rStartIndex = rNextIndex\r\n      }\r\n    }\r\n\r\n    if (rNextIndex - rStartIndex > 1) {\r\n      if (this.structure.getResidueProxy(rStartIndex).backboneEndType) {\r\n        // console.log(\"FOO3\",rStartIndex, rNextIndex)\r\n        callback(new Polymer(structure, rStartIndex, rNextIndex))\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName () {\r\n    var name = ':' + this.chainname + '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ChainProxy} cloned chain\r\n   */\r\n  clone () {\r\n    return new this.constructor(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      residueOffset: this.residueOffset,\r\n      residueCount: this.residueCount,\r\n\r\n      chainname: this.chainname\r\n    }\r\n  }\r\n}\r\n\r\nexport default ChainProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/chain-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2072,
    "kind": "class",
    "name": "ChainProxy",
    "memberof": "src/proxy/chain-proxy.js",
    "static": true,
    "longname": "src/proxy/chain-proxy.js~ChainProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/chain-proxy.js",
    "importStyle": "ChainProxy",
    "description": "Chain proxy",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 2073,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ]
  },
  {
    "__docId__": 2074,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#structure",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2075,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#chainStore",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "ChainStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2076,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueStore",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "ResidueStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2077,
    "kind": "member",
    "name": "index",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#index",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2078,
    "kind": "get",
    "name": "entity",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#entity",
    "access": "public",
    "description": "Entity",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2079,
    "kind": "get",
    "name": "model",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#model",
    "access": "public",
    "description": "Model",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "ModelProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2080,
    "kind": "get",
    "name": "entityIndex",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#entityIndex",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2081,
    "kind": "set",
    "name": "entityIndex",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#entityIndex",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 2082,
    "kind": "get",
    "name": "modelIndex",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#modelIndex",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2083,
    "kind": "set",
    "name": "modelIndex",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#modelIndex",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2084,
    "kind": "get",
    "name": "residueOffset",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueOffset",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 2085,
    "kind": "set",
    "name": "residueOffset",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueOffset",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 2086,
    "kind": "get",
    "name": "residueCount",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueCount",
    "access": "public",
    "description": "Residue count",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2087,
    "kind": "set",
    "name": "residueCount",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueCount",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 2088,
    "kind": "get",
    "name": "residueEnd",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#residueEnd",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 2089,
    "kind": "get",
    "name": "atomOffset",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#atomOffset",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 2090,
    "kind": "get",
    "name": "atomEnd",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#atomEnd",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 2091,
    "kind": "get",
    "name": "atomCount",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#atomCount",
    "access": "public",
    "description": "Atom count",
    "lineNumber": 101,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2092,
    "kind": "get",
    "name": "chainname",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#chainname",
    "access": "public",
    "description": "Chain name",
    "lineNumber": 115,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2093,
    "kind": "set",
    "name": "chainname",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#chainname",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 2094,
    "kind": "get",
    "name": "chainid",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#chainid",
    "access": "public",
    "description": "Chain id",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2095,
    "kind": "set",
    "name": "chainid",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#chainid",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 2096,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#eachAtom",
    "access": "public",
    "description": "Atom iterator",
    "lineNumber": 141,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2097,
    "kind": "method",
    "name": "eachResidue",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#eachResidue",
    "access": "public",
    "description": "Residue iterator",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(residue: ResidueProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2098,
    "kind": "method",
    "name": "eachResidueN",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#eachResidueN",
    "access": "public",
    "description": "Multi-residue iterator",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "window size"
      },
      {
        "nullable": null,
        "types": [
          "function(residueList: ResidueProxy[])"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2099,
    "kind": "method",
    "name": "eachPolymer",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#eachPolymer",
    "access": "public",
    "description": "Polymer iterator",
    "lineNumber": 216,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(polymer: Polymer)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2100,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 282,
    "undocument": true
  },
  {
    "__docId__": 2101,
    "kind": "method",
    "name": "clone",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#clone",
    "access": "public",
    "description": "Clone object",
    "lineNumber": 291,
    "return": {
      "nullable": null,
      "types": [
        "ChainProxy"
      ],
      "spread": false,
      "description": "cloned chain"
    }
  },
  {
    "__docId__": 2102,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/proxy/chain-proxy.js~ChainProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/chain-proxy.js~ChainProxy#toObject",
    "access": "public",
    "description": null,
    "lineNumber": 295,
    "undocument": true
  },
  {
    "__docId__": 2103,
    "kind": "file",
    "name": "src/proxy/model-proxy.js",
    "content": "/**\r\n * @file Model Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Model proxy\r\n */\r\nclass ModelProxy {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (structure, index) {\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n    /**\r\n     * @type {ModelStore}\r\n     */\r\n    this.modelStore = structure.modelStore\r\n    /**\r\n     * @type {ChainStore}\r\n     */\r\n    this.chainStore = structure.chainStore\r\n    /**\r\n     * @type {ResidueStore}\r\n     */\r\n    this.residueStore = structure.residueStore\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.index = index\r\n  }\r\n\r\n  get chainOffset () {\r\n    return this.modelStore.chainOffset[ this.index ]\r\n  }\r\n  set chainOffset (value) {\r\n    this.modelStore.chainOffset[ this.index ] = value\r\n  }\r\n\r\n  get chainCount () {\r\n    return this.modelStore.chainCount[ this.index ]\r\n  }\r\n  set chainCount (value) {\r\n    this.modelStore.chainCount[ this.index ] = value\r\n  }\r\n\r\n  get residueOffset () {\r\n    return this.chainStore.residueOffset[ this.chainOffset ]\r\n  }\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.residueOffset ]\r\n  }\r\n\r\n  get chainEnd () {\r\n    return this.chainOffset + this.chainCount - 1\r\n  }\r\n  get residueEnd () {\r\n    return (\r\n      this.chainStore.residueOffset[ this.chainEnd ] +\r\n      this.chainStore.residueCount[ this.chainEnd ] - 1\r\n    )\r\n  }\r\n  get atomEnd () {\r\n    return (\r\n      this.residueStore.atomOffset[ this.residueEnd ] +\r\n      this.residueStore.atomCount[ this.residueEnd ] - 1\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Residue count\r\n   * @type {Integer}\r\n   */\r\n  get residueCount () {\r\n    if (this.chainCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.residueEnd - this.residueOffset + 1\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    if (this.residueCount === 0) {\r\n      return 0\r\n    } else {\r\n      return this.atomEnd - this.atomOffset + 1\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback, selection) {\r\n    this.eachChain(function (cp) {\r\n      cp.eachAtom(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback, selection) {\r\n    this.eachChain(function (cp) {\r\n      cp.eachResidue(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback, selection) {\r\n    if (selection && selection.chainOnlyTest) {\r\n      var chainOnlyTest = selection.chainOnlyTest\r\n\r\n      this.eachChain(function (cp) {\r\n        if (chainOnlyTest(cp)) {\r\n          cp.eachPolymer(callback, selection)\r\n        }\r\n      })\r\n    } else {\r\n      this.eachChain(function (cp) {\r\n        cp.eachPolymer(callback, selection)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Chain iterator\r\n   * @param  {function(chain: ChainProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachChain (callback, selection) {\r\n    var i\r\n    var count = this.chainCount\r\n    var offset = this.chainOffset\r\n    var cp = this.structure._cp\r\n    var end = offset + count\r\n\r\n    if (selection && selection.test) {\r\n      var chainOnlyTest = selection.chainOnlyTest\r\n      if (chainOnlyTest) {\r\n        for (i = offset; i < end; ++i) {\r\n          cp.index = i\r\n          if (chainOnlyTest(cp)) {\r\n            callback(cp, selection)\r\n          }\r\n        }\r\n      } else {\r\n        for (i = offset; i < end; ++i) {\r\n          cp.index = i\r\n          callback(cp, selection)\r\n        }\r\n      }\r\n    } else {\r\n      for (i = offset; i < end; ++i) {\r\n        cp.index = i\r\n        callback(cp)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  qualifiedName () {\r\n    var name = '/' + this.index\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ModelProxy} cloned model\r\n   */\r\n  clone () {\r\n    return new this.constructor(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      chainOffset: this.chainOffset,\r\n      chainCount: this.chainCount\r\n    }\r\n  }\r\n}\r\n\r\nexport default ModelProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/model-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2104,
    "kind": "class",
    "name": "ModelProxy",
    "memberof": "src/proxy/model-proxy.js",
    "static": true,
    "longname": "src/proxy/model-proxy.js~ModelProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/model-proxy.js",
    "importStyle": "ModelProxy",
    "description": "Model proxy",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 2105,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ]
  },
  {
    "__docId__": 2106,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#structure",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2107,
    "kind": "member",
    "name": "modelStore",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#modelStore",
    "access": "public",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "ModelStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2108,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainStore",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "ChainStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2109,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#residueStore",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "ResidueStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2110,
    "kind": "member",
    "name": "index",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#index",
    "access": "public",
    "description": "",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2111,
    "kind": "get",
    "name": "chainOffset",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainOffset",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 2112,
    "kind": "set",
    "name": "chainOffset",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainOffset",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 2113,
    "kind": "get",
    "name": "chainCount",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainCount",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2114,
    "kind": "set",
    "name": "chainCount",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainCount",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 2115,
    "kind": "get",
    "name": "residueOffset",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#residueOffset",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2116,
    "kind": "get",
    "name": "atomOffset",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#atomOffset",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 2117,
    "kind": "get",
    "name": "chainEnd",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#chainEnd",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2118,
    "kind": "get",
    "name": "residueEnd",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#residueEnd",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2119,
    "kind": "get",
    "name": "atomEnd",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#atomEnd",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2120,
    "kind": "get",
    "name": "residueCount",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#residueCount",
    "access": "public",
    "description": "Residue count",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2121,
    "kind": "get",
    "name": "atomCount",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#atomCount",
    "access": "public",
    "description": "Atom count",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2122,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#eachAtom",
    "access": "public",
    "description": "Atom iterator",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2123,
    "kind": "method",
    "name": "eachResidue",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#eachResidue",
    "access": "public",
    "description": "Residue iterator",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(residue: ResidueProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2124,
    "kind": "method",
    "name": "eachPolymer",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#eachPolymer",
    "access": "public",
    "description": "Polymer iterator",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(polymer: Polymer)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2125,
    "kind": "method",
    "name": "eachChain",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#eachChain",
    "access": "public",
    "description": "Chain iterator",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(chain: ChainProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2126,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 2127,
    "kind": "method",
    "name": "clone",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#clone",
    "access": "public",
    "description": "Clone object",
    "lineNumber": 194,
    "return": {
      "nullable": null,
      "types": [
        "ModelProxy"
      ],
      "spread": false,
      "description": "cloned model"
    }
  },
  {
    "__docId__": 2128,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/proxy/model-proxy.js~ModelProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/model-proxy.js~ModelProxy#toObject",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true
  },
  {
    "__docId__": 2129,
    "kind": "file",
    "name": "src/proxy/polymer.js",
    "content": "/**\r\n * @file Polymer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals.js'\r\n\r\n/**\r\n * Polymer\r\n */\r\nclass Polymer {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} residueIndexStart - the index of the first residue\r\n   * @param {Integer} residueIndexEnd - the index of the last residue\r\n   */\r\n  constructor (structure, residueIndexStart, residueIndexEnd) {\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n    /**\r\n     * @type {ChainStore}\r\n     */\r\n    this.chainStore = structure.chainStore\r\n    /**\r\n     * @type {ResidueStore}\r\n     */\r\n    this.residueStore = structure.residueStore\r\n    /**\r\n     * @type {AtomStore}\r\n     */\r\n    this.atomStore = structure.atomStore\r\n\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.residueIndexStart = residueIndexStart\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.residueIndexEnd = residueIndexEnd\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.residueCount = residueIndexEnd - residueIndexStart + 1\r\n\r\n    var rpStart = this.structure.getResidueProxy(this.residueIndexStart)\r\n    var rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\r\n    this.isPrevConnected = rpStart.getPreviousConnectedResidue() !== undefined\r\n    var rpNext = rpEnd.getNextConnectedResidue()\r\n    this.isNextConnected = rpNext !== undefined\r\n    this.isNextNextConnected = this.isNextConnected && rpNext.getNextConnectedResidue() !== undefined\r\n    this.isCyclic = rpEnd.connectedTo(rpStart)\r\n\r\n    this.__residueProxy = this.structure.getResidueProxy()\r\n\r\n    // console.log( this.qualifiedName(), this );\r\n  }\r\n\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.residueIndexStart ]\r\n  }\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n\r\n  /**\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If first residue is from aprotein\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isProtein()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a coarse-grain group\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isCg()\r\n  }\r\n\r\n  /**\r\n   * If atom is part of a nucleic molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.isNucleic()\r\n  }\r\n\r\n  getMoleculeType () {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.moleculeType\r\n  }\r\n\r\n  getBackboneType (position) {\r\n    this.__residueProxy.index = this.residueIndexStart\r\n    return this.__residueProxy.getBackboneType(position)\r\n  }\r\n\r\n  getAtomIndexByType (index, type) {\r\n    // TODO pre-calculate, add to residueStore???\r\n\r\n    if (this.isCyclic) {\r\n      if (index === -1) {\r\n        index = this.residueCount - 1\r\n      } else if (index === this.residueCount) {\r\n        index = 0\r\n      }\r\n    } else {\r\n      if (index === -1 && !this.isPrevConnected) index += 1\r\n      if (index === this.residueCount && !this.isNextNextConnected) index -= 1\r\n      // if( index === this.residueCount - 1 && !this.isNextConnected ) index -= 1;\r\n    }\r\n\r\n    var rp = this.__residueProxy\r\n    rp.index = this.residueIndexStart + index\r\n    var aIndex\r\n\r\n    switch (type) {\r\n      case 'trace':\r\n        aIndex = rp.traceAtomIndex\r\n        break\r\n      case 'direction1':\r\n        aIndex = rp.direction1AtomIndex\r\n        break\r\n      case 'direction2':\r\n        aIndex = rp.direction2AtomIndex\r\n        break\r\n      default:\r\n        var ap = rp.getAtomByName(type)\r\n        aIndex = ap ? ap.index : undefined\r\n    }\r\n\r\n    // if( !ap ){\r\n    //     console.log( this, type, rp.residueType )\r\n    //     // console.log( rp.qualifiedName(), rp.index, index, this.residueCount - 1 )\r\n    //     // rp.index = this.residueIndexStart;\r\n    //     // console.log( rp.qualifiedName(), this.residueIndexStart )\r\n    //     // rp.index = this.residueIndexEnd;\r\n    //     // console.log( rp.qualifiedName(), this.residueIndexEnd )\r\n    // }\r\n\r\n    return aIndex\r\n  }\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback, selection) {\r\n    this.eachResidue(function (rp) {\r\n      rp.eachAtom(callback, selection)\r\n    }, selection)\r\n  }\r\n\r\n  eachAtomN (n, callback, type) {\r\n    var i\r\n    var m = this.residueCount\r\n\r\n    var array = new Array(n)\r\n    for (i = 0; i < n; ++i) {\r\n      array[ i ] = this.structure.getAtomProxy(this.getAtomIndexByType(i, type))\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (var j = n; j < m; ++j) {\r\n      for (i = 1; i < n; ++i) {\r\n        array[ i - 1 ].index = array[ i ].index\r\n      }\r\n      array[ n - 1 ].index = this.getAtomIndexByType(j, type)\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  eachAtomN2 (n, callback, type) {\r\n    // console.log(this.residueOffset,this.residueCount)\r\n\r\n    var offset = this.atomOffset\r\n    var count = this.atomCount\r\n    var end = offset + count\r\n    if (count < n) return\r\n\r\n    var array = new Array(n)\r\n    for (var i = 0; i < n; ++i) {\r\n      array[ i ] = this.structure.getAtomProxy()\r\n    }\r\n    // console.log( array, offset, end, count )\r\n\r\n    let atomSet = this.structure.atomSetCache[ '__' + type ]\r\n    if (atomSet === undefined) {\r\n      Log.warn('no precomputed atomSet for: ' + type)\r\n      atomSet = this.structure.getAtomSet(false)\r\n      this.eachResidue(function (rp) {\r\n        var ap = rp.getAtomByName(type)\r\n        atomSet.set(ap.index)\r\n      })\r\n    }\r\n    var j = 0\r\n\r\n    atomSet.forEach(function (index) {\r\n      if (index >= offset && index < end) {\r\n        for (var i = 1; i < n; ++i) {\r\n          array[ i - 1 ].index = array[ i ].index\r\n        }\r\n        array[ n - 1 ].index = index\r\n        j += 1\r\n        if (j >= n) {\r\n          callback.apply(this, array)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback) {\r\n    var rp = this.structure.getResidueProxy()\r\n    var n = this.residueCount\r\n    var rStartIndex = this.residueIndexStart\r\n\r\n    for (var i = 0; i < n; ++i) {\r\n      rp.index = rStartIndex + i\r\n      callback(rp)\r\n    }\r\n  }\r\n\r\n  qualifiedName () {\r\n    var rpStart = this.structure.getResidueProxy(this.residueIndexStart)\r\n    var rpEnd = this.structure.getResidueProxy(this.residueIndexEnd)\r\n    return rpStart.qualifiedName() + ' - ' + rpEnd.qualifiedName()\r\n  }\r\n}\r\n\r\nexport default Polymer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/polymer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2130,
    "kind": "class",
    "name": "Polymer",
    "memberof": "src/proxy/polymer.js",
    "static": true,
    "longname": "src/proxy/polymer.js~Polymer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/polymer.js",
    "importStyle": "Polymer",
    "description": "Polymer",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 2131,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "residueIndexStart",
        "description": "the index of the first residue"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "residueIndexEnd",
        "description": "the index of the last residue"
      }
    ]
  },
  {
    "__docId__": 2132,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#structure",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2133,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#chainStore",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "ChainStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2134,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#residueStore",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "ResidueStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2135,
    "kind": "member",
    "name": "atomStore",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#atomStore",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "AtomStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2136,
    "kind": "member",
    "name": "residueIndexStart",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#residueIndexStart",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2137,
    "kind": "member",
    "name": "residueIndexEnd",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#residueIndexEnd",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2138,
    "kind": "member",
    "name": "residueCount",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#residueCount",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2139,
    "kind": "member",
    "name": "isPrevConnected",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isPrevConnected",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 2140,
    "kind": "member",
    "name": "isNextConnected",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isNextConnected",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2141,
    "kind": "member",
    "name": "isNextNextConnected",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isNextNextConnected",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2142,
    "kind": "member",
    "name": "isCyclic",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isCyclic",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 2143,
    "kind": "member",
    "name": "__residueProxy",
    "memberof": "src/proxy/polymer.js~Polymer",
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#__residueProxy",
    "access": "private",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 2144,
    "kind": "get",
    "name": "chainIndex",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#chainIndex",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2145,
    "kind": "get",
    "name": "modelIndex",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#modelIndex",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 2146,
    "kind": "get",
    "name": "chainname",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#chainname",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2147,
    "kind": "method",
    "name": "isProtein",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isProtein",
    "access": "public",
    "description": "If first residue is from aprotein",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2148,
    "kind": "method",
    "name": "isCg",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isCg",
    "access": "public",
    "description": "If atom is part of a coarse-grain group",
    "lineNumber": 91,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2149,
    "kind": "method",
    "name": "isNucleic",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#isNucleic",
    "access": "public",
    "description": "If atom is part of a nucleic molecule",
    "lineNumber": 100,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2150,
    "kind": "method",
    "name": "getMoleculeType",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#getMoleculeType",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 2151,
    "kind": "method",
    "name": "getBackboneType",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#getBackboneType",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 2152,
    "kind": "method",
    "name": "getAtomIndexByType",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#getAtomIndexByType",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 2153,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#eachAtom",
    "access": "public",
    "description": "Atom iterator",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2154,
    "kind": "method",
    "name": "eachAtomN",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#eachAtomN",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true
  },
  {
    "__docId__": 2155,
    "kind": "method",
    "name": "eachAtomN2",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#eachAtomN2",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 2156,
    "kind": "method",
    "name": "eachResidue",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#eachResidue",
    "access": "public",
    "description": "Residue iterator",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(residue: ResidueProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2157,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/polymer.js~Polymer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/polymer.js~Polymer#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 247,
    "undocument": true
  },
  {
    "__docId__": 2158,
    "kind": "file",
    "name": "src/proxy/residue-proxy.js",
    "content": "/**\r\n * @file Residue Proxy\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    SecStrucHelix, SecStrucSheet, SecStrucTurn,\r\n    ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType,\r\n    CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\r\n    AA1\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Residue proxy\r\n */\r\nclass ResidueProxy {\r\n  /**\r\n   * @param {Structure} structure - the structure\r\n   * @param {Integer} index - the index\r\n   */\r\n  constructor (structure, index) {\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n    /**\r\n     * @type {ChainStore}\r\n     */\r\n    this.chainStore = structure.chainStore\r\n    /**\r\n     * @type {ResidueStore}\r\n     */\r\n    this.residueStore = structure.residueStore\r\n    /**\r\n     * @type {AtomStore}\r\n     */\r\n    this.atomStore = structure.atomStore\r\n    /**\r\n     * @type {ResidueMap}\r\n     */\r\n    this.residueMap = structure.residueMap\r\n    /**\r\n     * @type {AtomMap}\r\n     */\r\n    this.atomMap = structure.atomMap\r\n    /**\r\n     * @type {Integer}\r\n     */\r\n    this.index = index\r\n  }\r\n\r\n  /**\r\n   * Entity\r\n   * @type {Entity}\r\n   */\r\n  get entity () {\r\n    return this.structure.entityList[ this.entityIndex ]\r\n  }\r\n  get entityIndex () {\r\n    return this.chainStore.entityIndex[ this.chainIndex ]\r\n  }\r\n  /**\r\n   * Chain\r\n   * @type {ChainProxy}\r\n   */\r\n  get chain () {\r\n    return this.structure.getChainProxy(this.chainIndex)\r\n  }\r\n\r\n  get chainIndex () {\r\n    return this.residueStore.chainIndex[ this.index ]\r\n  }\r\n  set chainIndex (value) {\r\n    this.residueStore.chainIndex[ this.index ] = value\r\n  }\r\n\r\n  get atomOffset () {\r\n    return this.residueStore.atomOffset[ this.index ]\r\n  }\r\n  set atomOffset (value) {\r\n    this.residueStore.atomOffset[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Atom count\r\n   * @type {Integer}\r\n   */\r\n  get atomCount () {\r\n    return this.residueStore.atomCount[ this.index ]\r\n  }\r\n  set atomCount (value) {\r\n    this.residueStore.atomCount[ this.index ] = value\r\n  }\r\n\r\n  get atomEnd () {\r\n    return this.atomOffset + this.atomCount - 1\r\n  }\r\n\r\n  //\r\n\r\n  get modelIndex () {\r\n    return this.chainStore.modelIndex[ this.chainIndex ]\r\n  }\r\n  /**\r\n   * Chain name\r\n   * @type {String}\r\n   */\r\n  get chainname () {\r\n    return this.chainStore.getChainname(this.chainIndex)\r\n  }\r\n  /**\r\n   * Chain id\r\n   * @type {String}\r\n   */\r\n  get chainid () {\r\n    return this.chainStore.getChainid(this.chainIndex)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Residue number/label\r\n   * @type {Integer}\r\n   */\r\n  get resno () {\r\n    return this.residueStore.resno[ this.index ]\r\n  }\r\n  set resno (value) {\r\n    this.residueStore.resno[ this.index ] = value\r\n  }\r\n\r\n  /**\r\n   * Secondary structure code\r\n   * @type {String}\r\n   */\r\n  get sstruc () {\r\n    return this.residueStore.getSstruc(this.index)\r\n  }\r\n  set sstruc (value) {\r\n    this.residueStore.setSstruc(this.index, value)\r\n  }\r\n\r\n  /**\r\n   * Insertion code\r\n   * @type {String}\r\n   */\r\n  get inscode () {\r\n    return this.residueStore.getInscode(this.index)\r\n  }\r\n  set inscode (value) {\r\n    this.residueStore.getInscode(this.index, value)\r\n  }\r\n\r\n  //\r\n\r\n  get residueType () {\r\n    return this.residueMap.get(this.residueStore.residueTypeId[ this.index ])\r\n  }\r\n\r\n  /**\r\n   * Residue name\r\n   * @type {String}\r\n   */\r\n  get resname () {\r\n    return this.residueType.resname\r\n  }\r\n  /**\r\n   * Hetero flag\r\n   * @type {Boolean}\r\n   */\r\n  get hetero () {\r\n    return this.residueType.hetero\r\n  }\r\n  get moleculeType () {\r\n    return this.residueType.moleculeType\r\n  }\r\n  get backboneType () {\r\n    return this.residueType.backboneType\r\n  }\r\n  get backboneStartType () {\r\n    return this.residueType.backboneStartType\r\n  }\r\n  get backboneEndType () {\r\n    return this.residueType.backboneEndType\r\n  }\r\n  get traceAtomIndex () {\r\n    return this.residueType.traceAtomIndex + this.atomOffset\r\n  }\r\n  get direction1AtomIndex () {\r\n    return this.residueType.direction1AtomIndex + this.atomOffset\r\n  }\r\n  get direction2AtomIndex () {\r\n    return this.residueType.direction2AtomIndex + this.atomOffset\r\n  }\r\n  get backboneStartAtomIndex () {\r\n    return this.residueType.backboneStartAtomIndex + this.atomOffset\r\n  }\r\n  get backboneEndAtomIndex () {\r\n    return this.residueType.backboneEndAtomIndex + this.atomOffset\r\n  }\r\n  get rungEndAtomIndex () {\r\n    return this.residueType.rungEndAtomIndex + this.atomOffset\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback, selection) {\r\n    var i\r\n    var count = this.atomCount\r\n    var offset = this.atomOffset\r\n    var ap = this.structure._ap\r\n    var end = offset + count\r\n\r\n    if (selection && selection.atomOnlyTest) {\r\n      var atomOnlyTest = selection.atomOnlyTest\r\n      for (i = offset; i < end; ++i) {\r\n        ap.index = i\r\n        if (atomOnlyTest(ap)) callback(ap)\r\n      }\r\n    } else {\r\n      for (i = offset; i < end; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * If residue is from a protein\r\n   * @return {Boolean} flag\r\n   */\r\n  isProtein () {\r\n    return this.residueType.moleculeType === ProteinType\r\n  }\r\n\r\n  /**\r\n   * If residue is nucleic\r\n   * @return {Boolean} flag\r\n   */\r\n  isNucleic () {\r\n    var moleculeType = this.residueType.moleculeType\r\n    return (\r\n            moleculeType === RnaType ||\r\n            moleculeType === DnaType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * If residue is rna\r\n   * @return {Boolean} flag\r\n   */\r\n  isRna () {\r\n    return this.residueType.moleculeType === RnaType\r\n  }\r\n\r\n  /**\r\n   * If residue is dna\r\n   * @return {Boolean} flag\r\n   */\r\n  isDna () {\r\n    return this.residueType.moleculeType === DnaType\r\n  }\r\n\r\n  /**\r\n   * If residue is coarse-grain\r\n   * @return {Boolean} flag\r\n   */\r\n  isCg () {\r\n    var backboneType = this.residueType.backboneType\r\n    return (\r\n      backboneType === CgProteinBackboneType ||\r\n      backboneType === CgRnaBackboneType ||\r\n      backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  /**\r\n   * If residue is from a polymer\r\n   * @return {Boolean} flag\r\n   */\r\n  isPolymer () {\r\n    if (this.structure.entityList.length > 0) {\r\n      return this.entity.isPolymer()\r\n    } else {\r\n      var moleculeType = this.residueType.moleculeType\r\n      return (\r\n        moleculeType === ProteinType ||\r\n        moleculeType === RnaType ||\r\n        moleculeType === DnaType\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If residue is hetero\r\n   * @return {Boolean} flag\r\n   */\r\n  isHetero () {\r\n    return this.residueType.hetero === 1\r\n  }\r\n\r\n  /**\r\n   * If residue is a water molecule\r\n   * @return {Boolean} flag\r\n   */\r\n  isWater () {\r\n    return this.residueType.moleculeType === WaterType\r\n  }\r\n\r\n  /**\r\n   * If residue is an ion\r\n   * @return {Boolean} flag\r\n   */\r\n  isIon () {\r\n    return this.residueType.moleculeType === IonType\r\n  }\r\n\r\n  /**\r\n   * If residue is a saccharide\r\n   * @return {Boolean} flag\r\n   */\r\n  isSaccharide () {\r\n    return this.residueType.moleculeType === SaccharideType\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a helix\r\n   * @return {Boolean} flag\r\n   */\r\n  isHelix () {\r\n    return SecStrucHelix.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a sheet\r\n   * @return {Boolean} flag\r\n   */\r\n  isSheet () {\r\n    return SecStrucSheet.includes(this.sstruc)\r\n  }\r\n\r\n  /**\r\n   * If residue is part of a turn\r\n   * @return {Boolean} flag\r\n   */\r\n  isTurn () {\r\n    return SecStrucTurn.includes(this.sstruc) && this.isProtein()\r\n  }\r\n\r\n  getAtomType (index) {\r\n    return this.atomMap.get(this.atomStore.atomTypeId[ index ])\r\n  }\r\n\r\n  getResname1 () {\r\n    // FIXME nucleic support\r\n    return AA1[ this.resname.toUpperCase() ] || 'X'\r\n  }\r\n\r\n  getBackboneType (position) {\r\n    switch (position) {\r\n      case -1:\r\n        return this.residueType.backboneStartType\r\n      case 1:\r\n        return this.residueType.backboneEndType\r\n      default:\r\n        return this.residueType.backboneType\r\n    }\r\n  }\r\n\r\n  getAtomIndexByName (atomname) {\r\n    var index = this.residueType.getAtomIndexByName(atomname)\r\n    if (index !== undefined) {\r\n      index += this.atomOffset\r\n    }\r\n    return index\r\n  }\r\n\r\n  getAtomByName (atomname) {\r\n    return this.residueType.getAtomByName(atomname)\r\n  }\r\n\r\n  hasAtomWithName (atomname) {\r\n    return this.residueType.hasAtomWithName(atomname)\r\n  }\r\n\r\n  getAtomnameList () {\r\n    console.warn('getAtomnameList - might be expensive')\r\n\r\n    var n = this.atomCount\r\n    var offset = this.atomOffset\r\n    var list = new Array(n)\r\n    for (var i = 0; i < n; ++i) {\r\n      list[ i ] = this.getAtomType(offset + i).atomname\r\n    }\r\n    return list\r\n  }\r\n\r\n  /**\r\n   * If residue is connected to another\r\n   * @param  {ResidueProxy} rNext - the other residue\r\n   * @return {Boolean} - flag\r\n   */\r\n  connectedTo (rNext) {\r\n    var bbAtomEnd = this.structure.getAtomProxy(this.backboneEndAtomIndex)\r\n    var bbAtomStart = this.structure.getAtomProxy(rNext.backboneStartAtomIndex)\r\n    if (bbAtomEnd && bbAtomStart) {\r\n      return bbAtomEnd.connectedTo(bbAtomStart)\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  getNextConnectedResidue () {\r\n    var rOffset = this.chainStore.residueOffset[ this.chainIndex ]\r\n    var rCount = this.chainStore.residueCount[ this.chainIndex ]\r\n    var nextIndex = this.index + 1\r\n    if (nextIndex < rOffset + rCount) {\r\n      var rpNext = this.structure.getResidueProxy(nextIndex)\r\n      if (this.connectedTo(rpNext)) {\r\n        return rpNext\r\n      }\r\n    } else if (nextIndex === rOffset + rCount) {  // cyclic\r\n      var rpFirst = this.structure.getResidueProxy(rOffset)\r\n      if (this.connectedTo(rpFirst)) {\r\n        return rpFirst\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getPreviousConnectedResidue () {\r\n    var rOffset = this.chainStore.residueOffset[ this.chainIndex ]\r\n    var prevIndex = this.index - 1\r\n    if (prevIndex >= rOffset) {\r\n      var rpPrev = this.structure.getResidueProxy(prevIndex)\r\n      if (rpPrev.connectedTo(this)) {\r\n        return rpPrev\r\n      }\r\n    } else if (prevIndex === rOffset - 1) {  // cyclic\r\n      var rCount = this.chainStore.residueCount[ this.chainIndex ]\r\n      var rpLast = this.structure.getResidueProxy(rOffset + rCount - 1)\r\n      if (rpLast.connectedTo(this)) {\r\n        return rpLast\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  getBonds () {\r\n    return this.residueType.getBonds(this)\r\n  }\r\n\r\n  getRings () {\r\n    return this.residueType.getRings()\r\n  }\r\n\r\n  qualifiedName (noResname) {\r\n    var name = ''\r\n    if (this.resname && !noResname) name += '[' + this.resname + ']'\r\n    if (this.resno !== undefined) name += this.resno\r\n    if (this.inscode) name += '^' + this.inscode\r\n    if (this.chain) name += ':' + this.chainname\r\n    name += '/' + this.modelIndex\r\n    return name\r\n  }\r\n\r\n  /**\r\n   * Clone object\r\n   * @return {ResidueProxy} cloned residue\r\n   */\r\n  clone () {\r\n    return new this.constructor(this.structure, this.index)\r\n  }\r\n\r\n  toObject () {\r\n    return {\r\n      index: this.index,\r\n      chainIndex: this.chainIndex,\r\n      atomOffset: this.atomOffset,\r\n      atomCount: this.atomCount,\r\n\r\n      resno: this.resno,\r\n      resname: this.resname,\r\n      sstruc: this.sstruc\r\n    }\r\n  }\r\n}\r\n\r\nexport default ResidueProxy\r\n",
    "static": true,
    "longname": "D:/nglLib/src/proxy/residue-proxy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2159,
    "kind": "class",
    "name": "ResidueProxy",
    "memberof": "src/proxy/residue-proxy.js",
    "static": true,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/proxy/residue-proxy.js",
    "importStyle": "ResidueProxy",
    "description": "Residue proxy",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 2160,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ]
  },
  {
    "__docId__": 2161,
    "kind": "member",
    "name": "structure",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#structure",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2162,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chainStore",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "ChainStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2163,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#residueStore",
    "access": "public",
    "description": "",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "ResidueStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2164,
    "kind": "member",
    "name": "atomStore",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomStore",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "AtomStore"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2165,
    "kind": "member",
    "name": "residueMap",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#residueMap",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "ResidueMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2166,
    "kind": "member",
    "name": "atomMap",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomMap",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "AtomMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2167,
    "kind": "member",
    "name": "index",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#index",
    "access": "public",
    "description": "",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2168,
    "kind": "get",
    "name": "entity",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#entity",
    "access": "public",
    "description": "Entity",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "Entity"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2169,
    "kind": "get",
    "name": "entityIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#entityIndex",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 2170,
    "kind": "get",
    "name": "chain",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chain",
    "access": "public",
    "description": "Chain",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "ChainProxy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2171,
    "kind": "get",
    "name": "chainIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chainIndex",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 2172,
    "kind": "set",
    "name": "chainIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chainIndex",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 2173,
    "kind": "get",
    "name": "atomOffset",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomOffset",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 2174,
    "kind": "set",
    "name": "atomOffset",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomOffset",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 2175,
    "kind": "get",
    "name": "atomCount",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomCount",
    "access": "public",
    "description": "Atom count",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2176,
    "kind": "set",
    "name": "atomCount",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomCount",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 2177,
    "kind": "get",
    "name": "atomEnd",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#atomEnd",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 2178,
    "kind": "get",
    "name": "modelIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#modelIndex",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 2179,
    "kind": "get",
    "name": "chainname",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chainname",
    "access": "public",
    "description": "Chain name",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2180,
    "kind": "get",
    "name": "chainid",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#chainid",
    "access": "public",
    "description": "Chain id",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2181,
    "kind": "get",
    "name": "resno",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#resno",
    "access": "public",
    "description": "Residue number/label",
    "lineNumber": 126,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2182,
    "kind": "set",
    "name": "resno",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#resno",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 2183,
    "kind": "get",
    "name": "sstruc",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#sstruc",
    "access": "public",
    "description": "Secondary structure code",
    "lineNumber": 137,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2184,
    "kind": "set",
    "name": "sstruc",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#sstruc",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 2185,
    "kind": "get",
    "name": "inscode",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#inscode",
    "access": "public",
    "description": "Insertion code",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2186,
    "kind": "set",
    "name": "inscode",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#inscode",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 2187,
    "kind": "get",
    "name": "residueType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#residueType",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true
  },
  {
    "__docId__": 2188,
    "kind": "get",
    "name": "resname",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#resname",
    "access": "public",
    "description": "Residue name",
    "lineNumber": 165,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2189,
    "kind": "get",
    "name": "hetero",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#hetero",
    "access": "public",
    "description": "Hetero flag",
    "lineNumber": 172,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2190,
    "kind": "get",
    "name": "moleculeType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#moleculeType",
    "access": "public",
    "description": null,
    "lineNumber": 175,
    "undocument": true
  },
  {
    "__docId__": 2191,
    "kind": "get",
    "name": "backboneType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#backboneType",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 2192,
    "kind": "get",
    "name": "backboneStartType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#backboneStartType",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true
  },
  {
    "__docId__": 2193,
    "kind": "get",
    "name": "backboneEndType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#backboneEndType",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 2194,
    "kind": "get",
    "name": "traceAtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#traceAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true
  },
  {
    "__docId__": 2195,
    "kind": "get",
    "name": "direction1AtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#direction1AtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 2196,
    "kind": "get",
    "name": "direction2AtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#direction2AtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true
  },
  {
    "__docId__": 2197,
    "kind": "get",
    "name": "backboneStartAtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#backboneStartAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true
  },
  {
    "__docId__": 2198,
    "kind": "get",
    "name": "backboneEndAtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#backboneEndAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true
  },
  {
    "__docId__": 2199,
    "kind": "get",
    "name": "rungEndAtomIndex",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#rungEndAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 202,
    "undocument": true
  },
  {
    "__docId__": 2200,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#eachAtom",
    "access": "public",
    "description": "Atom iterator",
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2201,
    "kind": "method",
    "name": "isProtein",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isProtein",
    "access": "public",
    "description": "If residue is from a protein",
    "lineNumber": 241,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2202,
    "kind": "method",
    "name": "isNucleic",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isNucleic",
    "access": "public",
    "description": "If residue is nucleic",
    "lineNumber": 249,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2203,
    "kind": "method",
    "name": "isRna",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isRna",
    "access": "public",
    "description": "If residue is rna",
    "lineNumber": 261,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2204,
    "kind": "method",
    "name": "isDna",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isDna",
    "access": "public",
    "description": "If residue is dna",
    "lineNumber": 269,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2205,
    "kind": "method",
    "name": "isCg",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isCg",
    "access": "public",
    "description": "If residue is coarse-grain",
    "lineNumber": 277,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2206,
    "kind": "method",
    "name": "isPolymer",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isPolymer",
    "access": "public",
    "description": "If residue is from a polymer",
    "lineNumber": 290,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2207,
    "kind": "method",
    "name": "isHetero",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isHetero",
    "access": "public",
    "description": "If residue is hetero",
    "lineNumber": 307,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2208,
    "kind": "method",
    "name": "isWater",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isWater",
    "access": "public",
    "description": "If residue is a water molecule",
    "lineNumber": 315,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2209,
    "kind": "method",
    "name": "isIon",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isIon",
    "access": "public",
    "description": "If residue is an ion",
    "lineNumber": 323,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2210,
    "kind": "method",
    "name": "isSaccharide",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isSaccharide",
    "access": "public",
    "description": "If residue is a saccharide",
    "lineNumber": 331,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2211,
    "kind": "method",
    "name": "isHelix",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isHelix",
    "access": "public",
    "description": "If residue is part of a helix",
    "lineNumber": 339,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2212,
    "kind": "method",
    "name": "isSheet",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isSheet",
    "access": "public",
    "description": "If residue is part of a sheet",
    "lineNumber": 347,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2213,
    "kind": "method",
    "name": "isTurn",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#isTurn",
    "access": "public",
    "description": "If residue is part of a turn",
    "lineNumber": 355,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2214,
    "kind": "method",
    "name": "getAtomType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getAtomType",
    "access": "public",
    "description": null,
    "lineNumber": 359,
    "undocument": true
  },
  {
    "__docId__": 2215,
    "kind": "method",
    "name": "getResname1",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getResname1",
    "access": "public",
    "description": null,
    "lineNumber": 363,
    "undocument": true
  },
  {
    "__docId__": 2216,
    "kind": "method",
    "name": "getBackboneType",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getBackboneType",
    "access": "public",
    "description": null,
    "lineNumber": 368,
    "undocument": true
  },
  {
    "__docId__": 2217,
    "kind": "method",
    "name": "getAtomIndexByName",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getAtomIndexByName",
    "access": "public",
    "description": null,
    "lineNumber": 379,
    "undocument": true
  },
  {
    "__docId__": 2218,
    "kind": "method",
    "name": "getAtomByName",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getAtomByName",
    "access": "public",
    "description": null,
    "lineNumber": 387,
    "undocument": true
  },
  {
    "__docId__": 2219,
    "kind": "method",
    "name": "hasAtomWithName",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#hasAtomWithName",
    "access": "public",
    "description": null,
    "lineNumber": 391,
    "undocument": true
  },
  {
    "__docId__": 2220,
    "kind": "method",
    "name": "getAtomnameList",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getAtomnameList",
    "access": "public",
    "description": null,
    "lineNumber": 395,
    "undocument": true
  },
  {
    "__docId__": 2221,
    "kind": "method",
    "name": "connectedTo",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#connectedTo",
    "access": "public",
    "description": "If residue is connected to another",
    "lineNumber": 412,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResidueProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "rNext",
        "description": "the other residue"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "flag"
    }
  },
  {
    "__docId__": 2222,
    "kind": "method",
    "name": "getNextConnectedResidue",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getNextConnectedResidue",
    "access": "public",
    "description": null,
    "lineNumber": 422,
    "undocument": true
  },
  {
    "__docId__": 2223,
    "kind": "method",
    "name": "getPreviousConnectedResidue",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getPreviousConnectedResidue",
    "access": "public",
    "description": null,
    "lineNumber": 440,
    "undocument": true
  },
  {
    "__docId__": 2224,
    "kind": "method",
    "name": "getBonds",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getBonds",
    "access": "public",
    "description": null,
    "lineNumber": 458,
    "undocument": true
  },
  {
    "__docId__": 2225,
    "kind": "method",
    "name": "getRings",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#getRings",
    "access": "public",
    "description": null,
    "lineNumber": 462,
    "undocument": true
  },
  {
    "__docId__": 2226,
    "kind": "method",
    "name": "qualifiedName",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#qualifiedName",
    "access": "public",
    "description": null,
    "lineNumber": 466,
    "undocument": true
  },
  {
    "__docId__": 2227,
    "kind": "method",
    "name": "clone",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#clone",
    "access": "public",
    "description": "Clone object",
    "lineNumber": 480,
    "return": {
      "nullable": null,
      "types": [
        "ResidueProxy"
      ],
      "spread": false,
      "description": "cloned residue"
    }
  },
  {
    "__docId__": 2228,
    "kind": "method",
    "name": "toObject",
    "memberof": "src/proxy/residue-proxy.js~ResidueProxy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/proxy/residue-proxy.js~ResidueProxy#toObject",
    "access": "public",
    "description": null,
    "lineNumber": 484,
    "undocument": true
  },
  {
    "__docId__": 2229,
    "kind": "file",
    "name": "src/representation/angle-representation.js",
    "content": "/**\r\n * @file Angle Representation\r\n * @private\r\n */\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport MeasurementRepresentation, { parseNestedAtoms, calcArcPoint } from './measurement-representation.js'\r\nimport { defaults } from '../utils.js'\r\n\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer.js'\r\nimport MeshBuffer from '../buffer/mesh-buffer.js'\r\nimport TextBuffer from '../buffer/text-buffer.js'\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js'\r\n\r\nimport { v3add, v3cross, v3dot, v3fromArray, v3length, v3new,\r\n  v3normalize, v3sub, v3toArray } from '../math/vector-utils.js'\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils.js'\r\nimport { RAD2DEG } from '../math/math-constants.js'\r\n\r\n/**\r\n * @typedef {Object} AngleRepresentationParameters - angle representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} atomTriple - list of triplets of selection strings\r\n *                                 or atom indices\r\n * @property {Boolean} vectorVisible - Indicate the 3 points for each angle by drawing lines 1-2-3\r\n * @property {Boolean} arcVisible - Show the arc outline for each angle\r\n * @property {Number}  lineOpacity - opacity for the line part of the representation\r\n * @property {Number} linewidth - width for line part of representation\r\n * @property {Boolean} sectorVisible - Show the filled arc for each angle\r\n */\r\n\r\n/**\r\n * Angle representation object\r\n *\r\n * Reperesentation consists of four parts, visibility can be set for each\r\n * label - the text label with the angle size\r\n * vectors - lines joining the three points\r\n * sector - triangles representing the angle\r\n * arc - line bordering the sector\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass AngleRepresentation extends MeasurementRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'angle'\r\n\r\n    this.parameters = Object.assign({\r\n      atomTriple: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      vectorVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      arcVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      lineOpacity: {\r\n        type: 'range', min: 0.0, max: 1.0, step: 0.01\r\n      },\r\n      linewidth: {\r\n        type: 'number', precision: 2, max: 10.0, min: 0.5\r\n      },\r\n      sectorVisible: {\r\n        type: 'boolean', default: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.side = defaults(p.side, 'double')\r\n    p.opacity = defaults(p.opacity, 0.5)\r\n\r\n    this.atomTriple = defaults(p.atomTriple, [])\r\n    this.arcVisible = defaults(p.arcVisible, true)\r\n    this.lineOpacity = defaults(p.lineOpacity, 1.0)\r\n    this.linewidth = defaults(p.linewidth, 2.0)\r\n    this.sectorVisible = defaults(p.sectorVisible, true)\r\n    this.vectorVisible = defaults(p.vectorVisible, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  create () {\r\n    if (this.structureView.atomCount === 0) return\r\n    const atomPosition = atomTriplePositions(this.structureView, this.atomTriple)\r\n    const angleData = getAngleData(atomPosition)\r\n    const n = this.n = angleData.labelPosition.length / 3\r\n\r\n    const labelColor = new Color(this.labelColor)\r\n\r\n    // Create buffers\r\n    this.textBuffer = new TextBuffer({\r\n      position: angleData.labelPosition,\r\n      size: uniformArray(n, this.labelSize),\r\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n      text: angleData.labelText\r\n    }, this.getLabelBufferParams())\r\n\r\n    const c = new Color(this.colorValue)\r\n\r\n    this.vectorBuffer = new WideLineBuffer({\r\n      position1: angleData.vectorPosition1,\r\n      position2: angleData.vectorPosition2,\r\n      color: uniformArray3(2 * n, c.r, c.g, c.b),\r\n      color2: uniformArray3(2 * n, c.r, c.g, c.b)\r\n    }, this.getBufferParams({\r\n      linewidth: this.linewidth,\r\n      visible: this.vectorVisible // TODO: Expose as param\r\n    }))\r\n\r\n    this.arcLength = angleData.arcPosition1.length / 3\r\n\r\n    this.arcBuffer = new WideLineBuffer({\r\n      position1: angleData.arcPosition1,\r\n      position2: angleData.arcPosition2,\r\n      color: uniformArray3(this.arcLength, c.r, c.g, c.b),\r\n      color2: uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n    }, this.getBufferParams({\r\n      linewidth: 2.0,\r\n      visible: this.arcVisible\r\n    }))\r\n\r\n    this.sectorLength = angleData.sectorPosition.length / 3\r\n\r\n    this.sectorMeshBuffer = new MeshBuffer({\r\n      position: angleData.sectorPosition,\r\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    }, this.getBufferParams({\r\n      visible: this.sectorVisible,\r\n      opacity: this.sectorOpacity\r\n    }))\r\n\r\n    this.sectorDoubleSidedBuffer = new DoubleSidedBuffer(this.sectorMeshBuffer)\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [\r\n        this.textBuffer,\r\n        this.vectorBuffer,\r\n        this.arcBuffer,\r\n        this.sectorDoubleSidedBuffer ]\r\n    })\r\n  }\r\n\r\n  updateData (what, data) {\r\n    super.updateData(what, data)\r\n    const vectorData = {}\r\n    const arcData = {}\r\n    const sectorData = {}\r\n\r\n    if (what.color) {\r\n      const c = new Color(this.colorValue)\r\n      vectorData.color = vectorData.color2 = uniformArray3(this.n * 2, c.r, c.g, c.b)\r\n      arcData.color = arcData.color2 = uniformArray3(this.arcLength, c.r, c.g, c.b)\r\n      sectorData.color = uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    }\r\n\r\n    // if (what.sectorOpacity) {\r\n    //   this.sectorMeshBuffer.opacity = what.sectorOpacity\r\n    // }\r\n\r\n    this.vectorBuffer.setAttributes(vectorData)\r\n    this.arcBuffer.setAttributes(arcData)\r\n    this.sectorMeshBuffer.setAttributes(sectorData)\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && (\r\n      params.vectorVisible !== undefined ||\r\n      params.arcVisible !== undefined ||\r\n      params.sectorVisible !== undefined)) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    if (params && params.lineOpacity) {\r\n      this.vectorBuffer.setParameters(\r\n        {opacity: params.lineOpacity})\r\n      this.arcBuffer.setParameters(\r\n        {opacity: params.lineOpacity})\r\n    }\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.vectorBuffer.setParameters(\r\n        {opacity: this.lineOpacity})\r\n      this.arcBuffer.setParameters(\r\n        {opacity: this.lineOpacity})\r\n    }\r\n\r\n    if (params && params.linewidth) {\r\n      this.vectorBuffer.setParameters({ linewidth: params.linewidth })\r\n      this.arcBuffer.setParameters({ linewidth: params.linewidth })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value, noRenderRequest) {\r\n    super.setVisibility(value, true)\r\n\r\n    this.vectorBuffer.setVisibility(this.vectorVisible && this.visible)\r\n    this.arcBuffer.setVisibility(this.arcVisible && this.visible)\r\n    this.sectorDoubleSidedBuffer.setVisibility(this.sectorVisible && this.visible)\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Ensure mid point does not coincide with first or second\r\n * @param  {Float32Array} position 9*nAngle array of coordinates\r\n * @return {Float32Array}          Filtered position array, may be shorter\r\n */\r\nfunction validatePositions (position) {\r\n  const include = []\r\n  const n = position.length / 9\r\n  for (let i = 0; i < n; i++) {\r\n    // Check that first point not same as second and that second not same as third\r\n    let okay = true\r\n    for (let j = i; j < i + 3; j += 3) {\r\n      if (position[j] === position[j + 3] &&\r\n        position[j + 1] === position[j + 4] &&\r\n        position[j + 2] === position[j + 5]) {\r\n        okay = false\r\n      }\r\n    }\r\n    if (okay) include.push(i)\r\n  }\r\n  const outPosition = new Float32Array(include.length * 9)\r\n  let outIdx = 0\r\n  include.forEach(function (i) {\r\n    copyArray(position, outPosition, i * 9, outIdx * 9, 9)\r\n    outIdx++\r\n  })\r\n  return outPosition\r\n}\r\n\r\nfunction atomTriplePositions (sview, atomTriple) {\r\n  return validatePositions(parseNestedAtoms(sview, atomTriple))\r\n}\r\n\r\n/**\r\n * Converts triple positions into data required to build various buffers.\r\n */\r\nfunction getAngleData (position, params) {\r\n  params = params || {}\r\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\r\n  const n = position.length / 9\r\n  const angles = new Float32Array(n)\r\n  const labelPosition = new Float32Array(n * 3)\r\n  const labelText = new Array(n)\r\n\r\n  const vectorPosition1 = new Float32Array(n * 6) // Two lines per angle\r\n  const vectorPosition2 = new Float32Array(n * 6)\r\n\r\n  const arcPositionTmp1 = new Array(n) // Start points for arc lines\r\n  const arcPositionTmp2 = new Array(n) // End points for arc lines\r\n  const sectorPositionTmp = new Array(n) // Triangle points\r\n\r\n  let totalSegments = 0\r\n\r\n  // Re-used vectors etc\r\n  const p1 = v3new() // Positions of points for each angel\r\n  const p2 = v3new()\r\n  const p3 = v3new()\r\n  const v21 = v3new() // Vectors\r\n  const v23 = v3new()\r\n  const cross = v3new() // Cross product v21xv23\r\n  const cross2 = v3new() // In-plane cross product v21 x (v21 x v23)\r\n  const labelTmp = v3new()\r\n  const arcPoint = v3new()\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    let p = 9 * i\r\n    v3fromArray(p1, position, p)\r\n    v3fromArray(p2, position, p + 3)\r\n    v3fromArray(p3, position, p + 6)\r\n\r\n    let v = 6 * i\r\n    v3toArray(p1, vectorPosition1, v)\r\n    v3toArray(p2, vectorPosition2, v)\r\n    v3toArray(p2, vectorPosition1, v + 3)\r\n    v3toArray(p3, vectorPosition2, v + 3)\r\n\r\n    v3sub(v21, p1, p2)\r\n    v3sub(v23, p3, p2)\r\n\r\n    v3normalize(v21, v21) // validatePositions ensures valid\r\n    v3normalize(v23, v23)\r\n\r\n    v3cross(cross, v21, v23)\r\n    const crossLength = v3length(cross)\r\n    const dot = v3dot(v21, v23)\r\n\r\n    const angle = angles[i] = Math.atan2(crossLength, dot)\r\n    labelText[i] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\r\n\r\n    if (v3length(cross) === 0.0) {\r\n      // Angle exactly 0/180, pick an arbitrary direction\r\n      cross[ 0 ] = 1.0\r\n      cross[ 1 ] = 0.0\r\n      cross[ 2 ] = 0.0\r\n    }\r\n    v3cross(cross2, cross, v21)\r\n    v3normalize(cross2, cross2)\r\n\r\n    calcArcPoint(labelTmp, p2, v21, cross2, angle / 2.0)\r\n    // TODO: Scale label position?\r\n    v3toArray(labelTmp, labelPosition, 3 * i)\r\n\r\n    // Build the arc and sector\r\n\r\n    const nSegments = Math.ceil(angle / angleStep)\r\n    const sectorVertices = new Float32Array(nSegments * 9)\r\n    sectorPositionTmp[ i ] = sectorVertices\r\n    const arcVertices1 = new Float32Array(nSegments * 3)\r\n    const arcVertices2 = new Float32Array(nSegments * 3)\r\n    arcPositionTmp1[ i ] = arcVertices1\r\n    arcPositionTmp2[ i ] = arcVertices2\r\n\r\n    v3add(arcPoint, p2, v21) // Our initial arc point\r\n\r\n    const appendArcSection = function (a, j) {\r\n      const si = j * 9\r\n      const ai = j * 3\r\n      v3toArray(p2, sectorVertices, si)\r\n      v3toArray(arcPoint, sectorVertices, si + 3)\r\n      v3toArray(arcPoint, arcVertices1, ai)\r\n\r\n      calcArcPoint(arcPoint, p2, v21, cross2, a)\r\n\r\n      v3toArray(arcPoint, sectorVertices, si + 6)\r\n      v3toArray(arcPoint, arcVertices2, ai)\r\n    }\r\n\r\n    let j = 0\r\n    for (let a = angleStep; a < angle; a += angleStep) {\r\n      appendArcSection(a, j)\r\n      j++\r\n    }\r\n    appendArcSection(angle, j)\r\n    totalSegments += nSegments\r\n  }\r\n\r\n  // Flatten nested arrays of arc/segment points\r\n  const arcSize = totalSegments * 3\r\n  const sectorSize = totalSegments * 9\r\n  const arcPosition1 = new Float32Array(arcSize)\r\n  const arcPosition2 = new Float32Array(arcSize)\r\n  const sectorPosition = new Float32Array(sectorSize)\r\n\r\n  let sectorOffset = 0\r\n  let arcOffset = 0\r\n  for (let i = 0; i < n; i++) {\r\n    const ap1 = arcPositionTmp1[ i ]\r\n    const ap2 = arcPositionTmp2[ i ]\r\n    copyArray(ap1, arcPosition1, 0, arcOffset, ap1.length)\r\n    copyArray(ap2, arcPosition2, 0, arcOffset, ap2.length)\r\n    arcOffset += ap1.length // === ap2.length\r\n\r\n    const sp = sectorPositionTmp[ i ]\r\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\r\n    sectorOffset += sp.length\r\n  }\r\n\r\n  return {\r\n    labelPosition,\r\n    labelText,\r\n    vectorPosition1,\r\n    vectorPosition2,\r\n    arcPosition1,\r\n    arcPosition2,\r\n    sectorPosition\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('angle', AngleRepresentation)\r\n\r\nexport default AngleRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/angle-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2230,
    "kind": "function",
    "name": "validatePositions",
    "memberof": "src/representation/angle-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/angle-representation.js~validatePositions",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/angle-representation.js",
    "importStyle": null,
    "description": "Ensure mid point does not coincide with first or second",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "9*nAngle array of coordinates"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "Filtered position array, may be shorter"
    },
    "ignore": true
  },
  {
    "__docId__": 2231,
    "kind": "function",
    "name": "atomTriplePositions",
    "memberof": "src/representation/angle-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/angle-representation.js~atomTriplePositions",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/angle-representation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2232,
    "kind": "function",
    "name": "getAngleData",
    "memberof": "src/representation/angle-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/angle-representation.js~getAngleData",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/angle-representation.js",
    "importStyle": null,
    "description": "Converts triple positions into data required to build various buffers.",
    "lineNumber": 262,
    "ignore": true
  },
  {
    "__docId__": 2233,
    "kind": "typedef",
    "name": "AngleRepresentationParameters",
    "memberof": "src/representation/angle-representation.js",
    "static": true,
    "longname": "src/representation/angle-representation.js~AngleRepresentationParameters",
    "access": "public",
    "description": "",
    "unknown": [
      {
        "tagName": "@mixes",
        "tagValue": "RepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "StructureRepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "MeasurementRepresentationParameters"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "atomTriple",
        "description": "list of triplets of selection strings\n                                or atom indices"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "vectorVisible",
        "description": "Indicate the 3 points for each angle by drawing lines 1-2-3"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "arcVisible",
        "description": "Show the arc outline for each angle"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineOpacity",
        "description": "opacity for the line part of the representation"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "linewidth",
        "description": "width for line part of representation"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorVisible",
        "description": "Show the filled arc for each angle"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "AngleRepresentationParameters"
    }
  },
  {
    "__docId__": 2234,
    "kind": "class",
    "name": "AngleRepresentation",
    "memberof": "src/representation/angle-representation.js",
    "static": true,
    "longname": "src/representation/angle-representation.js~AngleRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/angle-representation.js",
    "importStyle": "AngleRepresentation",
    "description": "Angle representation object\n\nReperesentation consists of four parts, visibility can be set for each\nlabel - the text label with the angle size\nvectors - lines joining the three points\nsector - triangles representing the angle\narc - line bordering the sector",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to measure angles in"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "AngleRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "angle representation parameters"
      }
    ],
    "interface": false,
    "extends": [
      "src/representation/measurement-representation.js~MeasurementRepresentation"
    ]
  },
  {
    "__docId__": 2235,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 2236,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2237,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 2238,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 2239,
    "kind": "member",
    "name": "atomTriple",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#atomTriple",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 2240,
    "kind": "member",
    "name": "arcVisible",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#arcVisible",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 2241,
    "kind": "member",
    "name": "lineOpacity",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#lineOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 2242,
    "kind": "member",
    "name": "linewidth",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#linewidth",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 2243,
    "kind": "member",
    "name": "sectorVisible",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#sectorVisible",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 2244,
    "kind": "member",
    "name": "vectorVisible",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#vectorVisible",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 2245,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 2246,
    "kind": "member",
    "name": "textBuffer",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#textBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 2247,
    "kind": "member",
    "name": "vectorBuffer",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#vectorBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2248,
    "kind": "member",
    "name": "arcLength",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#arcLength",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 2249,
    "kind": "member",
    "name": "arcBuffer",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#arcBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 2250,
    "kind": "member",
    "name": "sectorLength",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#sectorLength",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 2251,
    "kind": "member",
    "name": "sectorMeshBuffer",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#sectorMeshBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 2252,
    "kind": "member",
    "name": "sectorDoubleSidedBuffer",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#sectorDoubleSidedBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 2253,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true
  },
  {
    "__docId__": 2254,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 2255,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/representation/angle-representation.js~AngleRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/angle-representation.js~AngleRepresentation#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 213,
    "undocument": true
  },
  {
    "__docId__": 2256,
    "kind": "file",
    "name": "src/representation/axes-representation.js",
    "content": "/**\r\n * @file Axes Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { AxesPicker } from '../utils/picker.js'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Axes representation. Show principal axes and/or a box aligned with them\r\n * that fits the structure or selection.\r\n *\r\n * __Name:__ _axes_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://3pqr\", {\r\n *     assembly: \"BU1\"\r\n * } ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \"RET\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     o.addRepresentation( \"ball+stick\", { sele: \"RET\" } );\r\n *     o.addRepresentation( \"axes\", {\r\n *         sele: \":B and backbone\", showAxes: false, showBox: true, radius: 0.2\r\n *     } );\r\n *     stage.autoView();\r\n *     var pa = o.structure.getPrincipalAxes();\r\n *     stage.animationControls.rotate( pa.getRotationQuaternion(), 1500 );\r\n * } );\r\n */\r\nclass AxesRepresentation extends StructureRepresentation {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {StructureRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'axes'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      radius: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      disableImpostor: true,\r\n      showAxes: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      showBox: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n      assembly: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n\r\n    p.radius = defaults(p.radius, 0.5)\r\n    p.colorValue = defaults(p.colorValue, 'lightgreen')\r\n\r\n    this.showAxes = defaults(p.showAxes, true)\r\n    this.showBox = defaults(p.showBox, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getPrincipalAxes (/* sview */) {\r\n    var selection\r\n    var assembly = this.getAssembly()\r\n\r\n    if (assembly) {\r\n      selection = assembly.partList[ 0 ].getSelection()\r\n    }\r\n\r\n    return this.structureView.getPrincipalAxes(selection)\r\n  }\r\n\r\n  getAxesData (sview) {\r\n    var pa = this.getPrincipalAxes(sview)\r\n    var c = new Color(this.colorValue)\r\n\r\n    var vn = 0\r\n    var en = 0\r\n\r\n    if (this.showAxes) {\r\n      vn += 6\r\n      en += 3\r\n    }\r\n\r\n    if (this.showBox) {\r\n      vn += 8\r\n      en += 12\r\n    }\r\n\r\n    var vertexPosition = new Float32Array(3 * vn)\r\n    var vertexColor = uniformArray3(vn, c.r, c.g, c.b)\r\n    var vertexRadius = uniformArray(vn, this.radius)\r\n\r\n    var edgePosition1 = new Float32Array(3 * en)\r\n    var edgePosition2 = new Float32Array(3 * en)\r\n    var edgeColor = uniformArray3(en, c.r, c.g, c.b)\r\n    var edgeRadius = uniformArray(en, this.radius)\r\n\r\n    var offset = 0\r\n\r\n    if (this.showAxes) {\r\n      var addAxis = function (v1, v2) {\r\n        v1.toArray(vertexPosition, offset * 2)\r\n        v2.toArray(vertexPosition, offset * 2 + 3)\r\n        v1.toArray(edgePosition1, offset)\r\n        v2.toArray(edgePosition2, offset)\r\n        offset += 3\r\n      }\r\n\r\n      addAxis(pa.begA, pa.endA)\r\n      addAxis(pa.begB, pa.endB)\r\n      addAxis(pa.begC, pa.endC)\r\n    }\r\n\r\n    if (this.showBox) {\r\n      var v = new Vector3()\r\n      var { d1a, d2a, d3a, d1b, d2b, d3b } = pa.getProjectedScaleForAtoms(sview)\r\n\r\n      console.log(d1a, d2a, d3a, d1b, d2b, d3b)\r\n\r\n      var offset2 = offset * 2\r\n      var addCorner = function (d1, d2, d3) {\r\n        v.copy(pa.center)\r\n          .addScaledVector(pa.normVecA, d1)\r\n          .addScaledVector(pa.normVecB, d2)\r\n          .addScaledVector(pa.normVecC, d3)\r\n        v.toArray(vertexPosition, offset2)\r\n        offset2 += 3\r\n      }\r\n      addCorner(d1a, d2a, d3a)\r\n      addCorner(d1a, d2a, d3b)\r\n      addCorner(d1a, d2b, d3b)\r\n      addCorner(d1a, d2b, d3a)\r\n      addCorner(d1b, d2b, d3b)\r\n      addCorner(d1b, d2b, d3a)\r\n      addCorner(d1b, d2a, d3a)\r\n      addCorner(d1b, d2a, d3b)\r\n\r\n      var edgeOffset = offset\r\n      var addEdge = function (a, b) {\r\n        v.fromArray(vertexPosition, offset * 2 + a * 3)\r\n          .toArray(edgePosition1, edgeOffset)\r\n        v.fromArray(vertexPosition, offset * 2 + b * 3)\r\n          .toArray(edgePosition2, edgeOffset)\r\n        edgeOffset += 3\r\n      }\r\n      addEdge(0, 1)\r\n      addEdge(0, 3)\r\n      addEdge(0, 6)\r\n      addEdge(1, 2)\r\n      addEdge(1, 7)\r\n      addEdge(2, 3)\r\n      addEdge(2, 4)\r\n      addEdge(3, 5)\r\n      addEdge(4, 5)\r\n      addEdge(4, 7)\r\n      addEdge(5, 6)\r\n      addEdge(6, 7)\r\n    }\r\n\r\n    const picker = new AxesPicker(pa)\r\n\r\n    return {\r\n      vertex: {\r\n        position: vertexPosition,\r\n        color: vertexColor,\r\n        radius: vertexRadius,\r\n        picking: picker\r\n      },\r\n      edge: {\r\n        position1: edgePosition1,\r\n        position2: edgePosition2,\r\n        color: edgeColor,\r\n        color2: edgeColor,\r\n        radius: edgeRadius,\r\n        picking: picker\r\n      }\r\n    }\r\n  }\r\n\r\n  create () {\r\n    var axesData = this.getAxesData(this.structureView)\r\n\r\n    this.sphereBuffer = new SphereBuffer(\r\n      axesData.vertex,\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      axesData.edge,\r\n      this.getBufferParams({\r\n        openEnded: true,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [ this.sphereBuffer, this.cylinderBuffer ]\r\n    })\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var axesData = this.getAxesData(data.sview)\r\n    var sphereData = {}\r\n    var cylinderData = {}\r\n\r\n    if (!what || what.position) {\r\n      sphereData.position = axesData.vertex.position\r\n      cylinderData.position1 = axesData.edge.position1\r\n      cylinderData.position2 = axesData.edge.position2\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      sphereData.color = axesData.vertex.color\r\n      cylinderData.color = axesData.edge.color\r\n      cylinderData.color2 = axesData.edge.color\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      sphereData.radius = axesData.vertex.radius\r\n      cylinderData.radius = axesData.edge.radius\r\n    }\r\n\r\n    this.sphereBuffer.setAttributes(sphereData)\r\n    this.cylinderBuffer.setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('axes', AxesRepresentation)\r\n\r\nexport default AxesRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/axes-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2257,
    "kind": "class",
    "name": "AxesRepresentation",
    "memberof": "src/representation/axes-representation.js",
    "static": true,
    "longname": "src/representation/axes-representation.js~AxesRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/axes-representation.js",
    "importStyle": "AxesRepresentation",
    "description": "Axes representation. Show principal axes and/or a box aligned with them\nthat fits the structure or selection.\n\n__Name:__ _axes_",
    "examples": [
      "stage.loadFile( \"rcsb://3pqr\", {\n    assembly: \"BU1\"\n} ).then( function( o ){\n    o.addRepresentation( \"cartoon\" );\n    o.addRepresentation( \"axes\", {\n        sele: \"RET\", showAxes: false, showBox: true, radius: 0.2\n    } );\n    o.addRepresentation( \"ball+stick\", { sele: \"RET\" } );\n    o.addRepresentation( \"axes\", {\n        sele: \":B and backbone\", showAxes: false, showBox: true, radius: 0.2\n    } );\n    stage.autoView();\n    var pa = o.structure.getPrincipalAxes();\n    stage.animationControls.rotate( pa.getRotationQuaternion(), 1500 );\n} );"
    ],
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2258,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "the viewer object"
      },
      {
        "nullable": null,
        "types": [
          "StructureRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 2259,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 2260,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 2261,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 2262,
    "kind": "member",
    "name": "showAxes",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#showAxes",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 2263,
    "kind": "member",
    "name": "showBox",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#showBox",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 2264,
    "kind": "method",
    "name": "getPrincipalAxes",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#getPrincipalAxes",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 2265,
    "kind": "method",
    "name": "getAxesData",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#getAxesData",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 2266,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 204,
    "undocument": true
  },
  {
    "__docId__": 2267,
    "kind": "member",
    "name": "sphereBuffer",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#sphereBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 207,
    "undocument": true
  },
  {
    "__docId__": 2268,
    "kind": "member",
    "name": "cylinderBuffer",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#cylinderBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 216,
    "undocument": true
  },
  {
    "__docId__": 2269,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/axes-representation.js~AxesRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/axes-representation.js~AxesRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 2270,
    "kind": "file",
    "name": "src/representation/backbone-representation.js",
    "content": "/**\r\n * @file Backbone Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport BallAndStickRepresentation from './ballandstick-representation.js'\r\n\r\n/**\r\n * Backbone representation. Show cylinders (or lines) connecting .CA (protein)\r\n * or .C4'/.C3' (RNA/DNA) of polymers.\r\n *\r\n * __Name:__ _backbone_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1sfi\" ).then( function( o ){\r\n *     o.addRepresentation( \"backbone\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BackboneRepresentation extends BallAndStickRepresentation {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'backbone'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\r\n    p.radius = defaults(p.radius, 0.25)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomData (sview, what, params) {\r\n    return sview.getBackboneAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondData (sview, what, params) {\r\n    return sview.getBackboneBondData(this.getBondParams(what, params))\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('backbone', BackboneRepresentation)\r\n\r\nexport default BackboneRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/backbone-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2271,
    "kind": "class",
    "name": "BackboneRepresentation",
    "memberof": "src/representation/backbone-representation.js",
    "static": true,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/backbone-representation.js",
    "importStyle": "BackboneRepresentation",
    "description": "Backbone representation. Show cylinders (or lines) connecting .CA (protein)\nor .C4'/.C3' (RNA/DNA) of polymers.\n\n__Name:__ _backbone_",
    "examples": [
      "stage.loadFile( \"rcsb://1sfi\" ).then( function( o ){\n    o.addRepresentation( \"backbone\" );\n    o.autoView();\n} );"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/representation/ballandstick-representation.js~BallAndStickRepresentation"
    ]
  },
  {
    "__docId__": 2272,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "the viewer object"
      },
      {
        "nullable": null,
        "types": [
          "BallAndStickRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 2273,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 2274,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2275,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 2276,
    "kind": "method",
    "name": "getAtomData",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#getAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2277,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/representation/backbone-representation.js~BackboneRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/backbone-representation.js~BackboneRepresentation#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 2278,
    "kind": "file",
    "name": "src/representation/ballandstick-representation.js",
    "content": "/**\r\n * @file Ball And Stick Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { ExtensionFragDepth, RepresentationRegistry } from '../globals.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js'\r\n\r\n/**\r\n * Ball And Stick representation parameter object. Extends {@link RepresentationParameters} and\r\n * {@link StructureRepresentationParameters}.\r\n *\r\n * @typedef {Object} BallAndStickRepresentationParameters - ball and stick representation parameters\r\n *\r\n * @property {Integer} sphereDetail - sphere quality (icosahedron subdivisions)\r\n * @property {Integer} radialSegments - cylinder quality (number of segments)\r\n * @property {Boolean} openEnded - capped or not\r\n * @property {Boolean} disableImpostor - disable use of raycasted impostors for rendering\r\n * @property {Float} aspectRatio - size difference between atom and bond radii\r\n * @property {Boolean} lineOnly - render only bonds, and only as lines\r\n * @property {Integer} linewidth - width of lines\r\n * @property {Boolean} cylinderOnly - render only bonds (no atoms)\r\n * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n * @property {Float} bondSpacing - spacing for multiple bond rendering\r\n * @property {Float} bondScale - scale/radius for multiple bond rendering\r\n */\r\n\r\n/**\r\n * Ball And Stick representation. Show atoms as spheres and bonds as cylinders.\r\n *\r\n * __Name:__ _ball+stick_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"ball+stick\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass BallAndStickRepresentation extends StructureRepresentation {\r\n  /**\r\n   * Create Ball And Stick representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'ball+stick'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      openEnded: true,\r\n      disableImpostor: true,\r\n      aspectRatio: {\r\n        type: 'number', precision: 1, max: 10.0, min: 1.0\r\n      },\r\n      lineOnly: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      cylinderOnly: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      multipleBond: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'symmetric': 'symmetric',\r\n          'offset': 'offset'\r\n        }\r\n      },\r\n      bondScale: {\r\n        type: 'number', precision: 2, max: 1.0, min: 0.01\r\n      },\r\n      bondSpacing: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.5\r\n      },\r\n      linewidth: {\r\n        type: 'integer', max: 50, min: 1, buffer: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.radius = defaults(p.radius, 0.15)\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 2.0)\r\n    this.lineOnly = defaults(p.lineOnly, false)\r\n    this.cylinderOnly = defaults(p.cylinderOnly, false)\r\n    this.multipleBond = defaults(p.multipleBond, 'off')\r\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\r\n    this.bondScale = defaults(p.bondScale, 0.4)\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomParams (what, params) {\r\n    params = Object.assign({\r\n      radiusParams: { 'radius': this.radius, 'scale': this.scale * this.aspectRatio }\r\n    }, params)\r\n\r\n    return super.getAtomParams(what, params)\r\n  }\r\n\r\n  getAtomData (sview, what, params) {\r\n    return sview.getAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondParams (what, params) {\r\n    params = Object.assign({\r\n      multipleBond: this.multipleBond,\r\n      bondSpacing: this.bondSpacing,\r\n      bondScale: this.bondScale\r\n    }, params)\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  getBondData (sview, what, params) {\r\n    return sview.getBondData(this.getBondParams(what, params))\r\n  }\r\n\r\n  createData (sview) {\r\n    var bufferList = []\r\n\r\n    if (this.lineOnly) {\r\n      this.lineBuffer = new WideLineBuffer(\r\n        this.getBondData(sview, { position: true, color: true, picking: true }),\r\n        this.getBufferParams({ linewidth: this.linewidth })\r\n      )\r\n\r\n      bufferList.push(this.lineBuffer)\r\n    } else {\r\n      var cylinderBuffer = new CylinderBuffer(\r\n        this.getBondData(sview),\r\n        this.getBufferParams({\r\n          openEnded: this.openEnded,\r\n          radialSegments: this.radialSegments,\r\n          disableImpostor: this.disableImpostor,\r\n          dullInterior: true\r\n        })\r\n      )\r\n\r\n      bufferList.push(cylinderBuffer)\r\n\r\n      if (!this.cylinderOnly) {\r\n        var sphereBuffer = new SphereBuffer(\r\n          this.getAtomData(sview),\r\n          this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n          })\r\n        )\r\n\r\n        bufferList.push(sphereBuffer)\r\n      }\r\n    }\r\n\r\n    return {\r\n      bufferList: bufferList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    if (this.multipleBond !== 'off' && what && what.radius) {\r\n      what.position = true\r\n    }\r\n\r\n    var bondData = this.getBondData(data.sview, what)\r\n\r\n    if (this.lineOnly) {\r\n      var lineData = {}\r\n\r\n      if (!what || what.position) {\r\n        lineData.position1 = bondData.position1\r\n        lineData.position2 = bondData.position2\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        lineData.color = bondData.color\r\n        lineData.color2 = bondData.color2\r\n      }\r\n\r\n      data.bufferList[ 0 ].setAttributes(lineData)\r\n    } else {\r\n      var cylinderData = {}\r\n\r\n      if (!what || what.position) {\r\n        cylinderData.position1 = bondData.position1\r\n        cylinderData.position2 = bondData.position2\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        cylinderData.color = bondData.color\r\n        cylinderData.color2 = bondData.color2\r\n      }\r\n\r\n      if (!what || what.radius) {\r\n        cylinderData.radius = bondData.radius\r\n      }\r\n\r\n      data.bufferList[ 0 ].setAttributes(cylinderData)\r\n\r\n      if (!this.cylinderOnly) {\r\n        var atomData = this.getAtomData(data.sview, what)\r\n\r\n        var sphereData = {}\r\n\r\n        if (!what || what.position) {\r\n          sphereData.position = atomData.position\r\n        }\r\n\r\n        if (!what || what.color) {\r\n          sphereData.color = atomData.color\r\n        }\r\n\r\n        if (!what || what.radius) {\r\n          sphereData.radius = atomData.radius\r\n        }\r\n\r\n        data.bufferList[ 1 ].setAttributes(sphereData)\r\n      }\r\n    }\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && (params.aspectRatio || params.bondSpacing || params.bondScale)) {\r\n      what.radius = true\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('ball+stick', BallAndStickRepresentation)\r\n\r\nexport default BallAndStickRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/ballandstick-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2279,
    "kind": "typedef",
    "name": "BallAndStickRepresentationParameters",
    "memberof": "src/representation/ballandstick-representation.js",
    "static": true,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentationParameters",
    "access": "public",
    "description": "Ball And Stick representation parameter object. Extends {@link RepresentationParameters} and\n{@link StructureRepresentationParameters}.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "sphereDetail",
        "description": "sphere quality (icosahedron subdivisions)"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "radialSegments",
        "description": "cylinder quality (number of segments)"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "openEnded",
        "description": "capped or not"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "disableImpostor",
        "description": "disable use of raycasted impostors for rendering"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "aspectRatio",
        "description": "size difference between atom and bond radii"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "lineOnly",
        "description": "render only bonds, and only as lines"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "linewidth",
        "description": "width of lines"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "cylinderOnly",
        "description": "render only bonds (no atoms)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "multipleBond",
        "description": "one off \"off\", \"symmetric\", \"offset\""
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "bondSpacing",
        "description": "spacing for multiple bond rendering"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "bondScale",
        "description": "scale/radius for multiple bond rendering"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BallAndStickRepresentationParameters"
    }
  },
  {
    "__docId__": 2280,
    "kind": "class",
    "name": "BallAndStickRepresentation",
    "memberof": "src/representation/ballandstick-representation.js",
    "static": true,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/ballandstick-representation.js",
    "importStyle": "BallAndStickRepresentation",
    "description": "Ball And Stick representation. Show atoms as spheres and bonds as cylinders.\n\n__Name:__ _ball+stick_",
    "examples": [
      "stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    o.addRepresentation( \"ball+stick\" );\n    o.autoView();\n} );"
    ],
    "lineNumber": 44,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2281,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#constructor",
    "access": "public",
    "description": "Create Ball And Stick representation object",
    "lineNumber": 51,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "BallAndStickRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "ball and stick representation parameters"
      }
    ]
  },
  {
    "__docId__": 2282,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2283,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 2284,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 2285,
    "kind": "member",
    "name": "aspectRatio",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#aspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 2286,
    "kind": "member",
    "name": "lineOnly",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#lineOnly",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 2287,
    "kind": "member",
    "name": "cylinderOnly",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#cylinderOnly",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 2288,
    "kind": "member",
    "name": "multipleBond",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#multipleBond",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 2289,
    "kind": "member",
    "name": "bondSpacing",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#bondSpacing",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 2290,
    "kind": "member",
    "name": "bondScale",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#bondScale",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true
  },
  {
    "__docId__": 2291,
    "kind": "member",
    "name": "linewidth",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#linewidth",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 2292,
    "kind": "method",
    "name": "getAtomParams",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#getAtomParams",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 2293,
    "kind": "method",
    "name": "getAtomData",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#getAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 2294,
    "kind": "method",
    "name": "getBondParams",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#getBondParams",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 2295,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 2296,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 2297,
    "kind": "member",
    "name": "lineBuffer",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#lineBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 2298,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 2299,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/ballandstick-representation.js~BallAndStickRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ballandstick-representation.js~BallAndStickRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "undocument": true
  },
  {
    "__docId__": 2300,
    "kind": "file",
    "name": "src/representation/base-representation.js",
    "content": "/**\r\n * @file Base Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport BallAndStickRepresentation from './ballandstick-representation.js'\r\n\r\n/**\r\n * Base representation. Show cylinders for RNA/DNA ladders.\r\n *\r\n * __Name:__ _base_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1d66\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\", { sele: \"nucleic\" } );\r\n *     o.addRepresentation( \"base\", { color: \"resname\" } );\r\n *     o.autoView( \"nucleic\" );\r\n * } );\r\n */\r\nclass BaseRepresentation extends BallAndStickRepresentation {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Viewer} viewer - the viewer object\r\n   * @param  {BallAndStickRepresentationParameters} params - parameters object\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'base'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.aspectRatio = defaults(p.aspectRatio, 1.0)\r\n    p.radius = defaults(p.radius, 0.3)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getAtomData (sview, what, params) {\r\n    return sview.getRungAtomData(this.getAtomParams(what, params))\r\n  }\r\n\r\n  getBondData (sview, what, params) {\r\n    var p = this.getBondParams(what, params)\r\n    p.colorParams.rung = true\r\n\r\n    return sview.getRungBondData(p)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('base', BaseRepresentation)\r\n\r\nexport default BaseRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/base-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2301,
    "kind": "class",
    "name": "BaseRepresentation",
    "memberof": "src/representation/base-representation.js",
    "static": true,
    "longname": "src/representation/base-representation.js~BaseRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/base-representation.js",
    "importStyle": "BaseRepresentation",
    "description": "Base representation. Show cylinders for RNA/DNA ladders.\n\n__Name:__ _base_",
    "examples": [
      "stage.loadFile( \"rcsb://1d66\" ).then( function( o ){\n    o.addRepresentation( \"cartoon\", { sele: \"nucleic\" } );\n    o.addRepresentation( \"base\", { color: \"resname\" } );\n    o.autoView( \"nucleic\" );\n} );"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/representation/ballandstick-representation.js~BallAndStickRepresentation"
    ]
  },
  {
    "__docId__": 2302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "the viewer object"
      },
      {
        "nullable": null,
        "types": [
          "BallAndStickRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 2303,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 2304,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2305,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 2306,
    "kind": "method",
    "name": "getAtomData",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#getAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2307,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/representation/base-representation.js~BaseRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/base-representation.js~BaseRepresentation#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 2308,
    "kind": "file",
    "name": "src/representation/buffer-representation.js",
    "content": "/**\r\n * @file Buffer Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Representation from './representation.js'\r\n\r\n/**\r\n * Representation for showing buffer objects. Good for efficiently showing\r\n * large amounts of geometric primitives e.g. spheres via {@link SphereBuffer}.\r\n * Smaller numbers of geometric primitives are more easily shown with help\r\n * from the {@link Shape} class.\r\n *\r\n * __Name:__ _buffer_\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a shape instance\r\n * var shape = new NGL.Shape( \"shape\" );\r\n * var sphereBuffer = new NGL.SphereBuffer( {\r\n *     position: new Float32Array( [ 0, 0, 0 ] ),\r\n *     color: new Float32Array( [ 1, 0, 0 ] ),\r\n *     radius: new Float32Array( [ 1 ] )\r\n * } );\r\n * shape.addBuffer( sphereBuffer );\r\n * var shapeComp = stage.addComponentFromObject( shape );\r\n * shapeComp.addRepresentation( \"buffer\" );\r\n *\r\n * @example\r\n * // add a single red sphere from a buffer to a structure component instance\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     var sphereBuffer = new NGL.SphereBuffer( {\r\n *         position: new Float32Array( [ 0, 0, 0 ] ),\r\n *         color: new Float32Array( [ 1, 0, 0 ] ),\r\n *         radius: new Float32Array( [ 1 ] )\r\n *     } );\r\n *     o.addBufferRepresentation( sphereBuffer, { opacity: 0.5 } );\r\n * } );\r\n */\r\nclass BufferRepresentation extends Representation {\r\n  /**\r\n   * Create Buffer representation\r\n   * @param {Buffer} buffer - a buffer object\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {RepresentationParameters} params - representation parameters\r\n   */\r\n  constructor (buffer, viewer, params) {\r\n    if (!Array.isArray(buffer)) {\r\n      buffer = [ buffer ]\r\n    }\r\n\r\n    super(buffer, viewer, params)\r\n\r\n    this.type = 'buffer'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n\r\n      colorScheme: null,\r\n      colorScale: null,\r\n      colorValue: null,\r\n      colorDomain: null,\r\n      colorMode: null\r\n\r\n    })\r\n\r\n    this.buffer = buffer\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    super.init(params)\r\n\r\n    this.build()\r\n  }\r\n\r\n  create () {\r\n    this.bufferList.push.apply(this.bufferList, this.buffer)\r\n  }\r\n\r\n  attach (callback) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n      buffer.setParameters(this.getBufferParams())\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n}\r\n\r\nexport default BufferRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/buffer-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2309,
    "kind": "class",
    "name": "BufferRepresentation",
    "memberof": "src/representation/buffer-representation.js",
    "static": true,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/buffer-representation.js",
    "importStyle": "BufferRepresentation",
    "description": "Representation for showing buffer objects. Good for efficiently showing\nlarge amounts of geometric primitives e.g. spheres via {@link SphereBuffer}.\nSmaller numbers of geometric primitives are more easily shown with help\nfrom the {@link Shape} class.\n\n__Name:__ _buffer_",
    "examples": [
      "// add a single red sphere from a buffer to a shape instance\nvar shape = new NGL.Shape( \"shape\" );\nvar sphereBuffer = new NGL.SphereBuffer( {\n    position: new Float32Array( [ 0, 0, 0 ] ),\n    color: new Float32Array( [ 1, 0, 0 ] ),\n    radius: new Float32Array( [ 1 ] )\n} );\nshape.addBuffer( sphereBuffer );\nvar shapeComp = stage.addComponentFromObject( shape );\nshapeComp.addRepresentation( \"buffer\" );",
      "// add a single red sphere from a buffer to a structure component instance\nstage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    var sphereBuffer = new NGL.SphereBuffer( {\n        position: new Float32Array( [ 0, 0, 0 ] ),\n        color: new Float32Array( [ 1, 0, 0 ] ),\n        radius: new Float32Array( [ 1 ] )\n    } );\n    o.addBufferRepresentation( sphereBuffer, { opacity: 0.5 } );\n} );"
    ],
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/representation/representation.js~Representation"
    ]
  },
  {
    "__docId__": 2310,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#constructor",
    "access": "public",
    "description": "Create Buffer representation",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "a buffer object"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ]
  },
  {
    "__docId__": 2311,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2312,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 2313,
    "kind": "member",
    "name": "buffer",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#buffer",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2314,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 2315,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 2316,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/buffer-representation.js~BufferRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/buffer-representation.js~BufferRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 2317,
    "kind": "file",
    "name": "src/representation/cartoon-representation.js",
    "content": "/**\r\n * @file Cartoon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { Debug, Log, RepresentationRegistry } from '../globals.js'\r\nimport Spline from '../geometry/spline.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport TubeMeshBuffer from '../buffer/tubemesh-buffer.js'\r\n\r\n/**\r\n * Cartoon representation. Show a thick ribbon that\r\n * smoothly connecting backbone atoms in polymers.\r\n *\r\n * __Name:__ _cartoon_\r\n *\r\n * @example\r\n * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n *     o.addRepresentation( \"cartoon\" );\r\n *     o.autoView();\r\n * } );\r\n */\r\nclass CartoonRepresentation extends StructureRepresentation {\r\n  /**\r\n   * Create Cartoon representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {StructureRepresentationParameters} params - representation parameters\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'cartoon'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      aspectRatio: {\r\n        type: 'number', precision: 1, max: 10.0, min: 1.0\r\n      },\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      radialSegments: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      capped: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n    p.radius = defaults(p.radius, 'sstruc')\r\n    p.scale = defaults(p.scale, 0.7)\r\n\r\n    this.aspectRatio = defaults(p.aspectRatio, 5.0)\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.capped = defaults(p.capped, true)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n      this.radialSegments = 6\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: this.aspectRatio !== 1.0,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  getSpline (polymer) {\r\n    return new Spline(polymer, this.getSplineParams())\r\n  }\r\n\r\n  getScale (polymer) {\r\n    return polymer.isCg() ? this.scale * this.aspectRatio : this.scale\r\n  }\r\n\r\n  getAspectRatio (polymer) {\r\n    return polymer.isCg() ? 1.0 : this.aspectRatio\r\n  }\r\n\r\n  createData (sview) {\r\n    var bufferList = []\r\n    var polymerList = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var spline = this.getSpline(polymer)\r\n\r\n      var subPos = spline.getSubdividedPosition()\r\n      var subOri = spline.getSubdividedOrientation()\r\n      var subCol = spline.getSubdividedColor(this.getColorParams())\r\n      var subPick = spline.getSubdividedPicking()\r\n      var subSize = spline.getSubdividedSize(this.radius, this.getScale(polymer))\r\n\r\n      bufferList.push(\r\n        new TubeMeshBuffer(\r\n          Object.assign({}, subPos, subOri, subCol, subPick, subSize),\r\n          this.getBufferParams({\r\n            radialSegments: this.radialSegments,\r\n            aspectRatio: this.getAspectRatio(polymer),\r\n            capped: this.capped,\r\n            dullInterior: true\r\n          })\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    if (Debug) Log.time(this.type + ' repr update')\r\n\r\n    what = what || {}\r\n\r\n    for (var i = 0, il = data.polymerList.length; i < il; ++i) {\r\n      var bufferData = {}\r\n      var polymer = data.polymerList[ i ]\r\n      var spline = this.getSpline(polymer)\r\n\r\n      data.bufferList[ i ].aspectRatio = this.getAspectRatio(polymer)\r\n\r\n      if (what.position || what.radius) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        var subOri = spline.getSubdividedOrientation()\r\n        var subSize = spline.getSubdividedSize(this.radius, this.getScale(polymer))\r\n\r\n        bufferData.position = subPos.position\r\n        bufferData.normal = subOri.normal\r\n        bufferData.binormal = subOri.binormal\r\n        bufferData.tangent = subOri.tangent\r\n        bufferData.size = subSize.size\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        bufferData.color = subCol.color\r\n      }\r\n\r\n      if (what.picking) {\r\n        var subPick = spline.getSubdividedPicking()\r\n        bufferData.picking = subPick.picking\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd(this.type + ' repr update')\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.aspectRatio) {\r\n      what.radius = true\r\n    }\r\n\r\n    if (params && params.tension) {\r\n      what.position = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('cartoon', CartoonRepresentation)\r\n\r\nexport default CartoonRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/cartoon-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2318,
    "kind": "class",
    "name": "CartoonRepresentation",
    "memberof": "src/representation/cartoon-representation.js",
    "static": true,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/cartoon-representation.js",
    "importStyle": "CartoonRepresentation",
    "description": "Cartoon representation. Show a thick ribbon that\nsmoothly connecting backbone atoms in polymers.\n\n__Name:__ _cartoon_",
    "examples": [
      "stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    o.addRepresentation( \"cartoon\" );\n    o.autoView();\n} );"
    ],
    "lineNumber": 25,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2319,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#constructor",
    "access": "public",
    "description": "Create Cartoon representation object",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "StructureRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters"
      }
    ]
  },
  {
    "__docId__": 2320,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 2321,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2322,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 2323,
    "kind": "member",
    "name": "aspectRatio",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#aspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 2324,
    "kind": "member",
    "name": "tension",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#tension",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 2325,
    "kind": "member",
    "name": "capped",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#capped",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 2326,
    "kind": "member",
    "name": "smoothSheet",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#smoothSheet",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 2327,
    "kind": "member",
    "name": "subdiv",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#subdiv",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 2328,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#radialSegments",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 2332,
    "kind": "method",
    "name": "getSplineParams",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#getSplineParams",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 2333,
    "kind": "method",
    "name": "getSpline",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#getSpline",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 2334,
    "kind": "method",
    "name": "getScale",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#getScale",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 2335,
    "kind": "method",
    "name": "getAspectRatio",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#getAspectRatio",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true
  },
  {
    "__docId__": 2336,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 2337,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2338,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/cartoon-representation.js~CartoonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/cartoon-representation.js~CartoonRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 2339,
    "kind": "file",
    "name": "src/representation/contact-representation.js",
    "content": "/**\r\n * @file Contact Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { ContactPicker } from '../utils/picker.js'\r\nimport { calculateCenterArray } from '../math/array-utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport { polarContacts, polarBackboneContacts } from '../geometry/contact-utils.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Contact representation.\r\n */\r\nclass ContactRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'contact'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      contactType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'polar': 'polar',\r\n          'polarBackbone': 'polar backbone'\r\n        }\r\n      },\r\n      maxDistance: {\r\n        type: 'number', precision: 1, max: 10, min: 0.1, rebuild: true\r\n      },\r\n      maxAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      radialSegments: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.radius = defaults(p.radius, 0.25)\r\n\r\n    this.contactType = defaults(p.contactType, 'polarBackbone')\r\n    this.maxDistance = defaults(p.maxDistance, 3.5)\r\n    this.maxAngle = defaults(p.maxAngle, 40)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getContactData (sview) {\r\n    var contactsFnDict = {\r\n      'polar': polarContacts,\r\n      'polarBackbone': polarBackboneContacts\r\n    }\r\n\r\n    var contactData = contactsFnDict[ this.contactType ](\r\n      sview, this.maxDistance, this.maxAngle\r\n    )\r\n\r\n    return contactData\r\n  }\r\n\r\n  getBondData (sview, what, params) {\r\n    var bondData = sview.getBondData(this.getBondParams(what, params))\r\n    if (bondData.picking) {\r\n      bondData.picking = new ContactPicker(\r\n        bondData.picking.array,\r\n        bondData.picking.structure,\r\n        params.bondStore\r\n      )\r\n    }\r\n    return bondData\r\n  }\r\n\r\n  createData (sview) {\r\n    var contactData = this.getContactData(sview)\r\n\r\n    var cylinderBuffer = new CylinderBuffer(\r\n      this.getBondData(sview, undefined, {\r\n        bondSet: contactData.bondSet,\r\n        bondStore: contactData.bondStore\r\n      }),\r\n      this.getBufferParams({\r\n        openEnded: false,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ cylinderBuffer ],\r\n      bondSet: contactData.bondSet,\r\n      bondStore: contactData.bondStore\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    if (!what || what.position) {\r\n      var contactData = this.getContactData(data.sview)\r\n      data.bondSet = contactData.bondSet\r\n      data.bondStore = contactData.bondStore\r\n    }\r\n\r\n    var bondParams = {\r\n      bondSet: data.bondSet,\r\n      bondStore: data.bondStore\r\n    }\r\n\r\n    var bondData = this.getBondData(data.sview, what, bondParams)\r\n    var cylinderData = {}\r\n\r\n    if (!what || what.position) {\r\n      cylinderData.position = calculateCenterArray(\r\n        bondData.position1, bondData.position2\r\n      )\r\n      cylinderData.position1 = bondData.position1\r\n      cylinderData.position2 = bondData.position2\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      cylinderData.color = bondData.color\r\n      cylinderData.color2 = bondData.color2\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      cylinderData.radius = bondData.radius\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('contact', ContactRepresentation)\r\n\r\nexport default ContactRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/contact-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2340,
    "kind": "class",
    "name": "ContactRepresentation",
    "memberof": "src/representation/contact-representation.js",
    "static": true,
    "longname": "src/representation/contact-representation.js~ContactRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/contact-representation.js",
    "importStyle": "ContactRepresentation",
    "description": "Contact representation.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2341,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 2342,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2343,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 2344,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 2345,
    "kind": "member",
    "name": "contactType",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#contactType",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2346,
    "kind": "member",
    "name": "maxDistance",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#maxDistance",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2347,
    "kind": "member",
    "name": "maxAngle",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#maxAngle",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2348,
    "kind": "method",
    "name": "getContactData",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#getContactData",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2349,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 2350,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 2351,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/contact-representation.js~ContactRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/contact-representation.js~ContactRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 2352,
    "kind": "file",
    "name": "src/representation/dihedral-representation.js",
    "content": "/**\r\n * @fileOverview  Dihedral Representation\r\n * @private\r\n */\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport MeasurementRepresentation, { calcArcPoint, parseNestedAtoms } from './measurement-representation.js'\r\nimport { defaults } from '../utils.js'\r\n\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer.js'\r\nimport MeshBuffer from '../buffer/mesh-buffer.js'\r\nimport TextBuffer from '../buffer/text-buffer.js'\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js'\r\n\r\nimport { copyArray, uniformArray, uniformArray3 } from '../math/array-utils.js'\r\nimport { v3add, v3cross, v3dot, v3multiplyScalar, v3fromArray, v3length,\r\n  v3negate, v3new, v3normalize, v3sub, v3toArray } from '../math/vector-utils.js'\r\nimport { RAD2DEG } from '../math/math-constants.js'\r\n\r\n/**\r\n * @typedef {Object} DihedralRepresentationParameters - dihedral representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} atomQuad - list of quadruplets of selection strings\r\n *                               or atom indices\r\n * @property {Number} lineOpacity - Opacity for the line part of the representation\r\n * @property {Boolean} lineVisible - Display the line part of the representation\r\n * @property {Number} linewidth - width for line part of representation\r\n * @property {Boolean} planeVisible - Display the two planes corresponding to dihedral\r\n * @property {Boolean} sectorVisible - Display the filled arc for each angle\r\n */\r\n\r\n/**\r\n * Dihedral representation object\r\n *\r\n * Reperesentation consists of three parts, visibility can be set for each\r\n * label - text label indicating dihedral angle\r\n * line - line indicating four positions that define the dihedral\r\n * sector - filled arc section\r\n *\r\n * @param {Structure} structure - the structure to measure angles in\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {AngleRepresentationParameters} params - angle representation parameters\r\n */\r\nclass DihedralRepresentation extends MeasurementRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'dihedral'\r\n\r\n    this.parameters = Object.assign({\r\n      atomQuad: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      lineOpacity: {\r\n        type: 'range', min: 0.0, max: 1.0, step: 0.01\r\n      },\r\n      lineVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      linewidth: {\r\n        type: 'number', precision: 2, max: 10.0, min: 0.5\r\n      },\r\n      planeVisible: {\r\n        type: 'boolean', default: true\r\n      },\r\n      sectorVisible: {\r\n        type: 'boolean', default: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.side = defaults(p.side, 'double')\r\n    p.opacity = defaults(p.opacity, 0.5)\r\n\r\n    this.atomQuad = defaults(p.atomQuad, [])\r\n    this.lineOpacity = defaults(p.lineOpacity, 1.0)\r\n    this.lineVisible = defaults(p.lineVisible, true)\r\n    this.linewidth = defaults(p.linewidth, 2.0)\r\n    this.planeVisible = defaults(p.planeVisible, true)\r\n    this.sectorVisible = defaults(p.sectorVisible, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  create () {\r\n    if (this.structureView.atomCount === 0) return\r\n    const atomPosition = parseNestedAtoms(this.structureView, this.atomQuad)\r\n    const dihedralData = getDihedralData(\r\n      atomPosition,\r\n      {planeVisible: this.planeVisible}\r\n    )\r\n\r\n    const n = this.n = dihedralData.labelText.length\r\n\r\n    const labelColor = new Color(this.labelColor)\r\n\r\n    this.textBuffer = new TextBuffer({\r\n      position: dihedralData.labelPosition,\r\n      size: uniformArray(n, this.labelSize),\r\n      color: uniformArray3(n, labelColor.r, labelColor.g, labelColor.b),\r\n      text: dihedralData.labelText\r\n    }, this.getLabelBufferParams())\r\n\r\n    const c = new Color(this.colorValue)\r\n    this.lineLength = dihedralData.linePosition1.length / 3\r\n    const lineColor = uniformArray3(this.lineLength, c.r, c.g, c.b)\r\n\r\n    this.lineBuffer = new WideLineBuffer({\r\n      position1: dihedralData.linePosition1,\r\n      position2: dihedralData.linePosition2,\r\n      color: lineColor,\r\n      color2: lineColor\r\n    }, this.getBufferParams({\r\n      linewidth: this.linewidth,\r\n      visible: this.lineVisible,\r\n      opacity: this.lineOpacity\r\n    }))\r\n\r\n    this.planeLength = dihedralData.planePosition.length / 3\r\n    this.planeMeshBuffer = new MeshBuffer({\r\n      position: dihedralData.planePosition,\r\n      color: uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n    }, this.getBufferParams({\r\n      visible: this.planeVisible\r\n    }))\r\n\r\n    this.planeDoubleSidedBuffer = new DoubleSidedBuffer(this.planeMeshBuffer)\r\n\r\n    this.sectorLength = dihedralData.sectorPosition.length / 3\r\n    this.sectorMeshBuffer = new MeshBuffer({\r\n      position: dihedralData.sectorPosition,\r\n      color: uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    }, this.getBufferParams({\r\n      visible: this.sectorVisible\r\n    }))\r\n\r\n    this.sectorDoubleSidedBuffer = new DoubleSidedBuffer(this.sectorMeshBuffer)\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [\r\n        this.textBuffer,\r\n        this.lineBuffer,\r\n        this.planeDoubleSidedBuffer,\r\n        this.sectorDoubleSidedBuffer\r\n      ]\r\n    })\r\n  }\r\n\r\n  updateData (what, data) {\r\n    super.updateData(what, data)\r\n    const lineData = {}\r\n    const planeData = {}\r\n    const sectorData = {}\r\n\r\n    if (what.color) {\r\n      const c = new Color(this.colorValue)\r\n      lineData.color = lineData.color2 = uniformArray3(this.lineLength, c.r, c.g, c.b)\r\n      planeData.color = uniformArray3(this.planeLength, c.r, c.g, c.b)\r\n      sectorData.color = uniformArray3(this.sectorLength, c.r, c.g, c.b)\r\n    }\r\n\r\n    // if (what.sectorOpacity) {\r\n    //   this.sectorMeshBuffer.opacity = what.sectorOpacity\r\n    // }\r\n\r\n    this.lineBuffer.setAttributes(lineData)\r\n    this.planeMeshBuffer.setAttributes(planeData)\r\n    this.sectorMeshBuffer.setAttributes(sectorData)\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && (\r\n      params.lineVisible !== undefined ||\r\n      params.sectorVisible !== undefined)) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    if (params && params.lineOpacity) {\r\n      this.lineBuffer.setParameters(\r\n        {opacity: params.lineOpacity})\r\n    }\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.lineBuffer.setParameters(\r\n        {opacity: this.lineOpacity})\r\n    }\r\n\r\n    if (params && params.linewidth) {\r\n      this.lineBuffer.setParameters({ linewidth: params.linewidth })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value, noRenderRequest) {\r\n    super.setVisibility(value, true)\r\n\r\n    this.lineBuffer.setVisibility(this.lineVisible && this.visible)\r\n    this.sectorDoubleSidedBuffer.setVisibility(this.sectorVisible && this.visible)\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * Build the data required to create {Buffer} objects, given positions\r\n * @param  {Float32Array} atomPosition 3*4*nDihedral array of coordinates\r\n * @return {Object}              Arrays for building buffers\r\n */\r\nfunction getDihedralData (position, params) {\r\n  params = params || {}\r\n  const angleStep = defaults(params.angleStep, Math.PI / 90)\r\n  const nPos = position.length\r\n  const n = position.length / 12\r\n  const angles = new Float32Array(n)\r\n  const labelPosition = new Float32Array(n * 3)\r\n  const labelText = new Array(n)\r\n\r\n  // Temporary arrays as don't know output length yet\r\n  const lineTmp1 = new Array(n)\r\n  const lineTmp2 = new Array(n)\r\n  const sectorTmp = new Array(n)\r\n  const planeTmp = new Array(n)\r\n\r\n  // Eventual sizes of output arrays\r\n  let totalLines = 0\r\n  let totalSegments = 0\r\n  let totalPlanes = 0\r\n\r\n  const p1 = v3new()\r\n  const p2 = v3new()\r\n  const p3 = v3new()\r\n  const p4 = v3new()\r\n\r\n  const v21 = v3new()\r\n  const v23 = v3new()\r\n  const v34 = v3new()\r\n\r\n  const tmp = v3new()\r\n  const mid = v3new()\r\n  const inPlane1 = v3new()\r\n  const inPlane2 = v3new()\r\n  const start = v3new()\r\n  const end = v3new()\r\n\r\n  const cross = v3new()\r\n  const arcPoint = v3new()\r\n\r\n  let i = 0 // Actual output index (after skipping inappropriate)\r\n\r\n  for (var p = 0; p < nPos; p += 12) {\r\n    v3fromArray(p1, position, p)\r\n    v3fromArray(p2, position, p + 3)\r\n    v3fromArray(p3, position, p + 6)\r\n    v3fromArray(p4, position, p + 9)\r\n\r\n    v3sub(v21, p1, p2)\r\n    v3sub(v23, p3, p2)\r\n    if (v3length(v23) === 0.0) {\r\n      continue // Can't define axis\r\n    }\r\n\r\n    v3sub(v34, p4, p3)\r\n\r\n    v3multiplyScalar(tmp, v23, 0.5)\r\n    v3add(mid, p2, tmp)\r\n\r\n    v3normalize(v21, v21)\r\n    v3normalize(v23, v23)\r\n    v3normalize(v34, v34)\r\n\r\n    // Which side of plane are p1, p4?\r\n    v3sub(tmp, p1, mid)\r\n    const improperStart = v3dot(tmp, v23) > 0.0\r\n    v3sub(tmp, p4, mid)\r\n    const improperEnd = v3dot(tmp, v23) < 0.0\r\n\r\n    // Calculate vectors perp to v23 (lying in plane (1,2,3) and (2,3,4))\r\n    v3multiplyScalar(tmp, v23, v3dot(v23, v21))\r\n    v3sub(inPlane1, v21, tmp)\r\n\r\n    v3multiplyScalar(tmp, v23, v3dot(v23, v34))\r\n    v3sub(inPlane2, v34, tmp)\r\n\r\n    if (v3length(inPlane1) === 0.0 || v3length(inPlane2) === 0.0) {\r\n      continue // Indeterminate angle\r\n    }\r\n\r\n    v3normalize(inPlane1, inPlane1)\r\n    v3normalize(inPlane2, inPlane2)\r\n\r\n    // Can use acos as normalized and non-zero\r\n    const angle = angles[ i ] = Math.acos(v3dot(inPlane1, inPlane2))\r\n    labelText[ i ] = (RAD2DEG * angle).toFixed(1) + String.fromCharCode(0x00B0)\r\n\r\n    v3cross(cross, inPlane1, v23)\r\n    v3normalize(cross, cross)\r\n    if (v3dot(cross, inPlane2) < 0.0) {\r\n      v3negate(cross, cross) // Ensure cp faces correct way\r\n    }\r\n\r\n    calcArcPoint(tmp, mid, inPlane1, cross, angle / 2.0)\r\n    v3toArray(tmp, labelPosition, 3 * i)\r\n\r\n    const nSegments = Math.ceil(angle / angleStep)\r\n    const nLines = nSegments + 2\r\n\r\n    const line1 = new Float32Array(nLines * 3)\r\n    const line2 = new Float32Array(nLines * 3)\r\n    const sector = new Float32Array(nSegments * 9)\r\n    const plane = new Float32Array(36)\r\n\r\n    lineTmp1[ i ] = line1\r\n    lineTmp2[ i ] = line2\r\n    sectorTmp[ i ] = sector\r\n    planeTmp[ i ] = plane\r\n\r\n    // Start points for lines/planes depend on whether improper:\r\n    if (improperStart) { // We'll start on the v3->1 line (tmp)\r\n      v3sub(tmp, p1, p3)\r\n      v3normalize(tmp, tmp)\r\n      v3multiplyScalar(start, tmp, 1.0 / v3dot(inPlane1, tmp))\r\n      v3add(start, start, p3)\r\n    } else { // start on the 2->1 line\r\n      v3multiplyScalar(start, v21, 1.0 / v3dot(inPlane1, v21))\r\n      v3add(start, start, p2)\r\n    }\r\n\r\n    if (improperEnd) { // Finish on 2->4 line\r\n      v3sub(tmp, p4, p2)\r\n      v3normalize(tmp, tmp)\r\n      v3multiplyScalar(end, tmp, 1.0 / v3dot(inPlane2, tmp))\r\n      v3add(end, end, p2)\r\n    } else { // end on the 3->4 line\r\n      v3multiplyScalar(end, v34, 1.0 / v3dot(inPlane2, v34))\r\n      v3add(end, end, p3)\r\n    }\r\n\r\n    v3add(arcPoint, mid, inPlane1)\r\n\r\n    v3toArray(start, line1, 0)\r\n    v3toArray(arcPoint, line2, 0)\r\n\r\n    // Construct plane at start\r\n    v3toArray(start, plane, 0)\r\n    v3toArray(arcPoint, plane, 3)\r\n    v3toArray(improperStart ? p3 : p2, plane, 6)\r\n    v3toArray(improperStart ? p3 : p2, plane, 9)\r\n    v3toArray(arcPoint, plane, 12)\r\n    v3toArray(mid, plane, 15)\r\n\r\n    const appendArcSection = function (a, j) {\r\n      const si = j * 9\r\n      const ai = j * 3\r\n      v3toArray(mid, sector, si)\r\n      v3toArray(arcPoint, sector, si + 3)\r\n      v3toArray(arcPoint, line1, ai)\r\n\r\n      calcArcPoint(arcPoint, mid, inPlane1, cross, a)\r\n\r\n      v3toArray(arcPoint, sector, si + 6)\r\n      v3toArray(arcPoint, line2, ai)\r\n    }\r\n\r\n    let j = 0\r\n    for (let a = angleStep; a < angle; a += angleStep) {\r\n      appendArcSection(a, j++)\r\n    }\r\n    appendArcSection(angle, j++)\r\n\r\n    // Add final line: tmp vector holds the end point:\r\n    if (improperEnd) {\r\n      v3sub(tmp, p4, p2)\r\n      v3normalize(tmp, tmp)\r\n      v3add(tmp, tmp, p2)\r\n    } else {\r\n      v3add(tmp, p3, v34)\r\n    }\r\n    v3toArray(arcPoint, line1, j * 3)\r\n    v3toArray(tmp, line2, j * 3)\r\n\r\n    // Construc plane at end\r\n    v3toArray(end, plane, 18)\r\n    v3toArray(arcPoint, plane, 21)\r\n    v3toArray(improperEnd ? p2 : p3, plane, 24)\r\n    v3toArray(improperEnd ? p2 : p3, plane, 27)\r\n    v3toArray(arcPoint, plane, 30)\r\n    v3toArray(mid, plane, 33)\r\n\r\n    totalLines += nLines * 3\r\n    totalSegments += nSegments * 9\r\n    totalPlanes += 36\r\n    i += 1\r\n  }\r\n\r\n  const nSuccess = i\r\n\r\n  const linePosition1 = new Float32Array(totalLines)\r\n  const linePosition2 = new Float32Array(totalLines)\r\n  const sectorPosition = new Float32Array(totalSegments)\r\n  const planePosition = new Float32Array(totalPlanes)\r\n\r\n  let lineOffset = 0\r\n  let sectorOffset = 0\r\n  let planeOffset = 0\r\n\r\n  for (let i = 0; i < nSuccess; i++) {\r\n    const lp1 = lineTmp1[ i ]\r\n    const lp2 = lineTmp2[ i ]\r\n    const sp = sectorTmp[ i ]\r\n    const pp = planeTmp[ i ]\r\n\r\n    copyArray(lp1, linePosition1, 0, lineOffset, lp1.length)\r\n    copyArray(lp2, linePosition2, 0, lineOffset, lp2.length)\r\n    copyArray(sp, sectorPosition, 0, sectorOffset, sp.length)\r\n    copyArray(pp, planePosition, 0, planeOffset, pp.length)\r\n\r\n    lineOffset += lp1.length\r\n    sectorOffset += sp.length\r\n    planeOffset += pp.length\r\n  }\r\n\r\n  return {\r\n    labelPosition: labelPosition.subarray(0, nSuccess * 3),\r\n    labelText: labelText.slice(0, nSuccess),\r\n    linePosition1,\r\n    linePosition2,\r\n    planePosition,\r\n    sectorPosition\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('dihedral', DihedralRepresentation)\r\n\r\nexport default DihedralRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/dihedral-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2353,
    "kind": "function",
    "name": "getDihedralData",
    "memberof": "src/representation/dihedral-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/dihedral-representation.js~getDihedralData",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/dihedral-representation.js",
    "importStyle": null,
    "description": "Build the data required to create {Buffer} objects, given positions",
    "lineNumber": 226,
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomPosition",
        "description": "3*4*nDihedral array of coordinates"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Arrays for building buffers"
    },
    "ignore": true
  },
  {
    "__docId__": 2354,
    "kind": "typedef",
    "name": "DihedralRepresentationParameters",
    "memberof": "src/representation/dihedral-representation.js",
    "static": true,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentationParameters",
    "access": "public",
    "description": "",
    "unknown": [
      {
        "tagName": "@mixes",
        "tagValue": "RepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "StructureRepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "MeasurementRepresentationParameters"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "atomQuad",
        "description": "list of quadruplets of selection strings\n                              or atom indices"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineOpacity",
        "description": "Opacity for the line part of the representation"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "lineVisible",
        "description": "Display the line part of the representation"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "linewidth",
        "description": "width for line part of representation"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "planeVisible",
        "description": "Display the two planes corresponding to dihedral"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sectorVisible",
        "description": "Display the filled arc for each angle"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DihedralRepresentationParameters"
    }
  },
  {
    "__docId__": 2355,
    "kind": "class",
    "name": "DihedralRepresentation",
    "memberof": "src/representation/dihedral-representation.js",
    "static": true,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/dihedral-representation.js",
    "importStyle": "DihedralRepresentation",
    "description": "Dihedral representation object\n\nReperesentation consists of three parts, visibility can be set for each\nlabel - text label indicating dihedral angle\nline - line indicating four positions that define the dihedral\nsector - filled arc section",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to measure angles in"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "AngleRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "angle representation parameters"
      }
    ],
    "interface": false,
    "extends": [
      "src/representation/measurement-representation.js~MeasurementRepresentation"
    ]
  },
  {
    "__docId__": 2356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 2357,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2358,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2359,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 2360,
    "kind": "member",
    "name": "atomQuad",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#atomQuad",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 2361,
    "kind": "member",
    "name": "lineOpacity",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#lineOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 2362,
    "kind": "member",
    "name": "lineVisible",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#lineVisible",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 2363,
    "kind": "member",
    "name": "linewidth",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#linewidth",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 2364,
    "kind": "member",
    "name": "planeVisible",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#planeVisible",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 2365,
    "kind": "member",
    "name": "sectorVisible",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#sectorVisible",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 2366,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 2367,
    "kind": "member",
    "name": "textBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#textBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 2368,
    "kind": "member",
    "name": "lineLength",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#lineLength",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2369,
    "kind": "member",
    "name": "lineBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#lineBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 2370,
    "kind": "member",
    "name": "planeLength",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#planeLength",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 2371,
    "kind": "member",
    "name": "planeMeshBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#planeMeshBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true
  },
  {
    "__docId__": 2372,
    "kind": "member",
    "name": "planeDoubleSidedBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#planeDoubleSidedBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 2373,
    "kind": "member",
    "name": "sectorLength",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#sectorLength",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true
  },
  {
    "__docId__": 2374,
    "kind": "member",
    "name": "sectorMeshBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#sectorMeshBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true
  },
  {
    "__docId__": 2375,
    "kind": "member",
    "name": "sectorDoubleSidedBuffer",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#sectorDoubleSidedBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2376,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 2377,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true
  },
  {
    "__docId__": 2378,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/representation/dihedral-representation.js~DihedralRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dihedral-representation.js~DihedralRepresentation#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true
  },
  {
    "__docId__": 2379,
    "kind": "file",
    "name": "src/representation/distance-representation.js",
    "content": "/**\r\n * @file Distance Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { DistancePicker } from '../utils/picker.js'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils.js'\r\nimport BitArray from '../utils/bitarray.js'\r\nimport MeasurementRepresentation from './measurement-representation.js'\r\nimport Selection from '../selection/selection.js'\r\nimport BondStore from '../store/bond-store.js'\r\nimport TextBuffer from '../buffer/text-buffer.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Distance representation parameter object.\r\n * @typedef {Object} DistanceRepresentationParameters - distance representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n * @mixes MeasurementRepresentationParameters\r\n *\r\n * @property {String} labelUnit - distance unit (e.g. \"angstrom\" or \"nm\"). If set, a distance\r\n *                                symbol is appended to the label (i.e. 'nm' or '\\u00C5'). In case of 'nm', the\r\n *                                distance value is computed in nanometers instead of Angstroms.\r\n * @property {Array[]} atomPair - list of pairs of selection strings (see {@link Selection})\r\n *                                or pairs of atom indices. Using atom indices is much more\r\n *                                when the representation is updated often, e.g. by\r\n *                                changing the selection or the atom positions, as their\r\n *                                are no selection strings to be evaluated.\r\n * @property {Integer} radialSegments - cylinder quality (number of segments)\r\n * @property {Boolean} disableImpostor - disable use of raycasted impostors for rendering\r\n */\r\n\r\n/**\r\n * Distance representation\r\n */\r\nclass DistanceRepresentation extends MeasurementRepresentation {\r\n  /**\r\n   * Create Distance representation object\r\n   * @example\r\n   * stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\r\n   *     o.addRepresentation( \"cartoon\" );\r\n   *     // either give selections (uses first selected atom) ...\r\n   *     var atomPair = [ [ \"1.CA\", \"4.CA\" ], [ \"7.CA\", \"13.CA\" ] ];\r\n   *     // or atom indices\r\n   *     var atomPair = [ [ 8, 28 ], [ 173, 121 ] ];\r\n   *     o.addRepresentation( \"distance\", { atomPair: atomPair } );\r\n   *     stage.autoView();\r\n   * } );\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {DistanceRepresentationParameters} params - distance representation parameters\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'distance'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      labelUnit: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: { '': '', angstrom: 'angstrom', nm: 'nm' }\r\n      },\r\n      atomPair: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      radialSegments: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.radius = defaults(p.radius, 0.15)\r\n\r\n    this.labelUnit = defaults(p.labelUnit, '')\r\n    this.atomPair = defaults(p.atomPair, [])\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getDistanceData (sview, atomPair) {\r\n    var n = atomPair.length\r\n    var text = new Array(n)\r\n    var position = new Float32Array(n * 3)\r\n    var sele1 = new Selection()\r\n    var sele2 = new Selection()\r\n\r\n    var bondStore = new BondStore()\r\n\r\n    var ap1 = sview.getAtomProxy()\r\n    var ap2 = sview.getAtomProxy()\r\n\r\n    var j = 0\r\n\r\n    atomPair.forEach(function (pair, i) {\r\n      var v1 = pair[ 0 ]\r\n      var v2 = pair[ 1 ]\r\n\r\n      if (Number.isInteger(v1) && Number.isInteger(v2)) {\r\n        ap1.index = v1\r\n        ap2.index = v2\r\n      } else {\r\n        sele1.setString(v1)\r\n        sele2.setString(v2)\r\n\r\n        var atomIndices1 = sview.getAtomIndices(sele1)\r\n        var atomIndices2 = sview.getAtomIndices(sele2)\r\n\r\n        if (atomIndices1.length && atomIndices2.length) {\r\n          ap1.index = atomIndices1[ 0 ]\r\n          ap2.index = atomIndices2[ 0 ]\r\n        } else {\r\n          j += 1\r\n          return\r\n        }\r\n      }\r\n\r\n      bondStore.addBond(ap1, ap2, 1)\r\n\r\n      i -= j\r\n      var d = ap1.distanceTo(ap2)\r\n      switch (this.labelUnit) {\r\n        case 'angstrom':\r\n          text[ i ] = d.toFixed(2) + ' ' + String.fromCharCode(0x212B)\r\n          break\r\n        case 'nm':\r\n          text[ i ] = (d / 10).toFixed(2) + ' nm'\r\n          break\r\n        default:\r\n          text[ i ] = d.toFixed(2)\r\n          break\r\n      }\r\n\r\n      var i3 = i * 3\r\n      position[ i3 + 0 ] = (ap1.x + ap2.x) / 2\r\n      position[ i3 + 1 ] = (ap1.y + ap2.y) / 2\r\n      position[ i3 + 2 ] = (ap1.z + ap2.z) / 2\r\n    }, this)\r\n\r\n    if (j > 0) {\r\n      n -= j\r\n      position = position.subarray(0, n * 3)\r\n    }\r\n\r\n    var bondSet = new BitArray(bondStore.count, true)\r\n\r\n    return {\r\n      text: text,\r\n      position: position,\r\n      bondSet: bondSet,\r\n      bondStore: bondStore\r\n    }\r\n  }\r\n\r\n  getBondData (sview, what, params) {\r\n    var bondData = sview.getBondData(this.getBondParams(what, params))\r\n    if (bondData.picking) {\r\n      bondData.picking = new DistancePicker(\r\n        bondData.picking.array,\r\n        bondData.picking.structure,\r\n        params.bondStore\r\n      )\r\n    }\r\n    return bondData\r\n  }\r\n\r\n  create () {\r\n    if (this.structureView.atomCount === 0) return\r\n\r\n    var n = this.atomPair.length\r\n    if (n === 0) return\r\n\r\n    var distanceData = this.getDistanceData(this.structureView, this.atomPair)\r\n\r\n    var c = new Color(this.labelColor)\r\n\r\n    this.textBuffer = new TextBuffer(\r\n      {\r\n        position: distanceData.position,\r\n        size: uniformArray(n, this.labelSize),\r\n        color: uniformArray3(n, c.r, c.g, c.b),\r\n        text: distanceData.text\r\n      },\r\n      this.getLabelBufferParams()\r\n    )\r\n\r\n    var bondParams = {\r\n      bondSet: distanceData.bondSet,\r\n      bondStore: distanceData.bondStore\r\n    }\r\n\r\n    var bondData = this.getBondData(this.structureView, undefined, bondParams)\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      bondData,\r\n      this.getBufferParams({\r\n        openEnded: false,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bondSet: distanceData.bondSet,\r\n      bondStore: distanceData.bondStore,\r\n      position: distanceData.position,\r\n      bufferList: [ this.textBuffer, this.cylinderBuffer ]\r\n    })\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var bondParams = {\r\n      bondSet: data.bondSet,\r\n      bondStore: data.bondStore\r\n    }\r\n\r\n    var bondData = this.getBondData(data.sview, what, bondParams)\r\n    var cylinderData = {}\r\n    var textData = {}\r\n    var n = this.atomPair.length\r\n\r\n    if (what.labelSize) {\r\n      textData.size = uniformArray(n, this.labelSize)\r\n    }\r\n\r\n    if (what.labelColor) {\r\n      var c = new Color(this.labelColor)\r\n      textData.color = uniformArray3(n, c.r, c.g, c.b)\r\n    }\r\n\r\n    if (what.color) {\r\n      cylinderData.color = bondData.color\r\n      cylinderData.color2 = bondData.color2\r\n    }\r\n\r\n    if (what.radius || what.scale) {\r\n      cylinderData.radius = bondData.radius\r\n    }\r\n\r\n    this.textBuffer.setAttributes(textData)\r\n    this.cylinderBuffer.setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('distance', DistanceRepresentation)\r\n\r\nexport default DistanceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/distance-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2380,
    "kind": "typedef",
    "name": "DistanceRepresentationParameters",
    "memberof": "src/representation/distance-representation.js",
    "static": true,
    "longname": "src/representation/distance-representation.js~DistanceRepresentationParameters",
    "access": "public",
    "description": "Distance representation parameter object.",
    "unknown": [
      {
        "tagName": "@mixes",
        "tagValue": "RepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "StructureRepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "MeasurementRepresentationParameters"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "labelUnit",
        "description": "distance unit (e.g. \"angstrom\" or \"nm\"). If set, a distance\n                               symbol is appended to the label (i.e. 'nm' or '\\u00C5'). In case of 'nm', the\n                               distance value is computed in nanometers instead of Angstroms."
      },
      {
        "nullable": null,
        "types": [
          "Array[]"
        ],
        "spread": false,
        "optional": false,
        "name": "atomPair",
        "description": "list of pairs of selection strings (see {@link Selection})\n                               or pairs of atom indices. Using atom indices is much more\n                               when the representation is updated often, e.g. by\n                               changing the selection or the atom positions, as their\n                               are no selection strings to be evaluated."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "radialSegments",
        "description": "cylinder quality (number of segments)"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "disableImpostor",
        "description": "disable use of raycasted impostors for rendering"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DistanceRepresentationParameters"
    }
  },
  {
    "__docId__": 2381,
    "kind": "class",
    "name": "DistanceRepresentation",
    "memberof": "src/representation/distance-representation.js",
    "static": true,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/distance-representation.js",
    "importStyle": "DistanceRepresentation",
    "description": "Distance representation",
    "lineNumber": 42,
    "interface": false,
    "extends": [
      "src/representation/measurement-representation.js~MeasurementRepresentation"
    ]
  },
  {
    "__docId__": 2382,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#constructor",
    "access": "public",
    "description": "Create Distance representation object",
    "examples": [
      "stage.loadFile( \"rcsb://1crn\" ).then( function( o ){\n    o.addRepresentation( \"cartoon\" );\n    // either give selections (uses first selected atom) ...\n    var atomPair = [ [ \"1.CA\", \"4.CA\" ], [ \"7.CA\", \"13.CA\" ] ];\n    // or atom indices\n    var atomPair = [ [ 8, 28 ], [ 173, 121 ] ];\n    o.addRepresentation( \"distance\", { atomPair: atomPair } );\n    stage.autoView();\n} );"
    ],
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "DistanceRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "distance representation parameters"
      }
    ]
  },
  {
    "__docId__": 2383,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2384,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 2385,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 2386,
    "kind": "member",
    "name": "labelUnit",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#labelUnit",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 2387,
    "kind": "member",
    "name": "atomPair",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#atomPair",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 2388,
    "kind": "method",
    "name": "getDistanceData",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#getDistanceData",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 2389,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 2390,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 2391,
    "kind": "member",
    "name": "textBuffer",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#textBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 2392,
    "kind": "member",
    "name": "cylinderBuffer",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#cylinderBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 205,
    "undocument": true
  },
  {
    "__docId__": 2393,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/distance-representation.js~DistanceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/distance-representation.js~DistanceRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true
  },
  {
    "__docId__": 2394,
    "kind": "file",
    "name": "src/representation/dot-representation.js",
    "content": "/**\r\n * @file Dot Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ExtensionFragDepth } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Representation from './representation.js'\r\nimport Volume from '../surface/volume.js'\r\nimport FilteredVolume from '../surface/filtered-volume.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport PointBuffer from '../buffer/point-buffer.js'\r\n\r\n/**\r\n * Dot representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} DotRepresentationParameters - dot representation parameters\r\n *\r\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\r\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\r\n * @property {Number} thresholdOut - Show only values falling outside of the treshold minumum and maximum. For volume data only.\r\n */\r\n\r\n/**\r\n * Dot representation\r\n */\r\nclass DotRepresentation extends Representation {\r\n  /**\r\n   * Create Dot representation object\r\n   * @param {Surface|Volume} surface - the surface or volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {DotRepresentationParameters} params - dot representation parameters\r\n   */\r\n  constructor (surface, viewer, params) {\r\n    super(surface, viewer, params)\r\n\r\n    this.type = 'dot'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      thresholdType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      thresholdMin: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdMax: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdOut: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      dotType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          '': '',\r\n          'sphere': 'sphere',\r\n          'point': 'point'\r\n        }\r\n      },\r\n      radiusType: {\r\n        type: 'select',\r\n        options: {\r\n          '': '',\r\n          'value': 'value',\r\n          'abs-value': 'abs-value',\r\n          'value-min': 'value-min',\r\n          'deviation': 'deviation',\r\n          'size': 'size'\r\n        }\r\n      },\r\n      radius: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001, property: 'size'\r\n      },\r\n      scale: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      disableImpostor: true,\r\n\r\n      pointSize: {\r\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      sizeAttenuation: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      sortParticles: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useTexture: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      alphaTest: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      },\r\n      forceTransparent: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      edgeBleach: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      colorScheme: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: {\r\n          '': '',\r\n          'value': 'value',\r\n          'uniform': 'uniform',\r\n          'random': 'random'\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n    if (surface instanceof Volume) {\r\n      this.surface = undefined\r\n      this.volume = new FilteredVolume(surface)\r\n    } else {\r\n      this.surface = surface\r\n      this.volume = undefined\r\n    }\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, 2.0)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.thresholdOut = defaults(p.thresholdOut, false)\r\n    this.dotType = defaults(p.dotType, 'point')\r\n    this.radius = defaults(p.radius, 0.1)\r\n    this.scale = defaults(p.scale, 1.0)\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\r\n    this.sortParticles = defaults(p.sortParticles, false)\r\n    this.useTexture = defaults(p.useTexture, false)\r\n    this.alphaTest = defaults(p.alphaTest, 0.5)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\r\n\r\n    super.init(p)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  create () {\r\n    var dotData = {}\r\n\r\n    if (this.volume) {\r\n      var volume = this.volume\r\n      var thresholdMin, thresholdMax\r\n\r\n      if (this.thresholdType === 'sigma') {\r\n        thresholdMin = volume.getValueForSigma(this.thresholdMin)\r\n        thresholdMax = volume.getValueForSigma(this.thresholdMax)\r\n      } else {\r\n        thresholdMin = this.thresholdMin\r\n        thresholdMax = this.thresholdMax\r\n      }\r\n      volume.setFilter(thresholdMin, thresholdMax, this.thresholdOut)\r\n\r\n      dotData.position = volume.getDataPosition()\r\n      dotData.color = volume.getDataColor(this.getColorParams())\r\n      if (this.dotType === 'sphere') {\r\n        dotData.radius = volume.getDataSize(this.radius, this.scale)\r\n        dotData.picking = volume.getDataPicking()\r\n      }\r\n    } else {\r\n      var surface = this.surface\r\n      dotData.position = surface.getPosition()\r\n      dotData.color = surface.getColor(this.getColorParams())\r\n      if (this.dotType === 'sphere') {\r\n        dotData.radius = surface.getSize(this.radius, this.scale)\r\n        dotData.picking = surface.getPicking()\r\n      }\r\n    }\r\n\r\n    if (this.dotType === 'sphere') {\r\n      this.dotBuffer = new SphereBuffer(\r\n        dotData,\r\n        this.getBufferParams({\r\n          sphereDetail: this.sphereDetail,\r\n          disableImpostor: this.disableImpostor,\r\n          dullInterior: false\r\n        })\r\n      )\r\n    } else {\r\n      this.dotBuffer = new PointBuffer(\r\n        dotData,\r\n        this.getBufferParams({\r\n          pointSize: this.pointSize,\r\n          sizeAttenuation: this.sizeAttenuation,\r\n          sortParticles: this.sortParticles,\r\n          useTexture: this.useTexture,\r\n          alphaTest: this.alphaTest,\r\n          forceTransparent: this.forceTransparent,\r\n          edgeBleach: this.edgeBleach\r\n        })\r\n      )\r\n    }\r\n\r\n    this.bufferList.push(this.dotBuffer)\r\n  }\r\n\r\n  update (what) {\r\n    if (this.bufferList.length === 0) return\r\n\r\n    what = what || {}\r\n\r\n    var dotData = {}\r\n\r\n    if (what.color) {\r\n      if (this.volume) {\r\n        dotData.color = this.volume.getDataColor(\r\n          this.getColorParams()\r\n        )\r\n      } else {\r\n        dotData.color = this.surface.getColor(\r\n          this.getColorParams()\r\n        )\r\n      }\r\n    }\r\n\r\n    if (this.dotType === 'sphere' && (what.radius || what.scale)) {\r\n      if (this.volume) {\r\n        dotData.radius = this.volume.getDataSize(\r\n          this.radius, this.scale\r\n        )\r\n      } else {\r\n        dotData.radius = this.surface.getSize(\r\n          this.radius, this.scale\r\n        )\r\n      }\r\n    }\r\n\r\n    this.dotBuffer.setAttributes(dotData)\r\n  }\r\n\r\n  setParameters (params, what, rebuild) {\r\n    what = what || {}\r\n\r\n    if (params && params.thresholdType !== undefined &&\r\n        this.volume instanceof Volume\r\n    ) {\r\n      if (this.thresholdType === 'value' &&\r\n          params.thresholdType === 'sigma'\r\n      ) {\r\n        this.thresholdMin = this.volume.getSigmaForValue(\r\n          this.thresholdMin\r\n        )\r\n        this.thresholdMax = this.volume.getSigmaForValue(\r\n          this.thresholdMax\r\n        )\r\n      } else if (this.thresholdType === 'sigma' &&\r\n                 params.thresholdType === 'value'\r\n      ) {\r\n        this.thresholdMin = this.volume.getValueForSigma(\r\n          this.thresholdMin\r\n        )\r\n        this.thresholdMax = this.volume.getValueForSigma(\r\n          this.thresholdMax\r\n        )\r\n      }\r\n\r\n      this.thresholdType = params.thresholdType\r\n    }\r\n\r\n    if (params && params.radiusType !== undefined) {\r\n      if (params.radiusType === 'radius') {\r\n        this.radius = 0.1\r\n      } else {\r\n        this.radius = params.radiusType\r\n      }\r\n      what.radius = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.radius !== undefined) {\r\n      what.radius = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.scale !== undefined) {\r\n      what.scale = true\r\n      if (this.dotType === 'sphere' &&\r\n          (!ExtensionFragDepth || this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nexport default DotRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/dot-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2395,
    "kind": "typedef",
    "name": "DotRepresentationParameters",
    "memberof": "src/representation/dot-representation.js",
    "static": true,
    "longname": "src/representation/dot-representation.js~DotRepresentationParameters",
    "access": "public",
    "description": "Dot representation parameter object. Extends {@link RepresentationParameters}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdType",
        "description": "Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdMin",
        "description": "Minimum value to be displayed. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdMax",
        "description": "Maximum value to be displayed. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdOut",
        "description": "Show only values falling outside of the treshold minumum and maximum. For volume data only."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "DotRepresentationParameters"
    }
  },
  {
    "__docId__": 2396,
    "kind": "class",
    "name": "DotRepresentation",
    "memberof": "src/representation/dot-representation.js",
    "static": true,
    "longname": "src/representation/dot-representation.js~DotRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/dot-representation.js",
    "importStyle": "DotRepresentation",
    "description": "Dot representation",
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "src/representation/representation.js~Representation"
    ]
  },
  {
    "__docId__": 2397,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#constructor",
    "access": "public",
    "description": "Create Dot representation object",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Surface",
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "surface",
        "description": "the surface or volume to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "DotRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "dot representation parameters"
      }
    ]
  },
  {
    "__docId__": 2398,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 2399,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 2400,
    "kind": "member",
    "name": "surface",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#surface",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 2401,
    "kind": "member",
    "name": "volume",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#volume",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 2404,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 2405,
    "kind": "member",
    "name": "thresholdType",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#thresholdType",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true
  },
  {
    "__docId__": 2406,
    "kind": "member",
    "name": "thresholdMin",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#thresholdMin",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true
  },
  {
    "__docId__": 2407,
    "kind": "member",
    "name": "thresholdMax",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#thresholdMax",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 2408,
    "kind": "member",
    "name": "thresholdOut",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#thresholdOut",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 2409,
    "kind": "member",
    "name": "dotType",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#dotType",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2410,
    "kind": "member",
    "name": "radius",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#radius",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 2411,
    "kind": "member",
    "name": "scale",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#scale",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 2412,
    "kind": "member",
    "name": "pointSize",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#pointSize",
    "access": "public",
    "description": null,
    "lineNumber": 149,
    "undocument": true
  },
  {
    "__docId__": 2413,
    "kind": "member",
    "name": "sizeAttenuation",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#sizeAttenuation",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "undocument": true
  },
  {
    "__docId__": 2414,
    "kind": "member",
    "name": "sortParticles",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#sortParticles",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 2415,
    "kind": "member",
    "name": "useTexture",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#useTexture",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 2416,
    "kind": "member",
    "name": "alphaTest",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#alphaTest",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true
  },
  {
    "__docId__": 2417,
    "kind": "member",
    "name": "forceTransparent",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#forceTransparent",
    "access": "public",
    "description": null,
    "lineNumber": 154,
    "undocument": true
  },
  {
    "__docId__": 2418,
    "kind": "member",
    "name": "edgeBleach",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#edgeBleach",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true
  },
  {
    "__docId__": 2419,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true
  },
  {
    "__docId__": 2420,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true
  },
  {
    "__docId__": 2421,
    "kind": "member",
    "name": "dotBuffer",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#dotBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 204,
    "undocument": true
  },
  {
    "__docId__": 2423,
    "kind": "method",
    "name": "update",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#update",
    "access": "public",
    "description": null,
    "lineNumber": 230,
    "undocument": true
  },
  {
    "__docId__": 2424,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/dot-representation.js~DotRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/dot-representation.js~DotRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 264,
    "undocument": true
  },
  {
    "__docId__": 2432,
    "kind": "file",
    "name": "src/representation/helixorient-representation.js",
    "content": "/**\r\n * @file Helixorient Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Helixorient from '../geometry/helixorient.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport VectorBuffer from '../buffer/vector-buffer.js'\r\n\r\n/**\r\n * Helixorient Representation\r\n */\r\nclass HelixorientRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'helixorient'\r\n\r\n    this.parameters = Object.assign({\r\n      sphereDetail: true,\r\n      disableImpostor: true\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\r\n    p.radius = defaults(p.radius, 0.15)\r\n    p.scale = defaults(p.scale, 1.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    var bufferList = []\r\n    var polymerList = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var helixorient = new Helixorient(polymer)\r\n      var position = helixorient.getPosition()\r\n      var color = helixorient.getColor(this.getColorParams())\r\n      var size = helixorient.getSize(this.radius, this.scale)\r\n      var picking = helixorient.getPicking()\r\n\r\n      bufferList.push(\r\n        new SphereBuffer(\r\n          {\r\n            position: position.center,\r\n            color: color.color,\r\n            radius: size.size,\r\n            picking: picking.picking\r\n          },\r\n            this.getBufferParams({\r\n              sphereDetail: this.sphereDetail,\r\n              disableImpostor: this.disableImpostor,\r\n              dullInterior: true\r\n            })\r\n        ),\r\n        new VectorBuffer(\r\n          {\r\n            position: position.center,\r\n            vector: position.axis\r\n          },\r\n            this.getBufferParams({\r\n              color: 'skyblue',\r\n              scale: 1\r\n            })\r\n        ),\r\n        new VectorBuffer(\r\n          {\r\n            position: position.center,\r\n            vector: position.resdir\r\n          },\r\n            this.getBufferParams({\r\n              color: 'lightgreen',\r\n              scale: 1\r\n            })\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    if (Debug) Log.time(this.type + ' repr update')\r\n\r\n    what = what || {}\r\n\r\n    for (var i = 0, il = data.polymerList.length; i < il; ++i) {\r\n      var j = i * 3\r\n\r\n      var bufferData = {}\r\n      var polymer = data.polymerList[ i ]\r\n      var helixorient = new Helixorient(polymer)\r\n\r\n      if (what.position) {\r\n        var position = helixorient.getPosition()\r\n\r\n        bufferData.position = position.center\r\n\r\n        data.bufferList[ j + 1 ].setAttributes({\r\n          'position': position.center,\r\n          'vector': position.axis\r\n        })\r\n        data.bufferList[ j + 2 ].setAttributes({\r\n          'position': position.center,\r\n          'vector': position.resdir\r\n        })\r\n      }\r\n\r\n      data.bufferList[ j ].setAttributes(bufferData)\r\n    }\r\n\r\n    if (Debug) Log.timeEnd(this.type + ' repr update')\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('helixorient', HelixorientRepresentation)\r\n\r\nexport default HelixorientRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/helixorient-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2433,
    "kind": "class",
    "name": "HelixorientRepresentation",
    "memberof": "src/representation/helixorient-representation.js",
    "static": true,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/helixorient-representation.js",
    "importStyle": "HelixorientRepresentation",
    "description": "Helixorient Representation",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2434,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2435,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2436,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2437,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 2438,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2439,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/helixorient-representation.js~HelixorientRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/helixorient-representation.js~HelixorientRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 2440,
    "kind": "file",
    "name": "src/representation/hyperball-representation.js",
    "content": "/**\r\n * @file Hyperball Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { calculateCenterArray } from '../math/array-utils.js'\r\nimport LicoriceRepresentation from './licorice-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport HyperballStickBuffer from '../buffer/hyperballstick-buffer.js'\r\n\r\n/**\r\n * Hyperball Representation\r\n */\r\nclass HyperballRepresentation extends LicoriceRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'hyperball'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      shrink: {\r\n        type: 'number', precision: 3, max: 1.0, min: 0.001, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      multipleBond: null,\r\n      bondSpacing: null\r\n\r\n    })\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.scale = defaults(p.scale, 0.2)\r\n    p.radius = defaults(p.radius, 'vdw')\r\n\r\n    this.shrink = defaults(p.shrink, 0.12)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getBondParams (what, params) {\r\n    if (!what || what.radius) {\r\n      params = Object.assign({ radius2: true }, params)\r\n    }\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  createData (sview) {\r\n    var sphereBuffer = new SphereBuffer(\r\n      sview.getAtomData(this.getAtomParams()),\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.__center = new Float32Array(sview.bondCount * 3)\r\n\r\n    var stickBuffer = new HyperballStickBuffer(\r\n      sview.getBondData(this.getBondParams()),\r\n      this.getBufferParams({\r\n        shrink: this.shrink,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ sphereBuffer, stickBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var atomData = data.sview.getAtomData(this.getAtomParams())\r\n    var bondData = data.sview.getBondData(this.getBondParams())\r\n    var sphereData = {}\r\n    var stickData = {}\r\n\r\n    if (!what || what.position) {\r\n      sphereData.position = atomData.position\r\n      var from = bondData.position1\r\n      var to = bondData.position2\r\n      stickData.position = calculateCenterArray(from, to, this.__center)\r\n      stickData.position1 = from\r\n      stickData.position2 = to\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      sphereData.color = atomData.color\r\n      stickData.color = bondData.color\r\n      stickData.color2 = bondData.color2\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      sphereData.radius = atomData.radius\r\n      stickData.radius = bondData.radius\r\n      stickData.radius2 = bondData.radius2\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(sphereData)\r\n    data.bufferList[ 1 ].setAttributes(stickData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('hyperball', HyperballRepresentation)\r\n\r\nexport default HyperballRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/hyperball-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2441,
    "kind": "class",
    "name": "HyperballRepresentation",
    "memberof": "src/representation/hyperball-representation.js",
    "static": true,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/hyperball-representation.js",
    "importStyle": "HyperballRepresentation",
    "description": "Hyperball Representation",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/representation/licorice-representation.js~LicoriceRepresentation"
    ]
  },
  {
    "__docId__": 2442,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2443,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2444,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2445,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2446,
    "kind": "member",
    "name": "shrink",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#shrink",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 2447,
    "kind": "method",
    "name": "getBondParams",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#getBondParams",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 2448,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 2449,
    "kind": "member",
    "name": "__center",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#__center",
    "access": "private",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 2450,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/hyperball-representation.js~HyperballRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/hyperball-representation.js~HyperballRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 2451,
    "kind": "file",
    "name": "src/representation/label-representation.js",
    "content": "/**\r\n * @file Label Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Browser, RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport LabelFactory from '../utils/label-factory.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport TextBuffer from '../buffer/text-buffer.js'\r\n\r\n/**\r\n * Label representation parameter object. Extends {@link RepresentationParameters} and\r\n * {@link StructureRepresentationParameters}.\r\n *\r\n * @typedef {Object} LabelRepresentationParameters - label representation parameters\r\n *\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Float} opacity - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {String} labelType - type of the label, one of:\r\n *                                 \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\r\n *                                 \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\r\n *                                 \"res\", \"text\", \"qualified\". When set to \"text\", the\r\n *                                 `labelText` list is used.\r\n * @property {String[]} labelText - list of label strings, must set `labelType` to \"text\"\r\n *                                   to take effect\r\n * @property {String} fontFamily - font family, one of: \"sans-serif\", \"monospace\", \"serif\"\r\n * @property {String} fontStyle - font style, \"normal\" or \"italic\"\r\n * @property {String} fontWeight - font weight, \"normal\" or \"bold\"\r\n * @property {Boolean} sdf - use \"signed distance field\"-based rendering for sharper edges\r\n * @property {Float} xOffset - offset in x-direction\r\n * @property {Float} yOffset - offset in y-direction\r\n * @property {Float} zOffset - offset in z-direction (i.e. in camera direction)\r\n * @property {String} attachment - attachment of the label, one of:\r\n *                                 \"bottom-left\", \"bottom-center\", \"bottom-right\",\r\n *                                 \"middle-left\", \"middle-center\", \"middle-right\",\r\n *                                 \"top-left\", \"top-center\", \"top-right\"\r\n * @property {Boolean} showBorder - show border/outline\r\n * @property {Color} borderColor - color of the border/outline\r\n * @property {Float} borderWidth - width of the border/outline\r\n * @property {Boolean} showBackground - show background rectangle\r\n * @property {Color} backgroundColor - color of the background\r\n * @property {Float} backgroundMargin - width of the background\r\n * @property {Float} backgroundOpacity - opacity of the background\r\n */\r\n\r\n/**\r\n * Label representation\r\n */\r\nclass LabelRepresentation extends StructureRepresentation {\r\n  /**\r\n   * Create Label representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {LabelRepresentationParameters} params - label representation parameters\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'label'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      labelType: {\r\n        type: 'select', options: LabelFactory.types, rebuild: true\r\n      },\r\n      labelText: {\r\n        type: 'hidden', rebuild: true\r\n      },\r\n      fontFamily: {\r\n        type: 'select',\r\n        options: {\r\n          'sans-serif': 'sans-serif',\r\n          'monospace': 'monospace',\r\n          'serif': 'serif'\r\n        },\r\n        buffer: true\r\n      },\r\n      fontStyle: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'italic': 'italic'\r\n        },\r\n        buffer: true\r\n      },\r\n      fontWeight: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'bold': 'bold'\r\n        },\r\n        buffer: true\r\n      },\r\n      sdf: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      xOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      yOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      zOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: true\r\n      },\r\n      attachment: {\r\n        type: 'select',\r\n        options: {\r\n          'bottom-left': 'bottom-left',\r\n          'bottom-center': 'bottom-center',\r\n          'bottom-right': 'bottom-right',\r\n          'middle-left': 'middle-left',\r\n          'middle-center': 'middle-center',\r\n          'middle-right': 'middle-right',\r\n          'top-left': 'top-left',\r\n          'top-center': 'top-center',\r\n          'top-right': 'top-right'\r\n        },\r\n        rebuild: true\r\n      },\r\n      showBorder: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      borderColor: {\r\n        type: 'color', buffer: true\r\n      },\r\n      borderWidth: {\r\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: true\r\n      },\r\n      showBackground: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      backgroundColor: {\r\n        type: 'color', buffer: true\r\n      },\r\n      backgroundMargin: {\r\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n      },\r\n      backgroundOpacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      side: null,\r\n      flatShaded: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n\r\n      roughness: null,\r\n      metalness: null,\r\n      diffuse: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n\r\n    this.labelType = defaults(p.labelType, 'res')\r\n    this.labelText = defaults(p.labelText, {})\r\n    this.fontFamily = defaults(p.fontFamily, 'sans-serif')\r\n    this.fontStyle = defaults(p.fontStyle, 'normal')\r\n    this.fontWeight = defaults(p.fontWeight, 'bold')\r\n    this.sdf = defaults(p.sdf, Browser === 'Chrome')\r\n    this.xOffset = defaults(p.xOffset, 0.0)\r\n    this.yOffset = defaults(p.yOffset, 0.0)\r\n    this.zOffset = defaults(p.zOffset, 0.5)\r\n    this.attachment = defaults(p.attachment, 'bottom-left')\r\n    this.showBorder = defaults(p.showBorder, false)\r\n    this.borderColor = defaults(p.borderColor, 'lightgrey')\r\n    this.borderWidth = defaults(p.borderWidth, 0.15)\r\n    this.showBackground = defaults(p.showBackground, false)\r\n    this.backgroundColor = defaults(p.backgroundColor, 'lightgrey')\r\n    this.backgroundMargin = defaults(p.backgroundMargin, 0.5)\r\n    this.backgroundOpacity = defaults(p.backgroundOpacity, 1.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    var what = { position: true, color: true, radius: true }\r\n    var atomData = sview.getAtomData(this.getAtomParams(what))\r\n\r\n    var text = []\r\n    var labelFactory = new LabelFactory(\r\n      this.labelType, this.labelText\r\n    )\r\n    sview.eachAtom(function (ap) {\r\n      text.push(labelFactory.atomLabel(ap))\r\n    })\r\n\r\n    var textBuffer = new TextBuffer(\r\n      {\r\n        position: atomData.position,\r\n        size: atomData.radius,\r\n        color: atomData.color,\r\n        text\r\n      },\r\n      this.getBufferParams({\r\n        fontFamily: this.fontFamily,\r\n        fontStyle: this.fontStyle,\r\n        fontWeight: this.fontWeight,\r\n        sdf: this.sdf,\r\n        xOffset: this.xOffset,\r\n        yOffset: this.yOffset,\r\n        zOffset: this.zOffset,\r\n        attachment: this.attachment,\r\n        showBorder: this.showBorder,\r\n        borderColor: this.borderColor,\r\n        borderWidth: this.borderWidth,\r\n        showBackground: this.showBackground,\r\n        backgroundColor: this.backgroundColor,\r\n        backgroundMargin: this.backgroundMargin,\r\n        backgroundOpacity: this.backgroundOpacity\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ textBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var atomData = data.sview.getAtomData(this.getAtomParams(what))\r\n    var textData = {}\r\n\r\n    if (!what || what.position) {\r\n      textData.position = atomData.position\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      textData.size = atomData.radius\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      textData.color = atomData.color\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(textData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('label', LabelRepresentation)\r\n\r\nexport default LabelRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/label-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2452,
    "kind": "typedef",
    "name": "LabelRepresentationParameters",
    "memberof": "src/representation/label-representation.js",
    "static": true,
    "longname": "src/representation/label-representation.js~LabelRepresentationParameters",
    "access": "public",
    "description": "Label representation parameter object. Extends {@link RepresentationParameters} and\n{@link StructureRepresentationParameters}.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "clipNear",
        "description": "position of camera near/front clipping plane\n                               in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "translucency: 1 is fully opaque, 0 is fully transparent"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "labelType",
        "description": "type of the label, one of:\n                                \"atomname\", \"atomindex\", \"occupancy\", \"bfactor\",\n                                \"serial\", \"element\", \"atom\", \"resname\", \"resno\",\n                                \"res\", \"text\", \"qualified\". When set to \"text\", the\n                                `labelText` list is used."
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "labelText",
        "description": "list of label strings, must set `labelType` to \"text\"\n                                  to take effect"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontFamily",
        "description": "font family, one of: \"sans-serif\", \"monospace\", \"serif\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontStyle",
        "description": "font style, \"normal\" or \"italic\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "fontWeight",
        "description": "font weight, \"normal\" or \"bold\""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sdf",
        "description": "use \"signed distance field\"-based rendering for sharper edges"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "xOffset",
        "description": "offset in x-direction"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "yOffset",
        "description": "offset in y-direction"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "zOffset",
        "description": "offset in z-direction (i.e. in camera direction)"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "attachment",
        "description": "attachment of the label, one of:\n                                \"bottom-left\", \"bottom-center\", \"bottom-right\",\n                                \"middle-left\", \"middle-center\", \"middle-right\",\n                                \"top-left\", \"top-center\", \"top-right\""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "showBorder",
        "description": "show border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "borderColor",
        "description": "color of the border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "borderWidth",
        "description": "width of the border/outline"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "showBackground",
        "description": "show background rectangle"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundColor",
        "description": "color of the background"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundMargin",
        "description": "width of the background"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundOpacity",
        "description": "opacity of the background"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "LabelRepresentationParameters"
    }
  },
  {
    "__docId__": 2453,
    "kind": "class",
    "name": "LabelRepresentation",
    "memberof": "src/representation/label-representation.js",
    "static": true,
    "longname": "src/representation/label-representation.js~LabelRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/label-representation.js",
    "importStyle": "LabelRepresentation",
    "description": "Label representation",
    "lineNumber": 52,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2454,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#constructor",
    "access": "public",
    "description": "Create Label representation object",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "LabelRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "label representation parameters"
      }
    ]
  },
  {
    "__docId__": 2455,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2456,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 2457,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true
  },
  {
    "__docId__": 2458,
    "kind": "member",
    "name": "labelType",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#labelType",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true
  },
  {
    "__docId__": 2459,
    "kind": "member",
    "name": "labelText",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#labelText",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 2460,
    "kind": "member",
    "name": "fontFamily",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#fontFamily",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true
  },
  {
    "__docId__": 2461,
    "kind": "member",
    "name": "fontStyle",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#fontStyle",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true
  },
  {
    "__docId__": 2462,
    "kind": "member",
    "name": "fontWeight",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#fontWeight",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true
  },
  {
    "__docId__": 2463,
    "kind": "member",
    "name": "sdf",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#sdf",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 2464,
    "kind": "member",
    "name": "xOffset",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#xOffset",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true
  },
  {
    "__docId__": 2465,
    "kind": "member",
    "name": "yOffset",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#yOffset",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true
  },
  {
    "__docId__": 2466,
    "kind": "member",
    "name": "zOffset",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#zOffset",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true
  },
  {
    "__docId__": 2467,
    "kind": "member",
    "name": "attachment",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#attachment",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 2468,
    "kind": "member",
    "name": "showBorder",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#showBorder",
    "access": "public",
    "description": null,
    "lineNumber": 175,
    "undocument": true
  },
  {
    "__docId__": 2469,
    "kind": "member",
    "name": "borderColor",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#borderColor",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 2470,
    "kind": "member",
    "name": "borderWidth",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#borderWidth",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 2471,
    "kind": "member",
    "name": "showBackground",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#showBackground",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 2472,
    "kind": "member",
    "name": "backgroundColor",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#backgroundColor",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true
  },
  {
    "__docId__": 2473,
    "kind": "member",
    "name": "backgroundMargin",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#backgroundMargin",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true
  },
  {
    "__docId__": 2474,
    "kind": "member",
    "name": "backgroundOpacity",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#backgroundOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true
  },
  {
    "__docId__": 2475,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true
  },
  {
    "__docId__": 2476,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/label-representation.js~LabelRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/label-representation.js~LabelRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 229,
    "undocument": true
  },
  {
    "__docId__": 2477,
    "kind": "file",
    "name": "src/representation/licorice-representation.js",
    "content": "/**\r\n * @file Licorice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport BallAndStickRepresentation from './ballandstick-representation.js'\r\n\r\n/**\r\n * Licorice representation object ({@link BallAndStickRepresentation} with `aspectRatio` fixed at 1.0)\r\n */\r\nclass LicoriceRepresentation extends BallAndStickRepresentation {\r\n    /**\r\n     * Create Licorice representation object\r\n     * @param {Structure} structure - the structure to be represented\r\n     * @param {Viewer} viewer - a viewer object\r\n     * @param {BallAndStickRepresentationParameters} params - ball and stick representation parameters\r\n     */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'licorice'\r\n\r\n    this.parameters = Object.assign(\r\n      {}, this.parameters, { aspectRatio: null }\r\n    )\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n\r\n    super.init(p)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('licorice', LicoriceRepresentation)\r\n\r\nexport default LicoriceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/licorice-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2478,
    "kind": "class",
    "name": "LicoriceRepresentation",
    "memberof": "src/representation/licorice-representation.js",
    "static": true,
    "longname": "src/representation/licorice-representation.js~LicoriceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/licorice-representation.js",
    "importStyle": "LicoriceRepresentation",
    "description": "Licorice representation object ({@link BallAndStickRepresentation} with `aspectRatio` fixed at 1.0)",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/representation/ballandstick-representation.js~BallAndStickRepresentation"
    ]
  },
  {
    "__docId__": 2479,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/licorice-representation.js~LicoriceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/licorice-representation.js~LicoriceRepresentation#constructor",
    "access": "public",
    "description": "Create Licorice representation object",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "BallAndStickRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "ball and stick representation parameters"
      }
    ]
  },
  {
    "__docId__": 2480,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/licorice-representation.js~LicoriceRepresentation",
    "static": false,
    "longname": "src/representation/licorice-representation.js~LicoriceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2481,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/licorice-representation.js~LicoriceRepresentation",
    "static": false,
    "longname": "src/representation/licorice-representation.js~LicoriceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 2482,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/licorice-representation.js~LicoriceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/licorice-representation.js~LicoriceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 2483,
    "kind": "file",
    "name": "src/representation/line-representation.js",
    "content": "/**\r\n * @file Line Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport WideLineBuffer from '../buffer/wideline-buffer.js'\r\nimport { AtomPicker } from '../utils/picker.js'\r\n\r\n/**\r\n * Determine which atoms in  a Structure[View] form no bonds to any other atoms\r\n * in that Structure.\r\n *\r\n * This differs from setting the selection to \"nonbonded\" as it finds atoms\r\n * that have no bonds within the current selection.\r\n * @param  {Structure} structure - The Structure or StructureView object\r\n * @return {AtomSet} AtomSet of lone atoms\r\n */\r\nfunction getLoneAtomSet (structure) {\r\n  const atomSet = structure.getAtomSet()\r\n  const bondSet = structure.getBondSet()\r\n  const bp = structure.getBondProxy()\r\n  bondSet.forEach(function (idx) {\r\n    bp.index = idx\r\n    atomSet.clear(bp.atomIndex1)\r\n    atomSet.clear(bp.atomIndex2)\r\n  })\r\n  return atomSet\r\n}\r\n\r\n/**\r\n * Line representation\r\n */\r\nclass LineRepresentation extends StructureRepresentation {\r\n  /**\r\n   * Create Line representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {RepresentationParameters} params - representation parameters, plus the properties listed below\r\n   * @property {String} multipleBond - one off \"off\", \"symmetric\", \"offset\"\r\n   * @param {Float} params.bondSpacing - spacing for multiple bond rendering\r\n   * @param {Integer} params.linewidth - width of lines\r\n   * @param {Boolean} params.lines - render bonds as lines\r\n   * @param {String} params.crosses - render atoms as crosses: \"off\", \"all\" or \"lone\" (default)\r\n   * @param {Float} params.crossSize - size of cross\r\n   * @param {null} params.flatShaded - not available\r\n   * @param {null} params.side - not available\r\n   * @param {null} params.wireframe - not available\r\n   * @param {null} params.roughness - not available\r\n   * @param {null} params.metalness - not available\r\n   * @param {null} params.diffuse - not available\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'line'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      multipleBond: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'symmetric': 'symmetric',\r\n          'offset': 'offset'\r\n        }\r\n      },\r\n      bondSpacing: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.5\r\n      },\r\n      linewidth: {\r\n        type: 'integer', max: 50, min: 1, buffer: true\r\n      },\r\n      lines: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      crosses: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'off': 'off',\r\n          'lone': 'lone',\r\n          'all': 'all'\r\n        }\r\n      },\r\n      crossSize: {\r\n        type: 'number', precision: 2, max: 2.0, min: 0.1\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null,\r\n\r\n      roughness: null,\r\n      metalness: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n\r\n    this.multipleBond = defaults(p.multipleBond, 'off')\r\n    this.bondSpacing = defaults(p.bondSpacing, 1.0)\r\n    this.linewidth = defaults(p.linewidth, 2)\r\n    this.lines = defaults(p.lines, true)\r\n    this.crosses = defaults(p.crosses, 'lone')\r\n    this.crossSize = defaults(p.crossSize, 0.4)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getBondParams (what, params) {\r\n    params = Object.assign({\r\n      multipleBond: this.multipleBond,\r\n      bondSpacing: this.bondSpacing,\r\n      radiusParams: { 'radius': 0.1, 'scale': 1 }\r\n    }, params)\r\n\r\n    return super.getBondParams(what, params)\r\n  }\r\n\r\n  _crossData (what, sview) {\r\n    if (what) {\r\n      if (!what.position && !what.color) return\r\n    }\r\n\r\n    const p = {}\r\n    if (this.crosses === 'lone') {\r\n      p.atomSet = getLoneAtomSet(sview)\r\n    }\r\n\r\n    const atomData = sview.getAtomData(this.getAtomParams(what, p))\r\n    const crossData = {}\r\n    const position = atomData.position\r\n    const color = atomData.color\r\n    const picking = atomData.picking\r\n\r\n    const size = (position || color).length\r\n    const attrSize = size * 3\r\n\r\n    let cPosition1\r\n    let cPosition2\r\n    let cColor\r\n    let cColor2\r\n    let cOffset\r\n\r\n    let pickingArray\r\n\r\n    if (!what || what.position) {\r\n      cPosition1 = crossData.position1 = new Float32Array(attrSize)\r\n      cPosition2 = crossData.position2 = new Float32Array(attrSize)\r\n      cOffset = this.crossSize / 2\r\n    }\r\n    if (!what || what.color) {\r\n      cColor = crossData.color = new Float32Array(attrSize)\r\n      cColor2 = crossData.color2 = new Float32Array(attrSize)\r\n    }\r\n    if (!what || what.picking) {\r\n      pickingArray = new Float32Array(atomData.picking.array.length * 3) // Needs padding??\r\n    }\r\n\r\n    for (let v = 0; v < size; v++) {\r\n      const j = v * 3\r\n      const i = j * 3\r\n\r\n      if (!what || what.position) {\r\n        const x = position[ j ]\r\n        const y = position[ j + 1 ]\r\n        const z = position[ j + 2 ]\r\n\r\n        cPosition1[ i ] = x - cOffset\r\n        cPosition1[ i + 1 ] = y\r\n        cPosition1[ i + 2 ] = z\r\n        cPosition2[ i ] = x + cOffset\r\n        cPosition2[ i + 1 ] = y\r\n        cPosition2[ i + 2 ] = z\r\n\r\n        cPosition1[ i + 3 ] = x\r\n        cPosition1[ i + 4 ] = y - cOffset\r\n        cPosition1[ i + 5 ] = z\r\n        cPosition2[ i + 3 ] = x\r\n        cPosition2[ i + 4 ] = y + cOffset\r\n        cPosition2[ i + 5 ] = z\r\n\r\n        cPosition1[ i + 6 ] = x\r\n        cPosition1[ i + 7 ] = y\r\n        cPosition1[ i + 8 ] = z - cOffset\r\n        cPosition2[ i + 6 ] = x\r\n        cPosition2[ i + 7 ] = y\r\n        cPosition2[ i + 8 ] = z + cOffset\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        const cimax = i + 9\r\n        for (let ci = i; ci < cimax; ci += 3) {\r\n          cColor[ ci ] = cColor2[ ci ] = color[ j ]\r\n          cColor[ ci + 1 ] = cColor2[ ci + 1 ] = color[ j + 1 ]\r\n          cColor[ ci + 2 ] = cColor2[ ci + 2 ] = color[ j + 2 ]\r\n        }\r\n      }\r\n\r\n      if (!what || what.picking) {\r\n        pickingArray[ j ] =\r\n        pickingArray[ j + 1 ] =\r\n        pickingArray[ j + 2 ] = picking.array[ v ]\r\n      }\r\n    }\r\n\r\n    if (!what || what.picking) {\r\n      crossData.picking = new AtomPicker(\r\n        pickingArray, atomData.picking.structure\r\n      )\r\n    }\r\n\r\n    return crossData\r\n  }\r\n\r\n  createData (sview) {\r\n    const what = { position: true, color: true, picking: true }\r\n\r\n    const bufferList = []\r\n\r\n    if (this.lines) {\r\n      const bondData = sview.getBondData(this.getBondParams(what))\r\n\r\n      const lineBuffer = new WideLineBuffer(\r\n        bondData, this.getBufferParams({ linewidth: this.linewidth })\r\n      )\r\n\r\n      bufferList.push(lineBuffer)\r\n    }\r\n\r\n    if (this.crosses !== 'off') {\r\n      const crossBuffer = new WideLineBuffer(\r\n        this._crossData(what, sview),\r\n        this.getBufferParams({linewidth: this.linewidth})\r\n      )\r\n      bufferList.push(crossBuffer)\r\n    }\r\n\r\n    return {\r\n      bufferList: bufferList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    let bufferIdx = 0\r\n\r\n    if (this.lines) {\r\n      const bondData = data.sview.getBondData(this.getBondParams(what))\r\n      const lineAttributes = {}\r\n\r\n      if (!what || what.position) {\r\n        lineAttributes.position1 = bondData.position1\r\n        lineAttributes.position2 = bondData.position2\r\n      }\r\n\r\n      if (!what || what.color) {\r\n        lineAttributes.color = bondData.color\r\n        lineAttributes.color2 = bondData.color2\r\n      }\r\n\r\n      data.bufferList[ bufferIdx++ ].setAttributes(lineAttributes)\r\n    }\r\n\r\n    if (this.crosses !== 'off') {\r\n      const crossData = this._crossData(what, data.sview)\r\n      const crossAttributes = {}\r\n\r\n      if (!what || what.position) {\r\n        crossAttributes.position1 = crossData.position1\r\n        crossAttributes.position2 = crossData.position2\r\n      }\r\n      if (!what || what.color) {\r\n        crossAttributes.color = crossData.color\r\n        crossAttributes.color2 = crossData.color2\r\n      }\r\n\r\n      data.bufferList[ bufferIdx++ ].setAttributes(crossAttributes)\r\n    }\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && (params.bondSpacing || params.crossSize)) {\r\n      what.position = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('line', LineRepresentation)\r\n\r\nexport default LineRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/line-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2484,
    "kind": "function",
    "name": "getLoneAtomSet",
    "memberof": "src/representation/line-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/line-representation.js~getLoneAtomSet",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/line-representation.js",
    "importStyle": null,
    "description": "Determine which atoms in  a Structure[View] form no bonds to any other atoms\nin that Structure.\n\nThis differs from setting the selection to \"nonbonded\" as it finds atoms\nthat have no bonds within the current selection.",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "The Structure or StructureView object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AtomSet"
      ],
      "spread": false,
      "description": "AtomSet of lone atoms"
    },
    "ignore": true
  },
  {
    "__docId__": 2485,
    "kind": "class",
    "name": "LineRepresentation",
    "memberof": "src/representation/line-representation.js",
    "static": true,
    "longname": "src/representation/line-representation.js~LineRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/line-representation.js",
    "importStyle": "LineRepresentation",
    "description": "Line representation",
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2486,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#constructor",
    "access": "public",
    "description": "Create Line representation object",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "representation parameters, plus the properties listed below"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "params.bondSpacing",
        "description": "spacing for multiple bond rendering"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.linewidth",
        "description": "width of lines"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.lines",
        "description": "render bonds as lines"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.crosses",
        "description": "render atoms as crosses: \"off\", \"all\" or \"lone\" (default)"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "params.crossSize",
        "description": "size of cross"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.flatShaded",
        "description": "not available"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.side",
        "description": "not available"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.wireframe",
        "description": "not available"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.roughness",
        "description": "not available"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.metalness",
        "description": "not available"
      },
      {
        "nullable": null,
        "types": [
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "params.diffuse",
        "description": "not available"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "multipleBond",
        "description": "one off \"off\", \"symmetric\", \"offset\""
      }
    ]
  },
  {
    "__docId__": 2487,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2488,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 2489,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 108,
    "undocument": true
  },
  {
    "__docId__": 2490,
    "kind": "member",
    "name": "multipleBond",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#multipleBond",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 2491,
    "kind": "member",
    "name": "bondSpacing",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#bondSpacing",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2492,
    "kind": "member",
    "name": "linewidth",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#linewidth",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2493,
    "kind": "member",
    "name": "lines",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#lines",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 2494,
    "kind": "member",
    "name": "crosses",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#crosses",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 2495,
    "kind": "member",
    "name": "crossSize",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#crossSize",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 2496,
    "kind": "method",
    "name": "getBondParams",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#getBondParams",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 2497,
    "kind": "method",
    "name": "_crossData",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#_crossData",
    "access": "private",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 2498,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 227,
    "undocument": true
  },
  {
    "__docId__": 2499,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 255,
    "undocument": true
  },
  {
    "__docId__": 2500,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/line-representation.js~LineRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/line-representation.js~LineRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 292,
    "undocument": true
  },
  {
    "__docId__": 2501,
    "kind": "file",
    "name": "src/representation/measurement-representation.js",
    "content": "/**\r\n * @file Measurement Representation\r\n * @private\r\n */\r\nimport { Color } from '../../lib/three.es6.js'\r\nimport Selection from '../selection/selection.js'\r\nimport { Browser } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils.js'\r\n\r\n/**\r\n * Measurement representation parameter object.\r\n * @typedef {Object} MeasurementRepresentationParameters - measurement representation parameters\r\n * @mixes RepresentationParameters\r\n * @mixes StructureRepresentationParameters\r\n *\r\n * @property {Float} labelSize - size of the distance label\r\n * @property {Color} labelColor - color of the distance label\r\n * @property {Boolean} labelVisible - visibility of the distance label\r\n * @property {Float} labelZOffset - offset in z-direction (i.e. in camera direction)\r\n */\r\n\r\n/**\r\n * Measurement representation\r\n */\r\nclass MeasurementRepresentation extends StructureRepresentation {\r\n  /**\r\n   * Handles common label settings and position logic for\r\n   * distance and angle representations\r\n   *\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.n = 0 // Subclass create sets value\r\n    this.parameters = Object.assign({\r\n\r\n      labelVisible: {\r\n        type: 'boolean'\r\n      },\r\n      labelSize: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      labelColor: {\r\n        type: 'color'\r\n      },\r\n      labelFontFamily: {\r\n        type: 'select',\r\n        options: {\r\n          'sans-serif': 'sans-serif',\r\n          'monospace': 'monospace',\r\n          'serif': 'serif'\r\n        },\r\n        buffer: 'fontFamily'\r\n      },\r\n      labelFontStyle: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'italic': 'italic'\r\n        },\r\n        buffer: 'fontStyle'\r\n      },\r\n      labelFontWeight: {\r\n        type: 'select',\r\n        options: {\r\n          'normal': 'normal',\r\n          'bold': 'bold'\r\n        },\r\n        buffer: 'fontWeight'\r\n      },\r\n      labelsdf: {\r\n        type: 'boolean', buffer: 'sdf'\r\n      },\r\n      labelXOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'xOffset'\r\n      },\r\n      labelYOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'yOffset'\r\n      },\r\n      labelZOffset: {\r\n        type: 'number', precision: 1, max: 20, min: -20, buffer: 'zOffset'\r\n      },\r\n      labelAttachment: {\r\n        type: 'select',\r\n        options: {\r\n          'bottom-left': 'bottom-left',\r\n          'bottom-center': 'bottom-center',\r\n          'bottom-right': 'bottom-right',\r\n          'middle-left': 'middle-left',\r\n          'middle-center': 'middle-center',\r\n          'middle-right': 'middle-right',\r\n          'top-left': 'top-left',\r\n          'top-center': 'top-center',\r\n          'top-right': 'top-right'\r\n        },\r\n        rebuild: true\r\n      },\r\n      labelBorder: {\r\n        type: 'boolean', buffer: 'showBorder'\r\n      },\r\n      labelBorderColor: {\r\n        type: 'color', buffer: 'borderColor'\r\n      },\r\n      labelBorderWidth: {\r\n        type: 'number', precision: 2, max: 0.3, min: 0, buffer: 'borderWidth'\r\n      },\r\n      labelBackground: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      labelBackgroundColor: {\r\n        type: 'color', buffer: 'backgroundColor'\r\n      },\r\n      labelBackgroundMargin: {\r\n        type: 'number', precision: 2, max: 2, min: 0, rebuild: true\r\n      },\r\n      labelBackgroundOpacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: 'backgroundOpacity'\r\n      }\r\n    }, this.parameters, {\r\n      flatShaded: null,\r\n      assembly: null\r\n    })\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    this.labelVisible = defaults(p.labelVisible, true)\r\n    this.labelSize = defaults(p.labelSize, 2.0)\r\n    this.labelColor = defaults(p.labelColor, 0xFFFFFF)\r\n    this.labelFontFamily = defaults(p.labelFontFamily, 'sans-serif')\r\n    this.labelFontStyle = defaults(p.labelFontstyle, 'normal')\r\n    this.labelFontWeight = defaults(p.labelFontWeight, 'bold')\r\n    this.labelsdf = defaults(p.labelsdf, Browser === 'Chrome')\r\n    this.labelXOffset = defaults(p.labelXOffset, 0.0)\r\n    this.labelYOffset = defaults(p.labelYOffset, 0.0)\r\n    this.labelZOffset = defaults(p.labelZOffset, 0.5)\r\n    this.labelAttachment = defaults(p.labelAttachment, 'bottom-left')\r\n    this.labelBorder = defaults(p.labelBorder, false)\r\n    this.labelBorderColor = defaults(p.labelBorderColor, 'lightgrey')\r\n    this.labelBorderWidth = defaults(p.labelBorderWidth, 0.15)\r\n    this.labelBackground = defaults(p.labelBackground, false)\r\n    this.labelBackgroundColor = defaults(p.labelBackgroundColor, 'lightgrey')\r\n    this.labelBackgroundMargin = defaults(p.labelBackgroundMargin, 0.5)\r\n    this.labelBackgroundOpacity = defaults(p.labelBackgroundOpacity, 1.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  // All measurements need to rebuild on position change\r\n  update (what) {\r\n    if (what.position) {\r\n      this.build()\r\n    } else {\r\n      super.update(what)\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    const textData = {}\r\n    if (what.labelSize) {\r\n      textData.size = uniformArray(this.n, this.labelSize)\r\n    }\r\n\r\n    if (what.labelColor) {\r\n      const c = new Color(this.labelColor)\r\n      textData.color = uniformArray3(this.n, c.r, c.g, c.b)\r\n    }\r\n\r\n    this.textBuffer.setAttributes(textData)\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.labelSize) {\r\n      what.labelSize = true\r\n    }\r\n\r\n    if (params && (params.labelColor || params.labelColor === 0x000000)) {\r\n      what.labelColor = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (params && params.opacity !== undefined) {\r\n      this.textBuffer.setParameters(\r\n        {opacity: 1.0}) // Don't allow opaque labels?\r\n    }\r\n\r\n    if (params && params.labelVisible !== undefined) {\r\n      this.setVisibility(this.visible)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  setVisibility (value, noRenderRequest) {\r\n    super.setVisibility(value, true)\r\n    if (this.textBuffer) {\r\n      this.textBuffer.setVisibility(\r\n        this.labelVisible && this.visible\r\n      )\r\n    }\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n\r\n  getLabelBufferParams (params) {\r\n    return super.getBufferParams(Object.assign({\r\n      fontFamily: this.labelFontFamily,\r\n      fontStyle: this.labelFontStyle,\r\n      fontWeight: this.labelFontWeight,\r\n      sdf: this.labelsdf,\r\n      xOffset: this.labelXOffset,\r\n      yOffset: this.labelYOffset,\r\n      zOffset: this.labelZOffset,\r\n      attachment: this.labelAttachment,\r\n      showBorder: this.labelBorder,\r\n      borderColor: this.labelBorderColor,\r\n      borderWidth: this.labelBorderWidth,\r\n      showBackground: this.labelBackground,\r\n      backgroundColor: this.labelBackgroundColor,\r\n      backgroundMargin: this.labelBackgroundMargin,\r\n      backgroundOpacity: this.labelBackgroundOpacity,\r\n      visible: this.labelVisible\r\n    }, params, {\r\n      opacity: 1.0 // Force labels at 100% opacity\r\n    }))\r\n  }\r\n}\r\n\r\n/**\r\n * MeasurementRepresentations take atom[Pair|Triple|Quad] parameters.\r\n *\r\n * Parses nested array of either integer atom indices or selection\r\n * expressions into a flat array of coordinates.\r\n *\r\n * NB: Unlike previous version, this peeks at first entry to determine\r\n * if atoms are given by int index or selection expression. It cannot\r\n * cope with mixtures\r\n *\r\n * @param  {Structure} sview The structure to which the atoms refer\r\n * @param  {Array} atoms Nested array of atom pairs|triples|quads as\r\n *   Integer indices or selection expressions\r\n * @return {Float32Array} Flattened array of position coordinates\r\n */\r\nfunction parseNestedAtoms (sview, atoms) {\r\n  const ap = sview.getAtomProxy()\r\n  const sele = new Selection()\r\n\r\n  const nSets = atoms.length\r\n  if (nSets === 0) return new Float32Array(0)\r\n\r\n  // Peek-ahead at first item to determine order and parse mode\r\n  const order = atoms[ 0 ].length\r\n  const seleMode = !(Number.isInteger(atoms[ 0 ][ 0 ]))\r\n\r\n  const a = new Float32Array(nSets * order * 3)\r\n\r\n  let p = 0\r\n  atoms.forEach(function (group) {\r\n    let _break = false\r\n    for (var j = 0; j < order; j++) {\r\n      if (seleMode) {\r\n        sele.setString(group[ j ])\r\n        const atomIndices = sview.getAtomIndices(sele)\r\n        if (atomIndices.length) {\r\n          ap.index = atomIndices[ 0 ]\r\n        } else {\r\n          _break = true\r\n          break\r\n        }\r\n      } else {\r\n        ap.index = group[ j ]\r\n      }\r\n      let offset = p + j * 3\r\n      a[ offset++ ] = ap.x\r\n      a[ offset++ ] = ap.y\r\n      a[ offset++ ] = ap.z\r\n    }\r\n    if (!_break) p += 3 * order\r\n  })\r\n\r\n  return a.subarray(0, p)\r\n}\r\n\r\n/* out = v1 * cos(angle) + v2 * sin(angle) */\r\nfunction calcArcPoint (out, center, v1, v2, angle) {\r\n  const x = Math.cos(angle)\r\n  const y = Math.sin(angle)\r\n  out[ 0 ] = center[ 0 ] + v1[ 0 ] * x + v2[ 0 ] * y\r\n  out[ 1 ] = center[ 1 ] + v1[ 1 ] * x + v2[ 1 ] * y\r\n  out[ 2 ] = center[ 2 ] + v1[ 2 ] * x + v2[ 2 ] * y\r\n}\r\n\r\nexport {\r\n  MeasurementRepresentation as default,\r\n  calcArcPoint,\r\n  parseNestedAtoms\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/measurement-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2502,
    "kind": "typedef",
    "name": "MeasurementRepresentationParameters",
    "memberof": "src/representation/measurement-representation.js",
    "static": true,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentationParameters",
    "access": "public",
    "description": "Measurement representation parameter object.",
    "unknown": [
      {
        "tagName": "@mixes",
        "tagValue": "RepresentationParameters"
      },
      {
        "tagName": "@mixes",
        "tagValue": "StructureRepresentationParameters"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "labelSize",
        "description": "size of the distance label"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "labelColor",
        "description": "color of the distance label"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "labelVisible",
        "description": "visibility of the distance label"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "labelZOffset",
        "description": "offset in z-direction (i.e. in camera direction)"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MeasurementRepresentationParameters"
    }
  },
  {
    "__docId__": 2503,
    "kind": "class",
    "name": "MeasurementRepresentation",
    "memberof": "src/representation/measurement-representation.js",
    "static": true,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/measurement-representation.js",
    "importStyle": null,
    "description": "Measurement representation",
    "lineNumber": 27,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ],
    "ignore": true
  },
  {
    "__docId__": 2504,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#constructor",
    "access": "public",
    "description": "Handles common label settings and position logic for\ndistance and angle representations",
    "lineNumber": 33
  },
  {
    "__docId__": 2505,
    "kind": "member",
    "name": "n",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#n",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 2506,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2507,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 2508,
    "kind": "member",
    "name": "labelVisible",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelVisible",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 2509,
    "kind": "member",
    "name": "labelSize",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelSize",
    "access": "public",
    "description": null,
    "lineNumber": 130,
    "undocument": true
  },
  {
    "__docId__": 2510,
    "kind": "member",
    "name": "labelColor",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelColor",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 2511,
    "kind": "member",
    "name": "labelFontFamily",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelFontFamily",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 2512,
    "kind": "member",
    "name": "labelFontStyle",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelFontStyle",
    "access": "public",
    "description": null,
    "lineNumber": 133,
    "undocument": true
  },
  {
    "__docId__": 2513,
    "kind": "member",
    "name": "labelFontWeight",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelFontWeight",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 2514,
    "kind": "member",
    "name": "labelsdf",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelsdf",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 2515,
    "kind": "member",
    "name": "labelXOffset",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelXOffset",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 2516,
    "kind": "member",
    "name": "labelYOffset",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelYOffset",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true
  },
  {
    "__docId__": 2517,
    "kind": "member",
    "name": "labelZOffset",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelZOffset",
    "access": "public",
    "description": null,
    "lineNumber": 138,
    "undocument": true
  },
  {
    "__docId__": 2518,
    "kind": "member",
    "name": "labelAttachment",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelAttachment",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true
  },
  {
    "__docId__": 2519,
    "kind": "member",
    "name": "labelBorder",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBorder",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 2520,
    "kind": "member",
    "name": "labelBorderColor",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBorderColor",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true
  },
  {
    "__docId__": 2521,
    "kind": "member",
    "name": "labelBorderWidth",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBorderWidth",
    "access": "public",
    "description": null,
    "lineNumber": 142,
    "undocument": true
  },
  {
    "__docId__": 2522,
    "kind": "member",
    "name": "labelBackground",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBackground",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 2523,
    "kind": "member",
    "name": "labelBackgroundColor",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBackgroundColor",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 2524,
    "kind": "member",
    "name": "labelBackgroundMargin",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBackgroundMargin",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2525,
    "kind": "member",
    "name": "labelBackgroundOpacity",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#labelBackgroundOpacity",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 2526,
    "kind": "method",
    "name": "update",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#update",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 2527,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 2528,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 2529,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#setVisibility",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "undocument": true
  },
  {
    "__docId__": 2530,
    "kind": "method",
    "name": "getLabelBufferParams",
    "memberof": "src/representation/measurement-representation.js~MeasurementRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/measurement-representation.js~MeasurementRepresentation#getLabelBufferParams",
    "access": "public",
    "description": null,
    "lineNumber": 213,
    "undocument": true
  },
  {
    "__docId__": 2531,
    "kind": "function",
    "name": "calcArcPoint",
    "memberof": "src/representation/measurement-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/measurement-representation.js~calcArcPoint",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/measurement-representation.js",
    "importStyle": "{calcArcPoint}",
    "description": null,
    "lineNumber": 293,
    "undocument": true
  },
  {
    "__docId__": 2532,
    "kind": "function",
    "name": "parseNestedAtoms",
    "memberof": "src/representation/measurement-representation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/measurement-representation.js~parseNestedAtoms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/measurement-representation.js",
    "importStyle": "{parseNestedAtoms}",
    "description": "MeasurementRepresentations take atom[Pair|Triple|Quad] parameters.\n\nParses nested array of either integer atom indices or selection\nexpressions into a flat array of coordinates.\n\nNB: Unlike previous version, this peeks at first entry to determine\nif atoms are given by int index or selection expression. It cannot\ncope with mixtures",
    "lineNumber": 252,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "sview",
        "description": "The structure to which the atoms refer"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atoms",
        "description": "Nested array of atom pairs|triples|quads as\n  Integer indices or selection expressions"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": "Flattened array of position coordinates"
    }
  },
  {
    "__docId__": 2533,
    "kind": "file",
    "name": "src/representation/molecularsurface-representation.js",
    "content": "/**\r\n * @file Molecular Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport MolecularSurface from '../surface/molecular-surface.js'\r\nimport SurfaceBuffer from '../buffer/surface-buffer.js'\r\nimport ContourBuffer from '../buffer/contour-buffer.js'\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\r\nimport Selection from '../selection/selection.js'\r\n\r\n/**\r\n * Molecular Surface Representation\r\n */\r\nclass MolecularSurfaceRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'surface'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      surfaceType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'vws': 'vws',\r\n          'sas': 'sas',\r\n          'ms': 'ms',\r\n          'ses': 'ses',\r\n          'av': 'av'\r\n        }\r\n      },\r\n      probeRadius: {\r\n        type: 'number',\r\n        precision: 1,\r\n        max: 20,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      smooth: {\r\n        type: 'integer',\r\n        precision: 1,\r\n        max: 10,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      scaleFactor: {\r\n        type: 'number',\r\n        precision: 1,\r\n        max: 5,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      cutoff: {\r\n        type: 'number',\r\n        precision: 2,\r\n        max: 50,\r\n        min: 0,\r\n        rebuild: true\r\n      },\r\n      contour: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      background: {\r\n        type: 'boolean', rebuild: true  // FIXME\r\n      },\r\n      opaqueBack: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      filterSele: {\r\n        type: 'text', rebuild: true\r\n      },\r\n      colorVolume: {\r\n        type: 'hidden'\r\n      },\r\n      useWorker: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      radiusType: null,\r\n      radius: null,\r\n      scale: null\r\n\r\n    })\r\n\r\n    this.__infoList = []\r\n\r\n    // TODO find a more direct way\r\n    this.structure.signals.refreshed.add(function () {\r\n      this.__forceNewMolsurf = true\r\n    }, this)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n    p.disablePicking = defaults(p.disablePicking, true)\r\n\r\n    this.surfaceType = defaults(p.surfaceType, 'ms')\r\n    this.probeRadius = defaults(p.probeRadius, 1.4)\r\n    this.smooth = defaults(p.smooth, 2)\r\n    this.scaleFactor = defaults(p.scaleFactor, 2.0)\r\n    this.cutoff = defaults(p.cutoff, 0.0)\r\n    this.contour = defaults(p.contour, false)\r\n    this.background = defaults(p.background, false)\r\n    this.opaqueBack = defaults(p.opaqueBack, true)\r\n    this.filterSele = defaults(p.filterSele, '')\r\n    this.colorVolume = defaults(p.colorVolume, undefined)\r\n    this.useWorker = defaults(p.useWorker, true)\r\n\r\n    super.init(params)\r\n  }\r\n\r\n  prepareData (sview, i, callback) {\r\n    let info = this.__infoList[ i ]\r\n    if (!info) {\r\n      info = {}\r\n      this.__infoList[ i ] = info\r\n    }\r\n\r\n    if (!info.molsurf || info.sele !== sview.selection.string) {\r\n      if (this.filterSele) {\r\n        const sviewFilter = sview.structure.getView(new Selection(this.filterSele))\r\n        const bbSize = sviewFilter.boundingBox.getSize()\r\n        const maxDim = Math.max(bbSize.x, bbSize.y, bbSize.z)\r\n        const asWithin = sview.getAtomSetWithinPoint(sviewFilter.center, (maxDim / 2) + 6.0)\r\n        sview = sview.getView(\r\n                    new Selection(sview.getAtomSetWithinSelection(asWithin, 3).toSeleString())\r\n                )\r\n      }\r\n\r\n      info.sele = sview.selection.string\r\n      info.molsurf = new MolecularSurface(sview)\r\n\r\n      const p = this.getSurfaceParams()\r\n      const onSurfaceFinish = function (surface) {\r\n        info.surface = surface\r\n        callback(i)\r\n      }\r\n\r\n      if (this.useWorker) {\r\n        info.molsurf.getSurfaceWorker(p, onSurfaceFinish)\r\n      } else {\r\n        onSurfaceFinish(info.molsurf.getSurface(p))\r\n      }\r\n    } else {\r\n      callback(i)\r\n    }\r\n  }\r\n\r\n  prepare (callback) {\r\n    if (this.__forceNewMolsurf || this.__sele !== this.selection.string ||\r\n                this.__surfaceParams !== JSON.stringify(this.getSurfaceParams())) {\r\n      this.__infoList.forEach(info => {\r\n        info.molsurf.dispose()\r\n      })\r\n      this.__infoList.length = 0\r\n    }\r\n\r\n    if (this.structureView.atomCount === 0) {\r\n      callback()\r\n      return\r\n    }\r\n\r\n    const after = function () {\r\n      this.__sele = this.selection.string\r\n      this.__surfaceParams = JSON.stringify(this.getSurfaceParams())\r\n      this.__forceNewMolsurf = false\r\n      callback()\r\n    }.bind(this)\r\n\r\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\r\n    const assembly = this.structure.biomolDict[ name ]\r\n\r\n    if (assembly) {\r\n      assembly.partList.forEach((part, i) => {\r\n        const sview = part.getView(this.structureView)\r\n        this.prepareData(sview, i, (_i) => {\r\n          if (_i === assembly.partList.length - 1) after()\r\n        })\r\n      })\r\n    } else {\r\n      this.prepareData(this.structureView, 0, after)\r\n    }\r\n  }\r\n\r\n  createData (sview, i) {\r\n    const info = this.__infoList[ i ]\r\n    const surface = info.surface\r\n\r\n    const surfaceData = {\r\n      position: surface.getPosition(),\r\n      color: surface.getColor(this.getColorParams()),\r\n      index: surface.getFilteredIndex(this.filterSele, sview)\r\n    }\r\n\r\n    const bufferList = []\r\n\r\n    if (surface.contour) {\r\n      const contourBuffer = new ContourBuffer(\r\n        surfaceData,\r\n        this.getBufferParams({\r\n          wireframe: false\r\n        })\r\n      )\r\n\r\n      bufferList.push(contourBuffer)\r\n    } else {\r\n      surfaceData.normal = surface.getNormal()\r\n      surfaceData.picking = surface.getPicking(sview.getStructure())\r\n\r\n      const surfaceBuffer = new SurfaceBuffer(\r\n        surfaceData,\r\n        this.getBufferParams({\r\n          background: this.background,\r\n          opaqueBack: this.opaqueBack,\r\n          dullInterior: false\r\n        })\r\n      )\r\n\r\n      const doubleSidedBuffer = new DoubleSidedBuffer(surfaceBuffer)\r\n\r\n      bufferList.push(doubleSidedBuffer)\r\n    }\r\n\r\n    return { bufferList, info }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    const surfaceData = {}\r\n\r\n    if (what.position) {\r\n      this.__forceNewMolsurf = true\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    if (what.color) {\r\n      surfaceData.color = data.info.surface.getColor(this.getColorParams())\r\n    }\r\n\r\n    if (what.index) {\r\n      surfaceData.index = data.info.surface.getFilteredIndex(this.filterSele, data.sview)\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(surfaceData)\r\n  }\r\n\r\n  setParameters (params, what, rebuild) {\r\n    what = what || {}\r\n\r\n    if (params && params.filterSele) {\r\n      what.index = true\r\n    }\r\n\r\n    if (params && params.colorVolume !== undefined) {\r\n      what.color = true\r\n    }\r\n\r\n    // forbid setting wireframe to true when contour is true\r\n    if (params && params.wireframe && (\r\n          params.contour || (params.contour === undefined && this.contour)\r\n        )\r\n    ) {\r\n      params.wireframe = false\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n\r\n  getSurfaceParams (params) {\r\n    const p = Object.assign({\r\n      type: this.surfaceType,\r\n      probeRadius: this.probeRadius,\r\n      scaleFactor: this.scaleFactor,\r\n      smooth: this.smooth && !this.contour,\r\n      cutoff: this.cutoff,\r\n      contour: this.contour,\r\n      useWorker: this.useWorker\r\n    }, params)\r\n\r\n    return p\r\n  }\r\n\r\n  getColorParams () {\r\n    const p = super.getColorParams()\r\n\r\n    p.volume = this.colorVolume\r\n\r\n    return p\r\n  }\r\n\r\n  clear () {\r\n    super.clear()\r\n  }\r\n\r\n  dispose () {\r\n    this.__infoList.forEach(info => {\r\n      info.molsurf.dispose()\r\n    })\r\n    this.__infoList.length = 0\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('surface', MolecularSurfaceRepresentation)\r\n\r\nexport default MolecularSurfaceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/molecularsurface-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2534,
    "kind": "class",
    "name": "MolecularSurfaceRepresentation",
    "memberof": "src/representation/molecularsurface-representation.js",
    "static": true,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/molecularsurface-representation.js",
    "importStyle": "MolecularSurfaceRepresentation",
    "description": "Molecular Surface Representation",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2535,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2536,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2537,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 2538,
    "kind": "member",
    "name": "__infoList",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#__infoList",
    "access": "private",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 2539,
    "kind": "member",
    "name": "__forceNewMolsurf",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#__forceNewMolsurf",
    "access": "private",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 2540,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 2541,
    "kind": "member",
    "name": "surfaceType",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#surfaceType",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true
  },
  {
    "__docId__": 2542,
    "kind": "member",
    "name": "probeRadius",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#probeRadius",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 2543,
    "kind": "member",
    "name": "smooth",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#smooth",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 2544,
    "kind": "member",
    "name": "scaleFactor",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#scaleFactor",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2545,
    "kind": "member",
    "name": "cutoff",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#cutoff",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2546,
    "kind": "member",
    "name": "contour",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#contour",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 2547,
    "kind": "member",
    "name": "background",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#background",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 2548,
    "kind": "member",
    "name": "opaqueBack",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#opaqueBack",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 2549,
    "kind": "member",
    "name": "filterSele",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#filterSele",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 2550,
    "kind": "member",
    "name": "colorVolume",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#colorVolume",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 2551,
    "kind": "member",
    "name": "useWorker",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#useWorker",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 2552,
    "kind": "method",
    "name": "prepareData",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#prepareData",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 2553,
    "kind": "method",
    "name": "prepare",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#prepare",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true
  },
  {
    "__docId__": 2554,
    "kind": "member",
    "name": "__sele",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#__sele",
    "access": "private",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 2555,
    "kind": "member",
    "name": "__surfaceParams",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#__surfaceParams",
    "access": "private",
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 2557,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true
  },
  {
    "__docId__": 2558,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true
  },
  {
    "__docId__": 2560,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 259,
    "undocument": true
  },
  {
    "__docId__": 2561,
    "kind": "method",
    "name": "getSurfaceParams",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#getSurfaceParams",
    "access": "public",
    "description": null,
    "lineNumber": 283,
    "undocument": true
  },
  {
    "__docId__": 2562,
    "kind": "method",
    "name": "getColorParams",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#getColorParams",
    "access": "public",
    "description": null,
    "lineNumber": 297,
    "undocument": true
  },
  {
    "__docId__": 2563,
    "kind": "method",
    "name": "clear",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#clear",
    "access": "public",
    "description": null,
    "lineNumber": 305,
    "undocument": true
  },
  {
    "__docId__": 2564,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 309,
    "undocument": true
  },
  {
    "__docId__": 2565,
    "kind": "file",
    "name": "src/representation/point-representation.js",
    "content": "/**\r\n * @file Point Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport PointBuffer from '../buffer/point-buffer.js'\r\n\r\n/**\r\n * Point Representation\r\n */\r\nclass PointRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'point'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      pointSize: {\r\n        type: 'number', precision: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      sizeAttenuation: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      sortParticles: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useTexture: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      alphaTest: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      },\r\n      forceTransparent: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      edgeBleach: {\r\n        type: 'range', step: 0.001, max: 1, min: 0, buffer: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n      side: null,\r\n\r\n      roughness: null,\r\n      metalness: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, true)\r\n    this.sortParticles = defaults(p.sortParticles, false)\r\n    this.useTexture = defaults(p.useTexture, false)\r\n    this.alphaTest = defaults(p.alphaTest, 0.5)\r\n    this.forceTransparent = defaults(p.forceTransparent, false)\r\n    this.edgeBleach = defaults(p.edgeBleach, 0.0)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    var what = { position: true, color: true, picking: true }\r\n    var atomData = sview.getAtomData(this.getAtomParams(what))\r\n\r\n    var pointBuffer = new PointBuffer(\r\n      atomData,\r\n      this.getBufferParams({\r\n        pointSize: this.pointSize,\r\n        sizeAttenuation: this.sizeAttenuation,\r\n        sortParticles: this.sortParticles,\r\n        useTexture: this.useTexture,\r\n        alphaTest: this.alphaTest,\r\n        forceTransparent: this.forceTransparent,\r\n        edgeBleach: this.edgeBleach\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ pointBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var atomData = data.sview.getAtomData(this.getAtomParams(what))\r\n    var pointData = {}\r\n\r\n    if (!what || what.position) {\r\n      pointData.position = atomData.position\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      pointData.color = atomData.color\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(pointData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('point', PointRepresentation)\r\n\r\nexport default PointRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/point-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2566,
    "kind": "class",
    "name": "PointRepresentation",
    "memberof": "src/representation/point-representation.js",
    "static": true,
    "longname": "src/representation/point-representation.js~PointRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/point-representation.js",
    "importStyle": "PointRepresentation",
    "description": "Point Representation",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2567,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 2568,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 2569,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2570,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 2571,
    "kind": "member",
    "name": "pointSize",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#pointSize",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 2572,
    "kind": "member",
    "name": "sizeAttenuation",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#sizeAttenuation",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 2573,
    "kind": "member",
    "name": "sortParticles",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#sortParticles",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 2574,
    "kind": "member",
    "name": "useTexture",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#useTexture",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 2575,
    "kind": "member",
    "name": "alphaTest",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#alphaTest",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 2576,
    "kind": "member",
    "name": "forceTransparent",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#forceTransparent",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2577,
    "kind": "member",
    "name": "edgeBleach",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#edgeBleach",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 2578,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 2579,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/point-representation.js~PointRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/point-representation.js~PointRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 2580,
    "kind": "file",
    "name": "src/representation/representation-utils.js",
    "content": "/**\r\n * @file Representation Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log, RepresentationRegistry } from '../globals.js'\r\n\r\nimport Structure from '../structure/structure.js'\r\nimport Surface from '../surface/surface.js'\r\nimport Volume from '../surface/volume.js'\r\nimport Trajectory from '../trajectory/trajectory.js'\r\nimport Shape from '../geometry/shape.js'\r\n\r\nimport BufferRepresentation from './buffer-representation.js'\r\nimport SurfaceRepresentation from './surface-representation.js'\r\nimport DotRepresentation from './dot-representation.js'\r\nimport SliceRepresentation from './slice-representation.js'\r\nimport TrajectoryRepresentation from './trajectory-representation.js'\r\n\r\nfunction logReprUnknown (type) {\r\n  Log.error('makeRepresentation: representation type ' + type + ' unknown')\r\n}\r\n\r\nfunction makeRepresentation (type, object, viewer, params) {\r\n  if (Debug) Log.time('makeRepresentation ' + type)\r\n\r\n  var ReprClass\r\n\r\n  if (object instanceof Structure) {\r\n    ReprClass = RepresentationRegistry.get(type)\r\n\r\n    if (!ReprClass) {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Surface) {\r\n    if (type === 'surface') {\r\n      ReprClass = SurfaceRepresentation\r\n    } else if (type === 'dot') {\r\n      ReprClass = DotRepresentation\r\n    } else {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Volume) {\r\n    if (type === 'surface') {\r\n      ReprClass = SurfaceRepresentation\r\n    } else if (type === 'dot') {\r\n      ReprClass = DotRepresentation\r\n    } else if (type === 'slice') {\r\n      ReprClass = SliceRepresentation\r\n    } else {\r\n      logReprUnknown(type)\r\n      return\r\n    }\r\n  } else if (object instanceof Trajectory) {\r\n    ReprClass = TrajectoryRepresentation\r\n  } else if (object instanceof Shape) {\r\n    ReprClass = BufferRepresentation\r\n    object = object.getBufferList()\r\n  } else if (type === 'buffer') {\r\n    ReprClass = BufferRepresentation\r\n  } else {\r\n    Log.error('makeRepresentation: object ' + object + ' unknown')\r\n    return\r\n  }\r\n\r\n  const repr = new ReprClass(object, viewer, params)\r\n\r\n  if (Debug) Log.timeEnd('makeRepresentation ' + type)\r\n\r\n  return repr\r\n}\r\n\r\nexport {\r\n  makeRepresentation\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/representation-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2581,
    "kind": "function",
    "name": "logReprUnknown",
    "memberof": "src/representation/representation-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/representation-utils.js~logReprUnknown",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/representation/representation-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2582,
    "kind": "function",
    "name": "makeRepresentation",
    "memberof": "src/representation/representation-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/representation/representation-utils.js~makeRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/representation-utils.js",
    "importStyle": "{makeRepresentation}",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 2583,
    "kind": "file",
    "name": "src/representation/representation.js",
    "content": "/**\r\n * @file Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ColormakerRegistry, ExtensionFragDepth } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Queue from '../utils/queue.js'\r\nimport Counter from '../utils/counter.js'\r\n\r\n/**\r\n * Representation parameter object.\r\n * @typedef {Object} RepresentationParameters - representation parameters\r\n * @property {Boolean} [lazy] - only build & update the representation when visible\r\n *                            otherwise defer changes until set visible again\r\n * @property {Integer} [clipNear] - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Integer} [clipRadius] - radius of clipping sphere\r\n * @property {Vector3} [clipCenter] - position of for spherical clipping\r\n * @property {Boolean} [flatShaded] - render flat shaded\r\n * @property {Float} [opacity] - translucency: 1 is fully opaque, 0 is fully transparent\r\n * @property {Boolean} [depthWrite] - depth write\r\n * @property {String} [side] - which triangle sides to render, \"front\" front-side,\r\n *                            \"back\" back-side, \"double\" front- and back-side\r\n * @property {Boolean} [wireframe] - render as wireframe\r\n * @property {String} [colorScheme] - color scheme\r\n * @property {String} [colorScale] - color scale, either a string for a\r\n *                                 predefined scale or an array of\r\n *                                 colors to be used as the scale\r\n * @property {Boolean} [colorReverse] - reverse color scale\r\n * @property {Color} [colorValue] - color value\r\n * @property {Integer[]} [colorDomain] - scale value range\r\n * @property {Integer} colorDomain.0 - min value\r\n * @property {Integer} colorDomain.1 - max value\r\n * @property {String} [colorMode] - color mode, one of rgb, hsv, hsl, hsi, lab, hcl\r\n * @property {Float} [roughness] - how rough the material is, between 0 and 1\r\n * @property {Float} [metalness] - how metallic the material is, between 0 and 1\r\n * @property {Color} [diffuse] - diffuse color for lighting\r\n * @property {Boolean} [disablePicking] - disable picking\r\n */\r\n\r\n/**\r\n * Representation object\r\n * @interface\r\n * @param {Object} object - the object to be represented\r\n * @param {Viewer} viewer - a viewer object\r\n * @param {RepresentationParameters} [params] - representation parameters\r\n */\r\nclass Representation {\r\n  constructor (object, viewer, params) {\r\n    // eslint-disable-next-line no-unused-vars\r\n    const p = params || {}\r\n\r\n    this.type = ''\r\n\r\n    this.parameters = {\r\n\r\n      lazy: {\r\n        type: 'boolean'\r\n      },\r\n\r\n      clipNear: {\r\n        type: 'range', step: 1, max: 100, min: 0, buffer: true\r\n      },\r\n      clipRadius: {\r\n        type: 'number', precision: 1, max: 1000, min: 0, buffer: true\r\n      },\r\n      clipCenter: {\r\n        type: 'vector3', precision: 1, buffer: true\r\n      },\r\n      flatShaded: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      opacity: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      depthWrite: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      side: {\r\n        type: 'select',\r\n        buffer: true,\r\n        options: { front: 'front', back: 'back', double: 'double' }\r\n      },\r\n      wireframe: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n\r\n      colorScheme: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: {}\r\n      },\r\n      colorScale: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: ColormakerRegistry.getScales()\r\n      },\r\n      colorReverse: {\r\n        type: 'boolean', update: 'color'\r\n      },\r\n      colorValue: {\r\n        type: 'color', update: 'color'\r\n      },\r\n      colorDomain: {\r\n        type: 'hidden', update: 'color'\r\n      },\r\n      colorMode: {\r\n        type: 'select',\r\n        update: 'color',\r\n        options: ColormakerRegistry.getModes()\r\n      },\r\n\r\n      roughness: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      metalness: {\r\n        type: 'range', step: 0.01, max: 1, min: 0, buffer: true\r\n      },\r\n      diffuse: {\r\n        type: 'color', buffer: true\r\n      },\r\n\r\n      matrix: {\r\n        type: 'hidden', buffer: true\r\n      },\r\n\r\n      disablePicking: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }\r\n\r\n    /**\r\n     * @type {Viewer}\r\n     */\r\n    this.viewer = viewer\r\n\r\n    /**\r\n     * Counter that keeps track of tasks related to the creation of\r\n     * the representation, including surface calculations.\r\n     * @type {Counter}\r\n     */\r\n    this.tasks = new Counter()\r\n\r\n    /**\r\n     * @type {Queue}\r\n     * @private\r\n     */\r\n    this.queue = new Queue(this.make.bind(this))\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.bufferList = []\r\n\r\n    if (this.parameters.colorScheme) {\r\n      this.parameters.colorScheme.options = ColormakerRegistry.getSchemes()\r\n    }\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n\r\n    this.clipNear = defaults(p.clipNear, 0)\r\n    this.clipRadius = defaults(p.clipRadius, 0)\r\n    this.clipCenter = defaults(p.clipCenter, new Vector3())\r\n    this.flatShaded = defaults(p.flatShaded, false)\r\n    this.side = defaults(p.side, 'double')\r\n    this.opacity = defaults(p.opacity, 1.0)\r\n    this.depthWrite = defaults(p.depthWrite, true)\r\n    this.wireframe = defaults(p.wireframe, false)\r\n\r\n    this.setColor(p.color, p)\r\n\r\n    this.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    this.colorScale = defaults(p.colorScale, '')\r\n    this.colorReverse = defaults(p.colorReverse, false)\r\n    this.colorValue = defaults(p.colorValue, 0x909090)\r\n    this.colorDomain = defaults(p.colorDomain, undefined)\r\n    this.colorMode = defaults(p.colorMode, 'hcl')\r\n\r\n    this.visible = defaults(p.visible, true)\r\n    this.quality = defaults(p.quality, undefined)\r\n\r\n    this.roughness = defaults(p.roughness, 0.4)\r\n    this.metalness = defaults(p.metalness, 0.0)\r\n    this.diffuse = defaults(p.diffuse, 0xffffff)\r\n\r\n    this.lazy = defaults(p.lazy, false)\r\n    this.lazyProps = {\r\n      build: false,\r\n      bufferParams: {},\r\n      what: {}\r\n    }\r\n\r\n    this.matrix = defaults(p.matrix, new Matrix4())\r\n\r\n    this.disablePicking = defaults(p.disablePicking, false)\r\n\r\n    // handle common parameters when applicable\r\n\r\n    const tp = this.parameters\r\n\r\n    if (tp.sphereDetail === true) {\r\n      tp.sphereDetail = {\r\n        type: 'integer', max: 3, min: 0, rebuild: 'impostor'\r\n      }\r\n    }\r\n    if (tp.radialSegments === true) {\r\n      tp.radialSegments = {\r\n        type: 'integer', max: 25, min: 5, rebuild: 'impostor'\r\n      }\r\n    }\r\n    if (tp.openEnded === true) {\r\n      tp.openEnded = {\r\n        type: 'boolean', rebuild: 'impostor', buffer: true\r\n      }\r\n    }\r\n    if (tp.disableImpostor === true) {\r\n      tp.disableImpostor = {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n    }\r\n\r\n    if (p.quality === 'low') {\r\n      if (tp.sphereDetail) this.sphereDetail = 0\r\n      if (tp.radialSegments) this.radialSegments = 5\r\n    } else if (p.quality === 'medium') {\r\n      if (tp.sphereDetail) this.sphereDetail = 1\r\n      if (tp.radialSegments) this.radialSegments = 10\r\n    } else if (p.quality === 'high') {\r\n      if (tp.sphereDetail) this.sphereDetail = 2\r\n      if (tp.radialSegments) this.radialSegments = 20\r\n    } else {\r\n      if (tp.sphereDetail) {\r\n        this.sphereDetail = defaults(p.sphereDetail, 1)\r\n      }\r\n      if (tp.radialSegments) {\r\n        this.radialSegments = defaults(p.radialSegments, 10)\r\n      }\r\n    }\r\n\r\n    if (tp.openEnded) {\r\n      this.openEnded = defaults(p.openEnded, true)\r\n    }\r\n\r\n    if (tp.disableImpostor) {\r\n      this.disableImpostor = defaults(p.disableImpostor, false)\r\n    }\r\n  }\r\n\r\n  getColorParams (p) {\r\n    return Object.assign({\r\n\r\n      scheme: this.colorScheme,\r\n      scale: this.colorScale,\r\n      reverse: this.colorReverse,\r\n      value: this.colorValue,\r\n      domain: this.colorDomain,\r\n      mode: this.colorMode\r\n\r\n    }, p)\r\n  }\r\n\r\n  getBufferParams (p) {\r\n    return Object.assign({\r\n\r\n      clipNear: this.clipNear,\r\n      clipRadius: this.clipRadius,\r\n      clipCenter: this.clipCenter,\r\n      flatShaded: this.flatShaded,\r\n      opacity: this.opacity,\r\n      depthWrite: this.depthWrite,\r\n      side: this.side,\r\n      wireframe: this.wireframe,\r\n\r\n      roughness: this.roughness,\r\n      metalness: this.metalness,\r\n      diffuse: this.diffuse,\r\n\r\n      matrix: this.matrix,\r\n\r\n      disablePicking: this.disablePicking\r\n\r\n    }, p)\r\n  }\r\n\r\n  setColor (value, p) {\r\n    const types = Object.keys(ColormakerRegistry.getSchemes())\r\n\r\n    if (typeof value === 'string' && types.includes(value.toLowerCase())) {\r\n      if (p) {\r\n        p.colorScheme = value\r\n      } else {\r\n        this.setParameters({ colorScheme: value })\r\n      }\r\n    } else if (value !== undefined) {\r\n      value = new Color(value).getHex()\r\n      if (p) {\r\n        p.colorScheme = 'uniform'\r\n        p.colorValue = value\r\n      } else {\r\n        this.setParameters({\r\n          colorScheme: 'uniform', colorValue: value\r\n        })\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  // TODO\r\n  // get prepare(){ return false; }\r\n\r\n  create () {\r\n\r\n    // this.bufferList.length = 0;\r\n\r\n  }\r\n\r\n  update () {\r\n    this.build()\r\n  }\r\n\r\n  build (updateWhat) {\r\n    if (this.lazy && !this.visible) {\r\n      this.lazyProps.build = true\r\n      return\r\n    }\r\n\r\n    if (!this.prepare) {\r\n      this.tasks.increment()\r\n      this.make()\r\n      return\r\n    }\r\n\r\n    // don't let tasks accumulate\r\n    if (this.queue.length() > 0) {\r\n      this.tasks.change(1 - this.queue.length())\r\n      this.queue.kill()\r\n    } else {\r\n      this.tasks.increment()\r\n    }\r\n\r\n    this.queue.push(updateWhat || false)\r\n  }\r\n\r\n  make (updateWhat, callback) {\r\n    if (Debug) Log.time('Representation.make ' + this.type)\r\n\r\n    const _make = function () {\r\n      if (updateWhat) {\r\n        this.update(updateWhat)\r\n        this.viewer.requestRender()\r\n        this.tasks.decrement()\r\n        if (callback) callback()\r\n      } else {\r\n        this.clear()\r\n        this.create()\r\n        if (!this.manualAttach && !this.disposed) {\r\n          if (Debug) Log.time('Representation.attach ' + this.type)\r\n          this.attach(function () {\r\n            if (Debug) Log.timeEnd('Representation.attach ' + this.type)\r\n            this.tasks.decrement()\r\n            if (callback) callback()\r\n          }.bind(this))\r\n        }\r\n      }\r\n\r\n      if (Debug) Log.timeEnd('Representation.make ' + this.type)\r\n    }.bind(this)\r\n\r\n    if (this.prepare) {\r\n      this.prepare(_make)\r\n    } else {\r\n      _make()\r\n    }\r\n  }\r\n\r\n  attach (callback) {\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the representation\r\n   * @param {Boolean} value - visibility flag\r\n   * @param {Boolean} [noRenderRequest] - whether or not to request a re-render from the viewer\r\n   * @return {Representation} this object\r\n   */\r\n  setVisibility (value, noRenderRequest) {\r\n    this.visible = value\r\n\r\n    if (this.visible) {\r\n      const lazyProps = this.lazyProps\r\n      const bufferParams = lazyProps.bufferParams\r\n      const what = lazyProps.what\r\n\r\n      if (lazyProps.build) {\r\n        lazyProps.build = false\r\n        this.build()\r\n        return\r\n      } else if (Object.keys(bufferParams).length || Object.keys(what).length) {\r\n        lazyProps.bufferParams = {}\r\n        lazyProps.what = {}\r\n        this.updateParameters(bufferParams, what)\r\n      }\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setVisibility(value)\r\n    })\r\n\r\n    if (!noRenderRequest) this.viewer.requestRender()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set the visibility of the representation\r\n   * @param {RepresentationParameters} params - parameters object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {Representation} this object\r\n   */\r\n  setParameters (params, what, rebuild) {\r\n    const p = params || {}\r\n    const tp = this.parameters\r\n\r\n    this.setColor(p.color, p)\r\n\r\n    what = what || {}\r\n    rebuild = rebuild || false\r\n\r\n    const bufferParams = {}\r\n\r\n    for (let name in p) {\r\n      if (p[ name ] === undefined) continue\r\n      if (tp[ name ] === undefined) continue\r\n\r\n      if (tp[ name ].int) p[ name ] = parseInt(p[ name ])\r\n      if (tp[ name ].float) p[ name ] = parseFloat(p[ name ])\r\n\r\n      // no value change\r\n      if (p[ name ] === this[ name ] && (\r\n          !p[ name ].equals || p[ name ].equals(this[ name ])\r\n        )\r\n      ) continue\r\n\r\n      if (this[ name ] && this[ name ].set) {\r\n        this[ name ].set(p[ name ])\r\n      } else {\r\n        this[ name ] = p[ name ]\r\n      }\r\n\r\n      // buffer param\r\n      if (tp[ name ].buffer) {\r\n        if (tp[ name ].buffer === true) {\r\n          bufferParams[ name ] = p[ name ]\r\n        } else {\r\n          bufferParams[ tp[ name ].buffer ] = p[ name ]\r\n        }\r\n      }\r\n\r\n      // mark for update\r\n      if (tp[ name ].update) {\r\n        what[ tp[ name ].update ] = true\r\n      }\r\n\r\n      // mark for rebuild\r\n      if (tp[ name ].rebuild &&\r\n        !(tp[ name ].rebuild === 'impostor' &&\r\n          ExtensionFragDepth && !this.disableImpostor)\r\n      ) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (rebuild) {\r\n      this.build()\r\n    } else {\r\n      this.updateParameters(bufferParams, what)\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  updateParameters (bufferParams, what) {\r\n    if (this.lazy && !this.visible) {\r\n      Object.assign(this.lazyProps.bufferParams, bufferParams)\r\n      Object.assign(this.lazyProps.what, what)\r\n      return\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setParameters(bufferParams)\r\n    })\r\n\r\n    if (Object.keys(what).length) {\r\n      this.update(what)  // update buffer attribute\r\n    }\r\n\r\n    this.viewer.requestRender()\r\n  }\r\n\r\n  getParameters () {\r\n    const params = {\r\n      lazy: this.lazy,\r\n      visible: this.visible,\r\n      quality: this.quality\r\n    }\r\n\r\n    Object.keys(this.parameters).forEach(name => {\r\n      if (this.parameters[ name ] !== null) {\r\n        params[ name ] = this[ name ]\r\n      }\r\n    })\r\n\r\n    return params\r\n  }\r\n\r\n  clear () {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.remove(buffer)\r\n      buffer.dispose()\r\n    })\r\n    this.bufferList.length = 0\r\n\r\n    this.viewer.requestRender()\r\n  }\r\n\r\n  dispose () {\r\n    this.disposed = true\r\n    this.queue.kill()\r\n    this.tasks.dispose()\r\n    this.clear()\r\n  }\r\n}\r\n\r\nexport default Representation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2584,
    "kind": "typedef",
    "name": "RepresentationParameters",
    "memberof": "src/representation/representation.js",
    "static": true,
    "longname": "src/representation/representation.js~RepresentationParameters",
    "access": "public",
    "description": "Representation parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "lazy",
        "description": "only build & update the representation when visible\n                           otherwise defer changes until set visible again"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "clipNear",
        "description": "position of camera near/front clipping plane\n                               in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "clipRadius",
        "description": "radius of clipping sphere"
      },
      {
        "nullable": null,
        "types": [
          "Vector3"
        ],
        "spread": false,
        "optional": true,
        "name": "clipCenter",
        "description": "position of for spherical clipping"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "flatShaded",
        "description": "render flat shaded"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "opacity",
        "description": "translucency: 1 is fully opaque, 0 is fully transparent"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "depthWrite",
        "description": "depth write"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "side",
        "description": "which triangle sides to render, \"front\" front-side,\n                           \"back\" back-side, \"double\" front- and back-side"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "wireframe",
        "description": "render as wireframe"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "colorScheme",
        "description": "color scheme"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "colorScale",
        "description": "color scale, either a string for a\n                                predefined scale or an array of\n                                colors to be used as the scale"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "colorReverse",
        "description": "reverse color scale"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": true,
        "name": "colorValue",
        "description": "color value"
      },
      {
        "nullable": null,
        "types": [
          "Integer[]"
        ],
        "spread": false,
        "optional": true,
        "name": "colorDomain",
        "description": "scale value range"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "colorDomain.0",
        "description": "min value"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "colorDomain.1",
        "description": "max value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "colorMode",
        "description": "color mode, one of rgb, hsv, hsl, hsi, lab, hcl"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "roughness",
        "description": "how rough the material is, between 0 and 1"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "metalness",
        "description": "how metallic the material is, between 0 and 1"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": true,
        "name": "diffuse",
        "description": "diffuse color for lighting"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "disablePicking",
        "description": "disable picking"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "RepresentationParameters"
    }
  },
  {
    "__docId__": 2585,
    "kind": "class",
    "name": "Representation",
    "memberof": "src/representation/representation.js",
    "static": true,
    "longname": "src/representation/representation.js~Representation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/representation.js",
    "importStyle": "Representation",
    "description": "Representation object",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the object to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "representation parameters"
      }
    ],
    "interface": true
  },
  {
    "__docId__": 2586,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2587,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#type",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 2588,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2589,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 2590,
    "kind": "member",
    "name": "tasks",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#tasks",
    "access": "public",
    "description": "Counter that keeps track of tasks related to the creation of\nthe representation, including surface calculations.",
    "lineNumber": 147,
    "type": {
      "nullable": null,
      "types": [
        "Counter"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2591,
    "kind": "member",
    "name": "queue",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#queue",
    "access": "private",
    "description": "",
    "lineNumber": 153,
    "type": {
      "nullable": null,
      "types": [
        "Queue"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2592,
    "kind": "member",
    "name": "bufferList",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#bufferList",
    "access": "private",
    "description": "",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2593,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#init",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 2594,
    "kind": "member",
    "name": "clipNear",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#clipNear",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true
  },
  {
    "__docId__": 2595,
    "kind": "member",
    "name": "clipRadius",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#clipRadius",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 2596,
    "kind": "member",
    "name": "clipCenter",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#clipCenter",
    "access": "public",
    "description": null,
    "lineNumber": 171,
    "undocument": true
  },
  {
    "__docId__": 2597,
    "kind": "member",
    "name": "flatShaded",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#flatShaded",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "undocument": true
  },
  {
    "__docId__": 2598,
    "kind": "member",
    "name": "side",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#side",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true
  },
  {
    "__docId__": 2599,
    "kind": "member",
    "name": "opacity",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#opacity",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 2600,
    "kind": "member",
    "name": "depthWrite",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#depthWrite",
    "access": "public",
    "description": null,
    "lineNumber": 175,
    "undocument": true
  },
  {
    "__docId__": 2601,
    "kind": "member",
    "name": "wireframe",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#wireframe",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 2602,
    "kind": "member",
    "name": "colorScheme",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorScheme",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true
  },
  {
    "__docId__": 2603,
    "kind": "member",
    "name": "colorScale",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorScale",
    "access": "public",
    "description": null,
    "lineNumber": 181,
    "undocument": true
  },
  {
    "__docId__": 2604,
    "kind": "member",
    "name": "colorReverse",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorReverse",
    "access": "public",
    "description": null,
    "lineNumber": 182,
    "undocument": true
  },
  {
    "__docId__": 2605,
    "kind": "member",
    "name": "colorValue",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorValue",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true
  },
  {
    "__docId__": 2606,
    "kind": "member",
    "name": "colorDomain",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorDomain",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 2607,
    "kind": "member",
    "name": "colorMode",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#colorMode",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 2608,
    "kind": "member",
    "name": "visible",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#visible",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true
  },
  {
    "__docId__": 2609,
    "kind": "member",
    "name": "quality",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#quality",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 2610,
    "kind": "member",
    "name": "roughness",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#roughness",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 2611,
    "kind": "member",
    "name": "metalness",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#metalness",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 2612,
    "kind": "member",
    "name": "diffuse",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#diffuse",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 2613,
    "kind": "member",
    "name": "lazy",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#lazy",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 2614,
    "kind": "member",
    "name": "lazyProps",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#lazyProps",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true
  },
  {
    "__docId__": 2615,
    "kind": "member",
    "name": "matrix",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true
  },
  {
    "__docId__": 2616,
    "kind": "member",
    "name": "disablePicking",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#disablePicking",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true
  },
  {
    "__docId__": 2617,
    "kind": "member",
    "name": "sphereDetail",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#sphereDetail",
    "access": "public",
    "description": null,
    "lineNumber": 231,
    "undocument": true
  },
  {
    "__docId__": 2618,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#radialSegments",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 2625,
    "kind": "member",
    "name": "openEnded",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#openEnded",
    "access": "public",
    "description": null,
    "lineNumber": 249,
    "undocument": true
  },
  {
    "__docId__": 2626,
    "kind": "member",
    "name": "disableImpostor",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#disableImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 253,
    "undocument": true
  },
  {
    "__docId__": 2627,
    "kind": "method",
    "name": "getColorParams",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#getColorParams",
    "access": "public",
    "description": null,
    "lineNumber": 257,
    "undocument": true
  },
  {
    "__docId__": 2628,
    "kind": "method",
    "name": "getBufferParams",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#getBufferParams",
    "access": "public",
    "description": null,
    "lineNumber": 270,
    "undocument": true
  },
  {
    "__docId__": 2629,
    "kind": "method",
    "name": "setColor",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#setColor",
    "access": "public",
    "description": null,
    "lineNumber": 293,
    "undocument": true
  },
  {
    "__docId__": 2630,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#create",
    "access": "public",
    "description": null,
    "lineNumber": 320,
    "undocument": true
  },
  {
    "__docId__": 2631,
    "kind": "method",
    "name": "update",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#update",
    "access": "public",
    "description": null,
    "lineNumber": 326,
    "undocument": true
  },
  {
    "__docId__": 2632,
    "kind": "method",
    "name": "build",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#build",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true
  },
  {
    "__docId__": 2633,
    "kind": "method",
    "name": "make",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#make",
    "access": "public",
    "description": null,
    "lineNumber": 353,
    "undocument": true
  },
  {
    "__docId__": 2634,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 385,
    "undocument": true
  },
  {
    "__docId__": 2635,
    "kind": "method",
    "name": "setVisibility",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#setVisibility",
    "access": "public",
    "description": "Set the visibility of the representation",
    "lineNumber": 397,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "visibility flag"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "noRenderRequest",
        "description": "whether or not to request a re-render from the viewer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Representation"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2637,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#setParameters",
    "access": "public",
    "description": "Set the visibility of the representation",
    "lineNumber": 438,
    "params": [
      {
        "nullable": null,
        "types": [
          "RepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "what",
        "description": "buffer data attributes to be updated,\n                       note that this needs to be implemented in the\n                       derived classes. Generally it allows more\n                       fine-grained control over updating than\n                       forcing a rebuild."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.position",
        "description": "update position data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.color",
        "description": "update color data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "rebuild",
        "description": "whether or not to rebuild the representation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Representation"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2638,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 465,
    "undocument": true
  },
  {
    "__docId__": 2639,
    "kind": "method",
    "name": "updateParameters",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#updateParameters",
    "access": "public",
    "description": null,
    "lineNumber": 502,
    "undocument": true
  },
  {
    "__docId__": 2640,
    "kind": "method",
    "name": "getParameters",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 520,
    "undocument": true
  },
  {
    "__docId__": 2641,
    "kind": "method",
    "name": "clear",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#clear",
    "access": "public",
    "description": null,
    "lineNumber": 536,
    "undocument": true
  },
  {
    "__docId__": 2642,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/representation/representation.js~Representation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/representation.js~Representation#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 546,
    "undocument": true
  },
  {
    "__docId__": 2643,
    "kind": "member",
    "name": "disposed",
    "memberof": "src/representation/representation.js~Representation",
    "static": false,
    "longname": "src/representation/representation.js~Representation#disposed",
    "access": "public",
    "description": null,
    "lineNumber": 547,
    "undocument": true
  },
  {
    "__docId__": 2644,
    "kind": "file",
    "name": "src/representation/ribbon-representation.js",
    "content": "/**\r\n * @file Ribbon Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Spline from '../geometry/spline.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport RibbonBuffer from '../buffer/ribbon-buffer.js'\r\n\r\n/**\r\n * Ribbon Representation\r\n */\r\nclass RibbonRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'ribbon'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      side: null,\r\n      wireframe: null,\r\n      linewidth: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n    p.radius = defaults(p.radius, 'sstruc')\r\n    p.scale = defaults(p.scale, 4.0)\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: true,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  createData (sview) {\r\n    var bufferList = []\r\n    var polymerList = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var spline = new Spline(polymer, this.getSplineParams())\r\n      var subPos = spline.getSubdividedPosition()\r\n      var subOri = spline.getSubdividedOrientation()\r\n      var subCol = spline.getSubdividedColor(this.getColorParams())\r\n      var subPick = spline.getSubdividedPicking()\r\n      var subSize = spline.getSubdividedSize(this.radius, this.scale)\r\n\r\n      bufferList.push(\r\n        new RibbonBuffer(\r\n          {\r\n            position: subPos.position,\r\n            normal: subOri.binormal,\r\n            dir: subOri.normal,\r\n            color: subCol.color,\r\n            size: subSize.size,\r\n            picking: subPick.picking\r\n          },\r\n            this.getBufferParams()\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    what = what || {}\r\n\r\n    var i = 0\r\n    var n = data.polymerList.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var bufferData = {}\r\n      var spline = new Spline(data.polymerList[ i ], this.getSplineParams())\r\n\r\n      if (what.position) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        var subOri = spline.getSubdividedOrientation()\r\n        bufferData.position = subPos.position\r\n        bufferData.normal = subOri.binormal\r\n        bufferData.dir = subOri.normal\r\n      }\r\n\r\n      if (what.radius || what.scale) {\r\n        var subSize = spline.getSubdividedSize(this.radius, this.scale)\r\n        bufferData.size = subSize.size\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        bufferData.color = subCol.color\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.tension) {\r\n      what.position = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('ribbon', RibbonRepresentation)\r\n\r\nexport default RibbonRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/ribbon-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2645,
    "kind": "class",
    "name": "RibbonRepresentation",
    "memberof": "src/representation/ribbon-representation.js",
    "static": true,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/ribbon-representation.js",
    "importStyle": "RibbonRepresentation",
    "description": "Ribbon Representation",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2646,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2647,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2648,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2649,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2650,
    "kind": "member",
    "name": "subdiv",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#subdiv",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2654,
    "kind": "member",
    "name": "tension",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#tension",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 2655,
    "kind": "member",
    "name": "smoothSheet",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#smoothSheet",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 2656,
    "kind": "method",
    "name": "getSplineParams",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#getSplineParams",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2657,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 2658,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2659,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/ribbon-representation.js~RibbonRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/ribbon-representation.js~RibbonRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2660,
    "kind": "file",
    "name": "src/representation/rocket-representation.js",
    "content": "/**\r\n * @file Rocket Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { AtomPicker } from '../utils/picker.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport Helixbundle from '../geometry/helixbundle.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Rocket Representation\r\n */\r\nclass RocketRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'rocket'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      localAngle: {\r\n        type: 'integer', max: 180, min: 0, rebuild: true\r\n      },\r\n      centerDist: {\r\n        type: 'number', precision: 1, max: 10, min: 0, rebuild: true\r\n      },\r\n      ssBorder: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      radialSegments: true,\r\n      openEnded: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters)\r\n\r\n    this.helixbundleList = []\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'sstruc')\r\n    p.radius = defaults(p.radius, 1.5)\r\n    p.scale = defaults(p.scale, 1.0)\r\n    p.openEnded = defaults(p.openEnded, false)\r\n\r\n    this.localAngle = defaults(p.localAngle, 30)\r\n    this.centerDist = defaults(p.centerDist, 2.5)\r\n    this.ssBorder = defaults(p.ssBorder, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    var length = 0\r\n    var axisList = []\r\n    var helixbundleList = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4 || polymer.isNucleic()) return\r\n\r\n      var helixbundle = new Helixbundle(polymer)\r\n      var axis = helixbundle.getAxis(\r\n        this.localAngle, this.centerDist, this.ssBorder,\r\n        this.getColorParams(), this.radius, this.scale\r\n      )\r\n\r\n      length += axis.size.length\r\n      axisList.push(axis)\r\n      helixbundleList.push(helixbundle)\r\n    }, sview.getSelection())\r\n\r\n    var axisData = {\r\n      begin: new Float32Array(length * 3),\r\n      end: new Float32Array(length * 3),\r\n      size: new Float32Array(length),\r\n      color: new Float32Array(length * 3),\r\n      picking: new Float32Array(length)\r\n    }\r\n\r\n    var offset = 0\r\n\r\n    axisList.forEach(function (axis) {\r\n      axisData.begin.set(axis.begin, offset * 3)\r\n      axisData.end.set(axis.end, offset * 3)\r\n      axisData.size.set(axis.size, offset)\r\n      axisData.color.set(axis.color, offset * 3)\r\n      axisData.picking.set(axis.picking.array, offset)\r\n      offset += axis.size.length\r\n    })\r\n\r\n    if (length) {\r\n      axisData.picking = new AtomPicker(\r\n        axisData.picking, sview.getStructure()\r\n      )\r\n    }\r\n\r\n    var cylinderBuffer = new CylinderBuffer(\r\n      {\r\n        position1: axisData.begin,\r\n        position2: axisData.end,\r\n        color: axisData.color,\r\n        color2: axisData.color,\r\n        radius: axisData.size,\r\n        picking: axisData.picking\r\n      },\r\n      this.getBufferParams({\r\n        openEnded: this.openEnded,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ cylinderBuffer ],\r\n      axisList: axisList,\r\n      helixbundleList: helixbundleList,\r\n      axisData: axisData\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    what = what || {}\r\n\r\n    if (what.position) {\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    var cylinderData = {}\r\n\r\n    if (what.color || what.radius) {\r\n      var offset = 0\r\n\r\n      data.helixbundleList.forEach(helixbundle => {\r\n        var axis = helixbundle.getAxis(\r\n          this.localAngle, this.centerDist, this.ssBorder,\r\n          this.getColorParams(), this.radius, this.scale\r\n        )\r\n        if (what.color) {\r\n          data.axisData.color.set(axis.color, offset * 3)\r\n        }\r\n        if (what.radius || what.scale) {\r\n          data.axisData.size.set(axis.size, offset)\r\n        }\r\n        offset += axis.size.length\r\n      })\r\n\r\n      if (what.color) {\r\n        cylinderData.color = data.axisData.color\r\n        cylinderData.color2 = data.axisData.color\r\n      }\r\n\r\n      if (what.radius || what.scale) {\r\n        cylinderData.radius = data.axisData.size\r\n      }\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('rocket', RocketRepresentation)\r\n\r\nexport default RocketRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/rocket-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2661,
    "kind": "class",
    "name": "RocketRepresentation",
    "memberof": "src/representation/rocket-representation.js",
    "static": true,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/rocket-representation.js",
    "importStyle": "RocketRepresentation",
    "description": "Rocket Representation",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2662,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2663,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2664,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2665,
    "kind": "member",
    "name": "helixbundleList",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#helixbundleList",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2666,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2667,
    "kind": "member",
    "name": "localAngle",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#localAngle",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2668,
    "kind": "member",
    "name": "centerDist",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#centerDist",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2669,
    "kind": "member",
    "name": "ssBorder",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#ssBorder",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2670,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 2671,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/rocket-representation.js~RocketRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rocket-representation.js~RocketRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true
  },
  {
    "__docId__": 2672,
    "kind": "file",
    "name": "src/representation/rope-representation.js",
    "content": "/**\r\n * @file Rope Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport CartoonRepresentation from './cartoon-representation.js'\r\nimport Helixorient from '../geometry/helixorient.js'\r\nimport Spline from '../geometry/spline.js'\r\n\r\n/**\r\n * Rope Representation\r\n */\r\nclass RopeRepresentation extends CartoonRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'rope'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      smooth: {\r\n        type: 'integer', max: 15, min: 0, rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n      aspectRatio: null,\r\n      smoothSheet: null\r\n    })\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n    p.tension = defaults(p.tension, 0.5)\r\n    p.scale = defaults(p.scale, 5.0)\r\n    p.smoothSheet = false\r\n\r\n    this.smooth = defaults(p.smooth, 2)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSpline (polymer) {\r\n    var helixorient = new Helixorient(polymer)\r\n\r\n    return new Spline(polymer, this.getSplineParams({\r\n      directional: false,\r\n      positionIterator: helixorient.getCenterIterator(this.smooth)\r\n    }))\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('rope', RopeRepresentation)\r\n\r\nexport default RopeRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/rope-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2673,
    "kind": "class",
    "name": "RopeRepresentation",
    "memberof": "src/representation/rope-representation.js",
    "static": true,
    "longname": "src/representation/rope-representation.js~RopeRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/rope-representation.js",
    "importStyle": "RopeRepresentation",
    "description": "Rope Representation",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/representation/cartoon-representation.js~CartoonRepresentation"
    ]
  },
  {
    "__docId__": 2674,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2675,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2676,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2677,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2678,
    "kind": "member",
    "name": "smooth",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#smooth",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 2679,
    "kind": "method",
    "name": "getSpline",
    "memberof": "src/representation/rope-representation.js~RopeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/rope-representation.js~RopeRepresentation#getSpline",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 2680,
    "kind": "file",
    "name": "src/representation/slice-representation.js",
    "content": "/**\r\n * @file Slice Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Representation from './representation.js'\r\nimport ImageBuffer from '../buffer/image-buffer.js'\r\nimport VolumeSlice from '../surface/volume-slice.js'\r\n\r\n/**\r\n * Slice representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} SliceRepresentationParameters - slice representation parameters\r\n *\r\n * @property {String} filter - filter applied to map the volume data on the slice, one of \"nearest\", \"linear\", \"cubic-bspline\", \"cubic-catmulrom\", \"cubic-mitchell\".\r\n * @property {String} positionType - Meaning of the position value. Either \"persent\" od \"coordinate\".\r\n * @property {Number} position - position of the slice.\r\n * @property {String} dimension - one of \"x\", \"y\" or \"z\"\r\n * @property {String} thresholdType - Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Number} thresholdMin - Minimum value to be displayed. For volume data only.\r\n * @property {Number} thresholdMax - Maximum value to be displayed. For volume data only.\r\n * @property {Boolean} normalize - Flag indicating wheather to normalize the data in a slice when coloring.\r\n */\r\n\r\n/**\r\n * Slice representation\r\n */\r\nclass SliceRepresentation extends Representation {\r\n  /**\r\n   * Create Slice representation object\r\n   * @param {Volume} surface - the volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {SliceRepresentationParameters} params - slice representation parameters\r\n   */\r\n  constructor (volume, viewer, params) {\r\n    super(volume, viewer, params)\r\n\r\n    this.type = 'slice'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      filter: {\r\n        type: 'select',\r\n        buffer: true,\r\n        options: {\r\n          'nearest': 'nearest',\r\n          'linear': 'linear',\r\n          'cubic-bspline': 'cubic-bspline',\r\n          'cubic-catmulrom': 'cubic-catmulrom',\r\n          'cubic-mitchell': 'cubic-mitchell'\r\n        }\r\n      },\r\n      positionType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'percent': 'percent', 'coordinate': 'coordinate'\r\n        }\r\n      },\r\n      position: {\r\n        type: 'range',\r\n        step: 0.1,\r\n        max: 100,\r\n        min: 1,\r\n        rebuild: true\r\n      },\r\n      dimension: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'x': 'x', 'y': 'y', 'z': 'z'\r\n        }\r\n      },\r\n      thresholdType: {\r\n        type: 'select',\r\n        rebuild: true,\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      thresholdMin: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      thresholdMax: {\r\n        type: 'number', precision: 3, max: Infinity, min: -Infinity, rebuild: true\r\n      },\r\n      normalize: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null,\r\n      linewidth: null,\r\n      colorScheme: null,\r\n\r\n      roughness: null,\r\n      metalness: null,\r\n      diffuse: null\r\n\r\n    })\r\n\r\n    this.volume = volume\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const v = this.volume\r\n    const p = params || {}\r\n    p.colorDomain = defaults(p.colorDomain, [ v.min, v.max ])\r\n    p.colorScheme = defaults(p.colorScheme, 'value')\r\n    p.colorScale = defaults(p.colorScale, 'Spectral')\r\n\r\n    this.colorScheme = 'value'\r\n    this.dimension = defaults(p.dimension, 'x')\r\n    this.filter = defaults(p.filter, 'cubic-bspline')\r\n    this.positionType = defaults(p.positionType, 'percent')\r\n    this.position = defaults(p.position, 30)\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.normalize = defaults(p.normalize, false)\r\n\r\n    super.init(p)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  create () {\r\n    const volumeSlice = new VolumeSlice(this.volume, {\r\n      positionType: this.positionType,\r\n      position: this.position,\r\n      dimension: this.dimension,\r\n      thresholdType: this.thresholdType,\r\n      thresholdMin: this.thresholdMin,\r\n      thresholdMax: this.thresholdMax,\r\n      normalize: this.normalize\r\n    })\r\n\r\n    const sliceBuffer = new ImageBuffer(\r\n      volumeSlice.getData({ colorParams: this.getColorParams() }),\r\n      this.getBufferParams({\r\n        filter: this.filter\r\n      })\r\n    )\r\n\r\n    this.bufferList.push(sliceBuffer)\r\n  }\r\n}\r\n\r\nexport default SliceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/slice-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2681,
    "kind": "typedef",
    "name": "SliceRepresentationParameters",
    "memberof": "src/representation/slice-representation.js",
    "static": true,
    "longname": "src/representation/slice-representation.js~SliceRepresentationParameters",
    "access": "public",
    "description": "Slice representation parameter object. Extends {@link RepresentationParameters}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "filter applied to map the volume data on the slice, one of \"nearest\", \"linear\", \"cubic-bspline\", \"cubic-catmulrom\", \"cubic-mitchell\"."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "positionType",
        "description": "Meaning of the position value. Either \"persent\" od \"coordinate\"."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "position of the slice."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "dimension",
        "description": "one of \"x\", \"y\" or \"z\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdType",
        "description": "Meaning of the threshold values. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdMin",
        "description": "Minimum value to be displayed. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "thresholdMax",
        "description": "Maximum value to be displayed. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "normalize",
        "description": "Flag indicating wheather to normalize the data in a slice when coloring."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SliceRepresentationParameters"
    }
  },
  {
    "__docId__": 2682,
    "kind": "class",
    "name": "SliceRepresentation",
    "memberof": "src/representation/slice-representation.js",
    "static": true,
    "longname": "src/representation/slice-representation.js~SliceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/slice-representation.js",
    "importStyle": "SliceRepresentation",
    "description": "Slice representation",
    "lineNumber": 30,
    "interface": false,
    "extends": [
      "src/representation/representation.js~Representation"
    ]
  },
  {
    "__docId__": 2683,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#constructor",
    "access": "public",
    "description": "Create Slice representation object",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "surface",
        "description": "the volume to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "SliceRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "slice representation parameters"
      }
    ]
  },
  {
    "__docId__": 2684,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2685,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 2686,
    "kind": "member",
    "name": "volume",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#volume",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 2687,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2688,
    "kind": "member",
    "name": "colorScheme",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#colorScheme",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 2689,
    "kind": "member",
    "name": "dimension",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#dimension",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true
  },
  {
    "__docId__": 2690,
    "kind": "member",
    "name": "filter",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#filter",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 2691,
    "kind": "member",
    "name": "positionType",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#positionType",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 2692,
    "kind": "member",
    "name": "position",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#position",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true
  },
  {
    "__docId__": 2693,
    "kind": "member",
    "name": "thresholdType",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#thresholdType",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 2694,
    "kind": "member",
    "name": "thresholdMin",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#thresholdMin",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true
  },
  {
    "__docId__": 2695,
    "kind": "member",
    "name": "thresholdMax",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#thresholdMax",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 2696,
    "kind": "member",
    "name": "normalize",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#normalize",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 2697,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 2698,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/slice-representation.js~SliceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/slice-representation.js~SliceRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 2699,
    "kind": "file",
    "name": "src/representation/spacefill-representation.js",
    "content": "/**\r\n * @file Spacefill Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\n\r\n/**\r\n * Spacefill Representation\r\n */\r\nclass SpacefillRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'spacefill'\r\n\r\n    this.parameters = Object.assign({\r\n      sphereDetail: true,\r\n      disableImpostor: true\r\n    }, this.parameters)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    var sphereBuffer = new SphereBuffer(\r\n      sview.getAtomData(this.getAtomParams()),\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        dullInterior: true,\r\n        disableImpostor: this.disableImpostor\r\n      })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ sphereBuffer ]\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    var atomData = data.sview.getAtomData(this.getAtomParams(what))\r\n    var sphereData = {}\r\n\r\n    if (!what || what.position) {\r\n      sphereData.position = atomData.position\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      sphereData.color = atomData.color\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      sphereData.radius = atomData.radius\r\n    }\r\n\r\n    data.bufferList[ 0 ].setAttributes(sphereData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('spacefill', SpacefillRepresentation)\r\n\r\nexport default SpacefillRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/spacefill-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2700,
    "kind": "class",
    "name": "SpacefillRepresentation",
    "memberof": "src/representation/spacefill-representation.js",
    "static": true,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/spacefill-representation.js",
    "importStyle": "SpacefillRepresentation",
    "description": "Spacefill Representation",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2701,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 2702,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2703,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2704,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 2705,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2706,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/spacefill-representation.js~SpacefillRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/spacefill-representation.js~SpacefillRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 2707,
    "kind": "file",
    "name": "src/representation/structure-representation.js",
    "content": "/**\r\n * @file Structure Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ExtensionFragDepth, Mobile } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Representation from './representation.js'\r\nimport Selection from '../selection/selection.js'\r\nimport RadiusFactory from '../utils/radius-factory.js'\r\n\r\n/**\r\n * Structure representation parameter object.\r\n * @typedef {Object} StructureRepresentationParameters - structure representation parameters\r\n * @mixes RepresentationParameters\r\n *\r\n * @property {String} radiusType - A list of possible sources of the radius used for rendering the representation. The radius can be based on the *vdW radius*, the *covalent radius* or the *B-factor* value of the corresponding atom. Additionally the radius can be based on the *secondary structure*. Alternatively, when set to *size*, the value from the *radius* parameter is used for all atoms.\r\n * @property {Float} radius - A number providing a fixed radius used for rendering the representation.\r\n * @property {Float} scale - A number that scales the value defined by the *radius* or the *radiusType* parameter.\r\n * @property {String} assembly - name of an assembly object. Included are the asymmetric unit (*AU*) corresponding to the coordinates given in the structure file, biological assemblies from *PDB*, *mmCIF* or *MMTF* files (*BU1*, *BU2*, ...), a filled (crystallographic) unitcell of a given space group (*UNITCELL*), a supercell consisting of a center unitcell and its 26 direct neighbors (*SUPERCELL*). Set to *default* to use the default asemmbly of the structure object.\r\n */\r\n\r\n/**\r\n * Structure representation\r\n * @interface\r\n */\r\nclass StructureRepresentation extends Representation {\r\n  /**\r\n   * Create Structure representation object\r\n   * @param {Structure} structure - the structure to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {StructureRepresentationParameters} params - structure representation parameters\r\n   */\r\n  constructor (structure, viewer, params) {\r\n    const p = params || {}\r\n\r\n    super(structure, viewer, p)\r\n\r\n    this.type = 'structure'\r\n\r\n    this.parameters = Object.assign({\r\n      radiusType: {\r\n        type: 'select', options: RadiusFactory.types\r\n      },\r\n      radius: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      scale: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      assembly: null,\r\n      defaultAssembly: {\r\n        type: 'hidden'\r\n      }\r\n    }, this.parameters)\r\n\r\n    /**\r\n     * @type {Selection}\r\n     * @private\r\n     */\r\n    this.selection = new Selection(p.sele)\r\n\r\n    /**\r\n     * @type {Array}\r\n     * @private\r\n     */\r\n    this.dataList = []\r\n\r\n    /**\r\n     * @type {Structure}\r\n     */\r\n    this.structure = structure\r\n\r\n    /**\r\n     * @type {StructureView}\r\n     */\r\n    this.structureView = this.structure.getView(this.selection)\r\n\r\n    if (structure.biomolDict) {\r\n      const biomolOptions = {\r\n        'default': 'default',\r\n        '': (structure.unitcell ? 'AU' : 'FULL')\r\n      }\r\n      Object.keys(structure.biomolDict).forEach(function (k) {\r\n        biomolOptions[ k ] = k\r\n      })\r\n      this.parameters.assembly = {\r\n        type: 'select',\r\n        options: biomolOptions,\r\n        rebuild: true\r\n      }\r\n    } else {\r\n      this.parameters.assembly = null\r\n    }\r\n  }\r\n\r\n  get defaultScale () {\r\n    return {\r\n      'vdw': 1.0,\r\n      'covalent': 1.0,\r\n      'bfactor': 0.01,\r\n      'sstruc': 1.0\r\n    }\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'element')\r\n\r\n    this.radius = defaults(p.radius, 'vdw')\r\n    this.scale = defaults(p.scale, 1.0)\r\n    this.assembly = defaults(p.assembly, 'default')\r\n    this.defaultAssembly = defaults(p.defaultAssembly, '')\r\n\r\n    if (p.quality === 'auto') {\r\n      p.quality = this.getQuality()\r\n    }\r\n\r\n    super.init(p)\r\n\r\n    this.selection.signals.stringChanged.add(function (/* sele */) {\r\n      this.build()\r\n    }, this)\r\n\r\n    this.build()\r\n  }\r\n\r\n  getAssembly () {\r\n    const name = this.assembly === 'default' ? this.defaultAssembly : this.assembly\r\n    return this.structure.biomolDict[ name ]\r\n  }\r\n\r\n  getQuality () {\r\n    let atomCount\r\n    const s = this.structureView\r\n    const assembly = this.getAssembly()\r\n    if (assembly) {\r\n      atomCount = assembly.getAtomCount(s)\r\n    } else {\r\n      atomCount = s.atomCount\r\n    }\r\n    if (Mobile) {\r\n      atomCount *= 4\r\n    }\r\n    const backboneOnly = s.atomStore.count / s.residueStore.count < 2\r\n    if (backboneOnly) {\r\n      atomCount *= 10\r\n    }\r\n\r\n    if (atomCount < 15000) {\r\n      return 'high'\r\n    } else if (atomCount < 80000) {\r\n      return 'medium'\r\n    } else {\r\n      return 'low'\r\n    }\r\n  }\r\n\r\n  create () {\r\n    if (this.structureView.atomCount === 0) return\r\n\r\n    if (!this.structureView.hasCoords()) {\r\n      this.needsBuild = true\r\n      return\r\n    } else {\r\n      this.needsBuild = false\r\n    }\r\n\r\n    const assembly = this.getAssembly()\r\n\r\n    if (assembly) {\r\n      assembly.partList.forEach(function (part, i) {\r\n        const sview = part.getView(this.structureView)\r\n        if (sview.atomCount === 0) return\r\n        const data = this.createData(sview, i)\r\n        if (data) {\r\n          data.sview = sview\r\n          data.instanceList = part.getInstanceList()\r\n          this.dataList.push(data)\r\n        }\r\n      }, this)\r\n    } else {\r\n      const data = this.createData(this.structureView, 0)\r\n      if (data) {\r\n        data.sview = this.structureView\r\n        this.dataList.push(data)\r\n      }\r\n    }\r\n  }\r\n\r\n  createData (/* sview */) {\r\n    console.error('createData not implemented')\r\n  }\r\n\r\n  update (what) {\r\n    if (this.lazy && !this.visible) {\r\n      Object.assign(this.lazyProps.what, what)\r\n      return\r\n    }\r\n\r\n    if (this.needsBuild) {\r\n      this.build()\r\n      return\r\n    }\r\n\r\n    this.dataList.forEach(function (data) {\r\n      if (data.bufferList.length > 0) {\r\n        this.updateData(what, data)\r\n      }\r\n    }, this)\r\n  }\r\n\r\n  updateData (/* what, data */) {\r\n    this.build()\r\n  }\r\n\r\n  getColorParams () {\r\n    const p = super.getColorParams()\r\n    p.structure = this.structure\r\n\r\n    return p\r\n  }\r\n\r\n  getAtomParams (what, params) {\r\n    return Object.assign({\r\n      what: what,\r\n      colorParams: this.getColorParams(),\r\n      radiusParams: { 'radius': this.radius, 'scale': this.scale }\r\n    }, params)\r\n  }\r\n\r\n  getBondParams (what, params) {\r\n    return Object.assign({\r\n      what: what,\r\n      colorParams: this.getColorParams(),\r\n      radiusParams: { 'radius': this.radius, 'scale': this.scale }\r\n    }, params)\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias StructureRepresentation#setSelection\r\n   * @param {String} string - selection string, see {@tutorial selection-language}\r\n   * @param {Boolean} [silent] - don't trigger a change event in the selection\r\n   * @return {StructureRepresentation} this object\r\n   */\r\n  setSelection (string, silent) {\r\n    this.selection.setString(string, silent)\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias StructureRepresentation#setParameters\r\n   * @param {StructureRepresentationParameters} params - structure parameter object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {StructureRepresentation} this object\r\n   */\r\n  setParameters (params, what, rebuild) {\r\n    what = what || {}\r\n\r\n    if (params && params.radiusType !== undefined) {\r\n      if (params.radiusType === 'size') {\r\n        this.radius = 1.0\r\n      } else {\r\n        this.radius = params.radiusType\r\n      }\r\n      delete params.radiusType\r\n      what.radius = true\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.radius !== undefined) {\r\n      what.radius = true\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.scale !== undefined) {\r\n      what.radius = true\r\n      if (!ExtensionFragDepth || this.disableImpostor) {\r\n        rebuild = true\r\n      }\r\n    }\r\n\r\n    if (params && params.defaultAssembly !== undefined) {\r\n      rebuild = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n\r\n  getParameters () {\r\n    const params = Object.assign(\r\n      super.getParameters(),\r\n      {\r\n        sele: this.selection ? this.selection.string : undefined,\r\n        defaultAssembly: this.defaultAssembly\r\n      }\r\n    )\r\n\r\n    return params\r\n  }\r\n\r\n  attach (callback) {\r\n    const viewer = this.viewer\r\n    const bufferList = this.bufferList\r\n\r\n    this.dataList.forEach(function (data) {\r\n      data.bufferList.forEach(function (buffer) {\r\n        bufferList.push(buffer)\r\n        viewer.add(buffer, data.instanceList)\r\n      })\r\n    })\r\n\r\n    this.setVisibility(this.visible)\r\n    callback()\r\n  }\r\n\r\n  clear () {\r\n    this.dataList.length = 0\r\n\r\n    super.clear()\r\n  }\r\n\r\n  dispose () {\r\n    this.structureView.dispose()\r\n\r\n    delete this.structure\r\n    delete this.structureView\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nexport default StructureRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/structure-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2708,
    "kind": "typedef",
    "name": "StructureRepresentationParameters",
    "memberof": "src/representation/structure-representation.js",
    "static": true,
    "longname": "src/representation/structure-representation.js~StructureRepresentationParameters",
    "access": "public",
    "description": "Structure representation parameter object.",
    "unknown": [
      {
        "tagName": "@mixes",
        "tagValue": "RepresentationParameters"
      }
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "radiusType",
        "description": "A list of possible sources of the radius used for rendering the representation. The radius can be based on the *vdW radius*, the *covalent radius* or the *B-factor* value of the corresponding atom. Additionally the radius can be based on the *secondary structure*. Alternatively, when set to *size*, the value from the *radius* parameter is used for all atoms."
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "A number providing a fixed radius used for rendering the representation."
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "scale",
        "description": "A number that scales the value defined by the *radius* or the *radiusType* parameter."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "assembly",
        "description": "name of an assembly object. Included are the asymmetric unit (*AU*) corresponding to the coordinates given in the structure file, biological assemblies from *PDB*, *mmCIF* or *MMTF* files (*BU1*, *BU2*, ...), a filled (crystallographic) unitcell of a given space group (*UNITCELL*), a supercell consisting of a center unitcell and its 26 direct neighbors (*SUPERCELL*). Set to *default* to use the default asemmbly of the structure object."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StructureRepresentationParameters"
    }
  },
  {
    "__docId__": 2709,
    "kind": "class",
    "name": "StructureRepresentation",
    "memberof": "src/representation/structure-representation.js",
    "static": true,
    "longname": "src/representation/structure-representation.js~StructureRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/structure-representation.js",
    "importStyle": "StructureRepresentation",
    "description": "Structure representation",
    "lineNumber": 28,
    "interface": true,
    "extends": [
      "src/representation/representation.js~Representation"
    ]
  },
  {
    "__docId__": 2710,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#constructor",
    "access": "public",
    "description": "Create Structure representation object",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "StructureRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "structure representation parameters"
      }
    ]
  },
  {
    "__docId__": 2711,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2712,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 2713,
    "kind": "member",
    "name": "selection",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#selection",
    "access": "private",
    "description": "",
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "Selection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2714,
    "kind": "member",
    "name": "dataList",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#dataList",
    "access": "private",
    "description": "",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2715,
    "kind": "member",
    "name": "structure",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#structure",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Structure"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2716,
    "kind": "member",
    "name": "structureView",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#structureView",
    "access": "public",
    "description": "",
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "StructureView"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2717,
    "kind": "get",
    "name": "defaultScale",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#defaultScale",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 2718,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 2719,
    "kind": "member",
    "name": "radius",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#radius",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 2720,
    "kind": "member",
    "name": "scale",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#scale",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2721,
    "kind": "member",
    "name": "assembly",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#assembly",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2722,
    "kind": "member",
    "name": "defaultAssembly",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#defaultAssembly",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 2723,
    "kind": "method",
    "name": "getAssembly",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getAssembly",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 2724,
    "kind": "method",
    "name": "getQuality",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getQuality",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "undocument": true
  },
  {
    "__docId__": 2725,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 2726,
    "kind": "member",
    "name": "needsBuild",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#needsBuild",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true
  },
  {
    "__docId__": 2728,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 2729,
    "kind": "method",
    "name": "update",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#update",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true
  },
  {
    "__docId__": 2730,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 214,
    "undocument": true
  },
  {
    "__docId__": 2731,
    "kind": "method",
    "name": "getColorParams",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getColorParams",
    "access": "public",
    "description": null,
    "lineNumber": 218,
    "undocument": true
  },
  {
    "__docId__": 2732,
    "kind": "method",
    "name": "getAtomParams",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getAtomParams",
    "access": "public",
    "description": null,
    "lineNumber": 225,
    "undocument": true
  },
  {
    "__docId__": 2733,
    "kind": "method",
    "name": "getBondParams",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getBondParams",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true
  },
  {
    "__docId__": 2734,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#setSelection",
    "access": "public",
    "description": "Set representation parameters",
    "lineNumber": 248,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "StructureRepresentation#setSelection"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "selection string, see {@tutorial selection-language}"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "silent",
        "description": "don't trigger a change event in the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StructureRepresentation"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2735,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#setParameters",
    "access": "public",
    "description": "Set representation parameters",
    "lineNumber": 268,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "StructureRepresentation#setParameters"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "StructureRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "structure parameter object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "what",
        "description": "buffer data attributes to be updated,\n                       note that this needs to be implemented in the\n                       derived classes. Generally it allows more\n                       fine-grained control over updating than\n                       forcing a rebuild."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.position",
        "description": "update position data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.color",
        "description": "update color data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "rebuild",
        "description": "whether or not to rebuild the representation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StructureRepresentation"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2738,
    "kind": "method",
    "name": "getParameters",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#getParameters",
    "access": "public",
    "description": null,
    "lineNumber": 307,
    "undocument": true
  },
  {
    "__docId__": 2739,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 319,
    "undocument": true
  },
  {
    "__docId__": 2740,
    "kind": "method",
    "name": "clear",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#clear",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true
  },
  {
    "__docId__": 2741,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/representation/structure-representation.js~StructureRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/structure-representation.js~StructureRepresentation#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 340,
    "undocument": true
  },
  {
    "__docId__": 2742,
    "kind": "file",
    "name": "src/representation/surface-representation.js",
    "content": "/**\r\n * @file Surface Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Representation from './representation.js'\r\nimport Volume from '../surface/volume.js'\r\nimport SurfaceBuffer from '../buffer/surface-buffer.js'\r\nimport DoubleSidedBuffer from '../buffer/doublesided-buffer'\r\nimport ContourBuffer from '../buffer/contour-buffer.js'\r\n\r\n/**\r\n * Surface representation parameter object. Extends {@link RepresentationParameters}\r\n *\r\n * @typedef {Object} SurfaceRepresentationParameters - surface representation parameters\r\n *\r\n * @property {String} isolevelType - Meaning of the isolevel value. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only.\r\n * @property {Float} isolevel - The value at which to create the isosurface. For volume data only.\r\n * @property {Integer} smooth - How many iterations of laplacian smoothing after surface triangulation. For volume data only.\r\n * @property {Boolean} background - Render the surface in the background, unlit.\r\n * @property {Boolean} opaqueBack - Render the back-faces (where normals point away from the camera) of the surface opaque, ignoring the transparency parameter.\r\n * @property {Integer} boxSize - Size of the box to triangulate volume data in. Set to zero to triangulate the whole volume. For volume data only.\r\n * @property {Boolean} useWorker - Weather or not to triangulate the volume asynchronously in a Web Worker. For volume data only.\r\n * @property {Boolean} wrap - Wrap volume data around the edges; use in conjuction with boxSize but not larger than the volume dimension. For volume data only.\r\n */\r\n\r\n/**\r\n * Surface representation\r\n */\r\nclass SurfaceRepresentation extends Representation {\r\n  /**\r\n   * Create Surface representation object\r\n   * @param {Surface|Volume} surface - the surface or volume to be represented\r\n   * @param {Viewer} viewer - a viewer object\r\n   * @param {SurfaceRepresentationParameters} params - surface representation parameters\r\n   */\r\n  constructor (surface, viewer, params) {\r\n    super(surface, viewer, params)\r\n\r\n    this.type = 'surface'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      isolevelType: {\r\n        type: 'select',\r\n        options: {\r\n          'value': 'value', 'sigma': 'sigma'\r\n        }\r\n      },\r\n      isolevel: {\r\n        type: 'number', precision: 2, max: 1000, min: -1000\r\n      },\r\n      negateIsolevel: {\r\n        type: 'boolean'\r\n      },\r\n      smooth: {\r\n        type: 'integer', precision: 1, max: 10, min: 0\r\n      },\r\n      background: {\r\n        type: 'boolean', rebuild: true  // FIXME\r\n      },\r\n      opaqueBack: {\r\n        type: 'boolean', buffer: true\r\n      },\r\n      boxSize: {\r\n        type: 'integer', precision: 1, max: 100, min: 0\r\n      },\r\n      colorVolume: {\r\n        type: 'hidden'\r\n      },\r\n      contour: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      useWorker: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      wrap: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters)\r\n\r\n    if (surface instanceof Volume) {\r\n      this.surface = undefined\r\n      this.volume = surface\r\n    } else {\r\n      this.surface = surface\r\n      this.volume = undefined\r\n    }\r\n\r\n    this.boxCenter = new Vector3()\r\n    this.__boxCenter = new Vector3()\r\n    this.box = new Box3()\r\n    this.__box = new Box3()\r\n\r\n    this._position = new Vector3()\r\n    this.setBox = function setBox () {\r\n      this._position.copy(viewer.translationGroup.position).negate()\r\n      if (!this._position.equals(this.boxCenter)) {\r\n        this.setParameters({ 'boxCenter': this._position })\r\n      }\r\n    }\r\n\r\n    this.viewer.signals.ticked.add(this.setBox, this)\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n\r\n    this.isolevelType = defaults(p.isolevelType, 'sigma')\r\n    this.isolevel = defaults(p.isolevel, 2.0)\r\n    this.negateIsolevel = defaults(p.negateIsolevel, false)\r\n    this.smooth = defaults(p.smooth, 0)\r\n    this.background = defaults(p.background, false)\r\n    this.opaqueBack = defaults(p.opaqueBack, true)\r\n    this.boxSize = defaults(p.boxSize, 0)\r\n    this.colorVolume = defaults(p.colorVolume, undefined)\r\n    this.contour = defaults(p.contour, false)\r\n    this.useWorker = defaults(p.useWorker, true)\r\n    this.wrap = defaults(p.wrap, false)\r\n\r\n    super.init(p)\r\n\r\n    this.build()\r\n  }\r\n\r\n  attach (callback) {\r\n    this.bufferList.forEach(buffer => {\r\n      this.viewer.add(buffer)\r\n    })\r\n\r\n    this.setVisibility(this.visible)\r\n\r\n    callback()\r\n  }\r\n\r\n  prepare (callback) {\r\n    if (this.volume) {\r\n      let isolevel\r\n\r\n      if (this.isolevelType === 'sigma') {\r\n        isolevel = this.volume.getValueForSigma(this.isolevel)\r\n      } else {\r\n        isolevel = this.isolevel\r\n      }\r\n      if (this.negateIsolevel) isolevel *= -1\r\n\r\n      if (!this.surface ||\r\n        this.__isolevel !== isolevel ||\r\n        this.__smooth !== this.smooth ||\r\n        this.__contour !== this.contour ||\r\n        this.__wrap !== this.wrap ||\r\n        this.__boxSize !== this.boxSize ||\r\n        (this.boxSize > 0 &&\r\n            !this.__boxCenter.equals(this.boxCenter))\r\n      ) {\r\n        this.__isolevel = isolevel\r\n        this.__smooth = this.smooth\r\n        this.__contour = this.contour\r\n        this.__wrap = this.wrap\r\n        this.__boxSize = this.boxSize\r\n        this.__boxCenter.copy(this.boxCenter)\r\n        this.__box.copy(this.box)\r\n\r\n        const onSurfaceFinish = surface => {\r\n          this.surface = surface\r\n          callback()\r\n        }\r\n\r\n        if (this.useWorker) {\r\n          this.volume.getSurfaceWorker(\r\n            isolevel, this.smooth, this.boxCenter, this.boxSize,\r\n            this.contour, this.wrap, onSurfaceFinish\r\n          )\r\n        } else {\r\n          onSurfaceFinish(\r\n            this.volume.getSurface(\r\n              isolevel, this.smooth, this.boxCenter, this.boxSize,\r\n              this.contour, this.wrap\r\n            )\r\n          )\r\n        }\r\n      } else {\r\n        callback()\r\n      }\r\n    } else {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  create () {\r\n    const sd = {\r\n      position: this.surface.getPosition(),\r\n      color: this.surface.getColor(this.getColorParams()),\r\n      index: this.surface.getIndex()\r\n    }\r\n\r\n    let buffer\r\n\r\n    if (this.contour) {\r\n      buffer = new ContourBuffer(\r\n        sd,\r\n        this.getBufferParams({ wireframe: false })\r\n      )\r\n    } else {\r\n      sd.normal = this.surface.getNormal()\r\n      sd.picking = this.surface.getPicking()\r\n\r\n      const surfaceBuffer = new SurfaceBuffer(\r\n        sd,\r\n        this.getBufferParams({\r\n          background: this.background,\r\n          opaqueBack: this.opaqueBack,\r\n          dullInterior: false\r\n        })\r\n      )\r\n\r\n      buffer = new DoubleSidedBuffer(surfaceBuffer)\r\n    }\r\n\r\n    this.bufferList.push(buffer)\r\n  }\r\n\r\n  update (what) {\r\n    if (this.bufferList.length === 0) return\r\n\r\n    what = what || {}\r\n\r\n    const surfaceData = {}\r\n\r\n    if (what.position) {\r\n      surfaceData.position = this.surface.getPosition()\r\n    }\r\n\r\n    if (what.color) {\r\n      surfaceData.color = this.surface.getColor(\r\n        this.getColorParams()\r\n      )\r\n    }\r\n\r\n    if (what.index) {\r\n      surfaceData.index = this.surface.getIndex()\r\n    }\r\n\r\n    if (what.normal) {\r\n      surfaceData.normal = this.surface.getNormal()\r\n    }\r\n\r\n    this.bufferList.forEach(function (buffer) {\r\n      buffer.setAttributes(surfaceData)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Set representation parameters\r\n   * @alias SurfaceRepresentation#setParameters\r\n   * @param {SurfaceRepresentationParameters} params - surface parameter object\r\n   * @param {Object} [what] - buffer data attributes to be updated,\r\n   *                        note that this needs to be implemented in the\r\n   *                        derived classes. Generally it allows more\r\n   *                        fine-grained control over updating than\r\n   *                        forcing a rebuild.\r\n   * @param {Boolean} what.position - update position data\r\n   * @param {Boolean} what.color - update color data\r\n   * @param {Boolean} [rebuild] - whether or not to rebuild the representation\r\n   * @return {SurfaceRepresentation} this object\r\n   */\r\n  setParameters (params, what, rebuild) {\r\n    if (params && params.isolevelType !== undefined &&\r\n      this.volume\r\n    ) {\r\n      if (this.isolevelType === 'value' &&\r\n        params.isolevelType === 'sigma'\r\n      ) {\r\n        this.isolevel = this.volume.getSigmaForValue(this.isolevel)\r\n      } else if (this.isolevelType === 'sigma' &&\r\n        params.isolevelType === 'value'\r\n      ) {\r\n        this.isolevel = this.volume.getValueForSigma(this.isolevel)\r\n      }\r\n\r\n      this.isolevelType = params.isolevelType\r\n    }\r\n\r\n    if (params && params.boxCenter) {\r\n      this.boxCenter.copy(params.boxCenter)\r\n      delete params.boxCenter\r\n    }\r\n\r\n    // Forbid wireframe && contour as in molsurface\r\n    if (params && params.wireframe && (\r\n      params.contour || (params.contour === undefined && this.contour)\r\n    )) {\r\n      params.wireframe = false\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    if (this.volume) {\r\n      this.volume.getBox(this.boxCenter, this.boxSize, this.box)\r\n    }\r\n\r\n    if (params && params.colorVolume !== undefined) {\r\n      what.color = true\r\n    }\r\n\r\n    if (this.surface && (\r\n      params.isolevel !== undefined ||\r\n      params.negateIsolevel !== undefined ||\r\n      params.smooth !== undefined ||\r\n      params.wrap !== undefined ||\r\n      params.boxSize !== undefined ||\r\n      (this.boxSize > 0 &&\r\n        !this.__box.equals(this.box))\r\n    )) {\r\n      this.build({\r\n        'position': true,\r\n        'color': true,\r\n        'index': true,\r\n        'normal': !this.contour\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  getColorParams () {\r\n    const p = super.getColorParams()\r\n\r\n    p.volume = this.colorVolume\r\n\r\n    return p\r\n  }\r\n\r\n  dispose () {\r\n    this.viewer.signals.ticked.remove(this.setBox, this)\r\n\r\n    super.dispose()\r\n  }\r\n}\r\n\r\nexport default SurfaceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/surface-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2743,
    "kind": "typedef",
    "name": "SurfaceRepresentationParameters",
    "memberof": "src/representation/surface-representation.js",
    "static": true,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentationParameters",
    "access": "public",
    "description": "Surface representation parameter object. Extends {@link RepresentationParameters}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "isolevelType",
        "description": "Meaning of the isolevel value. Either *value* for the literal value or *sigma* as a factor of the sigma of the data. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "isolevel",
        "description": "The value at which to create the isosurface. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "smooth",
        "description": "How many iterations of laplacian smoothing after surface triangulation. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "background",
        "description": "Render the surface in the background, unlit."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "opaqueBack",
        "description": "Render the back-faces (where normals point away from the camera) of the surface opaque, ignoring the transparency parameter."
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "boxSize",
        "description": "Size of the box to triangulate volume data in. Set to zero to triangulate the whole volume. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useWorker",
        "description": "Weather or not to triangulate the volume asynchronously in a Web Worker. For volume data only."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "wrap",
        "description": "Wrap volume data around the edges; use in conjuction with boxSize but not larger than the volume dimension. For volume data only."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "SurfaceRepresentationParameters"
    }
  },
  {
    "__docId__": 2744,
    "kind": "class",
    "name": "SurfaceRepresentation",
    "memberof": "src/representation/surface-representation.js",
    "static": true,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/surface-representation.js",
    "importStyle": "SurfaceRepresentation",
    "description": "Surface representation",
    "lineNumber": 34,
    "interface": false,
    "extends": [
      "src/representation/representation.js~Representation"
    ]
  },
  {
    "__docId__": 2745,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#constructor",
    "access": "public",
    "description": "Create Surface representation object",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Surface",
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "surface",
        "description": "the surface or volume to be represented"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "a viewer object"
      },
      {
        "nullable": null,
        "types": [
          "SurfaceRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "surface representation parameters"
      }
    ]
  },
  {
    "__docId__": 2746,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 2747,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 2748,
    "kind": "member",
    "name": "surface",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#surface",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 2749,
    "kind": "member",
    "name": "volume",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#volume",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 2752,
    "kind": "member",
    "name": "boxCenter",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#boxCenter",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 2753,
    "kind": "member",
    "name": "__boxCenter",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__boxCenter",
    "access": "private",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 2754,
    "kind": "member",
    "name": "box",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#box",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 2755,
    "kind": "member",
    "name": "__box",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__box",
    "access": "private",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 2756,
    "kind": "member",
    "name": "_position",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#_position",
    "access": "private",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 2757,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2758,
    "kind": "member",
    "name": "isolevelType",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#isolevelType",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 2759,
    "kind": "member",
    "name": "isolevel",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#isolevel",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 2760,
    "kind": "member",
    "name": "negateIsolevel",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#negateIsolevel",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true
  },
  {
    "__docId__": 2761,
    "kind": "member",
    "name": "smooth",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#smooth",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 2762,
    "kind": "member",
    "name": "background",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#background",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 2763,
    "kind": "member",
    "name": "opaqueBack",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#opaqueBack",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true
  },
  {
    "__docId__": 2764,
    "kind": "member",
    "name": "boxSize",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#boxSize",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true
  },
  {
    "__docId__": 2765,
    "kind": "member",
    "name": "colorVolume",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#colorVolume",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true
  },
  {
    "__docId__": 2766,
    "kind": "member",
    "name": "contour",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#contour",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 2767,
    "kind": "member",
    "name": "useWorker",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#useWorker",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 2768,
    "kind": "member",
    "name": "wrap",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#wrap",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true
  },
  {
    "__docId__": 2769,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 2770,
    "kind": "method",
    "name": "prepare",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#prepare",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 2771,
    "kind": "member",
    "name": "__isolevel",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__isolevel",
    "access": "private",
    "description": null,
    "lineNumber": 165,
    "undocument": true
  },
  {
    "__docId__": 2772,
    "kind": "member",
    "name": "__smooth",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__smooth",
    "access": "private",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 2773,
    "kind": "member",
    "name": "__contour",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__contour",
    "access": "private",
    "description": null,
    "lineNumber": 167,
    "undocument": true
  },
  {
    "__docId__": 2774,
    "kind": "member",
    "name": "__wrap",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__wrap",
    "access": "private",
    "description": null,
    "lineNumber": 168,
    "undocument": true
  },
  {
    "__docId__": 2775,
    "kind": "member",
    "name": "__boxSize",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#__boxSize",
    "access": "private",
    "description": null,
    "lineNumber": 169,
    "undocument": true
  },
  {
    "__docId__": 2777,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true
  },
  {
    "__docId__": 2778,
    "kind": "method",
    "name": "update",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#update",
    "access": "public",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 2779,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#setParameters",
    "access": "public",
    "description": "Set representation parameters",
    "lineNumber": 276,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "SurfaceRepresentation#setParameters"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SurfaceRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "surface parameter object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "what",
        "description": "buffer data attributes to be updated,\n                       note that this needs to be implemented in the\n                       derived classes. Generally it allows more\n                       fine-grained control over updating than\n                       forcing a rebuild."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.position",
        "description": "update position data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "what.color",
        "description": "update color data"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "rebuild",
        "description": "whether or not to rebuild the representation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SurfaceRepresentation"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 2783,
    "kind": "method",
    "name": "getColorParams",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#getColorParams",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true
  },
  {
    "__docId__": 2784,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/representation/surface-representation.js~SurfaceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/surface-representation.js~SurfaceRepresentation#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 343,
    "undocument": true
  },
  {
    "__docId__": 2785,
    "kind": "file",
    "name": "src/representation/trace-representation.js",
    "content": "/**\r\n * @file Trace Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport Spline from '../geometry/spline.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport TraceBuffer from '../buffer/trace-buffer.js'\r\n\r\n/**\r\n * Trace Representation\r\n */\r\nclass TraceRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'trace'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      subdiv: {\r\n        type: 'integer', max: 50, min: 1, rebuild: true\r\n      },\r\n      tension: {\r\n        type: 'number', precision: 1, max: 1.0, min: 0.1\r\n      },\r\n      smoothSheet: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n\r\n    }, this.parameters, {\r\n\r\n      flatShaded: null,\r\n      side: null,\r\n      wireframe: null\r\n\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'chainname')\r\n    p.colorScale = defaults(p.colorScale, 'RdYlBu')\r\n\r\n    if (p.quality === 'low') {\r\n      this.subdiv = 3\r\n    } else if (p.quality === 'medium') {\r\n      this.subdiv = 6\r\n    } else if (p.quality === 'high') {\r\n      this.subdiv = 12\r\n    } else {\r\n      this.subdiv = defaults(p.subdiv, 6)\r\n    }\r\n\r\n    this.tension = defaults(p.tension, NaN)\r\n    this.smoothSheet = defaults(p.smoothSheet, false)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (params) {\r\n    return Object.assign({\r\n      subdiv: this.subdiv,\r\n      tension: this.tension,\r\n      directional: false,\r\n      smoothSheet: this.smoothSheet\r\n    }, params)\r\n  }\r\n\r\n  createData (sview) {\r\n    var bufferList = []\r\n    var polymerList = []\r\n\r\n    this.structure.eachPolymer(polymer => {\r\n      if (polymer.residueCount < 4) return\r\n      polymerList.push(polymer)\r\n\r\n      var spline = new Spline(polymer, this.getSplineParams())\r\n      var subPos = spline.getSubdividedPosition()\r\n      var subCol = spline.getSubdividedColor(this.getColorParams())\r\n\r\n      bufferList.push(\r\n        new TraceBuffer(\r\n          Object.assign({}, subPos, subCol),\r\n          this.getBufferParams()\r\n        )\r\n      )\r\n    }, sview.getSelection())\r\n\r\n    return {\r\n      bufferList: bufferList,\r\n      polymerList: polymerList\r\n    }\r\n  }\r\n\r\n  updateData (what, data) {\r\n    what = what || {}\r\n\r\n    var i = 0\r\n    var n = data.polymerList.length\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      var bufferData = {}\r\n      var spline = new Spline(data.polymerList[ i ], this.getSplineParams())\r\n\r\n      if (what.position) {\r\n        var subPos = spline.getSubdividedPosition()\r\n        bufferData.position = subPos.position\r\n      }\r\n\r\n      if (what.color) {\r\n        var subCol = spline.getSubdividedColor(this.getColorParams())\r\n        bufferData.color = subCol.color\r\n      }\r\n\r\n      data.bufferList[ i ].setAttributes(bufferData)\r\n    }\r\n  }\r\n\r\n  setParameters (params) {\r\n    var rebuild = false\r\n    var what = {}\r\n\r\n    if (params && params.tension) {\r\n      what.position = true\r\n    }\r\n\r\n    super.setParameters(params, what, rebuild)\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('trace', TraceRepresentation)\r\n\r\nexport default TraceRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/trace-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2786,
    "kind": "class",
    "name": "TraceRepresentation",
    "memberof": "src/representation/trace-representation.js",
    "static": true,
    "longname": "src/representation/trace-representation.js~TraceRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/trace-representation.js",
    "importStyle": "TraceRepresentation",
    "description": "Trace Representation",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2787,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2788,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2789,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2790,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2791,
    "kind": "member",
    "name": "subdiv",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#subdiv",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 2795,
    "kind": "member",
    "name": "tension",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#tension",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 2796,
    "kind": "member",
    "name": "smoothSheet",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#smoothSheet",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 2797,
    "kind": "method",
    "name": "getSplineParams",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#getSplineParams",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 2798,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 2799,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 2800,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/representation/trace-representation.js~TraceRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trace-representation.js~TraceRepresentation#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true
  },
  {
    "__docId__": 2801,
    "kind": "file",
    "name": "src/representation/trajectory-representation.js",
    "content": "/**\r\n * @file Trajectory Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { uniformArray, uniformArray3 } from '../math/array-utils.js'\r\n\r\nimport StructureRepresentation from './structure-representation.js'\r\n\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\nimport PointBuffer from '../buffer/point-buffer.js'\r\nimport LineBuffer from '../buffer/line-buffer.js'\r\n\r\n/**\r\n * Trajectory representation parameter object.\r\n * @typedef {Object} TrajectoryRepresentationParameters - parameters\r\n *\r\n * @property {Boolean} drawLine - draw lines\r\n * @property {Boolean} drawCylinder - draw cylinders\r\n * @property {Boolean} drawPoint - draw points\r\n * @property {Boolean} drawSphere - draw sphere\r\n * @property {Integer} linewidth - line width\r\n * @property {Integer} pointSize - point size\r\n * @property {Boolean} sizeAttenuation - size attenuation\r\n * @property {Boolean} sort - sort flag for points\r\n */\r\n\r\n/**\r\n * Trajectory representation\r\n */\r\nclass TrajectoryRepresentation extends StructureRepresentation {\r\n  /**\r\n   * @param  {Trajectory} trajectory - the trajectory\r\n   * @param  {Viewer} viewer - viewer object\r\n   * @param  {TrajectoryRepresentationParameters} params - parameters\r\n   */\r\n  constructor (trajectory, viewer, params) {\r\n    super(trajectory.structure, viewer, params)\r\n\r\n    this.type = 'trajectory'\r\n\r\n    this.parameters = Object.assign({\r\n      drawLine: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      drawCylinder: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      drawPoint: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      drawSphere: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n\r\n      linewidth: {\r\n        type: 'integer', max: 20, min: 1, rebuild: true\r\n      },\r\n      pointSize: {\r\n        type: 'integer', max: 20, min: 1, rebuild: true\r\n      },\r\n      sizeAttenuation: {\r\n        type: 'boolean', rebuild: true\r\n      },\r\n      sort: {\r\n        type: 'boolean', rebuild: true\r\n      }\r\n    }, this.parameters)\r\n\r\n    this.manualAttach = true\r\n    this.trajectory = trajectory\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.colorScheme = defaults(p.colorScheme, 'uniform')\r\n    p.colorValue = defaults(p.colorValue, 0xDDDDDD)\r\n\r\n    this.drawLine = defaults(p.drawLine, true)\r\n    this.drawCylinder = defaults(p.drawCylinder, false)\r\n    this.drawPoint = defaults(p.drawPoint, false)\r\n    this.drawSphere = defaults(p.drawSphere, false)\r\n\r\n    this.pointSize = defaults(p.pointSize, 1)\r\n    this.sizeAttenuation = defaults(p.sizeAttenuation, false)\r\n    this.sort = defaults(p.sort, true)\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  attach () {\r\n    this.bufferList.forEach(buffer => this.viewer.add(buffer))\r\n    this.setVisibility(this.visible)\r\n    this.tasks.decrement()\r\n  }\r\n\r\n  // prepare (callback) {\r\n  //   // TODO\r\n  //   // - move loading of path here\r\n  //   // - get rid of manualAttach\r\n  //   callback()\r\n  // }\r\n\r\n  create () {\r\n    console.log('create', this.structureView.atomCount)\r\n    if (this.structureView.atomCount === 0) return\r\n\r\n    var index = this.structureView.getAtomIndices()[ 0 ]\r\n\r\n    this.trajectory.getPath(index, path => {\r\n      var n = path.length / 3\r\n      var tc = new Color(this.colorValue)\r\n\r\n      if (this.drawSphere) {\r\n        var sphereBuffer = new SphereBuffer(\r\n          {\r\n            position: path,\r\n            color: uniformArray3(n, tc.r, tc.g, tc.b),\r\n            radius: uniformArray(n, 0.2)\r\n          },\r\n          this.getBufferParams({\r\n            sphereDetail: this.sphereDetail,\r\n            dullInterior: true,\r\n            disableImpostor: this.disableImpostor\r\n          })\r\n        )\r\n\r\n        this.bufferList.push(sphereBuffer)\r\n      }\r\n\r\n      if (this.drawCylinder) {\r\n        var cylinderBuffer = new CylinderBuffer(\r\n          {\r\n            position1: path.subarray(0, -3),\r\n            position2: path.subarray(3),\r\n            color: uniformArray3(n - 1, tc.r, tc.g, tc.b),\r\n            color2: uniformArray3(n - 1, tc.r, tc.g, tc.b),\r\n            radius: uniformArray(n, 0.05)\r\n          },\r\n          this.getBufferParams({\r\n            openEnded: false,\r\n            radialSegments: this.radialSegments,\r\n            disableImpostor: this.disableImpostor,\r\n            dullInterior: true\r\n          })\r\n        )\r\n\r\n        this.bufferList.push(cylinderBuffer)\r\n      }\r\n\r\n      if (this.drawPoint) {\r\n        var pointBuffer = new PointBuffer(\r\n          {\r\n            position: path,\r\n            color: uniformArray3(n, tc.r, tc.g, tc.b)\r\n          },\r\n          this.getBufferParams({\r\n            pointSize: this.pointSize,\r\n            sizeAttenuation: this.sizeAttenuation,\r\n            sort: this.sort\r\n          })\r\n        )\r\n\r\n        this.bufferList.push(pointBuffer)\r\n      }\r\n\r\n      if (this.drawLine) {\r\n        var lineBuffer = new LineBuffer(\r\n          {\r\n            position1: path.subarray(0, -3),\r\n            position2: path.subarray(3),\r\n            color: uniformArray3(n - 1, tc.r, tc.g, tc.b),\r\n            color2: uniformArray3(n - 1, tc.r, tc.g, tc.b)\r\n          },\r\n          this.getBufferParams()\r\n        )\r\n\r\n        this.bufferList.push(lineBuffer)\r\n      }\r\n\r\n      this.attach()\r\n    })\r\n  }\r\n}\r\n\r\nexport default TrajectoryRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/trajectory-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2802,
    "kind": "typedef",
    "name": "TrajectoryRepresentationParameters",
    "memberof": "src/representation/trajectory-representation.js",
    "static": true,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentationParameters",
    "access": "public",
    "description": "Trajectory representation parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "drawLine",
        "description": "draw lines"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "drawCylinder",
        "description": "draw cylinders"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "drawPoint",
        "description": "draw points"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "drawSphere",
        "description": "draw sphere"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "linewidth",
        "description": "line width"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "pointSize",
        "description": "point size"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sizeAttenuation",
        "description": "size attenuation"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "sort",
        "description": "sort flag for points"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectoryRepresentationParameters"
    }
  },
  {
    "__docId__": 2803,
    "kind": "class",
    "name": "TrajectoryRepresentation",
    "memberof": "src/representation/trajectory-representation.js",
    "static": true,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/trajectory-representation.js",
    "importStyle": "TrajectoryRepresentation",
    "description": "Trajectory representation",
    "lineNumber": 36,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2804,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Trajectory"
        ],
        "spread": false,
        "optional": false,
        "name": "trajectory",
        "description": "the trajectory"
      },
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "viewer object"
      },
      {
        "nullable": null,
        "types": [
          "TrajectoryRepresentationParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters"
      }
    ]
  },
  {
    "__docId__": 2805,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2806,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 2807,
    "kind": "member",
    "name": "manualAttach",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#manualAttach",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 2808,
    "kind": "member",
    "name": "trajectory",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#trajectory",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 2809,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 2810,
    "kind": "member",
    "name": "drawLine",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#drawLine",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 2811,
    "kind": "member",
    "name": "drawCylinder",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#drawCylinder",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 2812,
    "kind": "member",
    "name": "drawPoint",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#drawPoint",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true
  },
  {
    "__docId__": 2813,
    "kind": "member",
    "name": "drawSphere",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#drawSphere",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 2814,
    "kind": "member",
    "name": "pointSize",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#pointSize",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 2815,
    "kind": "member",
    "name": "sizeAttenuation",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#sizeAttenuation",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true
  },
  {
    "__docId__": 2816,
    "kind": "member",
    "name": "sort",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#sort",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 2817,
    "kind": "method",
    "name": "attach",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#attach",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 2818,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/trajectory-representation.js~TrajectoryRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/trajectory-representation.js~TrajectoryRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 2819,
    "kind": "file",
    "name": "src/representation/tube-representation.js",
    "content": "/**\r\n * @file Tube Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport CartoonRepresentation from './cartoon-representation.js'\r\n\r\n/**\r\n * Tube Representation\r\n */\r\nclass TubeRepresentation extends CartoonRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'tube'\r\n\r\n    this.parameters = Object.assign(\r\n      {}, this.parameters, { aspectRatio: null }\r\n    )\r\n  }\r\n\r\n  init (params) {\r\n    var p = params || {}\r\n    p.aspectRatio = 1.0\r\n    p.scale = defaults(p.scale, 2.0)\r\n\r\n    if (p.quality === 'low') {\r\n      this.radialSegments = 5\r\n    }\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getSplineParams (/* params */) {\r\n    return super.getSplineParams({\r\n      directional: false\r\n    })\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('tube', TubeRepresentation)\r\n\r\nexport default TubeRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/tube-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2820,
    "kind": "class",
    "name": "TubeRepresentation",
    "memberof": "src/representation/tube-representation.js",
    "static": true,
    "longname": "src/representation/tube-representation.js~TubeRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/tube-representation.js",
    "importStyle": "TubeRepresentation",
    "description": "Tube Representation",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "src/representation/cartoon-representation.js~CartoonRepresentation"
    ]
  },
  {
    "__docId__": 2821,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 2822,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2823,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2824,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 2825,
    "kind": "member",
    "name": "radialSegments",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#radialSegments",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 2826,
    "kind": "method",
    "name": "getSplineParams",
    "memberof": "src/representation/tube-representation.js~TubeRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/tube-representation.js~TubeRepresentation#getSplineParams",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2827,
    "kind": "file",
    "name": "src/representation/unitcell-representation.js",
    "content": "/**\r\n * @file Unitcell Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport SphereBuffer from '../buffer/sphere-buffer.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Unitcell Representation\r\n */\r\nclass UnitcellRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'unitcell'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n      radius: {\r\n        type: 'number', precision: 3, max: 10.0, min: 0.001\r\n      },\r\n      sphereDetail: true,\r\n      radialSegments: true,\r\n      disableImpostor: true\r\n\r\n    }, this.parameters, {\r\n      assembly: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n\r\n    let defaultRadius = 0.5\r\n    if (this.structure.unitcell) {\r\n      defaultRadius = Math.cbrt(this.structure.unitcell.volume) / 200\r\n    }\r\n\r\n    p.radius = defaults(p.radius, defaultRadius)\r\n    p.colorValue = defaults(p.colorValue, 'orange')\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  getUnitcellData (structure) {\r\n    return structure.unitcell.getData(structure)\r\n  }\r\n\r\n  create () {\r\n    const structure = this.structureView.getStructure()\r\n    if (!structure.unitcell) return\r\n    const unitcellData = this.getUnitcellData(structure)\r\n\r\n    this.sphereBuffer = new SphereBuffer(\r\n      unitcellData.vertex,\r\n      this.getBufferParams({\r\n        sphereDetail: this.sphereDetail,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.cylinderBuffer = new CylinderBuffer(\r\n      unitcellData.edge,\r\n      this.getBufferParams({\r\n        openEnded: true,\r\n        radialSegments: this.radialSegments,\r\n        disableImpostor: this.disableImpostor,\r\n        dullInterior: true\r\n      })\r\n    )\r\n\r\n    this.dataList.push({\r\n      sview: this.structureView,\r\n      bufferList: [ this.sphereBuffer, this.cylinderBuffer ]\r\n    })\r\n  }\r\n\r\n  updateData (what, data) {\r\n    const structure = data.sview.getStructure()\r\n    const unitcellData = this.getUnitcellData(structure)\r\n    const sphereData = {}\r\n    const cylinderData = {}\r\n\r\n    if (!what || what.position) {\r\n      sphereData.position = unitcellData.vertexPosition\r\n      cylinderData.position1 = unitcellData.edgePosition1\r\n      cylinderData.position2 = unitcellData.edgePosition2\r\n    }\r\n\r\n    if (!what || what.color) {\r\n      sphereData.color = unitcellData.vertexColor\r\n      cylinderData.color = unitcellData.edgeColor\r\n      cylinderData.color2 = unitcellData.edgeColor\r\n    }\r\n\r\n    if (!what || what.radius) {\r\n      sphereData.radius = unitcellData.vertexRadius\r\n      cylinderData.radius = unitcellData.edgeRadius\r\n    }\r\n\r\n    this.sphereBuffer.setAttributes(sphereData)\r\n    this.cylinderBuffer.setAttributes(cylinderData)\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('unitcell', UnitcellRepresentation)\r\n\r\nexport default UnitcellRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/unitcell-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2828,
    "kind": "class",
    "name": "UnitcellRepresentation",
    "memberof": "src/representation/unitcell-representation.js",
    "static": true,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/unitcell-representation.js",
    "importStyle": "UnitcellRepresentation",
    "description": "Unitcell Representation",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2829,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2830,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 2831,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2832,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 2833,
    "kind": "method",
    "name": "getUnitcellData",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#getUnitcellData",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2834,
    "kind": "method",
    "name": "create",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#create",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 2835,
    "kind": "member",
    "name": "sphereBuffer",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#sphereBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 2836,
    "kind": "member",
    "name": "cylinderBuffer",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#cylinderBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 2837,
    "kind": "method",
    "name": "updateData",
    "memberof": "src/representation/unitcell-representation.js~UnitcellRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/unitcell-representation.js~UnitcellRepresentation#updateData",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 2838,
    "kind": "file",
    "name": "src/representation/validation-representation.js",
    "content": "/**\r\n * @file Validation Representation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { RepresentationRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport StructureRepresentation from './structure-representation.js'\r\nimport CylinderBuffer from '../buffer/cylinder-buffer.js'\r\n\r\n/**\r\n * Validation representation\r\n */\r\nclass ValidationRepresentation extends StructureRepresentation {\r\n  constructor (structure, viewer, params) {\r\n    super(structure, viewer, params)\r\n\r\n    this.type = 'validation'\r\n\r\n    this.parameters = Object.assign({\r\n\r\n    }, this.parameters, {\r\n      radiusType: null,\r\n      radius: null,\r\n      scale: null\r\n    })\r\n\r\n    this.init(params)\r\n  }\r\n\r\n  init (params) {\r\n    const p = params || {}\r\n    p.colorValue = defaults(p.colorValue, '#f0027f')\r\n\r\n    super.init(p)\r\n  }\r\n\r\n  createData (sview) {\r\n    if (!sview.validation) return\r\n\r\n    const clashData = sview.validation.getClashData({\r\n      structure: sview,\r\n      color: this.colorValue\r\n    })\r\n\r\n    const cylinderBuffer = new CylinderBuffer(\r\n      clashData, this.getBufferParams({ openEnded: false })\r\n    )\r\n\r\n    return {\r\n      bufferList: [ cylinderBuffer ]\r\n    }\r\n  }\r\n}\r\n\r\nRepresentationRegistry.add('validation', ValidationRepresentation)\r\n\r\nexport default ValidationRepresentation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/representation/validation-representation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2839,
    "kind": "class",
    "name": "ValidationRepresentation",
    "memberof": "src/representation/validation-representation.js",
    "static": true,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/representation/validation-representation.js",
    "importStyle": "ValidationRepresentation",
    "description": "Validation representation",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "src/representation/structure-representation.js~StructureRepresentation"
    ]
  },
  {
    "__docId__": 2840,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/representation/validation-representation.js~ValidationRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 2841,
    "kind": "member",
    "name": "type",
    "memberof": "src/representation/validation-representation.js~ValidationRepresentation",
    "static": false,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation#type",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 2842,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/representation/validation-representation.js~ValidationRepresentation",
    "static": false,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2843,
    "kind": "method",
    "name": "init",
    "memberof": "src/representation/validation-representation.js~ValidationRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation#init",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 2844,
    "kind": "method",
    "name": "createData",
    "memberof": "src/representation/validation-representation.js~ValidationRepresentation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/representation/validation-representation.js~ValidationRepresentation#createData",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 2845,
    "kind": "file",
    "name": "src/script.js",
    "content": "/**\r\n * @file Script\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../lib/signals.es6.js'\r\n\r\nimport { Log } from './globals.js'\r\n\r\n/**\r\n * Script class\r\n */\r\nclass Script {\r\n  /**\r\n   * Create a script instance\r\n   * @param {String} functionBody - the function source\r\n   * @param {String} name - name of the script\r\n   * @param {String} path - path of the script\r\n   */\r\n  constructor (functionBody, name, path) {\r\n    this.signals = {\r\n      elementAdded: new Signal(),\r\n      elementRemoved: new Signal(),\r\n      nameChanged: new Signal()\r\n    }\r\n\r\n    this.name = name\r\n    this.path = path\r\n    this.dir = path.substring(0, path.lastIndexOf('/') + 1)\r\n\r\n    try {\r\n      /* eslint-disable no-new-func */\r\n      this.fn = new Function(\r\n        'stage', 'panel',\r\n        '__name__', '__path__', '__dir__',\r\n        functionBody\r\n      )\r\n    } catch (e) {\r\n      Log.error('Script compilation failed', e)\r\n      this.fn = function () {}\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Object type\r\n   * @readonly\r\n   */\r\n  get type () { return 'Script' }\r\n\r\n  /**\r\n   * Execute the script\r\n   * @param  {Stage} stage - the stage context\r\n   * @return {Promise} - resolve when script finished running\r\n   */\r\n  call (stage) {\r\n    var panel = {\r\n      add: function (/* element */) {\r\n        this.signals.elementAdded.dispatch(arguments)\r\n      }.bind(this),\r\n\r\n      remove: function (/* element */) {\r\n        this.signals.elementRemoved.dispatch(arguments)\r\n      }.bind(this),\r\n\r\n      setName: function (value) {\r\n        this.signals.nameChanged.dispatch(value)\r\n      }.bind(this)\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      var args = [\r\n        stage, panel,\r\n        this.name, this.path, this.dir\r\n      ]\r\n\r\n      try {\r\n        this.fn.apply(null, args)\r\n        resolve()\r\n      } catch (e) {\r\n        Log.error('Script.fn', e)\r\n        reject(e)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default Script\r\n",
    "static": true,
    "longname": "D:/nglLib/src/script.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2846,
    "kind": "class",
    "name": "Script",
    "memberof": "src/script.js",
    "static": true,
    "longname": "src/script.js~Script",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/script.js",
    "importStyle": "Script",
    "description": "Script class",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 2847,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#constructor",
    "access": "public",
    "description": "Create a script instance",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "functionBody",
        "description": "the function source"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name of the script"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "path of the script"
      }
    ]
  },
  {
    "__docId__": 2848,
    "kind": "member",
    "name": "signals",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#signals",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 2849,
    "kind": "member",
    "name": "name",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#name",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 2850,
    "kind": "member",
    "name": "path",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#path",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 2851,
    "kind": "member",
    "name": "dir",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#dir",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 2852,
    "kind": "member",
    "name": "fn",
    "memberof": "src/script.js~Script",
    "static": false,
    "longname": "src/script.js~Script#fn",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2853,
    "kind": "get",
    "name": "type",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#type",
    "access": "public",
    "description": "Object type",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ]
  },
  {
    "__docId__": 2854,
    "kind": "method",
    "name": "call",
    "memberof": "src/script.js~Script",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/script.js~Script#call",
    "access": "public",
    "description": "Execute the script",
    "lineNumber": 56,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage context"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolve when script finished running"
    }
  },
  {
    "__docId__": 2855,
    "kind": "file",
    "name": "src/selection/selection-constants.js",
    "content": "/**\r\n * @file Selection Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nconst kwd = {\r\n  PROTEIN: 1,\r\n  NUCLEIC: 2,\r\n  RNA: 3,\r\n  DNA: 4,\r\n  POLYMER: 5,\r\n  WATER: 6,\r\n  HELIX: 7,\r\n  SHEET: 8,\r\n  TURN: 9,\r\n  BACKBONE: 10,\r\n  SIDECHAIN: 11,\r\n  ALL: 12,\r\n  HETERO: 13,\r\n  ION: 14,\r\n  SACCHARIDE: 15,\r\n  SUGAR: 15,\r\n  BONDED: 16,\r\n  RING: 17\r\n}\r\n\r\nconst SelectAllKeyword = [ '*', '', 'ALL' ]\r\n\r\nconst AtomOnlyKeywords = [\r\n  kwd.BACKBONE, kwd.SIDECHAIN, kwd.BONDED, kwd.RING\r\n]\r\n\r\nconst ChainKeywords = [\r\n  kwd.POLYMER, kwd.WATER\r\n]\r\n\r\nconst SmallResname = [ 'ALA', 'GLY', 'SER' ]\r\nconst NucleophilicResname = [ 'CYS', 'SER', 'THR' ]\r\nconst HydrophobicResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\r\nconst AromaticResname = [ 'PHE', 'TRP', 'TYR', 'HIS' ]\r\nconst AmideResname = [ 'ASN', 'GLN' ]\r\nconst AcidicResname = [ 'ASP', 'GLU' ]\r\nconst BasicResname = [ 'ARG', 'HIS', 'LYS' ]\r\nconst ChargedResname = [ 'ARG', 'ASP', 'GLU', 'HIS', 'LYS' ]\r\nconst PolarResname = [ 'ASN', 'ARG', 'ASP', 'CYS', 'GLY', 'GLN', 'GLU', 'HIS', 'LYS', 'SER', 'THR', 'TYR' ]\r\nconst NonpolarResname = [ 'ALA', 'ILE', 'LEU', 'MET', 'PHE', 'PRO', 'TRP', 'VAL' ]\r\nconst CyclicResname = [ 'HIS', 'PHE', 'PRO', 'TRP', 'TYR' ]\r\nconst AliphaticResname = [ 'ALA', 'GLY', 'ILE', 'LEU', 'VAL' ]\r\n\r\nexport {\r\n  kwd,\r\n  SelectAllKeyword,\r\n\r\n  AtomOnlyKeywords,\r\n  ChainKeywords,\r\n\r\n  SmallResname,\r\n  NucleophilicResname,\r\n  HydrophobicResname,\r\n  AromaticResname,\r\n  AmideResname,\r\n  AcidicResname,\r\n  BasicResname,\r\n  ChargedResname,\r\n  PolarResname,\r\n  NonpolarResname,\r\n  CyclicResname,\r\n  AliphaticResname\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/selection/selection-constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2856,
    "kind": "variable",
    "name": "kwd",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~kwd",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{kwd}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Selection Constants"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 2857,
    "kind": "variable",
    "name": "SelectAllKeyword",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~SelectAllKeyword",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{SelectAllKeyword}",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 2858,
    "kind": "variable",
    "name": "AtomOnlyKeywords",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~AtomOnlyKeywords",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{AtomOnlyKeywords}",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 2859,
    "kind": "variable",
    "name": "ChainKeywords",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~ChainKeywords",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{ChainKeywords}",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 2860,
    "kind": "variable",
    "name": "SmallResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~SmallResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{SmallResname}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 2861,
    "kind": "variable",
    "name": "NucleophilicResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~NucleophilicResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{NucleophilicResname}",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 2862,
    "kind": "variable",
    "name": "HydrophobicResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~HydrophobicResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{HydrophobicResname}",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2863,
    "kind": "variable",
    "name": "AromaticResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~AromaticResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{AromaticResname}",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 2864,
    "kind": "variable",
    "name": "AmideResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~AmideResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{AmideResname}",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 2865,
    "kind": "variable",
    "name": "AcidicResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~AcidicResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{AcidicResname}",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 2866,
    "kind": "variable",
    "name": "BasicResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~BasicResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{BasicResname}",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 2867,
    "kind": "variable",
    "name": "ChargedResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~ChargedResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{ChargedResname}",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2868,
    "kind": "variable",
    "name": "PolarResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~PolarResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{PolarResname}",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 2869,
    "kind": "variable",
    "name": "NonpolarResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~NonpolarResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{NonpolarResname}",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 2870,
    "kind": "variable",
    "name": "CyclicResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~CyclicResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{CyclicResname}",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 2871,
    "kind": "variable",
    "name": "AliphaticResname",
    "memberof": "src/selection/selection-constants.js",
    "static": true,
    "longname": "src/selection/selection-constants.js~AliphaticResname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-constants.js",
    "importStyle": "{AliphaticResname}",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 2872,
    "kind": "file",
    "name": "src/selection/selection-parser.js",
    "content": "/**\r\n * @file Selection Parser\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  kwd, SelectAllKeyword,\r\n  SmallResname, NucleophilicResname, HydrophobicResname, AromaticResname,\r\n  AmideResname, AcidicResname, BasicResname, ChargedResname,\r\n  PolarResname, NonpolarResname, CyclicResname, AliphaticResname\r\n} from './selection-constants.js'\r\n\r\nfunction parseSele (string) {\r\n  let retSelection = {\r\n    operator: undefined,\r\n    rules: []\r\n  }\r\n\r\n  if (!string) {\r\n    return retSelection\r\n  }\r\n\r\n  let selection = retSelection\r\n  let newSelection, oldSelection\r\n  const selectionStack = []\r\n\r\n  string = string.replace(/\\(/g, ' ( ').replace(/\\)/g, ' ) ').trim()\r\n  if (string.charAt(0) === '(' && string.substr(-1) === ')') {\r\n    string = string.slice(1, -1).trim()\r\n  }\r\n  const chunks = string.split(/\\s+/)\r\n\r\n  // Log.log( string, chunks )\r\n\r\n  const createNewContext = operator => {\r\n    newSelection = {\r\n      operator: operator,\r\n      rules: []\r\n    }\r\n    if (selection === undefined) {\r\n      selection = newSelection\r\n      retSelection = newSelection\r\n    } else {\r\n      selection.rules.push(newSelection)\r\n      selectionStack.push(selection)\r\n      selection = newSelection\r\n    }\r\n  }\r\n\r\n  const getPrevContext = function (operator) {\r\n    oldSelection = selection\r\n    selection = selectionStack.pop()\r\n    if (selection === undefined) {\r\n      createNewContext(operator)\r\n      pushRule(oldSelection)\r\n    }\r\n  }\r\n\r\n  const pushRule = function (rule) {\r\n    selection.rules.push(rule)\r\n  }\r\n\r\n  let not\r\n\r\n  for (let i = 0; i < chunks.length; ++i) {\r\n    const c = chunks[ i ]\r\n    const cu = c.toUpperCase()\r\n\r\n    // handle parens\r\n\r\n    if (c === '(') {\r\n      // Log.log( \"(\" );\r\n\r\n      not = false\r\n      createNewContext()\r\n      continue\r\n    } else if (c === ')') {\r\n      // Log.log( \")\" );\r\n\r\n      getPrevContext()\r\n      if (selection.negate) {\r\n        getPrevContext()\r\n      }\r\n      continue\r\n    }\r\n\r\n    // leave 'not' context\r\n\r\n    if (not > 0) {\r\n      if (cu === 'NOT') {\r\n        not = 1\r\n      } else if (not === 1) {\r\n        not = 2\r\n      } else if (not === 2) {\r\n        not = false\r\n        getPrevContext()\r\n      } else {\r\n        throw new Error(\"something went wrong with 'not'\")\r\n      }\r\n    }\r\n\r\n    // handle logic operators\r\n\r\n    if (cu === 'AND') {\r\n      // Log.log( \"AND\" );\r\n\r\n      if (selection.operator === 'OR') {\r\n        const lastRule = selection.rules.pop()\r\n        createNewContext('AND')\r\n        pushRule(lastRule)\r\n      } else {\r\n        selection.operator = 'AND'\r\n      }\r\n      continue\r\n    } else if (cu === 'OR') {\r\n      // Log.log( \"OR\" );\r\n\r\n      if (selection.operator === 'AND') {\r\n        getPrevContext('OR')\r\n      } else {\r\n        selection.operator = 'OR'\r\n      }\r\n      continue\r\n    } else if (c.toUpperCase() === 'NOT') {\r\n      // Log.log( \"NOT\", j );\r\n\r\n      not = 1\r\n      createNewContext()\r\n      selection.negate = true\r\n      continue\r\n    } else {\r\n\r\n      // Log.log( \"chunk\", c, j, selection );\r\n\r\n    }\r\n\r\n    // handle keyword attributes\r\n\r\n    const keyword = kwd[ cu ]\r\n    if (keyword !== undefined) {\r\n      pushRule({ keyword })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'HYDROGEN') {\r\n      pushRule({ element: 'H' })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'SMALL') {\r\n      pushRule({ resname: SmallResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'NUCLEOPHILIC') {\r\n      pushRule({ resname: NucleophilicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'HYDROPHOBIC') {\r\n      pushRule({ resname: HydrophobicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'AROMATIC') {\r\n      pushRule({ resname: AromaticResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'AMIDE') {\r\n      pushRule({ resname: AmideResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'ACIDIC') {\r\n      pushRule({ resname: AcidicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'BASIC') {\r\n      pushRule({ resname: BasicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'CHARGED') {\r\n      pushRule({ resname: ChargedResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'POLAR') {\r\n      pushRule({ resname: PolarResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'NONPOLAR') {\r\n      pushRule({ resname: NonpolarResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'CYCLIC') {\r\n      pushRule({ resname: CyclicResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'ALIPHATIC') {\r\n      pushRule({ resname: AliphaticResname })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'SIDECHAINATTACHED') {\r\n      pushRule({\r\n        operator: 'OR',\r\n        rules: [\r\n          { keyword: kwd.SIDECHAIN },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { keyword: kwd.PROTEIN },\r\n              {\r\n                operator: 'OR',\r\n                negate: false,\r\n                rules: [\r\n                  { atomname: 'CA' },\r\n                  { atomname: 'BB' }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { resname: 'PRO' },\r\n              { atomname: 'N' }\r\n            ]\r\n          },\r\n          {\r\n            operator: 'AND',\r\n            negate: false,\r\n            rules: [\r\n              { keyword: kwd.NUCLEIC },\r\n              {\r\n                operator: 'OR',\r\n                negate: true,\r\n                rules: [\r\n                  { atomname: 'P' },\r\n                  { atomname: 'OP1' },\r\n                  { atomname: 'OP2' },\r\n                  { atomname: \"O3'\" },\r\n                  { atomname: 'O3*' },\r\n                  { atomname: \"O5'\" },\r\n                  { atomname: 'O5*' },\r\n                  { atomname: \"C5'\" },\r\n                  { atomname: 'C5*' }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (cu === 'LIGAND') {\r\n      pushRule({\r\n        operator: 'AND',\r\n        rules: [\r\n          {\r\n            operator: 'OR',\r\n            rules: [\r\n              {\r\n                operator: 'AND',\r\n                rules: [\r\n                  { keyword: kwd.HETERO },\r\n                  {\r\n                    negate: true,\r\n                    operator: undefined,\r\n                    rules: [\r\n                      { keyword: kwd.POLYMER }\r\n                    ]\r\n                  }\r\n                ]\r\n              },\r\n              {\r\n                negate: true,\r\n                operator: undefined,\r\n                rules: [\r\n                  { keyword: kwd.POLYMER }\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            negate: true,\r\n            operator: undefined,\r\n            rules: [\r\n              {\r\n                operator: 'OR',\r\n                rules: [\r\n                  { keyword: kwd.WATER },\r\n                  { keyword: kwd.ION }\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n      continue\r\n    }\r\n\r\n    if (SelectAllKeyword.indexOf(cu) !== -1) {\r\n      pushRule({ keyword: kwd.ALL })\r\n      continue\r\n    }\r\n\r\n    // handle atom expressions\r\n\r\n    if (c.charAt(0) === '@') {\r\n      const indexList = c.substr(1).split(',')\r\n      for (let k = 0, kl = indexList.length; k < kl; ++k) {\r\n        indexList[ k ] = parseInt(indexList[ k ])\r\n      }\r\n      indexList.sort(function (a, b) { return a - b })\r\n      pushRule({ atomindex: indexList })\r\n      continue\r\n    }\r\n\r\n    if (c.charAt(0) === '#') {\r\n      console.error('# for element selection deprecated, use _')\r\n      pushRule({ element: cu.substr(1) })\r\n      continue\r\n    }\r\n    if (c.charAt(0) === '_') {\r\n      pushRule({ element: cu.substr(1) })\r\n      continue\r\n    }\r\n\r\n    if (c[0] === '[' && c[c.length - 1] === ']') {\r\n      const resnameList = cu.substr(1, c.length - 2).split(',')\r\n      const resname = resnameList.length > 1 ? resnameList : resnameList[ 0 ]\r\n      pushRule({ resname: resname })\r\n      continue\r\n    } else if (\r\n      (c.length >= 1 && c.length <= 4) &&\r\n      c[0] !== '^' && c[0] !== ':' && c[0] !== '.' && c[0] !== '%' && c[0] !== '/' &&\r\n      isNaN(parseInt(c))\r\n    ) {\r\n      pushRule({ resname: cu })\r\n      continue\r\n    }\r\n\r\n    // there must be only one constraint per rule\r\n    // otherwise a test quickly becomes not applicable\r\n    // e.g. chainTest for chainname when resno is present too\r\n\r\n    const sele = {\r\n      operator: 'AND',\r\n      rules: []\r\n    }\r\n\r\n    const model = c.split('/')\r\n    if (model.length > 1 && model[1]) {\r\n      if (isNaN(parseInt(model[1]))) {\r\n        throw new Error('model must be an integer')\r\n      }\r\n      sele.rules.push({\r\n        model: parseInt(model[1])\r\n      })\r\n    }\r\n\r\n    const altloc = model[0].split('%')\r\n    if (altloc.length > 1) {\r\n      sele.rules.push({\r\n        altloc: altloc[1]\r\n      })\r\n    }\r\n\r\n    const atomname = altloc[0].split('.')\r\n    if (atomname.length > 1 && atomname[1]) {\r\n      if (atomname[1].length > 4) {\r\n        throw new Error('atomname must be one to four characters')\r\n      }\r\n      sele.rules.push({\r\n        atomname: atomname[1].substring(0, 4).toUpperCase()\r\n      })\r\n    }\r\n\r\n    const chain = atomname[0].split(':')\r\n    if (chain.length > 1 && chain[1]) {\r\n      sele.rules.push({\r\n        chainname: chain[1]\r\n      })\r\n    }\r\n\r\n    const inscode = chain[0].split('^')\r\n    if (inscode.length > 1) {\r\n      sele.rules.push({\r\n        inscode: inscode[1]\r\n      })\r\n    }\r\n\r\n    if (inscode[0]) {\r\n      let negate, negate2\r\n      if (inscode[0][0] === '-') {\r\n        inscode[0] = inscode[0].substr(1)\r\n        negate = true\r\n      }\r\n      if (inscode[0].includes('--')) {\r\n        inscode[0] = inscode[0].replace('--', '-')\r\n        negate2 = true\r\n      }\r\n      let resi = inscode[0].split('-')\r\n      if (resi.length === 1) {\r\n        resi = parseInt(resi[0])\r\n        if (isNaN(resi)) {\r\n          throw new Error('resi must be an integer')\r\n        }\r\n        if (negate) resi *= -1\r\n        sele.rules.push({\r\n          resno: resi\r\n        })\r\n      } else if (resi.length === 2) {\r\n        if (negate) resi[0] *= -1\r\n        if (negate2) resi[1] *= -1\r\n        sele.rules.push({\r\n          resno: [ parseInt(resi[0]), parseInt(resi[1]) ]\r\n        })\r\n      } else {\r\n        throw new Error(\"resi range must contain one '-'\")\r\n      }\r\n    }\r\n\r\n    // round up\r\n\r\n    if (sele.rules.length === 1) {\r\n      pushRule(sele.rules[ 0 ])\r\n    } else if (sele.rules.length > 1) {\r\n      pushRule(sele)\r\n    } else {\r\n      throw new Error('empty selection chunk')\r\n    }\r\n  }\r\n\r\n  // cleanup\r\n\r\n  if (\r\n    retSelection.operator === undefined &&\r\n    retSelection.rules.length === 1 &&\r\n    retSelection.rules[ 0 ].hasOwnProperty('operator')\r\n  ) {\r\n    retSelection = retSelection.rules[ 0 ]\r\n  }\r\n\r\n  return retSelection\r\n}\r\n\r\nexport {\r\n  parseSele\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/selection/selection-parser.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2873,
    "kind": "function",
    "name": "parseSele",
    "memberof": "src/selection/selection-parser.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-parser.js~parseSele",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-parser.js",
    "importStyle": "{parseSele}",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 2874,
    "kind": "file",
    "name": "src/selection/selection-test.js",
    "content": "/**\r\n * @file Selection Test\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { binarySearchIndexOf, rangeInSortedArray } from '../utils.js'\r\nimport { kwd, AtomOnlyKeywords, ChainKeywords } from './selection-constants.js'\r\n\r\nfunction atomTestFn (a, s) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.atomname === undefined && s.element === undefined &&\r\n    s.altloc === undefined && s.atomindex === undefined &&\r\n    s.keyword === undefined && s.inscode === undefined &&\r\n    s.resname === undefined && s.sstruc === undefined &&\r\n    s.resno === undefined && s.chainname === undefined &&\r\n    s.model === undefined\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.BACKBONE && !a.isBackbone()) return false\r\n    if (s.keyword === kwd.SIDECHAIN && !a.isSidechain()) return false\r\n    if (s.keyword === kwd.BONDED && !a.isBonded()) return false\r\n    if (s.keyword === kwd.RING && !a.isRing()) return false\r\n\r\n    if (s.keyword === kwd.HETERO && !a.isHetero()) return false\r\n    if (s.keyword === kwd.PROTEIN && !a.isProtein()) return false\r\n    if (s.keyword === kwd.NUCLEIC && !a.isNucleic()) return false\r\n    if (s.keyword === kwd.RNA && !a.isRna()) return false\r\n    if (s.keyword === kwd.DNA && !a.isDna()) return false\r\n    if (s.keyword === kwd.POLYMER && !a.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !a.isWater()) return false\r\n    if (s.keyword === kwd.HELIX && !a.isHelix()) return false\r\n    if (s.keyword === kwd.SHEET && !a.isSheet()) return false\r\n    if (s.keyword === kwd.TURN && !a.isTurn()) return false\r\n    if (s.keyword === kwd.ION && !a.isIon()) return false\r\n    if (s.keyword === kwd.SACCHARIDE && !a.isSaccharide()) return false\r\n  }\r\n\r\n  if (s.atomname !== undefined && s.atomname !== a.atomname) return false\r\n  if (s.element !== undefined && s.element !== a.element) return false\r\n  if (s.altloc !== undefined && s.altloc !== a.altloc) return false\r\n\r\n  if (s.atomindex !== undefined &&\r\n      binarySearchIndexOf(s.atomindex, a.index) < 0\r\n  ) return false\r\n\r\n  if (s.resname !== undefined) {\r\n    if (Array.isArray(s.resname)) {\r\n      if (!s.resname.includes(a.resname)) return false\r\n    } else {\r\n      if (s.resname !== a.resname) return false\r\n    }\r\n  }\r\n  if (s.sstruc !== undefined && s.sstruc !== a.sstruc) return false\r\n  if (s.resno !== undefined) {\r\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n      if (s.resno[0] > a.resno || s.resno[1] < a.resno) return false\r\n    } else {\r\n      if (s.resno !== a.resno) return false\r\n    }\r\n  }\r\n  if (s.inscode !== undefined && s.inscode !== a.inscode) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== a.chainname) return false\r\n  if (s.model !== undefined && s.model !== a.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction residueTestFn (r, s) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.resname === undefined && s.resno === undefined && s.inscode === undefined &&\r\n      s.sstruc === undefined && s.model === undefined && s.chainname === undefined &&\r\n      s.atomindex === undefined &&\r\n      (s.keyword === undefined || AtomOnlyKeywords.includes(s.keyword))\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.HETERO && !r.isHetero()) return false\r\n    if (s.keyword === kwd.PROTEIN && !r.isProtein()) return false\r\n    if (s.keyword === kwd.NUCLEIC && !r.isNucleic()) return false\r\n    if (s.keyword === kwd.RNA && !r.isRna()) return false\r\n    if (s.keyword === kwd.DNA && !r.isDna()) return false\r\n    if (s.keyword === kwd.POLYMER && !r.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !r.isWater()) return false\r\n    if (s.keyword === kwd.HELIX && !r.isHelix()) return false\r\n    if (s.keyword === kwd.SHEET && !r.isSheet()) return false\r\n    if (s.keyword === kwd.TURN && !r.isTurn()) return false\r\n    if (s.keyword === kwd.ION && !r.isIon()) return false\r\n    if (s.keyword === kwd.SACCHARIDE && !r.isSaccharide()) return false\r\n  }\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, r.atomOffset, r.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.resname !== undefined) {\r\n    if (Array.isArray(s.resname)) {\r\n      if (!s.resname.includes(r.resname)) return false\r\n    } else {\r\n      if (s.resname !== r.resname) return false\r\n    }\r\n  }\r\n  if (s.sstruc !== undefined && s.sstruc !== r.sstruc) return false\r\n  if (s.resno !== undefined) {\r\n    if (Array.isArray(s.resno) && s.resno.length === 2) {\r\n      if (s.resno[0] > r.resno || s.resno[1] < r.resno) return false\r\n    } else {\r\n      if (s.resno !== r.resno) return false\r\n    }\r\n  }\r\n  if (s.inscode !== undefined && s.inscode !== r.inscode) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== r.chainname) return false\r\n  if (s.model !== undefined && s.model !== r.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction chainTestFn (c, s) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.chainname === undefined && s.model === undefined && s.atomindex === undefined &&\r\n      (s.keyword === undefined || !ChainKeywords.includes(s.keyword) || !c.entity)\r\n  ) return -1\r\n\r\n  if (s.keyword !== undefined) {\r\n    if (s.keyword === kwd.POLYMER && !c.entity.isPolymer()) return false\r\n    if (s.keyword === kwd.WATER && !c.entity.isWater()) return false\r\n  }\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, c.atomOffset, c.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.chainname !== undefined && s.chainname !== c.chainname) return false\r\n\r\n  if (s.model !== undefined && s.model !== c.modelIndex) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction modelTestFn (m, s) {\r\n  // returning -1 means the rule is not applicable\r\n  if (s.model === undefined && s.atomindex === undefined) return -1\r\n\r\n  if (s.atomindex !== undefined &&\r\n      rangeInSortedArray(s.atomindex, m.atomOffset, m.atomEnd) === 0\r\n  ) return false\r\n\r\n  if (s.model !== undefined && s.model !== m.index) return false\r\n\r\n  return true\r\n}\r\n\r\nfunction makeTest (selection, fn) {\r\n  if (selection === null) return false\r\n  if (selection.error) return false\r\n\r\n  const n = selection.rules.length\r\n  if (n === 0) return false\r\n\r\n  const t = !selection.negate\r\n  const f = !!selection.negate\r\n\r\n  const subTests = []\r\n  for (let i = 0; i < n; ++i) {\r\n    const s = selection.rules[ i ]\r\n    if (s.hasOwnProperty('operator')) {\r\n      subTests[ i ] = makeTest(s, fn)\r\n    }\r\n  }\r\n\r\n  // ( x and y ) can short circuit on false\r\n  // ( x or y ) can short circuit on true\r\n  // not ( x and y )\r\n\r\n  return function test (entity) {\r\n    const and = selection.operator === 'AND'\r\n    let na = false\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const s = selection.rules[ i ]\r\n      let ret\r\n\r\n      if (s.hasOwnProperty('operator')) {\r\n        if (subTests[ i ]) {\r\n          ret = subTests[ i ](entity)\r\n        } else {\r\n          ret = -1\r\n        }\r\n\r\n        if (ret === -1) {\r\n          na = true\r\n          continue\r\n        } else if (ret === true) {\r\n          if (and) { continue } else { return t }\r\n        } else {\r\n          if (and) { return f } else { continue }\r\n        }\r\n      } else {\r\n        if (s.keyword === kwd.ALL) {\r\n          if (and) { continue } else { return t }\r\n        }\r\n\r\n        ret = fn(entity, s)\r\n\r\n        // console.log( entity.qualifiedName(), ret, s, selection.negate, \"t\", t, \"f\", f )\r\n\r\n        if (ret === -1) {\r\n          na = true\r\n          continue\r\n        } else if (ret === true) {\r\n          if (and) { continue } else { return t }\r\n        } else {\r\n          if (and) { return f } else { continue }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (na) {\r\n      return -1\r\n    } else {\r\n      if (and) { return t } else { return f }\r\n    }\r\n  }\r\n}\r\n\r\nfunction filter (selection, fn) {\r\n  if (selection.error) return selection\r\n\r\n  const n = selection.rules.length\r\n  if (n === 0) return selection\r\n\r\n  const filtered = {\r\n    operator: selection.operator,\r\n    rules: []\r\n  }\r\n  if (selection.hasOwnProperty('negate')) {\r\n    filtered.negate = selection.negate\r\n  }\r\n\r\n  for (let i = 0; i < n; ++i) {\r\n    const s = selection.rules[ i ]\r\n    if (s.hasOwnProperty('operator')) {\r\n      const fs = filter(s, fn)\r\n      if (fs !== null) filtered.rules.push(fs)\r\n    } else if (!fn(s)) {\r\n      filtered.rules.push(s)\r\n    }\r\n  }\r\n\r\n  if (filtered.rules.length > 0) {\r\n    // TODO maybe the filtered rules could be returned\r\n    // in some case, but the way how tests are applied\r\n    // e.g. when traversing a structure would also need\r\n    // to change\r\n    return selection\r\n    // return filtered;\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nfunction makeAtomTest (selection, atomOnly) {\r\n  if (atomOnly) {\r\n    selection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && !AtomOnlyKeywords.includes(s.keyword)) return true\r\n      if (s.model !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(selection, atomTestFn)\r\n}\r\n\r\nfunction makeResidueTest (selection, residueOnly) {\r\n  if (residueOnly) {\r\n    selection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && AtomOnlyKeywords.includes(s.keyword)) return true\r\n      if (s.model !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(selection, residueTestFn)\r\n}\r\n\r\nfunction makeChainTest (selection, chainOnly) {\r\n  if (chainOnly) {\r\n    selection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined && !ChainKeywords.includes(s.keyword)) return true\r\n      // if( s.model!==undefined ) return true;\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      if (s.inscode !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(selection, chainTestFn)\r\n}\r\n\r\nfunction makeModelTest (selection, modelOnly) {\r\n  if (modelOnly) {\r\n    selection = filter(selection, function (s) {\r\n      if (s.keyword !== undefined) return true\r\n      if (s.chainname !== undefined) return true\r\n      if (s.resname !== undefined) return true\r\n      if (s.resno !== undefined) return true\r\n      if (s.atomname !== undefined) return true\r\n      if (s.element !== undefined) return true\r\n      if (s.altloc !== undefined) return true\r\n      if (s.sstruc !== undefined) return true\r\n      if (s.inscode !== undefined) return true\r\n      return false\r\n    })\r\n  }\r\n  return makeTest(selection, modelTestFn)\r\n}\r\n\r\nexport {\r\n  makeAtomTest,\r\n  makeResidueTest,\r\n  makeChainTest,\r\n  makeModelTest\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/selection/selection-test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2875,
    "kind": "function",
    "name": "atomTestFn",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~atomTestFn",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2876,
    "kind": "function",
    "name": "residueTestFn",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~residueTestFn",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2877,
    "kind": "function",
    "name": "chainTestFn",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~chainTestFn",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 121,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2878,
    "kind": "function",
    "name": "modelTestFn",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~modelTestFn",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2879,
    "kind": "function",
    "name": "makeTest",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~makeTest",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2880,
    "kind": "function",
    "name": "filter",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~filter",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2881,
    "kind": "function",
    "name": "makeAtomTest",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~makeAtomTest",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": "{makeAtomTest}",
    "description": null,
    "lineNumber": 265,
    "undocument": true
  },
  {
    "__docId__": 2882,
    "kind": "function",
    "name": "makeResidueTest",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~makeResidueTest",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": "{makeResidueTest}",
    "description": null,
    "lineNumber": 280,
    "undocument": true
  },
  {
    "__docId__": 2883,
    "kind": "function",
    "name": "makeChainTest",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~makeChainTest",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": "{makeChainTest}",
    "description": null,
    "lineNumber": 295,
    "undocument": true
  },
  {
    "__docId__": 2884,
    "kind": "function",
    "name": "makeModelTest",
    "memberof": "src/selection/selection-test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/selection/selection-test.js~makeModelTest",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection-test.js",
    "importStyle": "{makeModelTest}",
    "description": null,
    "lineNumber": 313,
    "undocument": true
  },
  {
    "__docId__": 2885,
    "kind": "file",
    "name": "src/selection/selection.js",
    "content": "/**\r\n * @file Selection\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { parseSele } from './selection-parser.js'\r\nimport {\r\n  makeAtomTest, makeResidueTest, makeChainTest, makeModelTest\r\n} from './selection-test.js'\r\n\r\n/**\r\n * Selection\r\n */\r\nclass Selection {\r\n  /**\r\n   * Create Selection\r\n   * @param {String} string - selection string, see {@tutorial selection-language}\r\n   */\r\n  constructor (string) {\r\n    this.signals = {\r\n      stringChanged: new Signal()\r\n    }\r\n\r\n    this.setString(string)\r\n  }\r\n\r\n  get type () { return 'selection' }\r\n\r\n  setString (string, silent) {\r\n    if (string === undefined) string = this.string || ''\r\n    if (string === this.string) return\r\n\r\n    try {\r\n      this.selection = parseSele(string)\r\n    } catch (e) {\r\n      // Log.error( e.stack );\r\n      this.selection = { 'error': e.message }\r\n    }\r\n    const selection = this.selection\r\n\r\n    this.string = string\r\n\r\n    this.test = makeAtomTest(selection)\r\n    this.residueTest = makeResidueTest(selection)\r\n    this.chainTest = makeChainTest(selection)\r\n    this.modelTest = makeModelTest(selection)\r\n\r\n    this.atomOnlyTest = makeAtomTest(selection, true)\r\n    this.residueOnlyTest = makeResidueTest(selection, true)\r\n    this.chainOnlyTest = makeChainTest(selection, true)\r\n    this.modelOnlyTest = makeModelTest(selection, true)\r\n\r\n    if (!silent) {\r\n      this.signals.stringChanged.dispatch(this.string)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Selection\r\n",
    "static": true,
    "longname": "D:/nglLib/src/selection/selection.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2886,
    "kind": "class",
    "name": "Selection",
    "memberof": "src/selection/selection.js",
    "static": true,
    "longname": "src/selection/selection.js~Selection",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/selection/selection.js",
    "importStyle": "Selection",
    "description": "Selection",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 2887,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/selection/selection.js~Selection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/selection/selection.js~Selection#constructor",
    "access": "public",
    "description": "Create Selection",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "selection string, see {@tutorial selection-language}"
      }
    ]
  },
  {
    "__docId__": 2888,
    "kind": "member",
    "name": "signals",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#signals",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 2889,
    "kind": "get",
    "name": "type",
    "memberof": "src/selection/selection.js~Selection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/selection/selection.js~Selection#type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 2890,
    "kind": "method",
    "name": "setString",
    "memberof": "src/selection/selection.js~Selection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/selection/selection.js~Selection#setString",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 2891,
    "kind": "member",
    "name": "selection",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#selection",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2893,
    "kind": "member",
    "name": "string",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#string",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 2894,
    "kind": "member",
    "name": "test",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#test",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 2895,
    "kind": "member",
    "name": "residueTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#residueTest",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 2896,
    "kind": "member",
    "name": "chainTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#chainTest",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 2897,
    "kind": "member",
    "name": "modelTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#modelTest",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 2898,
    "kind": "member",
    "name": "atomOnlyTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#atomOnlyTest",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 2899,
    "kind": "member",
    "name": "residueOnlyTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#residueOnlyTest",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 2900,
    "kind": "member",
    "name": "chainOnlyTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#chainOnlyTest",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 2901,
    "kind": "member",
    "name": "modelOnlyTest",
    "memberof": "src/selection/selection.js~Selection",
    "static": false,
    "longname": "src/selection/selection.js~Selection#modelOnlyTest",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 2902,
    "kind": "file",
    "name": "src/shader/shader-utils.js",
    "content": "/**\r\n * @file Shader Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ShaderChunk } from '../../lib/three.es6.js'\r\n\r\nimport './chunk/dull_interior_fragment.glsl'\r\nimport './chunk/fog_fragment.glsl'\r\nimport './chunk/matrix_scale.glsl'\r\nimport './chunk/nearclip_vertex.glsl'\r\nimport './chunk/nearclip_fragment.glsl'\r\nimport './chunk/opaque_back_fragment.glsl'\r\nimport './chunk/radiusclip_vertex.glsl'\r\nimport './chunk/radiusclip_fragment.glsl'\r\nimport './chunk/unpack_color.glsl'\r\n\r\nimport { ShaderRegistry } from '../globals.js'\r\n\r\nfunction getDefines (defines) {\r\n  if (defines === undefined) return ''\r\n\r\n  var lines = []\r\n\r\n  for (var name in defines) {\r\n    var value = defines[ name ]\r\n\r\n    if (value === false) continue\r\n\r\n    lines.push('#define ' + name + ' ' + value)\r\n  }\r\n\r\n  return lines.join('\\n') + '\\n'\r\n}\r\n\r\nvar reInclude = /^(?!\\/\\/)\\s*#include\\s+(\\S+)/gmi\r\nvar shaderCache = {}\r\n\r\nfunction getShader (name, defines) {\r\n  defines = defines || {}\r\n\r\n  var hash = name + '|'\r\n  for (var key in defines) {\r\n    hash += key + ':' + defines[ key ]\r\n  }\r\n\r\n  if (!shaderCache[ hash ]) {\r\n    var definesText = getDefines(defines)\r\n\r\n    var shaderText = ShaderRegistry.get('shader/' + name)\r\n    if (!shaderText) {\r\n      throw new Error(\"empty shader, '\" + name + \"'\")\r\n    }\r\n    shaderText = shaderText.replace(reInclude, function (match, p1) {\r\n      var path = 'shader/chunk/' + p1 + '.glsl'\r\n      var chunk = ShaderRegistry.get(path) || ShaderChunk[ p1 ]\r\n\r\n      return chunk || ''\r\n    })\r\n\r\n    shaderCache[ hash ] = definesText + shaderText\r\n  }\r\n\r\n  return shaderCache[ hash ]\r\n}\r\n\r\nexport {\r\n  getShader\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/shader/shader-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2903,
    "kind": "function",
    "name": "getDefines",
    "memberof": "src/shader/shader-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shader/shader-utils.js~getDefines",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/shader/shader-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2904,
    "kind": "variable",
    "name": "reInclude",
    "memberof": "src/shader/shader-utils.js",
    "static": true,
    "longname": "src/shader/shader-utils.js~reInclude",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/shader/shader-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2905,
    "kind": "variable",
    "name": "shaderCache",
    "memberof": "src/shader/shader-utils.js",
    "static": true,
    "longname": "src/shader/shader-utils.js~shaderCache",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/shader/shader-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2906,
    "kind": "function",
    "name": "getShader",
    "memberof": "src/shader/shader-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/shader/shader-utils.js~getShader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/shader/shader-utils.js",
    "importStyle": "{getShader}",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 2907,
    "kind": "file",
    "name": "src/stage/animation-behavior.js",
    "content": "/**\r\n * @file Animation Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass AnimationBehavior {\r\n  constructor (stage) {\r\n    this.viewer = stage.viewer\r\n    this.animationControls = stage.animationControls\r\n\r\n    this.viewer.signals.ticked.add(this._onTick, this)\r\n  }\r\n\r\n  _onTick (stats) {\r\n    this.animationControls.run(stats)\r\n  }\r\n\r\n  dispose () {\r\n    this.viewer.signals.ticked.remove(this._onTick, this)\r\n  }\r\n}\r\n\r\nexport default AnimationBehavior\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/animation-behavior.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2908,
    "kind": "class",
    "name": "AnimationBehavior",
    "memberof": "src/stage/animation-behavior.js",
    "static": true,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/stage/animation-behavior.js",
    "importStyle": "AnimationBehavior",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Animation Behavior"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 2909,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/animation-behavior.js~AnimationBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 2910,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/stage/animation-behavior.js~AnimationBehavior",
    "static": false,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 2911,
    "kind": "member",
    "name": "animationControls",
    "memberof": "src/stage/animation-behavior.js~AnimationBehavior",
    "static": false,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior#animationControls",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 2912,
    "kind": "method",
    "name": "_onTick",
    "memberof": "src/stage/animation-behavior.js~AnimationBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior#_onTick",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 2913,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/animation-behavior.js~AnimationBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/animation-behavior.js~AnimationBehavior#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 2914,
    "kind": "file",
    "name": "src/stage/key-behavior.js",
    "content": "/**\r\n * @file Key Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { SupportsPassiveEventHandler } from '../globals.js'\r\n\r\nconst passive = SupportsPassiveEventHandler ? { passive: true } : false\r\n\r\nclass KeyBehavior {\r\n    /**\r\n     * @param {Stage} stage - the stage object\r\n     */\r\n  constructor (stage) {\r\n    this.stage = stage\r\n    this.controls = stage.keyControls\r\n    this.domElement = stage.viewer.renderer.domElement\r\n\r\n    // ensure the domElement is focusable\r\n    this.domElement.setAttribute('tabIndex', '-1')\r\n    this.domElement.style.outline = 'none'\r\n\r\n    this._focusDomElement = this._focusDomElement.bind(this)\r\n    this._onKeydown = this._onKeydown.bind(this)\r\n    this._onKeyup = this._onKeyup.bind(this)\r\n    this._onKeypress = this._onKeypress.bind(this)\r\n\r\n    this.domElement.addEventListener('mousedown', this._focusDomElement)\r\n    this.domElement.addEventListener('touchstart', this._focusDomElement, passive)\r\n    this.domElement.addEventListener('keydown', this._onKeydown)\r\n    this.domElement.addEventListener('keyup', this._onKeyup)\r\n    this.domElement.addEventListener('keypress', this._onKeypress)\r\n  }\r\n\r\n  /**\r\n   * handle key down\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeydown (/* event */) {\r\n    // console.log( \"down\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n  }\r\n\r\n  /**\r\n   * handle key up\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeyup (/* event */) {\r\n    // console.log( \"up\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n  }\r\n\r\n  /**\r\n   * handle key press\r\n   * @param  {Event} event - key event\r\n   * @return {undefined}\r\n   */\r\n  _onKeypress (event) {\r\n    // console.log( \"press\", event.keyCode, String.fromCharCode( event.keyCode ) );\r\n    this.controls.run(event.keyCode)\r\n  }\r\n\r\n  _focusDomElement () {\r\n    this.domElement.focus()\r\n  }\r\n\r\n  dispose () {\r\n    this.domElement.removeEventListener('mousedown', this._focusDomElement)\r\n    this.domElement.removeEventListener('touchstart', this._focusDomElement, passive)\r\n    this.domElement.removeEventListener('keydown', this._onKeypress)\r\n    this.domElement.removeEventListener('keyup', this._onKeypress)\r\n    this.domElement.removeEventListener('keypress', this._onKeypress)\r\n  }\r\n}\r\n\r\nexport default KeyBehavior\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/key-behavior.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2915,
    "kind": "variable",
    "name": "passive",
    "memberof": "src/stage/key-behavior.js",
    "static": true,
    "longname": "src/stage/key-behavior.js~passive",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/stage/key-behavior.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2916,
    "kind": "class",
    "name": "KeyBehavior",
    "memberof": "src/stage/key-behavior.js",
    "static": true,
    "longname": "src/stage/key-behavior.js~KeyBehavior",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/stage/key-behavior.js",
    "importStyle": "KeyBehavior",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 2917,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "the stage object"
      }
    ]
  },
  {
    "__docId__": 2918,
    "kind": "member",
    "name": "stage",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#stage",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 2919,
    "kind": "member",
    "name": "controls",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#controls",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 2920,
    "kind": "member",
    "name": "domElement",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#domElement",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 2925,
    "kind": "method",
    "name": "_onKeydown",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#_onKeydown",
    "access": "private",
    "description": "handle key down",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "key event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2926,
    "kind": "method",
    "name": "_onKeyup",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#_onKeyup",
    "access": "private",
    "description": "handle key up",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "key event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2927,
    "kind": "method",
    "name": "_onKeypress",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#_onKeypress",
    "access": "private",
    "description": "handle key press",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "key event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 2928,
    "kind": "method",
    "name": "_focusDomElement",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#_focusDomElement",
    "access": "private",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 2929,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/key-behavior.js~KeyBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/key-behavior.js~KeyBehavior#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 2930,
    "kind": "file",
    "name": "src/stage/mouse-behavior.js",
    "content": "/**\r\n * @file Mouse Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass MouseBehavior {\r\n  constructor (stage/*, params */) {\r\n    this.stage = stage\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.mouseControls\r\n\r\n    this.mouse.signals.moved.add(this._onMove, this)\r\n    this.mouse.signals.scrolled.add(this._onScroll, this)\r\n    this.mouse.signals.dragged.add(this._onDrag, this)\r\n    this.mouse.signals.clicked.add(this._onClick, this)\r\n    this.mouse.signals.hovered.add(this._onHover, this)\r\n    this.mouse.signals.doubleClicked.add(this._onDblclick, this)\r\n  }\r\n\r\n  _onMove (/* x, y */) {\r\n    this.stage.tooltip.style.display = 'none'\r\n  }\r\n\r\n  _onScroll (delta) {\r\n    this.controls.run('scroll', delta)\r\n  }\r\n\r\n  _onDrag (dx, dy) {\r\n    this.controls.run('drag', dx, dy)\r\n  }\r\n\r\n  _onClick (x, y) {\r\n    this.controls.run('click', x, y)\r\n  }\r\n\r\n  _onDblclick (x, y) {\r\n    this.controls.run('doubleClick', x, y)\r\n  }\r\n\r\n  _onHover (x, y) {\r\n    this.controls.run('hover', x, y)\r\n  }\r\n\r\n  dispose () {\r\n    this.mouse.signals.moved.remove(this._onMove, this)\r\n    this.mouse.signals.scrolled.remove(this._onScroll, this)\r\n    this.mouse.signals.dragged.remove(this._onDrag, this)\r\n    this.mouse.signals.clicked.remove(this._onClick, this)\r\n    this.mouse.signals.hovered.remove(this._onHover, this)\r\n  }\r\n}\r\n\r\nexport default MouseBehavior\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/mouse-behavior.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2931,
    "kind": "class",
    "name": "MouseBehavior",
    "memberof": "src/stage/mouse-behavior.js",
    "static": true,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/stage/mouse-behavior.js",
    "importStyle": "MouseBehavior",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Mouse Behavior"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 2932,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 2933,
    "kind": "member",
    "name": "stage",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#stage",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 2934,
    "kind": "member",
    "name": "mouse",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#mouse",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 2935,
    "kind": "member",
    "name": "controls",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#controls",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 2936,
    "kind": "method",
    "name": "_onMove",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onMove",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 2937,
    "kind": "method",
    "name": "_onScroll",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onScroll",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 2938,
    "kind": "method",
    "name": "_onDrag",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onDrag",
    "access": "private",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 2939,
    "kind": "method",
    "name": "_onClick",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onClick",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 2940,
    "kind": "method",
    "name": "_onDblclick",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onDblclick",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 2941,
    "kind": "method",
    "name": "_onHover",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#_onHover",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 2942,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/mouse-behavior.js~MouseBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-behavior.js~MouseBehavior#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 2943,
    "kind": "file",
    "name": "src/stage/mouse-observer.js",
    "content": "/**\r\n * @file Mouse Observer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2 } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { LeftMouseButton, RightMouseButton } from '../constants.js'\r\nimport { defaults } from '../utils.js'\r\n\r\n/**\r\n * @example\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @typedef {Object} MouseSignals\r\n * @property {Signal<Integer, Integer>} moved - on move: deltaX, deltaY\r\n * @property {Signal<Number>} scrolled - on scroll: delta\r\n * @property {Signal<Integer, Integer>} dragged - on drag: deltaX, deltaY\r\n * @property {Signal} dropped - on drop\r\n * @property {Signal} clicked - on click\r\n * @property {Signal} hovered - on hover\r\n */\r\n\r\nfunction getTouchDistance (event) {\r\n  const dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX\r\n  const dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY\r\n  return Math.sqrt(dx * dx + dy * dy)\r\n}\r\n\r\nfunction getMouseButtons (event) {\r\n  if (typeof event === 'object') {\r\n    if ('buttons' in event) {\r\n      return event.buttons\r\n    } else if ('which' in event) {\r\n      const b = event.which\r\n      if (b === 2) {\r\n        return 4\r\n      } else if (b === 3) {\r\n        return 2\r\n      } else if (b > 0) {\r\n        return 1 << (b - 1)\r\n      }\r\n    } else if ('button' in event) {\r\n      const b = event.button\r\n      if (b === 1) {\r\n        return 4\r\n      } else if (b === 2) {\r\n        return 2\r\n      } else if (b >= 0) {\r\n        return 1 << b\r\n      }\r\n    }\r\n  }\r\n  return 0\r\n}\r\n\r\n/**\r\n * Mouse observer\r\n *\r\n * @example\r\n * // listen to mouse moving (and touch-moving) events\r\n * mouseObserver.moved.moved.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to scrolling (and pinching) events\r\n * mouseObserver.signals.scrolled.add( function( delta ){ ... } );\r\n *\r\n * @example\r\n * // listen to dragging (and touch-dragging) events\r\n * mouseObserver.signals.dragged.add( function( deltaX, deltaY ){ ... } );\r\n *\r\n * @example\r\n * // listen to clicking (and tapping) events\r\n * mouseObserver.signals.clicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to double clicking (and double tapping) events\r\n * mouseObserver.signals.doubleClicked.add( function(){ ... } );\r\n *\r\n * @example\r\n * // listen to hovering events\r\n * mouseObserver.signals.hovered.add( function(){ ... } );\r\n */\r\nclass MouseObserver {\r\n  /**\r\n   * @param  {Element} domElement - the dom element to observe mouse events in\r\n   * @param  {Object} params - parameters object\r\n   * @param  {Integer} params.hoverTimeout - timeout in ms until the {@link MouseSignals.hovered}\r\n   *                                         signal is fired, set to -1 to ignore hovering\r\n   * @param  {Boolean} params.handleScroll - whether or not to handle scroll events\r\n   * @param  {Integer} params.doubleClickSpeed - max time in ms to trigger double click\r\n   */\r\n  constructor (domElement, params) {\r\n    /**\r\n     * Events emitted by the mouse observer\r\n     * @type {MouseSignals}\r\n     */\r\n    this.signals = {\r\n      moved: new Signal(),\r\n      scrolled: new Signal(),\r\n      dragged: new Signal(),\r\n      dropped: new Signal(),\r\n      clicked: new Signal(),\r\n      hovered: new Signal(),\r\n      doubleClicked: new Signal()\r\n    }\r\n\r\n    var p = Object.assign({}, params)\r\n\r\n    this.hoverTimeout = defaults(p.hoverTimeout, 50)\r\n    this.handleScroll = defaults(p.handleScroll, true)\r\n    this.doubleClickSpeed = defaults(p.doubleClickSpeed, 500)\r\n\r\n    this.domElement = domElement\r\n    this.domElement.style.touchAction = 'none'\r\n\r\n    /**\r\n     * Position on page\r\n     * @type {Vector2}\r\n     */\r\n    this.position = new Vector2()\r\n    /**\r\n     * Previous position on page\r\n     * @type {Vector2}\r\n     */\r\n    this.prevPosition = new Vector2()\r\n    /**\r\n     * Position on page when clicked\r\n     * @type {Vector2}\r\n     */\r\n    this.down = new Vector2()\r\n    /**\r\n     * Position on dom element\r\n     * @type {Vector2}\r\n     */\r\n    this.canvasPosition = new Vector2()\r\n    /**\r\n     * Flag indicating if the mouse is moving\r\n     * @type {Boolean}\r\n     */\r\n    this.moving = false\r\n    /**\r\n     * Flag indicating if the mouse is hovering\r\n     * @type {Boolean}\r\n     */\r\n    this.hovering = true\r\n    /**\r\n     * Flag indicating if there was a scolling event\r\n     * since the last mouse move\r\n     * @type {Boolean}\r\n     */\r\n    this.scrolled = false\r\n    /**\r\n     * Timestamp of last mouse move\r\n     * @type {Number}\r\n     */\r\n    this.lastMoved = Infinity\r\n    /**\r\n     * Indicates which mouse button was pressed:\r\n     * 0: No button; 1: Left button; 2: Middle button; 3: Right button\r\n     * @type {Integer}\r\n     */\r\n    this.which = undefined\r\n    /**\r\n     * Indicates which mouse buttons were pressed:\r\n     * 0: No button; 1: Left button; 2: Right button; 4: Middle button\r\n     * @type {Integer}\r\n     */\r\n    this.buttons = undefined\r\n    /**\r\n     * Flag indicating if the mouse is pressed down\r\n     * @type {Boolean}\r\n     */\r\n    this.pressed = undefined\r\n    /**\r\n     * Flag indicating if the alt key is pressed\r\n     * @type {Boolean}\r\n     */\r\n    this.altKey = undefined\r\n    /**\r\n     * Flag indicating if the ctrl key is pressed\r\n     * @type {Boolean}\r\n     */\r\n    this.ctrlKey = undefined\r\n    /**\r\n     * Flag indicating if the meta key is pressed\r\n     * @type {Boolean}\r\n     */\r\n    this.metaKey = undefined\r\n    /**\r\n     * Flag indicating if the shift key is pressed\r\n     * @type {Boolean}\r\n     */\r\n    this.shiftKey = undefined\r\n\r\n    this._listen = this._listen.bind(this)\r\n    this._onMousewheel = this._onMousewheel.bind(this)\r\n    this._onMousemove = this._onMousemove.bind(this)\r\n    this._onMousedown = this._onMousedown.bind(this)\r\n    this._onMouseup = this._onMouseup.bind(this)\r\n    this._onContextmenu = this._onContextmenu.bind(this)\r\n    this._onTouchstart = this._onTouchstart.bind(this)\r\n    this._onTouchend = this._onTouchend.bind(this)\r\n    this._onTouchmove = this._onTouchmove.bind(this)\r\n\r\n    this._listen()\r\n\r\n    document.addEventListener('mousewheel', this._onMousewheel)\r\n    document.addEventListener('wheel', this._onMousewheel)\r\n    document.addEventListener('MozMousePixelScroll', this._onMousewheel)\r\n    document.addEventListener('mousemove', this._onMousemove)\r\n    document.addEventListener('mousedown', this._onMousedown)\r\n    document.addEventListener('mouseup', this._onMouseup)\r\n    document.addEventListener('contextmenu', this._onContextmenu)\r\n    document.addEventListener('touchstart', this._onTouchstart)\r\n    document.addEventListener('touchend', this._onTouchend)\r\n    document.addEventListener('touchmove', this._onTouchmove)\r\n\r\n    this.prevClickCP = new Vector2()\r\n  }\r\n\r\n  get key () {\r\n    let key = 0\r\n    if (this.altKey) key += 1\r\n    if (this.ctrlKey) key += 2\r\n    if (this.metaKey) key += 4\r\n    if (this.shiftKey) key += 8\r\n    return key\r\n  }\r\n\r\n  setParameters (params) {\r\n    var p = Object.assign({}, params)\r\n    this.hoverTimeout = defaults(p.hoverTimeout, this.hoverTimeout)\r\n  }\r\n\r\n  /**\r\n   * listen to mouse actions\r\n   * @emits {MouseSignals.clicked} when clicked\r\n   * @emits {MouseSignals.hovered} when hovered\r\n   * @return {undefined}\r\n   */\r\n  _listen () {\r\n    const now = window.performance.now()\r\n    const cp = this.canvasPosition\r\n    if (this.doubleClickPending && now - this.lastClicked > this.doubleClickSpeed) {\r\n      this.doubleClickPending = false\r\n    }\r\n    if (now - this.lastMoved > this.hoverTimeout) {\r\n      this.moving = false\r\n    }\r\n    if (this.scrolled || (!this.moving && !this.hovering)) {\r\n      this.scrolled = false\r\n      if (this.hoverTimeout !== -1 && this.overElement) {\r\n        this.hovering = true\r\n        this.signals.hovered.dispatch(cp.x, cp.y)\r\n      }\r\n    }\r\n    window.requestAnimationFrame(this._listen)\r\n  }\r\n\r\n  /**\r\n   * handle mouse scroll\r\n   * @emits {MouseSignals.scrolled} when scrolled\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMousewheel (event) {\r\n    if (event.target !== this.domElement || !this.handleScroll) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this._setKeys(event)\r\n\r\n    var delta = 0\r\n    if (event.wheelDelta) {\r\n      // WebKit / Opera / Explorer 9\r\n      delta = event.wheelDelta / 40\r\n    } else if (event.detail) {\r\n      // Firefox\r\n      delta = -event.detail / 3\r\n    } else {\r\n      // Firefox or IE 11\r\n      delta = -event.deltaY / (event.deltaMode ? 0.33 : 30)\r\n    }\r\n    this.signals.scrolled.dispatch(delta)\r\n\r\n    setTimeout(() => {\r\n      this.scrolled = true\r\n    }, this.hoverTimeout)\r\n  }\r\n\r\n  /**\r\n   * handle mouse move\r\n   * @emits {MouseSignals.moved} when moved\r\n   * @emits {MouseSignals.dragged} when dragged\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMousemove (event) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n      this.overElement = true\r\n    } else {\r\n      this.overElement = false\r\n    }\r\n    this._setKeys(event)\r\n    this.moving = true\r\n    this.hovering = false\r\n    this.lastMoved = window.performance.now()\r\n    this.prevPosition.copy(this.position)\r\n    this.position.set(event.clientX, event.clientY)\r\n    this._setCanvasPosition(event)\r\n    const dx = this.prevPosition.x - this.position.x\r\n    const dy = this.prevPosition.y - this.position.y\r\n    this.signals.moved.dispatch(dx, dy)\r\n    if (this.pressed) {\r\n      this.signals.dragged.dispatch(dx, dy)\r\n    }\r\n  }\r\n\r\n  _onMousedown (event) {\r\n    if (event.target !== this.domElement) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this._setKeys(event)\r\n    this.moving = false\r\n    this.hovering = false\r\n    this.down.set(event.clientX, event.clientY)\r\n    this.position.set(event.clientX, event.clientY)\r\n    this.which = event.which\r\n    this.buttons = getMouseButtons(event)\r\n    this.pressed = true\r\n    this._setCanvasPosition(event)\r\n  }\r\n\r\n  /**\r\n   * handle mouse up\r\n   * @emits {MouseSignals.doubleClicked} when double clicked\r\n   * @emits {MouseSignals.dropped} when dropped\r\n   * @param  {Event} event - mouse event\r\n   * @return {undefined}\r\n   */\r\n  _onMouseup (event) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n    this._setKeys(event)\r\n    const cp = this.canvasPosition\r\n    if (this._distance() < 4) {\r\n      this.lastClicked = window.performance.now()\r\n      if (this.doubleClickPending && this.prevClickCP.distanceTo(cp) < 4) {\r\n        this.signals.doubleClicked.dispatch(cp.x, cp.y)\r\n        this.doubleClickPending = false\r\n      } else {\r\n        this.signals.clicked.dispatch(cp.x, cp.y)\r\n        this.doubleClickPending = true\r\n      }\r\n      this.prevClickCP.copy(cp)\r\n    }\r\n    this.which = undefined\r\n    this.buttons = undefined\r\n    this.pressed = undefined\r\n    // if (this._distance() > 3 || event.which === RightMouseButton) {\r\n    //   this.signals.dropped.dispatch();\r\n    // }\r\n  }\r\n\r\n  _onContextmenu (event) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  _onTouchstart (event) {\r\n    if (event.target !== this.domElement) {\r\n      return\r\n    }\r\n    event.preventDefault()\r\n    this.pressed = true\r\n    switch (event.touches.length) {\r\n      case 1: {\r\n        this.moving = false\r\n        this.hovering = false\r\n        this.down.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this.position.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this._setCanvasPosition(event.touches[ 0 ])\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        this.down.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        this.position.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        this.lastTouchDistance = getTouchDistance(event)\r\n      }\r\n    }\r\n  }\r\n\r\n  _onTouchend (event) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n    }\r\n    this.which = undefined\r\n    this.buttons = undefined\r\n    this.pressed = undefined\r\n  }\r\n\r\n  _onTouchmove (event) {\r\n    if (event.target === this.domElement) {\r\n      event.preventDefault()\r\n      this.overElement = true\r\n    } else {\r\n      this.overElement = false\r\n    }\r\n    switch (event.touches.length) {\r\n      case 1: {\r\n        this._setKeys(event)\r\n        this.which = LeftMouseButton\r\n        this.buttons = 1\r\n        this.moving = true\r\n        this.hovering = false\r\n        this.lastMoved = window.performance.now()\r\n        this.prevPosition.copy(this.position)\r\n        this.position.set(\r\n          event.touches[ 0 ].pageX,\r\n          event.touches[ 0 ].pageY\r\n        )\r\n        this._setCanvasPosition(event.touches[ 0 ])\r\n        const dx = this.prevPosition.x - this.position.x\r\n        const dy = this.prevPosition.y - this.position.y\r\n        this.signals.moved.dispatch(dx, dy)\r\n        if (this.pressed) {\r\n          this.signals.dragged.dispatch(dx, dy)\r\n        }\r\n        break\r\n      }\r\n\r\n      case 2: {\r\n        const touchDistance = getTouchDistance(event)\r\n        const delta = touchDistance - this.lastTouchDistance\r\n        this.lastTouchDistance = touchDistance\r\n        this.prevPosition.copy(this.position)\r\n        this.position.set(\r\n          (event.touches[ 0 ].pageX + event.touches[ 1 ].pageX) / 2,\r\n          (event.touches[ 0 ].pageY + event.touches[ 1 ].pageY) / 2\r\n        )\r\n        if (Math.abs(delta) > 2 && this.handleScroll &&\r\n            this.position.distanceTo(this.prevPosition) < 2\r\n        ) {\r\n          this.which = 0\r\n          this.buttons = 0\r\n          this.signals.scrolled.dispatch(delta / 2)\r\n        } else {\r\n          this.which = RightMouseButton\r\n          this.buttons = 2\r\n          const dx = this.prevPosition.x - this.position.x\r\n          const dy = this.prevPosition.y - this.position.y\r\n          this.signals.moved.dispatch(dx, dy)\r\n          if (this.pressed) {\r\n            this.signals.dragged.dispatch(dx, dy)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  _distance () {\r\n    return this.position.distanceTo(this.down)\r\n  }\r\n\r\n  _setCanvasPosition (event) {\r\n    const box = this.domElement.getBoundingClientRect()\r\n    let offsetX, offsetY\r\n    if ('offsetX' in event && 'offsetY' in event) {\r\n      offsetX = event.offsetX\r\n      offsetY = event.offsetY\r\n    } else {\r\n      offsetX = event.clientX - box.left\r\n      offsetY = event.clientY - box.top\r\n    }\r\n    this.canvasPosition.set(offsetX, box.height - offsetY)\r\n  }\r\n\r\n  _setKeys (event) {\r\n    this.altKey = event.altKey\r\n    this.ctrlKey = event.ctrlKey\r\n    this.metaKey = event.metaKey\r\n    this.shiftKey = event.shiftKey\r\n  }\r\n\r\n  dispose () {\r\n    document.removeEventListener('mousewheel', this._onMousewheel)\r\n    document.removeEventListener('wheel', this._onMousewheel)\r\n    document.removeEventListener('MozMousePixelScroll', this._onMousewheel)\r\n    document.removeEventListener('mousemove', this._onMousemove)\r\n    document.removeEventListener('mousedown', this._onMousedown)\r\n    document.removeEventListener('mouseup', this._onMouseup)\r\n    document.removeEventListener('contextmenu', this._onContextmenu)\r\n    document.removeEventListener('touchstart', this._onTouchstart)\r\n    document.removeEventListener('touchend', this._onTouchend)\r\n    document.removeEventListener('touchmove', this._onTouchmove)\r\n  }\r\n}\r\n\r\nexport default MouseObserver\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/mouse-observer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 2944,
    "kind": "typedef",
    "name": "MouseSignals",
    "memberof": "src/stage/mouse-observer.js",
    "static": true,
    "longname": "src/stage/mouse-observer.js~MouseSignals",
    "access": "public",
    "description": "",
    "examples": [
      "mouseObserver.signals.scrolled.add( function( delta ){ ... } );"
    ],
    "lineNumber": 26,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<Integer, Integer>"
        ],
        "spread": false,
        "optional": false,
        "name": "moved",
        "description": "on move: deltaX, deltaY"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Number>"
        ],
        "spread": false,
        "optional": false,
        "name": "scrolled",
        "description": "on scroll: delta"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Integer, Integer>"
        ],
        "spread": false,
        "optional": false,
        "name": "dragged",
        "description": "on drag: deltaX, deltaY"
      },
      {
        "nullable": null,
        "types": [
          "Signal"
        ],
        "spread": false,
        "optional": false,
        "name": "dropped",
        "description": "on drop"
      },
      {
        "nullable": null,
        "types": [
          "Signal"
        ],
        "spread": false,
        "optional": false,
        "name": "clicked",
        "description": "on click"
      },
      {
        "nullable": null,
        "types": [
          "Signal"
        ],
        "spread": false,
        "optional": false,
        "name": "hovered",
        "description": "on hover"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MouseSignals"
    }
  },
  {
    "__docId__": 2945,
    "kind": "function",
    "name": "getMouseButtons",
    "memberof": "src/stage/mouse-observer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stage/mouse-observer.js~getMouseButtons",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/stage/mouse-observer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 2946,
    "kind": "class",
    "name": "MouseObserver",
    "memberof": "src/stage/mouse-observer.js",
    "static": true,
    "longname": "src/stage/mouse-observer.js~MouseObserver",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/stage/mouse-observer.js",
    "importStyle": "MouseObserver",
    "description": "Mouse observer",
    "examples": [
      "// listen to mouse moving (and touch-moving) events\nmouseObserver.moved.moved.add( function( deltaX, deltaY ){ ... } );",
      "// listen to scrolling (and pinching) events\nmouseObserver.signals.scrolled.add( function( delta ){ ... } );",
      "// listen to dragging (and touch-dragging) events\nmouseObserver.signals.dragged.add( function( deltaX, deltaY ){ ... } );",
      "// listen to clicking (and tapping) events\nmouseObserver.signals.clicked.add( function(){ ... } );",
      "// listen to double clicking (and double tapping) events\nmouseObserver.signals.doubleClicked.add( function(){ ... } );",
      "// listen to hovering events\nmouseObserver.signals.hovered.add( function(){ ... } );"
    ],
    "lineNumber": 86,
    "interface": false
  },
  {
    "__docId__": 2947,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "domElement",
        "description": "the dom element to observe mouse events in"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.hoverTimeout",
        "description": "timeout in ms until the {@link MouseSignals.hovered}\n                                        signal is fired, set to -1 to ignore hovering"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.handleScroll",
        "description": "whether or not to handle scroll events"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "params.doubleClickSpeed",
        "description": "max time in ms to trigger double click"
      }
    ]
  },
  {
    "__docId__": 2948,
    "kind": "member",
    "name": "signals",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#signals",
    "access": "public",
    "description": "Events emitted by the mouse observer",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "MouseSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2949,
    "kind": "member",
    "name": "hoverTimeout",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#hoverTimeout",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 2950,
    "kind": "member",
    "name": "handleScroll",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#handleScroll",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 2951,
    "kind": "member",
    "name": "doubleClickSpeed",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#doubleClickSpeed",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 2952,
    "kind": "member",
    "name": "domElement",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#domElement",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 2953,
    "kind": "member",
    "name": "position",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#position",
    "access": "public",
    "description": "Position on page",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2954,
    "kind": "member",
    "name": "prevPosition",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#prevPosition",
    "access": "public",
    "description": "Previous position on page",
    "lineNumber": 128,
    "type": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2955,
    "kind": "member",
    "name": "down",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#down",
    "access": "public",
    "description": "Position on page when clicked",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2956,
    "kind": "member",
    "name": "canvasPosition",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#canvasPosition",
    "access": "public",
    "description": "Position on dom element",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "Vector2"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2957,
    "kind": "member",
    "name": "moving",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#moving",
    "access": "public",
    "description": "Flag indicating if the mouse is moving",
    "lineNumber": 143,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2958,
    "kind": "member",
    "name": "hovering",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#hovering",
    "access": "public",
    "description": "Flag indicating if the mouse is hovering",
    "lineNumber": 148,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2959,
    "kind": "member",
    "name": "scrolled",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#scrolled",
    "access": "public",
    "description": "Flag indicating if there was a scolling event\nsince the last mouse move",
    "lineNumber": 154,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2960,
    "kind": "member",
    "name": "lastMoved",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#lastMoved",
    "access": "public",
    "description": "Timestamp of last mouse move",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2961,
    "kind": "member",
    "name": "which",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#which",
    "access": "public",
    "description": "Indicates which mouse button was pressed:\n0: No button; 1: Left button; 2: Middle button; 3: Right button",
    "lineNumber": 165,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2962,
    "kind": "member",
    "name": "buttons",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#buttons",
    "access": "public",
    "description": "Indicates which mouse buttons were pressed:\n0: No button; 1: Left button; 2: Right button; 4: Middle button",
    "lineNumber": 171,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2963,
    "kind": "member",
    "name": "pressed",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#pressed",
    "access": "public",
    "description": "Flag indicating if the mouse is pressed down",
    "lineNumber": 176,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2964,
    "kind": "member",
    "name": "altKey",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#altKey",
    "access": "public",
    "description": "Flag indicating if the alt key is pressed",
    "lineNumber": 181,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2965,
    "kind": "member",
    "name": "ctrlKey",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#ctrlKey",
    "access": "public",
    "description": "Flag indicating if the ctrl key is pressed",
    "lineNumber": 186,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2966,
    "kind": "member",
    "name": "metaKey",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#metaKey",
    "access": "public",
    "description": "Flag indicating if the meta key is pressed",
    "lineNumber": 191,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2967,
    "kind": "member",
    "name": "shiftKey",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#shiftKey",
    "access": "public",
    "description": "Flag indicating if the shift key is pressed",
    "lineNumber": 196,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 2977,
    "kind": "member",
    "name": "prevClickCP",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#prevClickCP",
    "access": "public",
    "description": null,
    "lineNumber": 221,
    "undocument": true
  },
  {
    "__docId__": 2978,
    "kind": "get",
    "name": "key",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#key",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true
  },
  {
    "__docId__": 2979,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "undocument": true
  },
  {
    "__docId__": 2981,
    "kind": "method",
    "name": "_listen",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_listen",
    "access": "private",
    "description": "listen to mouse actions",
    "lineNumber": 244,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "MouseSignals.clicked"
        ],
        "description": "when clicked"
      },
      {
        "types": [
          "MouseSignals.hovered"
        ],
        "description": "when hovered"
      }
    ]
  },
  {
    "__docId__": 2982,
    "kind": "member",
    "name": "doubleClickPending",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#doubleClickPending",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true
  },
  {
    "__docId__": 2986,
    "kind": "method",
    "name": "_onMousewheel",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onMousewheel",
    "access": "private",
    "description": "handle mouse scroll",
    "lineNumber": 269,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "MouseSignals.scrolled"
        ],
        "description": "when scrolled"
      }
    ]
  },
  {
    "__docId__": 2988,
    "kind": "method",
    "name": "_onMousemove",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onMousemove",
    "access": "private",
    "description": "handle mouse move",
    "lineNumber": 301,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "MouseSignals.moved"
        ],
        "description": "when moved"
      },
      {
        "types": [
          "MouseSignals.dragged"
        ],
        "description": "when dragged"
      }
    ]
  },
  {
    "__docId__": 2989,
    "kind": "member",
    "name": "overElement",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#overElement",
    "access": "public",
    "description": null,
    "lineNumber": 304,
    "undocument": true
  },
  {
    "__docId__": 2994,
    "kind": "method",
    "name": "_onMousedown",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onMousedown",
    "access": "private",
    "description": null,
    "lineNumber": 323,
    "undocument": true
  },
  {
    "__docId__": 3000,
    "kind": "method",
    "name": "_onMouseup",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onMouseup",
    "access": "private",
    "description": "handle mouse up",
    "lineNumber": 346,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": "mouse event"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "MouseSignals.doubleClicked"
        ],
        "description": "when double clicked"
      },
      {
        "types": [
          "MouseSignals.dropped"
        ],
        "description": "when dropped"
      }
    ]
  },
  {
    "__docId__": 3001,
    "kind": "member",
    "name": "lastClicked",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#lastClicked",
    "access": "public",
    "description": null,
    "lineNumber": 353,
    "undocument": true
  },
  {
    "__docId__": 3007,
    "kind": "method",
    "name": "_onContextmenu",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onContextmenu",
    "access": "private",
    "description": null,
    "lineNumber": 371,
    "undocument": true
  },
  {
    "__docId__": 3008,
    "kind": "method",
    "name": "_onTouchstart",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onTouchstart",
    "access": "private",
    "description": null,
    "lineNumber": 377,
    "undocument": true
  },
  {
    "__docId__": 3012,
    "kind": "member",
    "name": "lastTouchDistance",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#lastTouchDistance",
    "access": "public",
    "description": null,
    "lineNumber": 408,
    "undocument": true
  },
  {
    "__docId__": 3013,
    "kind": "method",
    "name": "_onTouchend",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onTouchend",
    "access": "private",
    "description": null,
    "lineNumber": 413,
    "undocument": true
  },
  {
    "__docId__": 3017,
    "kind": "method",
    "name": "_onTouchmove",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_onTouchmove",
    "access": "private",
    "description": null,
    "lineNumber": 422,
    "undocument": true
  },
  {
    "__docId__": 3030,
    "kind": "method",
    "name": "_distance",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_distance",
    "access": "private",
    "description": null,
    "lineNumber": 481,
    "undocument": true
  },
  {
    "__docId__": 3031,
    "kind": "method",
    "name": "_setCanvasPosition",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_setCanvasPosition",
    "access": "private",
    "description": null,
    "lineNumber": 485,
    "undocument": true
  },
  {
    "__docId__": 3032,
    "kind": "method",
    "name": "_setKeys",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#_setKeys",
    "access": "private",
    "description": null,
    "lineNumber": 498,
    "undocument": true
  },
  {
    "__docId__": 3037,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/mouse-observer.js~MouseObserver",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/mouse-observer.js~MouseObserver#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 505,
    "undocument": true
  },
  {
    "__docId__": 3038,
    "kind": "file",
    "name": "src/stage/picking-behavior.js",
    "content": "/**\r\n * @file Picking Behavior\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass PickingBehavior {\r\n  constructor (stage) {\r\n    this.stage = stage\r\n    this.mouse = stage.mouseObserver\r\n    this.controls = stage.mouseControls\r\n\r\n    this.mouse.signals.clicked.add(this._onClick, this)\r\n    this.mouse.signals.hovered.add(this._onHover, this)\r\n  }\r\n\r\n  _onClick (x, y) {\r\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\r\n    this.stage.signals.clicked.dispatch(pickingProxy)\r\n    this.controls.run('clickPick', pickingProxy)\r\n  }\r\n\r\n  _onHover (x, y) {\r\n    const pickingProxy = this.stage.pickingControls.pick(x, y)\r\n    if (pickingProxy && this.mouse.down.equals(this.mouse.position)) {\r\n      this.stage.transformComponent = pickingProxy.component\r\n      this.stage.transformAtom = pickingProxy.atom\r\n    }\r\n    this.stage.signals.hovered.dispatch(pickingProxy)\r\n    this.controls.run('hoverPick', pickingProxy)\r\n  }\r\n\r\n  dispose () {\r\n    this.mouse.signals.clicked.remove(this._onClick, this)\r\n    this.mouse.signals.hovered.remove(this._onHover, this)\r\n  }\r\n}\r\n\r\nexport default PickingBehavior\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/picking-behavior.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3039,
    "kind": "class",
    "name": "PickingBehavior",
    "memberof": "src/stage/picking-behavior.js",
    "static": true,
    "longname": "src/stage/picking-behavior.js~PickingBehavior",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/stage/picking-behavior.js",
    "importStyle": "PickingBehavior",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Picking Behavior"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 3040,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 3041,
    "kind": "member",
    "name": "stage",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#stage",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 3042,
    "kind": "member",
    "name": "mouse",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#mouse",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3043,
    "kind": "member",
    "name": "controls",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#controls",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3044,
    "kind": "method",
    "name": "_onClick",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#_onClick",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3045,
    "kind": "method",
    "name": "_onHover",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#_onHover",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3046,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/picking-behavior.js~PickingBehavior",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/picking-behavior.js~PickingBehavior#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3047,
    "kind": "file",
    "name": "src/stage/stage.js",
    "content": "/**\r\n * @file Stage\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport {\r\n  Debug, Log, Mobile, ComponentRegistry, ParserRegistry\r\n} from '../globals.js'\r\nimport { defaults, getFileInfo } from '../utils.js'\r\nimport { degToRad, clamp, pclamp } from '../math/math-utils.js'\r\nimport Counter from '../utils/counter.js'\r\nimport Viewer from '../viewer/viewer.js'\r\nimport MouseObserver from './mouse-observer.js'\r\n\r\nimport TrackballControls from '../controls/trackball-controls.js'\r\nimport PickingControls from '../controls/picking-controls.js'\r\nimport ViewerControls from '../controls/viewer-controls.js'\r\nimport AnimationControls from '../controls/animation-controls.js'\r\nimport MouseControls from '../controls/mouse-controls.js'\r\nimport KeyControls from '../controls/key-controls.js'\r\n\r\nimport PickingBehavior from './picking-behavior.js'\r\nimport MouseBehavior from './mouse-behavior.js'\r\nimport AnimationBehavior from './animation-behavior.js'\r\nimport KeyBehavior from './key-behavior.js'\r\n\r\nimport Component from '../component/component.js'\r\n// eslint-disable-next-line no-unused-vars\r\nimport RepresentationComponent from '../component/representation-component.js'\r\nimport Collection from '../component/collection.js'\r\nimport ComponentCollection from '../component/component-collection.js'\r\nimport RepresentationCollection from '../component/representation-collection.js'\r\nimport { autoLoad } from '../loader/loader-utils'\r\n\r\nfunction matchName (name, comp) {\r\n  if (name instanceof RegExp) {\r\n    return comp.name.match(name) !== null\r\n  } else {\r\n    return comp.name === name\r\n  }\r\n}\r\n\r\nconst tmpZoomVector = new Vector3()\r\n\r\n/**\r\n * Stage parameter object.\r\n * @typedef {Object} StageParameters - stage parameters\r\n * @property {Color} backgroundColor - background color\r\n * @property {Integer} sampleLevel - sampling level for antialiasing, between -1 and 5;\r\n *                                   -1: no sampling, 0: only sampling when not moving\r\n * @property {Boolean} workerDefault - default value for useWorker parameter of representations\r\n * @property {Float} rotateSpeed - camera-controls rotation speed, between 0 and 10\r\n * @property {Float} zoomSpeed - camera-controls zoom speed, between 0 and 10\r\n * @property {Float} panSpeed - camera-controls pan speed, between 0 and 10\r\n * @property {Integer} clipNear - position of camera near/front clipping plane\r\n *                                in percent of scene bounding box\r\n * @property {Integer} clipFar - position of camera far/back clipping plane\r\n *                               in percent of scene bounding box\r\n * @property {Float} clipDist - camera clipping distance in Angstrom\r\n * @property {Integer} fogNear - position of the start of the fog effect\r\n *                               in percent of scene bounding box\r\n * @property {Integer} fogFar - position where the fog is in full effect\r\n *                              in percent of scene bounding box\r\n * @property {String} cameraType - type of camera, either 'persepective' or 'orthographic'\r\n * @property {Float} cameraFov - camera field of view in degree, between 15 and 120\r\n * @property {Color} lightColor - point light color\r\n * @property {Float} lightIntensity - point light intensity\r\n * @property {Color} ambientColor - ambient light color\r\n * @property {Float} ambientIntensity - ambient light intensity\r\n * @property {Integer} hoverTimeout - timeout for hovering\r\n */\r\n\r\n/**\r\n * @example\r\n * stage.signals.componentAdded.add( function( component ){ ... } );\r\n *\r\n * @typedef {Object} StageSignals\r\n * @property {Signal<StageParameters>} parametersChanged - on parameters change\r\n * @property {Signal<Boolean>} fullscreenChanged - on fullscreen change\r\n * @property {Signal<Component>} componentAdded - when a component is added\r\n * @property {Signal<Component>} componentRemoved - when a component is removed\r\n * @property {Signal<PickingProxy|undefined>} clicked - on click\r\n * @property {Signal<PickingProxy|undefined>} hovered - on hover\r\n */\r\n\r\n/**\r\n * Stage class, central for creating molecular scenes with NGL.\r\n *\r\n * @example\r\n * var stage = new Stage( \"elementId\", { backgroundColor: \"white\" } );\r\n */\r\nclass Stage {\r\n  /**\r\n   * Create a Stage instance\r\n   * @param {String|Element} [idOrElement] - dom id or element\r\n   * @param {StageParameters} params - parameters object\r\n   */\r\n  constructor (idOrElement, params) {\r\n    /**\r\n     * Events emitted by the stage\r\n     * @type {StageSignals}\r\n     */\r\n    this.signals = {\r\n      parametersChanged: new Signal(),\r\n      fullscreenChanged: new Signal(),\r\n\r\n      componentAdded: new Signal(),\r\n      componentRemoved: new Signal(),\r\n\r\n      clicked: new Signal(),\r\n      hovered: new Signal()\r\n    }\r\n\r\n    //\r\n\r\n    /**\r\n     * Counter that keeps track of various potentially long-running tasks,\r\n     * including file loading and surface calculation.\r\n     * @type {Counter}\r\n     */\r\n    this.tasks = new Counter()\r\n    this.compList = []\r\n    this.defaultFileParams = {}\r\n\r\n    //\r\n\r\n    this.viewer = new Viewer(idOrElement)\r\n    if (!this.viewer.renderer) return\r\n\r\n    /**\r\n     * Tooltip element\r\n     * @type {Element}\r\n     */\r\n    this.tooltip = document.createElement('div')\r\n    Object.assign(this.tooltip.style, {\r\n      display: 'none',\r\n      position: 'fixed',\r\n      zIndex: 2 + (parseInt(this.viewer.container.style.zIndex) || 0),\r\n      pointerEvents: 'none',\r\n      backgroundColor: 'rgba( 0, 0, 0, 0.6 )',\r\n      color: 'lightgrey',\r\n      padding: '8px',\r\n      fontFamily: 'sans-serif'\r\n    })\r\n    document.body.appendChild(this.tooltip)\r\n\r\n    /**\r\n     * @type {MouseObserver}\r\n     */\r\n    this.mouseObserver = new MouseObserver(this.viewer.renderer.domElement)\r\n\r\n    /**\r\n     * @type {ViewerControls}\r\n     */\r\n    this.viewerControls = new ViewerControls(this)\r\n    this.trackballControls = new TrackballControls(this)\r\n    this.pickingControls = new PickingControls(this)\r\n    /**\r\n     * @type {AnimationControls}\r\n     */\r\n    this.animationControls = new AnimationControls(this)\r\n    /**\r\n     * @type {MouseControls}\r\n     */\r\n    this.mouseControls = new MouseControls(this)\r\n    /**\r\n     * @type {KeyControls}\r\n     */\r\n    this.keyControls = new KeyControls(this)\r\n\r\n    this.pickingBehavior = new PickingBehavior(this)\r\n    this.mouseBehavior = new MouseBehavior(this)\r\n    this.animationBehavior = new AnimationBehavior(this)\r\n    this.keyBehavior = new KeyBehavior(this)\r\n\r\n    /**\r\n     * @type {SpinAnimation}\r\n     */\r\n    this.spinAnimation = this.animationControls.spin([ 0, 1, 0 ], 0.005)\r\n    this.spinAnimation.pause(true)\r\n    /**\r\n     * @type {RockAnimation}\r\n     */\r\n    this.rockAnimation = this.animationControls.rock([ 0, 1, 0 ], 0.005)\r\n    this.rockAnimation.pause(true)\r\n\r\n    const p = Object.assign({\r\n      impostor: true,\r\n      quality: 'medium',\r\n      workerDefault: true,\r\n      sampleLevel: 0,\r\n      backgroundColor: 'black',\r\n      rotateSpeed: 2.0,\r\n      zoomSpeed: 1.2,\r\n      panSpeed: 1.0,\r\n      clipNear: 0,\r\n      clipFar: 100,\r\n      clipDist: 10,\r\n      fogNear: 50,\r\n      fogFar: 100,\r\n      cameraFov: 40,\r\n      cameraType: 'perspective',\r\n      lightColor: 0xdddddd,\r\n      lightIntensity: 1.0,\r\n      ambientColor: 0xdddddd,\r\n      ambientIntensity: 0.2,\r\n      hoverTimeout: 0,\r\n      tooltip: true,\r\n      mousePreset: 'default'\r\n    }, params)\r\n\r\n    this.parameters = {\r\n      backgroundColor: {\r\n        type: 'color'\r\n      },\r\n      quality: {\r\n        type: 'select', options: { auto: 'auto', low: 'low', medium: 'medium', high: 'high' }\r\n      },\r\n      sampleLevel: {\r\n        type: 'range', step: 1, max: 5, min: -1\r\n      },\r\n      impostor: {\r\n        type: 'boolean'\r\n      },\r\n      workerDefault: {\r\n        type: 'boolean'\r\n      },\r\n      rotateSpeed: {\r\n        type: 'number', precision: 1, max: 10, min: 0\r\n      },\r\n      zoomSpeed: {\r\n        type: 'number', precision: 1, max: 10, min: 0\r\n      },\r\n      panSpeed: {\r\n        type: 'number', precision: 1, max: 10, min: 0\r\n      },\r\n      clipNear: {\r\n        type: 'range', step: 1, max: 100, min: 0\r\n      },\r\n      clipFar: {\r\n        type: 'range', step: 1, max: 100, min: 0\r\n      },\r\n      clipDist: {\r\n        type: 'integer', max: 200, min: 0\r\n      },\r\n      fogNear: {\r\n        type: 'range', step: 1, max: 100, min: 0\r\n      },\r\n      fogFar: {\r\n        type: 'range', step: 1, max: 100, min: 0\r\n      },\r\n      cameraType: {\r\n        type: 'select', options: { perspective: 'perspective', orthographic: 'orthographic' }\r\n      },\r\n      cameraFov: {\r\n        type: 'range', step: 1, max: 120, min: 15\r\n      },\r\n      lightColor: {\r\n        type: 'color'\r\n      },\r\n      lightIntensity: {\r\n        type: 'number', precision: 2, max: 10, min: 0\r\n      },\r\n      ambientColor: {\r\n        type: 'color'\r\n      },\r\n      ambientIntensity: {\r\n        type: 'number', precision: 2, max: 10, min: 0\r\n      },\r\n      hoverTimeout: {\r\n        type: 'integer', max: 10000, min: -1\r\n      },\r\n      tooltip: {\r\n        type: 'boolean'\r\n      },\r\n      mousePreset: {\r\n        type: 'select', options: { default: 'default', pymol: 'pymol', coot: 'coot' }\r\n      }\r\n    }\r\n\r\n    this.setParameters(p)  // must come after the viewer has been instantiated\r\n\r\n    this.viewer.animate()\r\n  }\r\n\r\n  /**\r\n   * Set stage parameters\r\n   * @param {StageParameters} params - stage parameters\r\n   * @return {Stage} this object\r\n   */\r\n  setParameters (params) {\r\n    const p = Object.assign({}, params)\r\n    const tp = this.parameters\r\n    const viewer = this.viewer\r\n    const controls = this.trackballControls\r\n\r\n    for (let name in p) {\r\n      if (p[ name ] === undefined) continue\r\n      if (!tp[ name ]) continue\r\n\r\n      if (tp[ name ].int) p[ name ] = parseInt(p[ name ])\r\n      if (tp[ name ].float) p[ name ] = parseFloat(p[ name ])\r\n\r\n      tp[ name ].value = p[ name ]\r\n    }\r\n\r\n    // apply parameters\r\n    if (p.quality !== undefined) this.setQuality(p.quality)\r\n    if (p.impostor !== undefined) this.setImpostor(p.impostor)\r\n    if (p.rotateSpeed !== undefined) controls.rotateSpeed = p.rotateSpeed\r\n    if (p.zoomSpeed !== undefined) controls.zoomSpeed = p.zoomSpeed\r\n    if (p.panSpeed !== undefined) controls.panSpeed = p.panSpeed\r\n    if (p.mousePreset !== undefined) this.mouseControls.preset(p.mousePreset)\r\n    this.mouseObserver.setParameters({ hoverTimeout: p.hoverTimeout })\r\n    viewer.setClip(p.clipNear, p.clipFar, p.clipDist)\r\n    viewer.setFog(undefined, p.fogNear, p.fogFar)\r\n    viewer.setCamera(p.cameraType, p.cameraFov)\r\n    viewer.setSampling(p.sampleLevel)\r\n    viewer.setBackground(p.backgroundColor)\r\n    viewer.setLight(\r\n      p.lightColor, p.lightIntensity, p.ambientColor, p.ambientIntensity\r\n    )\r\n\r\n    this.signals.parametersChanged.dispatch(\r\n      this.getParameters()\r\n    )\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Get stage parameters\r\n   * @return {StageParameters} parameter object\r\n   */\r\n  getParameters () {\r\n    const params = {}\r\n    for (let name in this.parameters) {\r\n      params[ name ] = this.parameters[ name ].value\r\n    }\r\n    return params\r\n  }\r\n\r\n  /**\r\n   * Create default representations for the given component\r\n   * @param  {StructureComponent|SurfaceComponent} object - component to create the representations for\r\n   * @return {undefined}\r\n   */\r\n  defaultFileRepresentation (object) {\r\n    if (object.type === 'structure') {\r\n      object.setSelection('/0')\r\n\r\n      let atomCount, residueCount, instanceCount\r\n      const structure = object.structure\r\n\r\n      if (structure.biomolDict.BU1) {\r\n        const assembly = structure.biomolDict.BU1\r\n        atomCount = assembly.getAtomCount(structure)\r\n        residueCount = assembly.getResidueCount(structure)\r\n        instanceCount = assembly.getInstanceCount()\r\n        object.setDefaultAssembly('BU1')\r\n      } else {\r\n        atomCount = structure.getModelProxy(0).atomCount\r\n        residueCount = structure.getModelProxy(0).residueCount\r\n        instanceCount = 1\r\n      }\r\n\r\n      let sizeScore = atomCount\r\n\r\n      if (Mobile) {\r\n        sizeScore *= 4\r\n      }\r\n\r\n      const backboneOnly = structure.atomStore.count / structure.residueStore.count < 2\r\n      if (backboneOnly) {\r\n        sizeScore *= 10\r\n      }\r\n\r\n      let colorScheme = 'chainname'\r\n      let colorScale = 'RdYlBu'\r\n      let colorReverse = false\r\n      if (structure.getChainnameCount('polymer and /0') === 1) {\r\n        colorScheme = 'residueindex'\r\n        colorScale = 'spectral'\r\n        colorReverse = true\r\n      }\r\n\r\n      if (Debug) console.log(sizeScore, atomCount, instanceCount, backboneOnly)\r\n\r\n      if (residueCount / instanceCount < 4) {\r\n        object.addRepresentation('ball+stick', {\r\n          colorScheme: 'element',\r\n          scale: 2.0,\r\n          aspectRatio: 1.5,\r\n          bondScale: 0.3,\r\n          bondSpacing: 0.75,\r\n          quality: 'auto'\r\n        })\r\n      } else if (\r\n        (instanceCount > 5 && sizeScore > 15000) ||\r\n        sizeScore > 700000\r\n      ) {\r\n        let scaleFactor = (\r\n          Math.min(\r\n            1.5,\r\n            Math.max(\r\n              0.1,\r\n              2000 / (sizeScore / instanceCount)\r\n            )\r\n          )\r\n        )\r\n        if (backboneOnly) scaleFactor = Math.min(scaleFactor, 0.15)\r\n\r\n        object.addRepresentation('surface', {\r\n          sele: 'polymer',\r\n          surfaceType: 'sas',\r\n          probeRadius: 1.4,\r\n          scaleFactor: scaleFactor,\r\n          colorScheme: colorScheme,\r\n          colorScale: colorScale,\r\n          colorReverse: colorReverse,\r\n          useWorker: false\r\n        })\r\n      } else if (sizeScore > 250000) {\r\n        object.addRepresentation('backbone', {\r\n          lineOnly: true,\r\n          colorScheme: colorScheme,\r\n          colorScale: colorScale,\r\n          colorReverse: colorReverse\r\n        })\r\n      } else if (sizeScore > 100000) {\r\n        object.addRepresentation('backbone', {\r\n          quality: 'low',\r\n          disableImpostor: true,\r\n          colorScheme: colorScheme,\r\n          colorScale: colorScale,\r\n          colorReverse: colorReverse,\r\n          scale: 2.0\r\n        })\r\n      } else if (sizeScore > 80000) {\r\n        object.addRepresentation('backbone', {\r\n          colorScheme: colorScheme,\r\n          colorScale: colorScale,\r\n          colorReverse: colorReverse,\r\n          scale: 2.0\r\n        })\r\n      } else {\r\n        object.addRepresentation('cartoon', {\r\n          colorScheme: colorScheme,\r\n          colorScale: colorScale,\r\n          colorReverse: colorReverse,\r\n          scale: 0.7,\r\n          aspectRatio: 5,\r\n          quality: 'auto'\r\n        })\r\n        if (sizeScore < 50000) {\r\n          object.addRepresentation('base', {\r\n            colorScheme: colorScheme,\r\n            colorScale: colorScale,\r\n            colorReverse: colorReverse,\r\n            quality: 'auto'\r\n          })\r\n        }\r\n        object.addRepresentation('ball+stick', {\r\n          sele: 'ligand',\r\n          colorScheme: 'element',\r\n          scale: 2.0,\r\n          aspectRatio: 1.5,\r\n          bondScale: 0.3,\r\n          bondSpacing: 0.75,\r\n          quality: 'auto'\r\n        })\r\n      }\r\n\r\n      // add frames as trajectory\r\n      if (object.structure.frames.length) {\r\n        object.addTrajectory()\r\n      }\r\n    } else if (object.type === 'surface' || object.type === 'volume') {\r\n      object.addRepresentation('surface')\r\n    }\r\n\r\n    this.tasks.onZeroOnce(this.autoView, this)\r\n  }\r\n\r\n  /**\r\n   * Load a file onto the stage\r\n   *\r\n   * @example\r\n   * // load from URL\r\n   * stage.loadFile( \"http://files.rcsb.org/download/5IOS.cif\" );\r\n   *\r\n   * @example\r\n   * // load binary data in CCP4 format via a Blob\r\n   * var binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\r\n   * stage.loadFile( binaryBlob, { ext: \"ccp4\" } );\r\n   *\r\n   * @example\r\n   * // load string data in PDB format via a Blob\r\n   * var stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\r\n   * stage.loadFile( stringBlob, { ext: \"pdb\" } );\r\n   *\r\n   * @example\r\n   * // load a File object\r\n   * stage.loadFile( file );\r\n   *\r\n   * @example\r\n   * // load from URL and add a 'ball+stick' representation with double/triple bonds\r\n   * stage.loadFile( \"http://files.rcsb.org/download/1crn.cif\" ).then( function( comp ){\r\n   *     comp.addRepresentation( \"ball+stick\", { multipleBond: true } );\r\n   * } );\r\n   *\r\n   * @param  {String|File|Blob} path - either a URL or an object containing the file data\r\n   * @param  {LoaderParameters} params - loading parameters\r\n   * @param  {Boolean} params.asTrajectory - load multi-model structures as a trajectory\r\n   * @return {Promise} A Promise object that resolves to a {@link StructureComponent},\r\n   *                   a {@link SurfaceComponent} or a {@link ScriptComponent} object,\r\n   *                   depending on the type of the loaded file.\r\n   */\r\n  loadFile (path, params) {\r\n    const p = Object.assign({}, this.defaultFileParams, params)\r\n\r\n    // placeholder component\r\n    let component = new Component(this, p)\r\n    component.name = getFileInfo(path).name\r\n    this.addComponent(component)\r\n\r\n    // tasks\r\n    const tasks = this.tasks\r\n    tasks.increment()\r\n\r\n    const onLoadFn = function (object) {\r\n      // remove placeholder component\r\n      this.removeComponent(component)\r\n\r\n      component = this.addComponentFromObject(object, p)\r\n\r\n      if (component.type === 'script') {\r\n        component.run()\r\n      } else if (p.defaultRepresentation) {\r\n        this.defaultFileRepresentation(component)\r\n      }\r\n\r\n      tasks.decrement()\r\n\r\n      return component\r\n    }.bind(this)\r\n\r\n    const onErrorFn = function (e) {\r\n      component.setStatus(e)\r\n      tasks.decrement()\r\n      throw e\r\n    }\r\n\r\n    const ext = defaults(p.ext, getFileInfo(path).ext)\r\n    let promise\r\n\r\n    if (ParserRegistry.isTrajectory(ext)) {\r\n      promise = Promise.reject(\r\n        new Error('loadFile: ext \"' + ext + '\" is a trajectory and must be loaded into a structure component')\r\n      )\r\n    } else {\r\n      promise = autoLoad(path, p)\r\n    }\r\n\r\n    return promise.then(onLoadFn, onErrorFn)\r\n  }\r\n\r\n  /**\r\n   * Add the given component to the stage\r\n   * @param {Component} component - the component to add\r\n   * @return {undefined}\r\n   */\r\n  addComponent (component) {\r\n    if (!component) {\r\n      Log.warn('Stage.addComponent: no component given')\r\n      return\r\n    }\r\n\r\n    this.compList.push(component)\r\n\r\n    this.signals.componentAdded.dispatch(component)\r\n  }\r\n\r\n  /**\r\n   * Create a component from the given object and add to the stage\r\n   * @param {Script|Shape|Structure|Surface|Volume} object - the object to add\r\n   * @param {ComponentParameters} params - parameter object\r\n   * @return {Component} the created component\r\n   */\r\n  addComponentFromObject (object, params) {\r\n    const CompClass = ComponentRegistry.get(object.type)\r\n\r\n    if (CompClass) {\r\n      const component = new CompClass(this, object, params)\r\n      this.addComponent(component)\r\n      return component\r\n    }\r\n\r\n    Log.warn('no component for object type', object.type)\r\n  }\r\n\r\n  /**\r\n   * Remove the given component\r\n   * @param  {Component} component - the component to remove\r\n   * @return {undefined}\r\n   */\r\n  removeComponent (component) {\r\n    const idx = this.compList.indexOf(component)\r\n    if (idx !== -1) {\r\n      this.compList.splice(idx, 1)\r\n      component.dispose()\r\n      this.signals.componentRemoved.dispatch(component)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all components from the stage\r\n   * @param  {String} [type] - component type to remove\r\n   * @return {undefined}\r\n   */\r\n  removeAllComponents (type) {\r\n    this.compList.slice().forEach(function (o) {\r\n      if (!type || o.type === type) {\r\n        this.removeComponent(o)\r\n      }\r\n    }, this)\r\n  }\r\n\r\n  /**\r\n   * Handle any size-changes of the container element\r\n   * @return {undefined}\r\n   */\r\n  handleResize () {\r\n    this.viewer.handleResize()\r\n  }\r\n\r\n  /**\r\n   * Set width and height\r\n   * @param {String} width - CSS width value\r\n   * @param {String} height - CSS height value\r\n   * @return {undefined}\r\n   */\r\n  setSize (width, height) {\r\n    const container = this.viewer.container\r\n\r\n    if (container !== document.body) {\r\n      if (width !== undefined) container.style.width = width\r\n      if (height !== undefined) container.style.height = height\r\n      this.handleResize()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle fullscreen\r\n   * @param  {Element} [element] - document element to put into fullscreen,\r\n   *                               defaults to the viewer container\r\n   * @return {undefined}\r\n   */\r\n  toggleFullscreen (element) {\r\n    if (!document.fullscreenEnabled && !document.mozFullScreenEnabled &&\r\n            !document.webkitFullscreenEnabled && !document.msFullscreenEnabled\r\n        ) {\r\n      Log.log('fullscreen mode (currently) not possible')\r\n      return\r\n    }\r\n\r\n    const self = this\r\n    element = element || this.viewer.container\r\n    this.lastFullscreenElement = element\r\n\r\n    //\r\n\r\n    function getFullscreenElement () {\r\n      return document.fullscreenElement || document.mozFullScreenElement ||\r\n              document.webkitFullscreenElement || document.msFullscreenElement\r\n    }\r\n\r\n    function resizeElement () {\r\n      if (!getFullscreenElement() && self.lastFullscreenElement) {\r\n        const element = self.lastFullscreenElement\r\n        element.style.width = element.dataset.normalWidth\r\n        element.style.height = element.dataset.normalHeight\r\n\r\n        document.removeEventListener('fullscreenchange', resizeElement)\r\n        document.removeEventListener('mozfullscreenchange', resizeElement)\r\n        document.removeEventListener('webkitfullscreenchange', resizeElement)\r\n        document.removeEventListener('MSFullscreenChange', resizeElement)\r\n\r\n        self.handleResize()\r\n        self.signals.fullscreenChanged.dispatch(false)\r\n      }\r\n    }\r\n\r\n    //\r\n\r\n    if (!getFullscreenElement()) {\r\n      element.dataset.normalWidth = element.style.width\r\n      element.dataset.normalHeight = element.style.height\r\n      element.style.width = window.screen.width + 'px'\r\n      element.style.height = window.screen.height + 'px'\r\n\r\n      if (element.requestFullscreen) {\r\n        element.requestFullscreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        element.msRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        element.mozRequestFullScreen()\r\n      } else if (element.webkitRequestFullscreen) {\r\n        element.webkitRequestFullscreen()\r\n      }\r\n\r\n      document.addEventListener('fullscreenchange', resizeElement)\r\n      document.addEventListener('mozfullscreenchange', resizeElement)\r\n      document.addEventListener('webkitfullscreenchange', resizeElement)\r\n      document.addEventListener('MSFullscreenChange', resizeElement)\r\n\r\n      this.handleResize()\r\n      this.signals.fullscreenChanged.dispatch(true)\r\n\r\n      // workaround for Safari\r\n      setTimeout(function () { self.handleResize() }, 100)\r\n    } else {\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set spin\r\n   * @param {Boolean} flag - if true start rocking and stop spinning\r\n   * @return {undefined}\r\n   */\r\n  setSpin (flag) {\r\n    if (flag) {\r\n      this.spinAnimation.resume(true)\r\n      this.rockAnimation.pause(true)\r\n    } else {\r\n      this.spinAnimation.pause(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set rock\r\n   * @param {Boolean} flag - if true start rocking and stop spinning\r\n   * @return {undefined}\r\n   */\r\n  setRock (flag) {\r\n    if (flag) {\r\n      this.rockAnimation.resume(true)\r\n      this.spinAnimation.pause(true)\r\n    } else {\r\n      this.rockAnimation.pause(true)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggle spin\r\n   * @return {undefined}\r\n   */\r\n  toggleSpin () {\r\n    this.setSpin(this.spinAnimation.paused)\r\n  }\r\n\r\n  /**\r\n   * Toggle rock\r\n   * @return {undefined}\r\n   */\r\n  toggleRock () {\r\n    this.setRock(this.rockAnimation.paused)\r\n  }\r\n\r\n  setFocus (value) {\r\n    const clipNear = clamp(value / 2, 0, 49.9)\r\n    const clipFar = 100 - clipNear\r\n    const diffHalf = (clipFar - clipNear) / 2\r\n\r\n    this.setParameters({\r\n      clipNear,\r\n      clipFar,\r\n      fogNear: pclamp(clipFar - diffHalf),\r\n      fogFar: pclamp(clipFar + diffHalf)\r\n    })\r\n  }\r\n\r\n  getZoomForBox (boundingBox) {\r\n    const bbSize = boundingBox.getSize(tmpZoomVector)\r\n    const maxSize = Math.max(bbSize.x, bbSize.y, bbSize.z)\r\n    const minSize = Math.min(bbSize.x, bbSize.y, bbSize.z)\r\n    let distance = maxSize + Math.sqrt(minSize)\r\n\r\n    const fov = degToRad(this.viewer.perspectiveCamera.fov)\r\n    const width = this.viewer.width\r\n    const height = this.viewer.height\r\n    const aspect = width / height\r\n    const aspectFactor = (height < width ? 1 : aspect)\r\n\r\n    distance = Math.abs(\r\n      ((distance * 0.5) / aspectFactor) / Math.sin(fov / 2)\r\n    )\r\n    distance += this.parameters.clipDist.value\r\n    return -distance\r\n  }\r\n\r\n  getBox () {\r\n    return this.viewer.boundingBox\r\n  }\r\n\r\n  getZoom () {\r\n    return this.getZoomForBox(this.getBox())\r\n  }\r\n\r\n  getCenter (optionalTarget) {\r\n    return this.getBox().getCenter(optionalTarget)\r\n  }\r\n\r\n  /**\r\n   * Add a zoom and a move animation with automatic targets\r\n   * @param  {Integer} duration - animation time in milliseconds\r\n   * @return {undefined}\r\n   */\r\n  autoView (duration) {\r\n    this.animationControls.zoomMove(\r\n      this.getCenter(),\r\n      this.getZoom(),\r\n      defaults(duration, 0)\r\n    )\r\n  }\r\n\r\n  /**\r\n   * Make image from what is shown in a viewer canvas\r\n   * @param  {ImageParameters} params - image generation parameters\r\n   * @return {Promise} A Promise object that resolves to an image {@link Blob}.\r\n   */\r\n  makeImage (params) {\r\n    const viewer = this.viewer\r\n    const tasks = this.tasks\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      function makeImage () {\r\n        tasks.increment()\r\n        viewer.makeImage(params).then(function (blob) {\r\n          tasks.decrement()\r\n          resolve(blob)\r\n        }).catch(function (e) {\r\n          tasks.decrement()\r\n          reject(e)\r\n        })\r\n      }\r\n\r\n      tasks.onZeroOnce(makeImage)\r\n    })\r\n  }\r\n\r\n  setImpostor (value) {\r\n    this.parameters.impostor.value = value\r\n\r\n    const types = [\r\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n      'dot'\r\n    ]\r\n\r\n    this.eachRepresentation(function (repr) {\r\n      if (repr.type === 'script') return\r\n\r\n      if (!types.includes(repr.getType())) {\r\n        return\r\n      }\r\n\r\n      const p = repr.getParameters()\r\n      p.disableImpostor = !value\r\n      repr.build(p)\r\n    })\r\n  }\r\n\r\n  setQuality (value) {\r\n    this.parameters.quality.value = value\r\n\r\n    const types = [\r\n      'tube', 'cartoon', 'ribbon', 'trace', 'rope'\r\n    ]\r\n\r\n    const impostorTypes = [\r\n      'spacefill', 'ball+stick', 'licorice', 'hyperball',\r\n      'backbone', 'rocket', 'helixorient', 'contact', 'distance',\r\n      'dot'\r\n    ]\r\n\r\n    this.eachRepresentation(function (repr) {\r\n      if (repr.type === 'script') return\r\n\r\n      const p = repr.getParameters()\r\n\r\n      if (!types.includes(repr.getType())) {\r\n        if (!impostorTypes.includes(repr.getType())) {\r\n          return\r\n        }\r\n\r\n        if (!p.disableImpostor) {\r\n          repr.repr.quality = value\r\n          return\r\n        }\r\n      }\r\n\r\n      p.quality = value\r\n      repr.build(p)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Iterator over each component and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @param  {String}   type - limit iteration to components of this type\r\n   * @return {undefined}\r\n   */\r\n  eachComponent (callback, type) {\r\n    this.compList.slice().forEach(function (o, i) {\r\n      if (!type || o.type === type) {\r\n        callback(o, i)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Iterator over each representation and executing the callback\r\n   * @param  {Function} callback - function to execute\r\n   * @param  {String}   type - limit iteration to components of this type\r\n   * @return {undefined}\r\n   */\r\n  eachRepresentation (callback, type) {\r\n    this.eachComponent(function (comp) {\r\n      comp.reprList.slice().forEach(function (repr) {\r\n        callback(repr, comp)\r\n      })\r\n    }, type)\r\n  }\r\n\r\n  /**\r\n   * Get collection of components by name\r\n   * @param  {String|RegExp}   name - the component name\r\n   * @param  {String} type - limit iteration to components of this type\r\n   * @return {ComponentCollection} collection of selected components\r\n   */\r\n  getComponentsByName (name, type) {\r\n    const compList = []\r\n\r\n    this.eachComponent(function (comp) {\r\n      if (name === undefined || matchName(name, comp)) {\r\n        compList.push(comp)\r\n      }\r\n    }, type)\r\n\r\n    return new ComponentCollection(compList)\r\n  }\r\n\r\n  /**\r\n   * Get collection of components by object\r\n   * @param  {Object} object - the object to find\r\n   * @return {ComponentCollection} collection of selected components\r\n   */\r\n  getComponentsByObject (object) {\r\n    const compList = []\r\n\r\n    this.eachComponent(function (comp) {\r\n      if (comp[ comp.type ] === object) {\r\n        compList.push(comp)\r\n      }\r\n    })\r\n\r\n    return new ComponentCollection(compList)\r\n  }\r\n\r\n  /**\r\n   * Get collection of representations by name\r\n   * @param  {String|RegExp}   name - the representation name\r\n   * @param  {String} type - limit iteration to components of this type\r\n   * @return {RepresentationCollection} collection of selected components\r\n   */\r\n  getRepresentationsByName (name, type) {\r\n    let compName, reprName\r\n\r\n    if (typeof name !== 'object' || name instanceof RegExp) {\r\n      compName = undefined\r\n      reprName = name\r\n    } else {\r\n      compName = name.comp\r\n      reprName = name.repr\r\n    }\r\n\r\n    const reprList = []\r\n\r\n    this.eachRepresentation(function (repr, comp) {\r\n      if (compName !== undefined && !matchName(compName, comp)) {\r\n        return\r\n      }\r\n\r\n      if (reprName === undefined || matchName(reprName, repr)) {\r\n        reprList.push(repr)\r\n      }\r\n    }, type)\r\n\r\n    return new RepresentationCollection(reprList)\r\n  }\r\n\r\n  /**\r\n   * Get collection of components and representations by name\r\n   * @param  {String|RegExp}   name - the component or representation name\r\n   * @return {Collection} collection of selected components and representations\r\n   */\r\n  getAnythingByName (name) {\r\n    const compList = this.getComponentsByName(name).list\r\n    const reprList = this.getRepresentationsByName(name).list\r\n\r\n    return new Collection(compList.concat(reprList))\r\n  }\r\n\r\n  /**\r\n   * Cleanup when disposing of a stage object\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    this.tasks.dispose()\r\n  }\r\n}\r\n\r\nexport default Stage\r\n",
    "static": true,
    "longname": "D:/nglLib/src/stage/stage.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3048,
    "kind": "function",
    "name": "matchName",
    "memberof": "src/stage/stage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/stage/stage.js~matchName",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/stage/stage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3049,
    "kind": "variable",
    "name": "tmpZoomVector",
    "memberof": "src/stage/stage.js",
    "static": true,
    "longname": "src/stage/stage.js~tmpZoomVector",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/stage/stage.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3050,
    "kind": "typedef",
    "name": "StageParameters",
    "memberof": "src/stage/stage.js",
    "static": true,
    "longname": "src/stage/stage.js~StageParameters",
    "access": "public",
    "description": "Stage parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "backgroundColor",
        "description": "background color"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "sampleLevel",
        "description": "sampling level for antialiasing, between -1 and 5;\n                                  -1: no sampling, 0: only sampling when not moving"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "workerDefault",
        "description": "default value for useWorker parameter of representations"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "rotateSpeed",
        "description": "camera-controls rotation speed, between 0 and 10"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "zoomSpeed",
        "description": "camera-controls zoom speed, between 0 and 10"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "panSpeed",
        "description": "camera-controls pan speed, between 0 and 10"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "clipNear",
        "description": "position of camera near/front clipping plane\n                               in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "clipFar",
        "description": "position of camera far/back clipping plane\n                              in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "clipDist",
        "description": "camera clipping distance in Angstrom"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "fogNear",
        "description": "position of the start of the fog effect\n                              in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "fogFar",
        "description": "position where the fog is in full effect\n                             in percent of scene bounding box"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cameraType",
        "description": "type of camera, either 'persepective' or 'orthographic'"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "cameraFov",
        "description": "camera field of view in degree, between 15 and 120"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "lightColor",
        "description": "point light color"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "lightIntensity",
        "description": "point light intensity"
      },
      {
        "nullable": null,
        "types": [
          "Color"
        ],
        "spread": false,
        "optional": false,
        "name": "ambientColor",
        "description": "ambient light color"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "ambientIntensity",
        "description": "ambient light intensity"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "hoverTimeout",
        "description": "timeout for hovering"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StageParameters"
    }
  },
  {
    "__docId__": 3051,
    "kind": "typedef",
    "name": "StageSignals",
    "memberof": "src/stage/stage.js",
    "static": true,
    "longname": "src/stage/stage.js~StageSignals",
    "access": "public",
    "description": "",
    "examples": [
      "stage.signals.componentAdded.add( function( component ){ ... } );"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<StageParameters>"
        ],
        "spread": false,
        "optional": false,
        "name": "parametersChanged",
        "description": "on parameters change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Boolean>"
        ],
        "spread": false,
        "optional": false,
        "name": "fullscreenChanged",
        "description": "on fullscreen change"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Component>"
        ],
        "spread": false,
        "optional": false,
        "name": "componentAdded",
        "description": "when a component is added"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Component>"
        ],
        "spread": false,
        "optional": false,
        "name": "componentRemoved",
        "description": "when a component is removed"
      },
      {
        "nullable": null,
        "types": [
          "Signal<PickingProxy|undefined>"
        ],
        "spread": false,
        "optional": false,
        "name": "clicked",
        "description": "on click"
      },
      {
        "nullable": null,
        "types": [
          "Signal<PickingProxy|undefined>"
        ],
        "spread": false,
        "optional": false,
        "name": "hovered",
        "description": "on hover"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StageSignals"
    }
  },
  {
    "__docId__": 3052,
    "kind": "class",
    "name": "Stage",
    "memberof": "src/stage/stage.js",
    "static": true,
    "longname": "src/stage/stage.js~Stage",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/stage/stage.js",
    "importStyle": "Stage",
    "description": "Stage class, central for creating molecular scenes with NGL.",
    "examples": [
      "var stage = new Stage( \"elementId\", { backgroundColor: \"white\" } );"
    ],
    "lineNumber": 96,
    "interface": false
  },
  {
    "__docId__": 3053,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#constructor",
    "access": "public",
    "description": "Create a Stage instance",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "idOrElement",
        "description": "dom id or element"
      },
      {
        "nullable": null,
        "types": [
          "StageParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ]
  },
  {
    "__docId__": 3054,
    "kind": "member",
    "name": "signals",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#signals",
    "access": "public",
    "description": "Events emitted by the stage",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "StageSignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3055,
    "kind": "member",
    "name": "tasks",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#tasks",
    "access": "public",
    "description": null,
    "lineNumber": 125,
    "undocument": true
  },
  {
    "__docId__": 3056,
    "kind": "member",
    "name": "compList",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#compList",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 3057,
    "kind": "member",
    "name": "defaultFileParams",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#defaultFileParams",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 3058,
    "kind": "member",
    "name": "viewer",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#viewer",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "undocument": true
  },
  {
    "__docId__": 3059,
    "kind": "member",
    "name": "tooltip",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#tooltip",
    "access": "public",
    "description": "Tooltip element",
    "lineNumber": 138,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3060,
    "kind": "member",
    "name": "mouseObserver",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#mouseObserver",
    "access": "public",
    "description": "",
    "lineNumber": 154,
    "type": {
      "nullable": null,
      "types": [
        "MouseObserver"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3061,
    "kind": "member",
    "name": "viewerControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#viewerControls",
    "access": "public",
    "description": "",
    "lineNumber": 159,
    "type": {
      "nullable": null,
      "types": [
        "ViewerControls"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3062,
    "kind": "member",
    "name": "trackballControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#trackballControls",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 3063,
    "kind": "member",
    "name": "pickingControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#pickingControls",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true
  },
  {
    "__docId__": 3064,
    "kind": "member",
    "name": "animationControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#animationControls",
    "access": "public",
    "description": "",
    "lineNumber": 165,
    "type": {
      "nullable": null,
      "types": [
        "AnimationControls"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3065,
    "kind": "member",
    "name": "mouseControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#mouseControls",
    "access": "public",
    "description": "",
    "lineNumber": 169,
    "type": {
      "nullable": null,
      "types": [
        "MouseControls"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3066,
    "kind": "member",
    "name": "keyControls",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#keyControls",
    "access": "public",
    "description": "",
    "lineNumber": 173,
    "type": {
      "nullable": null,
      "types": [
        "KeyControls"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3067,
    "kind": "member",
    "name": "pickingBehavior",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#pickingBehavior",
    "access": "public",
    "description": null,
    "lineNumber": 175,
    "undocument": true
  },
  {
    "__docId__": 3068,
    "kind": "member",
    "name": "mouseBehavior",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#mouseBehavior",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true
  },
  {
    "__docId__": 3069,
    "kind": "member",
    "name": "animationBehavior",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#animationBehavior",
    "access": "public",
    "description": null,
    "lineNumber": 177,
    "undocument": true
  },
  {
    "__docId__": 3070,
    "kind": "member",
    "name": "keyBehavior",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#keyBehavior",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 3071,
    "kind": "member",
    "name": "spinAnimation",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#spinAnimation",
    "access": "public",
    "description": "",
    "lineNumber": 183,
    "type": {
      "nullable": null,
      "types": [
        "SpinAnimation"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3072,
    "kind": "member",
    "name": "rockAnimation",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#rockAnimation",
    "access": "public",
    "description": "",
    "lineNumber": 188,
    "type": {
      "nullable": null,
      "types": [
        "RockAnimation"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3073,
    "kind": "member",
    "name": "parameters",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#parameters",
    "access": "public",
    "description": null,
    "lineNumber": 216,
    "undocument": true
  },
  {
    "__docId__": 3074,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setParameters",
    "access": "public",
    "description": "Set stage parameters",
    "lineNumber": 295,
    "params": [
      {
        "nullable": null,
        "types": [
          "StageParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "stage parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stage"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3075,
    "kind": "method",
    "name": "getParameters",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getParameters",
    "access": "public",
    "description": "Get stage parameters",
    "lineNumber": 339,
    "return": {
      "nullable": null,
      "types": [
        "StageParameters"
      ],
      "spread": false,
      "description": "parameter object"
    }
  },
  {
    "__docId__": 3076,
    "kind": "method",
    "name": "defaultFileRepresentation",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#defaultFileRepresentation",
    "access": "public",
    "description": "Create default representations for the given component",
    "lineNumber": 352,
    "params": [
      {
        "nullable": null,
        "types": [
          "StructureComponent",
          "SurfaceComponent"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "component to create the representations for"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3077,
    "kind": "method",
    "name": "loadFile",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#loadFile",
    "access": "public",
    "description": "Load a file onto the stage",
    "examples": [
      "// load from URL\nstage.loadFile( \"http://files.rcsb.org/download/5IOS.cif\" );",
      "// load binary data in CCP4 format via a Blob\nvar binaryBlob = new Blob( [ ccp4Data ], { type: 'application/octet-binary'} );\nstage.loadFile( binaryBlob, { ext: \"ccp4\" } );",
      "// load string data in PDB format via a Blob\nvar stringBlob = new Blob( [ pdbData ], { type: 'text/plain'} );\nstage.loadFile( stringBlob, { ext: \"pdb\" } );",
      "// load a File object\nstage.loadFile( file );",
      "// load from URL and add a 'ball+stick' representation with double/triple bonds\nstage.loadFile( \"http://files.rcsb.org/download/1crn.cif\" ).then( function( comp ){\n    comp.addRepresentation( \"ball+stick\", { multipleBond: true } );\n} );"
    ],
    "lineNumber": 523,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "File",
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "either a URL or an object containing the file data"
      },
      {
        "nullable": null,
        "types": [
          "LoaderParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "loading parameters"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "params.asTrajectory",
        "description": "load multi-model structures as a trajectory"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A Promise object that resolves to a {@link StructureComponent},\n                  a {@link SurfaceComponent} or a {@link ScriptComponent} object,\n                  depending on the type of the loaded file."
    }
  },
  {
    "__docId__": 3078,
    "kind": "method",
    "name": "addComponent",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#addComponent",
    "access": "public",
    "description": "Add the given component to the stage",
    "lineNumber": 577,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "the component to add"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3079,
    "kind": "method",
    "name": "addComponentFromObject",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#addComponentFromObject",
    "access": "public",
    "description": "Create a component from the given object and add to the stage",
    "lineNumber": 594,
    "params": [
      {
        "nullable": null,
        "types": [
          "Script",
          "Shape",
          "Structure",
          "Surface",
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the object to add"
      },
      {
        "nullable": null,
        "types": [
          "ComponentParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameter object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "the created component"
    }
  },
  {
    "__docId__": 3080,
    "kind": "method",
    "name": "removeComponent",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#removeComponent",
    "access": "public",
    "description": "Remove the given component",
    "lineNumber": 611,
    "params": [
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "the component to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3081,
    "kind": "method",
    "name": "removeAllComponents",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#removeAllComponents",
    "access": "public",
    "description": "Remove all components from the stage",
    "lineNumber": 625,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "type",
        "description": "component type to remove"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3082,
    "kind": "method",
    "name": "handleResize",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#handleResize",
    "access": "public",
    "description": "Handle any size-changes of the container element",
    "lineNumber": 637,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3083,
    "kind": "method",
    "name": "setSize",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setSize",
    "access": "public",
    "description": "Set width and height",
    "lineNumber": 647,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "width",
        "description": "CSS width value"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "height",
        "description": "CSS height value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3084,
    "kind": "method",
    "name": "toggleFullscreen",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#toggleFullscreen",
    "access": "public",
    "description": "Toggle fullscreen",
    "lineNumber": 663,
    "params": [
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "element",
        "description": "document element to put into fullscreen,\n                              defaults to the viewer container"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3085,
    "kind": "member",
    "name": "lastFullscreenElement",
    "memberof": "src/stage/stage.js~Stage",
    "static": false,
    "longname": "src/stage/stage.js~Stage#lastFullscreenElement",
    "access": "public",
    "description": null,
    "lineNumber": 673,
    "undocument": true
  },
  {
    "__docId__": 3086,
    "kind": "method",
    "name": "setSpin",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setSpin",
    "access": "public",
    "description": "Set spin",
    "lineNumber": 744,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flag",
        "description": "if true start rocking and stop spinning"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3087,
    "kind": "method",
    "name": "setRock",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setRock",
    "access": "public",
    "description": "Set rock",
    "lineNumber": 758,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "flag",
        "description": "if true start rocking and stop spinning"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3088,
    "kind": "method",
    "name": "toggleSpin",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#toggleSpin",
    "access": "public",
    "description": "Toggle spin",
    "lineNumber": 771,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3089,
    "kind": "method",
    "name": "toggleRock",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#toggleRock",
    "access": "public",
    "description": "Toggle rock",
    "lineNumber": 779,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3090,
    "kind": "method",
    "name": "setFocus",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setFocus",
    "access": "public",
    "description": null,
    "lineNumber": 783,
    "undocument": true
  },
  {
    "__docId__": 3091,
    "kind": "method",
    "name": "getZoomForBox",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getZoomForBox",
    "access": "public",
    "description": null,
    "lineNumber": 796,
    "undocument": true
  },
  {
    "__docId__": 3092,
    "kind": "method",
    "name": "getBox",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getBox",
    "access": "public",
    "description": null,
    "lineNumber": 815,
    "undocument": true
  },
  {
    "__docId__": 3093,
    "kind": "method",
    "name": "getZoom",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getZoom",
    "access": "public",
    "description": null,
    "lineNumber": 819,
    "undocument": true
  },
  {
    "__docId__": 3094,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getCenter",
    "access": "public",
    "description": null,
    "lineNumber": 823,
    "undocument": true
  },
  {
    "__docId__": 3095,
    "kind": "method",
    "name": "autoView",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#autoView",
    "access": "public",
    "description": "Add a zoom and a move animation with automatic targets",
    "lineNumber": 832,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "animation time in milliseconds"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3096,
    "kind": "method",
    "name": "makeImage",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#makeImage",
    "access": "public",
    "description": "Make image from what is shown in a viewer canvas",
    "lineNumber": 845,
    "params": [
      {
        "nullable": null,
        "types": [
          "ImageParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "image generation parameters"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A Promise object that resolves to an image {@link Blob}."
    }
  },
  {
    "__docId__": 3097,
    "kind": "method",
    "name": "setImpostor",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setImpostor",
    "access": "public",
    "description": null,
    "lineNumber": 865,
    "undocument": true
  },
  {
    "__docId__": 3098,
    "kind": "method",
    "name": "setQuality",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#setQuality",
    "access": "public",
    "description": null,
    "lineNumber": 887,
    "undocument": true
  },
  {
    "__docId__": 3099,
    "kind": "method",
    "name": "eachComponent",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#eachComponent",
    "access": "public",
    "description": "Iterator over each component and executing the callback",
    "lineNumber": 927,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function to execute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "limit iteration to components of this type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3100,
    "kind": "method",
    "name": "eachRepresentation",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#eachRepresentation",
    "access": "public",
    "description": "Iterator over each representation and executing the callback",
    "lineNumber": 941,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function to execute"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "limit iteration to components of this type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3101,
    "kind": "method",
    "name": "getComponentsByName",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getComponentsByName",
    "access": "public",
    "description": "Get collection of components by name",
    "lineNumber": 955,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the component name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "limit iteration to components of this type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ComponentCollection"
      ],
      "spread": false,
      "description": "collection of selected components"
    }
  },
  {
    "__docId__": 3102,
    "kind": "method",
    "name": "getComponentsByObject",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getComponentsByObject",
    "access": "public",
    "description": "Get collection of components by object",
    "lineNumber": 972,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "the object to find"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ComponentCollection"
      ],
      "spread": false,
      "description": "collection of selected components"
    }
  },
  {
    "__docId__": 3103,
    "kind": "method",
    "name": "getRepresentationsByName",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getRepresentationsByName",
    "access": "public",
    "description": "Get collection of representations by name",
    "lineNumber": 990,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the representation name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "limit iteration to components of this type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RepresentationCollection"
      ],
      "spread": false,
      "description": "collection of selected components"
    }
  },
  {
    "__docId__": 3104,
    "kind": "method",
    "name": "getAnythingByName",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#getAnythingByName",
    "access": "public",
    "description": "Get collection of components and representations by name",
    "lineNumber": 1021,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the component or representation name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Collection"
      ],
      "spread": false,
      "description": "collection of selected components and representations"
    }
  },
  {
    "__docId__": 3105,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/stage/stage.js~Stage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/stage.js~Stage#dispose",
    "access": "public",
    "description": "Cleanup when disposing of a stage object",
    "lineNumber": 1032,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3106,
    "kind": "file",
    "name": "src/store/atom-map.js",
    "content": "/**\r\n * @file Atom Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport AtomType from './atom-type.js'\r\nimport { guessElement } from '../structure/structure-utils.js'\r\n\r\nfunction getHash (atomname, element) {\r\n  return atomname + '|' + element\r\n}\r\n\r\nclass AtomMap {\r\n  constructor (structure) {\r\n    this.structure = structure\r\n\r\n    this.dict = {}\r\n    this.list = []\r\n  }\r\n\r\n  add (atomname, element) {\r\n    atomname = atomname.toUpperCase()\r\n    if (!element) {\r\n      element = guessElement(atomname)\r\n    } else {\r\n      element = element.toUpperCase()\r\n    }\r\n    const hash = getHash(atomname, element)\r\n    let id = this.dict[ hash ]\r\n    if (id === undefined) {\r\n      const atomType = new AtomType(this.structure, atomname, element)\r\n      id = this.list.length\r\n      this.dict[ hash ] = id\r\n      this.list.push(atomType)\r\n    }\r\n    return id\r\n  }\r\n\r\n  get (id) {\r\n    return this.list[ id ]\r\n  }\r\n}\r\n\r\nexport default AtomMap\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/atom-map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3107,
    "kind": "function",
    "name": "getHash",
    "memberof": "src/store/atom-map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/store/atom-map.js~getHash",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/store/atom-map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3108,
    "kind": "class",
    "name": "AtomMap",
    "memberof": "src/store/atom-map.js",
    "static": true,
    "longname": "src/store/atom-map.js~AtomMap",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/atom-map.js",
    "importStyle": "AtomMap",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3109,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/atom-map.js~AtomMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 3110,
    "kind": "member",
    "name": "structure",
    "memberof": "src/store/atom-map.js~AtomMap",
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#structure",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 3111,
    "kind": "member",
    "name": "dict",
    "memberof": "src/store/atom-map.js~AtomMap",
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#dict",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3112,
    "kind": "member",
    "name": "list",
    "memberof": "src/store/atom-map.js~AtomMap",
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#list",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3113,
    "kind": "method",
    "name": "add",
    "memberof": "src/store/atom-map.js~AtomMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#add",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3114,
    "kind": "method",
    "name": "get",
    "memberof": "src/store/atom-map.js~AtomMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-map.js~AtomMap#get",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3115,
    "kind": "file",
    "name": "src/store/atom-store.js",
    "content": "/**\r\n * @file Atom Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store from './store.js'\r\n\r\n/**\r\n * Atom store\r\n */\r\nclass AtomStore extends Store {\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'residueIndex', 1, 'uint32' ],\r\n      [ 'atomTypeId', 1, 'uint16' ],\r\n\r\n      [ 'x', 1, 'float32' ],\r\n      [ 'y', 1, 'float32' ],\r\n      [ 'z', 1, 'float32' ],\r\n      [ 'serial', 1, 'int32' ],\r\n      [ 'bfactor', 1, 'float32' ],\r\n      [ 'altloc', 1, 'uint8' ],\r\n      [ 'occupancy', 1, 'float32' ]\r\n    ]\r\n  }\r\n\r\n  setAltloc (i, str) {\r\n    this.altloc[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getAltloc (i) {\r\n    const code = this.altloc[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n}\r\n\r\nexport default AtomStore\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/atom-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3116,
    "kind": "class",
    "name": "AtomStore",
    "memberof": "src/store/atom-store.js",
    "static": true,
    "longname": "src/store/atom-store.js~AtomStore",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/atom-store.js",
    "importStyle": "AtomStore",
    "description": "Atom store",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/store/store.js~Store"
    ]
  },
  {
    "__docId__": 3117,
    "kind": "get",
    "name": "_defaultFields",
    "memberof": "src/store/atom-store.js~AtomStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-store.js~AtomStore#_defaultFields",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3118,
    "kind": "method",
    "name": "setAltloc",
    "memberof": "src/store/atom-store.js~AtomStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-store.js~AtomStore#setAltloc",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 3119,
    "kind": "method",
    "name": "getAltloc",
    "memberof": "src/store/atom-store.js~AtomStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-store.js~AtomStore#getAltloc",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3120,
    "kind": "file",
    "name": "src/store/atom-type.js",
    "content": "/**\r\n * @file Atom Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { guessElement } from '../structure/structure-utils.js'\r\nimport { VdwRadii, CovalentRadii } from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Atom type\r\n */\r\nclass AtomType {\r\n    /**\r\n     * @param {Structure} structure - the structure object\r\n     * @param {String} atomname - the name of the atom\r\n     * @param {String} element - the chemical element\r\n     */\r\n  constructor (structure, atomname, element) {\r\n    this.structure = structure\r\n\r\n    element = element || guessElement(atomname)\r\n\r\n    this.atomname = atomname\r\n    this.element = element\r\n    this.vdw = VdwRadii[ element ]\r\n    this.covalent = CovalentRadii[ element ]\r\n  }\r\n}\r\n\r\nexport default AtomType\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/atom-type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3121,
    "kind": "class",
    "name": "AtomType",
    "memberof": "src/store/atom-type.js",
    "static": true,
    "longname": "src/store/atom-type.js~AtomType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/atom-type.js",
    "importStyle": "AtomType",
    "description": "Atom type",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 3122,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/atom-type.js~AtomType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "atomname",
        "description": "the name of the atom"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "the chemical element"
      }
    ]
  },
  {
    "__docId__": 3123,
    "kind": "member",
    "name": "structure",
    "memberof": "src/store/atom-type.js~AtomType",
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#structure",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3124,
    "kind": "member",
    "name": "atomname",
    "memberof": "src/store/atom-type.js~AtomType",
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#atomname",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 3125,
    "kind": "member",
    "name": "element",
    "memberof": "src/store/atom-type.js~AtomType",
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#element",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3126,
    "kind": "member",
    "name": "vdw",
    "memberof": "src/store/atom-type.js~AtomType",
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#vdw",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 3127,
    "kind": "member",
    "name": "covalent",
    "memberof": "src/store/atom-type.js~AtomType",
    "static": false,
    "longname": "src/store/atom-type.js~AtomType#covalent",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 3128,
    "kind": "file",
    "name": "src/store/bond-hash.js",
    "content": "/**\r\n * @file Bond Hash\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug, Log } from '../globals.js'\r\n\r\nclass BondHash {\r\n  constructor (bondStore, atomCount) {\r\n    if (Debug) Log.time('BondHash init')\r\n\r\n    const bondCount = bondStore.count\r\n    const atomIndex1Array = bondStore.atomIndex1\r\n    const atomIndex2Array = bondStore.atomIndex2\r\n    const countArray = new Uint8Array(atomCount)\r\n    const offsetArray = new Int32Array(atomCount)\r\n\r\n    // count bonds per atom\r\n    for (let i = 0; i < bondCount; ++i) {\r\n      countArray[ atomIndex1Array[ i ] ] += 1\r\n      countArray[ atomIndex2Array[ i ] ] += 1\r\n    }\r\n\r\n    // get offsets to atom bonds\r\n    for (let i = 1; i < atomCount; ++i) {\r\n      offsetArray[ i ] += offsetArray[ i - 1 ] + countArray[ i - 1 ]\r\n    }\r\n\r\n    // prepare index array\r\n    const bondCount2 = bondCount * 2\r\n    const indexArray = new Int32Array(bondCount2)\r\n    for (let j = 0; j < bondCount2; ++j) {\r\n      indexArray[ j ] = -1\r\n    }\r\n\r\n    // build index array\r\n    for (let i = 0; i < bondCount; ++i) {\r\n      const idx1 = atomIndex1Array[ i ]\r\n      const idx2 = atomIndex2Array[ i ]\r\n      let j1 = offsetArray[ idx1 ]\r\n      while (indexArray[ j1 ] !== -1) {\r\n        j1 += 1\r\n      }\r\n      indexArray[ j1 ] = i\r\n      let j2 = offsetArray[ idx2 ]\r\n      while (indexArray[ j2 ] !== -1) {\r\n        j2 += 1\r\n      }\r\n      indexArray[ j2 ] = i\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('BondHash init')\r\n\r\n    this.countArray = countArray\r\n    this.offsetArray = offsetArray\r\n    this.indexArray = indexArray\r\n  }\r\n}\r\n\r\nexport default BondHash\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/bond-hash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3129,
    "kind": "class",
    "name": "BondHash",
    "memberof": "src/store/bond-hash.js",
    "static": true,
    "longname": "src/store/bond-hash.js~BondHash",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/bond-hash.js",
    "importStyle": "BondHash",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3130,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/bond-hash.js~BondHash",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/bond-hash.js~BondHash#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3131,
    "kind": "member",
    "name": "countArray",
    "memberof": "src/store/bond-hash.js~BondHash",
    "static": false,
    "longname": "src/store/bond-hash.js~BondHash#countArray",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 3132,
    "kind": "member",
    "name": "offsetArray",
    "memberof": "src/store/bond-hash.js~BondHash",
    "static": false,
    "longname": "src/store/bond-hash.js~BondHash#offsetArray",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 3133,
    "kind": "member",
    "name": "indexArray",
    "memberof": "src/store/bond-hash.js~BondHash",
    "static": false,
    "longname": "src/store/bond-hash.js~BondHash#indexArray",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 3134,
    "kind": "file",
    "name": "src/store/bond-store.js",
    "content": "/**\r\n * @file Bond Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store from './store.js'\r\n\r\n/**\r\n * Bond store\r\n */\r\nclass BondStore extends Store {\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'atomIndex1', 1, 'int32' ],\r\n      [ 'atomIndex2', 1, 'int32' ],\r\n      [ 'bondOrder', 1, 'int8' ]\r\n    ]\r\n  }\r\n\r\n  addBond (atom1, atom2, bondOrder) {\r\n    this.growIfFull()\r\n\r\n    const i = this.count\r\n    const ai1 = atom1.index\r\n    const ai2 = atom2.index\r\n\r\n    if (ai1 < ai2) {\r\n      this.atomIndex1[ i ] = ai1\r\n      this.atomIndex2[ i ] = ai2\r\n    } else {\r\n      this.atomIndex2[ i ] = ai1\r\n      this.atomIndex1[ i ] = ai2\r\n    }\r\n    if (bondOrder) this.bondOrder[ i ] = bondOrder\r\n\r\n    this.count += 1\r\n  }\r\n\r\n  addBondIfConnected (atom1, atom2, bondOrder) {\r\n    if (atom1.connectedTo(atom2)) {\r\n      this.addBond(atom1, atom2, bondOrder)\r\n      return true\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\nexport default BondStore\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/bond-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3135,
    "kind": "class",
    "name": "BondStore",
    "memberof": "src/store/bond-store.js",
    "static": true,
    "longname": "src/store/bond-store.js~BondStore",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/bond-store.js",
    "importStyle": "BondStore",
    "description": "Bond store",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/store/store.js~Store"
    ]
  },
  {
    "__docId__": 3136,
    "kind": "get",
    "name": "_defaultFields",
    "memberof": "src/store/bond-store.js~BondStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/bond-store.js~BondStore#_defaultFields",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3137,
    "kind": "method",
    "name": "addBond",
    "memberof": "src/store/bond-store.js~BondStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/bond-store.js~BondStore#addBond",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3138,
    "kind": "member",
    "name": "count",
    "memberof": "src/store/bond-store.js~BondStore",
    "static": false,
    "longname": "src/store/bond-store.js~BondStore#count",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 3139,
    "kind": "method",
    "name": "addBondIfConnected",
    "memberof": "src/store/bond-store.js~BondStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/bond-store.js~BondStore#addBondIfConnected",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3140,
    "kind": "file",
    "name": "src/store/chain-store.js",
    "content": "/**\r\n * @file Chain Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store from './store.js'\r\n\r\n/**\r\n * Chain store\r\n */\r\nclass ChainStore extends Store {\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'entityIndex', 1, 'uint16' ],\r\n      [ 'modelIndex', 1, 'uint16' ],\r\n      [ 'residueOffset', 1, 'uint32' ],\r\n      [ 'residueCount', 1, 'uint32' ],\r\n\r\n      [ 'chainname', 4, 'uint8' ],\r\n      [ 'chainid', 4, 'uint8' ]\r\n    ]\r\n  }\r\n\r\n  setChainname (i, str) {\r\n    const j = 4 * i\r\n    this.chainname[ j ] = str.charCodeAt(0)\r\n    this.chainname[ j + 1 ] = str.charCodeAt(1)\r\n    this.chainname[ j + 2 ] = str.charCodeAt(2)\r\n    this.chainname[ j + 3 ] = str.charCodeAt(3)\r\n  }\r\n\r\n  getChainname (i) {\r\n    let chainname = ''\r\n    for (let k = 0; k < 4; ++k) {\r\n      const code = this.chainname[ 4 * i + k ]\r\n      if (code) {\r\n        chainname += String.fromCharCode(code)\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    return chainname\r\n  }\r\n\r\n  setChainid (i, str) {\r\n    const j = 4 * i\r\n    this.chainid[ j ] = str.charCodeAt(0)\r\n    this.chainid[ j + 1 ] = str.charCodeAt(1)\r\n    this.chainid[ j + 2 ] = str.charCodeAt(2)\r\n    this.chainid[ j + 3 ] = str.charCodeAt(3)\r\n  }\r\n\r\n  getChainid (i) {\r\n    let chainid = ''\r\n    for (let k = 0; k < 4; ++k) {\r\n      const code = this.chainid[ 4 * i + k ]\r\n      if (code) {\r\n        chainid += String.fromCharCode(code)\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    return chainid\r\n  }\r\n}\r\n\r\nexport default ChainStore\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/chain-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3141,
    "kind": "class",
    "name": "ChainStore",
    "memberof": "src/store/chain-store.js",
    "static": true,
    "longname": "src/store/chain-store.js~ChainStore",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/chain-store.js",
    "importStyle": "ChainStore",
    "description": "Chain store",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/store/store.js~Store"
    ]
  },
  {
    "__docId__": 3142,
    "kind": "get",
    "name": "_defaultFields",
    "memberof": "src/store/chain-store.js~ChainStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/chain-store.js~ChainStore#_defaultFields",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3143,
    "kind": "method",
    "name": "setChainname",
    "memberof": "src/store/chain-store.js~ChainStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/chain-store.js~ChainStore#setChainname",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3144,
    "kind": "method",
    "name": "getChainname",
    "memberof": "src/store/chain-store.js~ChainStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/chain-store.js~ChainStore#getChainname",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3145,
    "kind": "method",
    "name": "setChainid",
    "memberof": "src/store/chain-store.js~ChainStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/chain-store.js~ChainStore#setChainid",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 3146,
    "kind": "method",
    "name": "getChainid",
    "memberof": "src/store/chain-store.js~ChainStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/chain-store.js~ChainStore#getChainid",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 3147,
    "kind": "file",
    "name": "src/store/model-store.js",
    "content": "/**\r\n * @file Model Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store from './store.js'\r\n\r\n/**\r\n * Model store\r\n */\r\nclass ModelStore extends Store {\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'chainOffset', 1, 'uint32' ],\r\n      [ 'chainCount', 1, 'uint32' ]\r\n    ]\r\n  }\r\n}\r\n\r\nexport default ModelStore\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/model-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3148,
    "kind": "class",
    "name": "ModelStore",
    "memberof": "src/store/model-store.js",
    "static": true,
    "longname": "src/store/model-store.js~ModelStore",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/model-store.js",
    "importStyle": "ModelStore",
    "description": "Model store",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/store/store.js~Store"
    ]
  },
  {
    "__docId__": 3149,
    "kind": "get",
    "name": "_defaultFields",
    "memberof": "src/store/model-store.js~ModelStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/model-store.js~ModelStore#_defaultFields",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3150,
    "kind": "file",
    "name": "src/store/residue-map.js",
    "content": "/**\r\n * @file Residue Map\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport ResidueType from './residue-type.js'\r\n\r\nfunction getHash (resname, atomTypeIdList, hetero, chemCompType) {\r\n  return (\r\n    resname + '|' +\r\n    atomTypeIdList.join(',') + '|' +\r\n    (hetero ? 1 : 0) + '|' +\r\n    (chemCompType || '')\r\n  )\r\n}\r\n\r\nclass ResidueMap {\r\n  constructor (structure) {\r\n    this.structure = structure\r\n\r\n    this.dict = {}\r\n    this.list = []\r\n  }\r\n\r\n  add (resname, atomTypeIdList, hetero, chemCompType, bonds) {\r\n    resname = resname.toUpperCase()\r\n    const hash = getHash(resname, atomTypeIdList, hetero, chemCompType)\r\n    let id = this.dict[ hash ]\r\n    if (id === undefined) {\r\n      const residueType = new ResidueType(\r\n        this.structure, resname, atomTypeIdList, hetero, chemCompType, bonds\r\n      )\r\n      id = this.list.length\r\n      this.dict[ hash ] = id\r\n      this.list.push(residueType)\r\n    }\r\n    return id\r\n  }\r\n\r\n  get (id) {\r\n    return this.list[ id ]\r\n  }\r\n}\r\n\r\nexport default ResidueMap\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/residue-map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3151,
    "kind": "function",
    "name": "getHash",
    "memberof": "src/store/residue-map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/store/residue-map.js~getHash",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/store/residue-map.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3152,
    "kind": "class",
    "name": "ResidueMap",
    "memberof": "src/store/residue-map.js",
    "static": true,
    "longname": "src/store/residue-map.js~ResidueMap",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/residue-map.js",
    "importStyle": "ResidueMap",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3153,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3154,
    "kind": "member",
    "name": "structure",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#structure",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3155,
    "kind": "member",
    "name": "dict",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#dict",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3156,
    "kind": "member",
    "name": "list",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#list",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3157,
    "kind": "method",
    "name": "add",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#add",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 3158,
    "kind": "method",
    "name": "get",
    "memberof": "src/store/residue-map.js~ResidueMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-map.js~ResidueMap#get",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 3159,
    "kind": "file",
    "name": "src/store/residue-store.js",
    "content": "/**\r\n * @file Residue Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Store from './store.js'\r\n\r\n/**\r\n * Residue store\r\n */\r\nclass ResidueStore extends Store {\r\n  get _defaultFields () {\r\n    return [\r\n      [ 'chainIndex', 1, 'uint32' ],\r\n      [ 'atomOffset', 1, 'uint32' ],\r\n      [ 'atomCount', 1, 'uint16' ],\r\n      [ 'residueTypeId', 1, 'uint16' ],\r\n\r\n      [ 'resno', 1, 'int32' ],\r\n      [ 'sstruc', 1, 'uint8' ],\r\n      [ 'inscode', 1, 'uint8' ]\r\n    ]\r\n  }\r\n\r\n  setSstruc (i, str) {\r\n    this.sstruc[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getSstruc (i) {\r\n    const code = this.sstruc[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n\r\n  setInscode (i, str) {\r\n    this.inscode[ i ] = str.charCodeAt(0)\r\n  }\r\n\r\n  getInscode (i) {\r\n    const code = this.inscode[ i ]\r\n    return code ? String.fromCharCode(code) : ''\r\n  }\r\n}\r\n\r\nexport default ResidueStore\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/residue-store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3160,
    "kind": "class",
    "name": "ResidueStore",
    "memberof": "src/store/residue-store.js",
    "static": true,
    "longname": "src/store/residue-store.js~ResidueStore",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/residue-store.js",
    "importStyle": "ResidueStore",
    "description": "Residue store",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/store/store.js~Store"
    ]
  },
  {
    "__docId__": 3161,
    "kind": "get",
    "name": "_defaultFields",
    "memberof": "src/store/residue-store.js~ResidueStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-store.js~ResidueStore#_defaultFields",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3162,
    "kind": "method",
    "name": "setSstruc",
    "memberof": "src/store/residue-store.js~ResidueStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-store.js~ResidueStore#setSstruc",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 3163,
    "kind": "method",
    "name": "getSstruc",
    "memberof": "src/store/residue-store.js~ResidueStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-store.js~ResidueStore#getSstruc",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 3164,
    "kind": "method",
    "name": "setInscode",
    "memberof": "src/store/residue-store.js~ResidueStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-store.js~ResidueStore#setInscode",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3165,
    "kind": "method",
    "name": "getInscode",
    "memberof": "src/store/residue-store.js~ResidueStore",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-store.js~ResidueStore#getInscode",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 3166,
    "kind": "file",
    "name": "src/store/residue-type.js",
    "content": "/**\r\n * @file Residue Type\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Fred Ludlow\r\n * @private\r\n */\r\n\r\nimport { calculateResidueBonds } from '../structure/structure-utils.js'\r\nimport {\r\n    ProteinType, RnaType, DnaType, WaterType, IonType, SaccharideType, UnknownType,\r\n    ProteinBackboneType, RnaBackboneType, DnaBackboneType, UnknownBackboneType,\r\n    CgProteinBackboneType, CgRnaBackboneType, CgDnaBackboneType,\r\n    ChemCompProtein, ChemCompRna, ChemCompDna, ChemCompSaccharide,\r\n    AA3, PurinBases, RnaBases, DnaBases, IonNames, WaterNames, SaccharideNames,\r\n    ProteinBackboneAtoms, NucleicBackboneAtoms, ResidueTypeAtoms\r\n} from '../structure/structure-constants.js'\r\n\r\n/**\r\n * Residue type\r\n */\r\nclass ResidueType {\r\n  /**\r\n   * @param {Structure} structure - the structure object\r\n   * @param {String} resname - name of the residue\r\n   * @param {Array} atomTypeIdList - list of IDs of {@link AtomType}s corresponding\r\n   *                                 to the atoms of the residue\r\n   * @param {Boolean} hetero - hetero flag\r\n   * @param {String} chemCompType - chemical component type\r\n   * @param {Object} [bonds] - TODO\r\n   */\r\n  constructor (structure, resname, atomTypeIdList, hetero, chemCompType, bonds) {\r\n    this.structure = structure\r\n\r\n    this.resname = resname\r\n    this.atomTypeIdList = atomTypeIdList\r\n    this.hetero = hetero ? 1 : 0\r\n    this.chemCompType = chemCompType\r\n    this.bonds = bonds\r\n    this.rings = undefined\r\n    this.atomCount = atomTypeIdList.length\r\n\r\n    this.moleculeType = this.getMoleculeType()\r\n    this.backboneType = this.getBackboneType(0)\r\n    this.backboneEndType = this.getBackboneType(-1)\r\n    this.backboneStartType = this.getBackboneType(1)\r\n    this.backboneIndexList = this.getBackboneIndexList()\r\n\r\n    const atomnames = ResidueTypeAtoms[ this.backboneType ]\r\n    const atomnamesStart = ResidueTypeAtoms[ this.backboneStartType ]\r\n    const atomnamesEnd = ResidueTypeAtoms[ this.backboneEndType ]\r\n\r\n    const traceIndex = this.getAtomIndexByName(atomnames.trace)\r\n    this.traceAtomIndex = traceIndex !== undefined ? traceIndex : -1\r\n\r\n    const dir1Index = this.getAtomIndexByName(atomnames.direction1)\r\n    this.direction1AtomIndex = dir1Index !== undefined ? dir1Index : -1\r\n\r\n    const dir2Index = this.getAtomIndexByName(atomnames.direction2)\r\n    this.direction2AtomIndex = dir2Index !== undefined ? dir2Index : -1\r\n\r\n    const bbStartIndex = this.getAtomIndexByName(atomnamesStart.backboneStart)\r\n    this.backboneStartAtomIndex = bbStartIndex !== undefined ? bbStartIndex : -1\r\n\r\n    const bbEndIndex = this.getAtomIndexByName(atomnamesEnd.backboneEnd)\r\n    this.backboneEndAtomIndex = bbEndIndex !== undefined ? bbEndIndex : -1\r\n\r\n    let rungEndIndex\r\n    if (PurinBases.includes(resname)) {\r\n      rungEndIndex = this.getAtomIndexByName('N1')\r\n    } else {\r\n      rungEndIndex = this.getAtomIndexByName('N3')\r\n    }\r\n    this.rungEndAtomIndex = rungEndIndex !== undefined ? rungEndIndex : -1\r\n\r\n    // Sparse array containing the reference atom index for each bond.\r\n    this.bondReferenceAtomIndices = []\r\n  }\r\n\r\n  getBackboneIndexList () {\r\n    const backboneIndexList = []\r\n    let atomnameList\r\n    switch (this.moleculeType) {\r\n      case ProteinType:\r\n        atomnameList = ProteinBackboneAtoms\r\n        break\r\n      case RnaType:\r\n      case DnaType:\r\n        atomnameList = NucleicBackboneAtoms\r\n        break\r\n      default:\r\n        return backboneIndexList\r\n    }\r\n    const atomMap = this.structure.atomMap\r\n    const atomTypeIdList = this.atomTypeIdList\r\n    for (let i = 0, il = this.atomCount; i < il; ++i) {\r\n      const atomType = atomMap.get(atomTypeIdList[ i ])\r\n      if (atomnameList.includes(atomType.atomname)) {\r\n        backboneIndexList.push(i)\r\n      }\r\n    }\r\n    return backboneIndexList\r\n  }\r\n\r\n  getMoleculeType () {\r\n    if (this.isProtein()) {\r\n      return ProteinType\r\n    } else if (this.isRna()) {\r\n      return RnaType\r\n    } else if (this.isDna()) {\r\n      return DnaType\r\n    } else if (this.isWater()) {\r\n      return WaterType\r\n    } else if (this.isIon()) {\r\n      return IonType\r\n    } else if (this.isSaccharide()) {\r\n      return SaccharideType\r\n    } else {\r\n      return UnknownType\r\n    }\r\n  }\r\n\r\n  getBackboneType (position) {\r\n    if (this.hasProteinBackbone(position)) {\r\n      return ProteinBackboneType\r\n    } else if (this.hasRnaBackbone(position)) {\r\n      return RnaBackboneType\r\n    } else if (this.hasDnaBackbone(position)) {\r\n      return DnaBackboneType\r\n    } else if (this.hasCgProteinBackbone(position)) {\r\n      return CgProteinBackboneType\r\n    } else if (this.hasCgRnaBackbone(position)) {\r\n      return CgRnaBackboneType\r\n    } else if (this.hasCgDnaBackbone(position)) {\r\n      return CgDnaBackboneType\r\n    } else {\r\n      return UnknownBackboneType\r\n    }\r\n  }\r\n\r\n  isProtein () {\r\n    if (this.chemCompType) {\r\n      return ChemCompProtein.includes(this.chemCompType)\r\n    } else {\r\n      return (\r\n        this.hasAtomWithName('CA', 'C', 'N') ||\r\n        AA3.includes(this.resname)\r\n      )\r\n    }\r\n  }\r\n\r\n  isCg () {\r\n    const backboneType = this.backboneType\r\n    return (\r\n      backboneType === CgProteinBackboneType ||\r\n      backboneType === CgRnaBackboneType ||\r\n      backboneType === CgDnaBackboneType\r\n    )\r\n  }\r\n\r\n  isNucleic () {\r\n    return this.isRna() || this.isDna()\r\n  }\r\n\r\n  isRna () {\r\n    if (this.chemCompType) {\r\n      return ChemCompRna.includes(this.chemCompType)\r\n    } else {\r\n      return (\r\n        this.hasAtomWithName(\r\n          [ 'P', \"O3'\", 'O3*' ], [ \"C4'\", 'C4*' ], [ \"O2'\", 'O2*', \"F2'\", 'F2*' ]\r\n        ) ||\r\n        (RnaBases.includes(this.resname) &&\r\n          (this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])))\r\n      )\r\n    }\r\n  }\r\n\r\n  isDna () {\r\n    if (this.chemCompType) {\r\n      return ChemCompDna.includes(this.chemCompType)\r\n    } else {\r\n      return (\r\n        (this.hasAtomWithName([ 'P', \"O3'\", 'O3*' ], [ \"C3'\", 'C3*' ]) &&\r\n          !this.hasAtomWithName([ \"O2'\", 'O2*', \"F2'\", 'F2*' ])) ||\r\n        DnaBases.includes(this.resname)\r\n      )\r\n    }\r\n  }\r\n\r\n  isHetero () {\r\n    return this.hetero === 1\r\n  }\r\n\r\n  isIon () {\r\n    return IonNames.includes(this.resname)\r\n  }\r\n\r\n  isWater () {\r\n    return WaterNames.includes(this.resname)\r\n  }\r\n\r\n  isSaccharide () {\r\n    if (this.chemCompType) {\r\n      return ChemCompSaccharide.includes(this.chemCompType)\r\n    } else {\r\n      return SaccharideNames.includes(this.resname)\r\n    }\r\n  }\r\n\r\n  hasBackboneAtoms (position, type) {\r\n    const atomnames = ResidueTypeAtoms[ type ]\r\n    if (position === -1) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneEnd,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else if (position === 0) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else if (position === 1) {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneStart,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    } else {\r\n      return this.hasAtomWithName(\r\n        atomnames.trace,\r\n        atomnames.backboneStart,\r\n        atomnames.backboneEnd,\r\n        atomnames.direction1,\r\n        atomnames.direction2\r\n      )\r\n    }\r\n  }\r\n\r\n  hasProteinBackbone (position) {\r\n    return (\r\n      this.isProtein() &&\r\n      this.hasBackboneAtoms(position, ProteinBackboneType)\r\n    )\r\n  }\r\n\r\n  hasRnaBackbone (position) {\r\n    return (\r\n      this.isRna() &&\r\n      this.hasBackboneAtoms(position, RnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasDnaBackbone (position) {\r\n    return (\r\n      this.isDna() &&\r\n      this.hasBackboneAtoms(position, DnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgProteinBackbone (position) {\r\n    return (\r\n      this.atomCount < 7 &&\r\n      this.isProtein() &&\r\n      this.hasBackboneAtoms(position, CgProteinBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgRnaBackbone (position) {\r\n    return (\r\n      this.atomCount < 11 &&\r\n      this.isRna() &&\r\n      this.hasBackboneAtoms(position, CgRnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasCgDnaBackbone (position) {\r\n    return (\r\n      this.atomCount < 11 &&\r\n      this.isDna() &&\r\n      this.hasBackboneAtoms(position, CgDnaBackboneType)\r\n    )\r\n  }\r\n\r\n  hasBackbone (position) {\r\n    return (\r\n      this.hasProteinBackbone(position) ||\r\n      this.hasRnaBackbone(position) ||\r\n      this.hasDnaBackbone(position) ||\r\n      this.hasCgProteinBackbone(position) ||\r\n      this.hasCgRnaBackbone(position) ||\r\n      this.hasCgDnaBackbone(position)\r\n    )\r\n  }\r\n\r\n  getAtomIndexByName (atomname) {\r\n    const n = this.atomCount\r\n    const atomMap = this.structure.atomMap\r\n    const atomTypeIdList = this.atomTypeIdList\r\n    if (Array.isArray(atomname)) {\r\n      for (let i = 0; i < n; ++i) {\r\n        const index = atomTypeIdList[ i ]\r\n        if (atomname.includes(atomMap.get(index).atomname)) {\r\n          return i\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        const index = atomTypeIdList[ i ]\r\n        if (atomname === atomMap.get(index).atomname) {\r\n          return i\r\n        }\r\n      }\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  hasAtomWithName (/* atomname */) {\r\n    const n = arguments.length\r\n    for (let i = 0; i < n; ++i) {\r\n      if (arguments[ i ] === undefined) continue\r\n      if (this.getAtomIndexByName(arguments[ i ]) === undefined) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  getBonds (r) {\r\n    if (this.bonds === undefined) {\r\n      this.bonds = calculateResidueBonds(r)\r\n    }\r\n    return this.bonds\r\n  }\r\n\r\n  getRings () {\r\n    if (this.rings === undefined) {\r\n      this.calculateRings()\r\n    }\r\n    return this.rings\r\n  }\r\n\r\n  getBondGraph () {\r\n    if (this.bondGraph === undefined) {\r\n      this.calculateBondGraph()\r\n    }\r\n    return this.bondGraph\r\n  }\r\n\r\n  /**\r\n   * @return {Object} bondGraph - represents the bonding in this\r\n   *   residue: { ai1: [ ai2, ai3, ...], ...}\r\n   */\r\n  calculateBondGraph () {\r\n    const bondGraph = this.bondGraph = {}\r\n    const bonds = this.getBonds()\r\n    const nb = bonds.atomIndices1.length\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n\r\n    for (let i = 0; i < nb; ++i) {\r\n      const ai1 = atomIndices1[i]\r\n      const ai2 = atomIndices2[i]\r\n\r\n      const a1 = bondGraph[ ai1 ] = bondGraph[ ai1 ] || []\r\n      a1.push(ai2)\r\n\r\n      const a2 = bondGraph[ ai2 ] = bondGraph[ ai2 ] || []\r\n      a2.push(ai1)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates ring atoms within a residue\r\n   * Adaptation of RDKit's fastFindRings method by G. Landrum:\r\n   * https://github.com/rdkit/rdkit/blob/master/Code/GraphMol/FindRings.cpp\r\n   *\r\n   * @param {ResidueProxy} r   - The residue for which we are to find rings\r\n   * @return {Object} ringData - contains ringFlags (1/0) and rings\r\n   *                             (nested array)\r\n   *\r\n   * Note this method finds all ring atoms, but in cases of fused or\r\n   * connected rings will not detect all rings.\r\n   * The resulting rings object will provide 'a ring' for each ring atom\r\n   * but which ring depends on atom order and connectivity\r\n   *\r\n   * @return {undefined}\r\n   */\r\n  calculateRings () {\r\n    const bondGraph = this.getBondGraph()\r\n\r\n    const state = new Int8Array(this.atomCount)\r\n    const flags = new Int8Array(this.atomCount)\r\n    const rings = []\r\n    const visited = []\r\n\r\n    function DFS (i, connected, from) {\r\n      // Sanity check\r\n      if (state[ i ]) { throw new Error('DFS revisited atom') }\r\n      state[ i ] = 1\r\n      visited.push(i)\r\n      var nc = connected.length\r\n\r\n      // For each neighbour\r\n      for (var ci = 0; ci < nc; ++ci) {\r\n        var j = connected[ci]\r\n\r\n        // If unvisited:\r\n        if (state[ j ] === 0) {\r\n          // And has >= 2 neighbours:\r\n          if (bondGraph[ j ] && bondGraph[ j ].length >= 2) {\r\n            // Recurse\r\n            DFS(j, bondGraph[ j ], i)\r\n          } else {\r\n            // Not interesting\r\n            state[ j ] = 2\r\n          }\r\n\r\n        // Else unclosed ring:\r\n        } else if (state[ j ] === 1) {\r\n          if (from && from !== j) {\r\n            var ring = [ j ]\r\n            flags[ j ] = 1\r\n            rings.push(ring)\r\n            for (var ki = visited.length - 1; ki >= 0; --ki) {\r\n              var k = visited[ ki ]\r\n              if (k === j) {\r\n                break\r\n              }\r\n              ring.push(k)\r\n              flags[ k ] = 1\r\n            }\r\n          }\r\n        }\r\n      }\r\n      state[ i ] = 2 // Completed processing for this atom\r\n\r\n      visited.pop()\r\n    }\r\n\r\n    for (let i = 0; i < this.atomCount; ++i) {\r\n      if (state[ i ]) { continue } // Already processed\r\n\r\n      const connected = bondGraph[ i ]\r\n      if (!connected || connected.length < 2) {\r\n        // Finished\r\n        state[ i ] = 2\r\n        continue\r\n      }\r\n\r\n      visited.length = 0\r\n      DFS(i, connected)\r\n    }\r\n\r\n    this.rings = { flags, rings }\r\n  }\r\n\r\n  /**\r\n   * For bonds with order > 1, pick a reference atom\r\n   * @return {undefined}\r\n   */\r\n  assignBondReferenceAtomIndices () {\r\n    const bondGraph = this.getBondGraph()\r\n    const rings = this.getRings()\r\n    const ringFlags = rings.flags\r\n    const ringData = rings.rings\r\n\r\n    const atomIndices1 = this.bonds.atomIndices1\r\n    const atomIndices2 = this.bonds.atomIndices2\r\n    const bondOrders = this.bonds.bondOrders\r\n    const bondReferenceAtomIndices = this.bondReferenceAtomIndices\r\n\r\n    const nb = this.bonds.atomIndices1.length\r\n\r\n    bondReferenceAtomIndices.length = 0  // reset array\r\n\r\n    for (let i = 0; i < nb; ++i) {\r\n      // Not required for single bonds\r\n      if (bondOrders[i] <= 1) continue\r\n\r\n      const ai1 = atomIndices1[i]\r\n      const ai2 = atomIndices2[i]\r\n\r\n      // Are both atoms in a ring?\r\n      if (ringFlags[ ai1 ] && ringFlags[ ai2 ]) {\r\n        // Select another ring atom\r\n        // I *think* we can simply take the first ring atom\r\n        // we find in a ring that contains either ai1 or ai2\r\n        // where the ring atom is not ai1 or ai2\r\n        for (let ri = 0; ri < ringData.length; ++ri) {\r\n          // Have we already found it?\r\n          if (bondReferenceAtomIndices[i] !== undefined) { break }\r\n\r\n          const ring = ringData[ ri ]\r\n          // Try to find this atom and reference atom in no more than 1 full\r\n          // iteration through loop\r\n          let refAtom = null\r\n          let found = false\r\n          for (let rai = 0; rai < ring.length; ++rai) {\r\n            const ai3 = ring[ rai ]\r\n            if (ai3 === ai1 || ai3 === ai2) {\r\n              found = true\r\n            } else {\r\n              // refAtom is any other atom\r\n              refAtom = ai3\r\n            }\r\n            if (found && refAtom !== null) {\r\n              bondReferenceAtomIndices[i] = refAtom\r\n              break\r\n            }\r\n          }\r\n        }\r\n        if (bondReferenceAtomIndices[i] !== undefined) { continue }\r\n      }\r\n\r\n      // Not a ring (or not one we can process), simply take the first\r\n      // neighbouring atom\r\n\r\n      if (bondGraph[ ai1 ].length > 1) {\r\n        for (let j = 0; j < bondGraph[ ai1 ].length; ++j) {\r\n          const ai3 = bondGraph[ ai1 ][ j ]\r\n          if (ai3 !== ai2) {\r\n            bondReferenceAtomIndices[i] = ai3\r\n            break\r\n          }\r\n        }\r\n        continue\r\n      } else if (bondGraph[ ai2 ].length > 1) {\r\n        for (let j = 0; j < bondGraph[ ai2 ].length; ++j) {\r\n          const ai3 = bondGraph[ ai2 ][ j ]\r\n          if (ai3 !== ai1) {\r\n            bondReferenceAtomIndices[i] = ai3\r\n            break\r\n          }\r\n        }\r\n        continue\r\n      } // No reference atom could be found (e.g. diatomic molecule/fragment)\r\n    }\r\n  }\r\n\r\n  getBondIndex (atomIndex1, atomIndex2) {\r\n    const bonds = this.bonds\r\n    const atomIndices1 = bonds.atomIndices1\r\n    const atomIndices2 = bonds.atomIndices2\r\n    let idx1 = atomIndices1.indexOf(atomIndex1)\r\n    let idx2 = atomIndices2.indexOf(atomIndex2)\r\n    const _idx2 = idx2\r\n    while (idx1 !== -1) {\r\n      while (idx2 !== -1) {\r\n        if (idx1 === idx2) return idx1\r\n        idx2 = atomIndices2.indexOf(atomIndex2, idx2 + 1)\r\n      }\r\n      idx1 = atomIndices1.indexOf(atomIndex1, idx1 + 1)\r\n      idx2 = _idx2\r\n    }\r\n    // returns undefined when no bond is found\r\n  }\r\n\r\n  getBondReferenceAtomIndex (atomIndex1, atomIndex2) {\r\n    const bondIndex = this.getBondIndex(atomIndex1, atomIndex2)\r\n    if (bondIndex === undefined) return undefined\r\n    if (this.bondReferenceAtomIndices.length === 0) {\r\n      this.assignBondReferenceAtomIndices()\r\n    }\r\n    return this.bondReferenceAtomIndices[ bondIndex ]\r\n  }\r\n}\r\n\r\nexport default ResidueType\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/residue-type.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3167,
    "kind": "class",
    "name": "ResidueType",
    "memberof": "src/store/residue-type.js",
    "static": true,
    "longname": "src/store/residue-type.js~ResidueType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/residue-type.js",
    "importStyle": "ResidueType",
    "description": "Residue type",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 3168,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "resname",
        "description": "name of the residue"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomTypeIdList",
        "description": "list of IDs of {@link AtomType}s corresponding\n                                to the atoms of the residue"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hetero",
        "description": "hetero flag"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "chemCompType",
        "description": "chemical component type"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "bonds",
        "description": "TODO"
      }
    ]
  },
  {
    "__docId__": 3169,
    "kind": "member",
    "name": "structure",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#structure",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3170,
    "kind": "member",
    "name": "resname",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#resname",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 3171,
    "kind": "member",
    "name": "atomTypeIdList",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#atomTypeIdList",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3172,
    "kind": "member",
    "name": "hetero",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hetero",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 3173,
    "kind": "member",
    "name": "chemCompType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#chemCompType",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 3174,
    "kind": "member",
    "name": "bonds",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#bonds",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 3175,
    "kind": "member",
    "name": "rings",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#rings",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 3176,
    "kind": "member",
    "name": "atomCount",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#atomCount",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3177,
    "kind": "member",
    "name": "moleculeType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#moleculeType",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 3178,
    "kind": "member",
    "name": "backboneType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneType",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 3179,
    "kind": "member",
    "name": "backboneEndType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneEndType",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 3180,
    "kind": "member",
    "name": "backboneStartType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneStartType",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 3181,
    "kind": "member",
    "name": "backboneIndexList",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneIndexList",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 3182,
    "kind": "member",
    "name": "traceAtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#traceAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 3183,
    "kind": "member",
    "name": "direction1AtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#direction1AtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 3184,
    "kind": "member",
    "name": "direction2AtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#direction2AtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 3185,
    "kind": "member",
    "name": "backboneStartAtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneStartAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 3186,
    "kind": "member",
    "name": "backboneEndAtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#backboneEndAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 3187,
    "kind": "member",
    "name": "rungEndAtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#rungEndAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 3188,
    "kind": "member",
    "name": "bondReferenceAtomIndices",
    "memberof": "src/store/residue-type.js~ResidueType",
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#bondReferenceAtomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 3189,
    "kind": "method",
    "name": "getBackboneIndexList",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBackboneIndexList",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 3190,
    "kind": "method",
    "name": "getMoleculeType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getMoleculeType",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true
  },
  {
    "__docId__": 3191,
    "kind": "method",
    "name": "getBackboneType",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBackboneType",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 3192,
    "kind": "method",
    "name": "isProtein",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isProtein",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 3193,
    "kind": "method",
    "name": "isCg",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isCg",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 3194,
    "kind": "method",
    "name": "isNucleic",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isNucleic",
    "access": "public",
    "description": null,
    "lineNumber": 160,
    "undocument": true
  },
  {
    "__docId__": 3195,
    "kind": "method",
    "name": "isRna",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isRna",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true
  },
  {
    "__docId__": 3196,
    "kind": "method",
    "name": "isDna",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isDna",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 3197,
    "kind": "method",
    "name": "isHetero",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isHetero",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 3198,
    "kind": "method",
    "name": "isIon",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isIon",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 3199,
    "kind": "method",
    "name": "isWater",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isWater",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true
  },
  {
    "__docId__": 3200,
    "kind": "method",
    "name": "isSaccharide",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#isSaccharide",
    "access": "public",
    "description": null,
    "lineNumber": 202,
    "undocument": true
  },
  {
    "__docId__": 3201,
    "kind": "method",
    "name": "hasBackboneAtoms",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasBackboneAtoms",
    "access": "public",
    "description": null,
    "lineNumber": 210,
    "undocument": true
  },
  {
    "__docId__": 3202,
    "kind": "method",
    "name": "hasProteinBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasProteinBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 243,
    "undocument": true
  },
  {
    "__docId__": 3203,
    "kind": "method",
    "name": "hasRnaBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasRnaBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 250,
    "undocument": true
  },
  {
    "__docId__": 3204,
    "kind": "method",
    "name": "hasDnaBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasDnaBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 257,
    "undocument": true
  },
  {
    "__docId__": 3205,
    "kind": "method",
    "name": "hasCgProteinBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasCgProteinBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 264,
    "undocument": true
  },
  {
    "__docId__": 3206,
    "kind": "method",
    "name": "hasCgRnaBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasCgRnaBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 272,
    "undocument": true
  },
  {
    "__docId__": 3207,
    "kind": "method",
    "name": "hasCgDnaBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasCgDnaBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 280,
    "undocument": true
  },
  {
    "__docId__": 3208,
    "kind": "method",
    "name": "hasBackbone",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasBackbone",
    "access": "public",
    "description": null,
    "lineNumber": 288,
    "undocument": true
  },
  {
    "__docId__": 3209,
    "kind": "method",
    "name": "getAtomIndexByName",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getAtomIndexByName",
    "access": "public",
    "description": null,
    "lineNumber": 299,
    "undocument": true
  },
  {
    "__docId__": 3210,
    "kind": "method",
    "name": "hasAtomWithName",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#hasAtomWithName",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true
  },
  {
    "__docId__": 3211,
    "kind": "method",
    "name": "getBonds",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBonds",
    "access": "public",
    "description": null,
    "lineNumber": 332,
    "undocument": true
  },
  {
    "__docId__": 3213,
    "kind": "method",
    "name": "getRings",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getRings",
    "access": "public",
    "description": null,
    "lineNumber": 339,
    "undocument": true
  },
  {
    "__docId__": 3214,
    "kind": "method",
    "name": "getBondGraph",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBondGraph",
    "access": "public",
    "description": null,
    "lineNumber": 346,
    "undocument": true
  },
  {
    "__docId__": 3215,
    "kind": "method",
    "name": "calculateBondGraph",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#calculateBondGraph",
    "access": "public",
    "description": "",
    "lineNumber": 357,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "bondGraph - represents the bonding in this\n  residue: { ai1: [ ai2, ai3, ...], ...}"
    }
  },
  {
    "__docId__": 3216,
    "kind": "method",
    "name": "calculateRings",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#calculateRings",
    "access": "public",
    "description": "Calculates ring atoms within a residue\nAdaptation of RDKit's fastFindRings method by G. Landrum:\nhttps://github.com/rdkit/rdkit/blob/master/Code/GraphMol/FindRings.cpp",
    "lineNumber": 392,
    "params": [
      {
        "nullable": null,
        "types": [
          "ResidueProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "r",
        "description": "The residue for which we are to find rings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3218,
    "kind": "method",
    "name": "assignBondReferenceAtomIndices",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#assignBondReferenceAtomIndices",
    "access": "public",
    "description": "For bonds with order > 1, pick a reference atom",
    "lineNumber": 465,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3219,
    "kind": "method",
    "name": "getBondIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBondIndex",
    "access": "public",
    "description": null,
    "lineNumber": 544,
    "undocument": true
  },
  {
    "__docId__": 3220,
    "kind": "method",
    "name": "getBondReferenceAtomIndex",
    "memberof": "src/store/residue-type.js~ResidueType",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/residue-type.js~ResidueType#getBondReferenceAtomIndex",
    "access": "public",
    "description": null,
    "lineNumber": 562,
    "undocument": true
  },
  {
    "__docId__": 3221,
    "kind": "file",
    "name": "src/store/store.js",
    "content": "/**\r\n * @file Store\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals.js'\r\nimport { getTypedArray } from '../utils.js'\r\n\r\n/**\r\n * Store base class\r\n * @interface\r\n */\r\nclass Store {\r\n  /**\r\n   * @param {Integer} [size] - initial size\r\n   */\r\n  constructor (size) {\r\n    this._fields = this._defaultFields\r\n    if (Number.isInteger(size)) {\r\n      this._init(size)\r\n    } else {\r\n      this._init(0)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the store\r\n   * @param  {Integer} size - size to initialize\r\n   * @return {undefined}\r\n   */\r\n  _init (size) {\r\n    this.length = size\r\n    this.count = 0\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      this._initField(...this._fields[ i ])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize a field\r\n   * @param  {String} name - field name\r\n   * @param  {Integer} size - element size\r\n   * @param  {String} type - data type, one of int8, int16, int32,\r\n   *                         uint8, uint16, uint32, float32\r\n   * @return {undefined}\r\n   */\r\n  _initField (name, size, type) {\r\n    this[ name ] = getTypedArray(type, this.length * size)\r\n  }\r\n\r\n  /**\r\n   * Add a field\r\n   * @param  {String} name - field name\r\n   * @param  {Integer} size - element size\r\n   * @param  {String} type - data type, one of int8, int16, int32,\r\n   *                         uint8, uint16, uint32, float32\r\n   * @return {undefined}\r\n   */\r\n  addField (name, size, type) {\r\n    this._fields.push([name, size, type])\r\n    this._initField(name, size, type)\r\n  }\r\n\r\n  /**\r\n   * Resize the store to the new size\r\n   * @param  {Integer} size - new size\r\n   * @return {undefined}\r\n   */\r\n  resize (size) {\r\n    // Log.time( \"Store.resize\" );\r\n\r\n    this.length = Math.round(size || 0)\r\n    this.count = Math.min(this.count, this.length)\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const arraySize = this.length * itemSize\r\n      const tmpArray = new this[ name ].constructor(arraySize)\r\n\r\n      if (this[ name ].length > arraySize) {\r\n        tmpArray.set(this[ name ].subarray(0, arraySize))\r\n      } else {\r\n        tmpArray.set(this[ name ])\r\n      }\r\n      this[ name ] = tmpArray\r\n    }\r\n\r\n    // Log.timeEnd( \"Store.resize\" );\r\n  }\r\n\r\n  /**\r\n   * Resize the store to 1.5 times its current size if full\r\n   * @return {undefined}\r\n   */\r\n  growIfFull () {\r\n    if (this.count >= this.length) {\r\n      const size = Math.round(this.length * 1.5)\r\n      this.resize(Math.max(256, size))\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy data from one store to another\r\n   * @param  {Store} other - store to copy from\r\n   * @param  {Integer} thisOffset - offset to start copying to\r\n   * @param  {Integer} otherOffset - offset to start copying from\r\n   * @param  {Integer} length - number of entries to copy\r\n   * @return {undefined}\r\n   */\r\n  copyFrom (other, thisOffset, otherOffset, length) {\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const thisField = this[ name ]\r\n      const otherField = other[ name ]\r\n\r\n      for (let j = 0; j < length; ++j) {\r\n        const thisIndex = itemSize * (thisOffset + j)\r\n        const otherIndex = itemSize * (otherOffset + j)\r\n        for (let k = 0; k < itemSize; ++k) {\r\n          thisField[ thisIndex + k ] = otherField[ otherIndex + k ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Copy data within this store\r\n   * @param  {Integer} thisOffset - offset to start copying to\r\n   * @param  {Integer} otherOffset - offset to start copying from\r\n   * @param  {Integer} length - number of entries to copy\r\n   * @return {undefined}\r\n   */\r\n  copyWithin (offsetTarget, offsetSource, length) {\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      const itemSize = this._fields[ i ][ 1 ]\r\n      const thisField = this[ name ]\r\n\r\n      for (let j = 0; j < length; ++j) {\r\n        const targetIndex = itemSize * (offsetTarget + j)\r\n        const sourceIndex = itemSize * (offsetSource + j)\r\n        for (let k = 0; k < itemSize; ++k) {\r\n          thisField[ targetIndex + k ] = thisField[ sourceIndex + k ]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sort entries in the store given the compare function\r\n   * @param  {[type]} compareFunction - function to sort by\r\n   * @return {undefined}\r\n   */\r\n  sort (compareFunction) {\r\n    Log.time('Store.sort')\r\n\r\n    const thisStore = this\r\n    const tmpStore = new this.constructor(1)\r\n\r\n    function swap (index1, index2) {\r\n      if (index1 === index2) return\r\n      tmpStore.copyFrom(thisStore, 0, index1, 1)\r\n      thisStore.copyWithin(index1, index2, 1)\r\n      thisStore.copyFrom(tmpStore, index2, 0, 1)\r\n    }\r\n\r\n    function quicksort (left, right) {\r\n      if (left < right) {\r\n        let pivot = Math.floor((left + right) / 2)\r\n        let leftNew = left\r\n        let rightNew = right\r\n        do {\r\n          while (compareFunction(leftNew, pivot) < 0) {\r\n            leftNew += 1\r\n          }\r\n          while (compareFunction(rightNew, pivot) > 0) {\r\n            rightNew -= 1\r\n          }\r\n          if (leftNew <= rightNew) {\r\n            if (leftNew === pivot) {\r\n              pivot = rightNew\r\n            } else if (rightNew === pivot) {\r\n              pivot = leftNew\r\n            }\r\n            swap(leftNew, rightNew)\r\n            leftNew += 1\r\n            rightNew -= 1\r\n          }\r\n        } while (leftNew <= rightNew)\r\n        quicksort(left, rightNew)\r\n        quicksort(leftNew, right)\r\n      }\r\n    }\r\n\r\n    quicksort(0, this.count - 1)\r\n\r\n    Log.timeEnd('Store.sort')\r\n  }\r\n\r\n  /**\r\n   * Empty the store\r\n   * @return {undefined}\r\n   */\r\n  clear () {\r\n    this.count = 0\r\n  }\r\n\r\n  /**\r\n   * Dispose of the store entries and fields\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    delete this.length\r\n    delete this.count\r\n\r\n    for (let i = 0, il = this._fields.length; i < il; ++i) {\r\n      const name = this._fields[ i ][ 0 ]\r\n      delete this[ name ]\r\n    }\r\n  }\r\n}\r\n\r\nexport default Store\r\n",
    "static": true,
    "longname": "D:/nglLib/src/store/store.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3222,
    "kind": "class",
    "name": "Store",
    "memberof": "src/store/store.js",
    "static": true,
    "longname": "src/store/store.js~Store",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/store/store.js",
    "importStyle": "Store",
    "description": "Store base class",
    "lineNumber": 14,
    "interface": true
  },
  {
    "__docId__": 3223,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": true,
        "name": "size",
        "description": "initial size"
      }
    ]
  },
  {
    "__docId__": 3224,
    "kind": "member",
    "name": "_fields",
    "memberof": "src/store/store.js~Store",
    "static": false,
    "longname": "src/store/store.js~Store#_fields",
    "access": "private",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3225,
    "kind": "method",
    "name": "_init",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#_init",
    "access": "private",
    "description": "Initialize the store",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "size to initialize"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3226,
    "kind": "member",
    "name": "length",
    "memberof": "src/store/store.js~Store",
    "static": false,
    "longname": "src/store/store.js~Store#length",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3227,
    "kind": "member",
    "name": "count",
    "memberof": "src/store/store.js~Store",
    "static": false,
    "longname": "src/store/store.js~Store#count",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 3228,
    "kind": "method",
    "name": "_initField",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#_initField",
    "access": "private",
    "description": "Initialize a field",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "field name"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "element size"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "data type, one of int8, int16, int32,\n                        uint8, uint16, uint32, float32"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3229,
    "kind": "member",
    "name": "[name]",
    "memberof": "src/store/store.js~Store",
    "static": false,
    "longname": "src/store/store.js~Store#[name]",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 3230,
    "kind": "method",
    "name": "addField",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#addField",
    "access": "public",
    "description": "Add a field",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "field name"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "element size"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "data type, one of int8, int16, int32,\n                        uint8, uint16, uint32, float32"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3231,
    "kind": "method",
    "name": "resize",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#resize",
    "access": "public",
    "description": "Resize the store to the new size",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "new size"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3235,
    "kind": "method",
    "name": "growIfFull",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#growIfFull",
    "access": "public",
    "description": "Resize the store to 1.5 times its current size if full",
    "lineNumber": 98,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3236,
    "kind": "method",
    "name": "copyFrom",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#copyFrom",
    "access": "public",
    "description": "Copy data from one store to another",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Store"
        ],
        "spread": false,
        "optional": false,
        "name": "other",
        "description": "store to copy from"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "thisOffset",
        "description": "offset to start copying to"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "otherOffset",
        "description": "offset to start copying from"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "number of entries to copy"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3237,
    "kind": "method",
    "name": "copyWithin",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#copyWithin",
    "access": "public",
    "description": "Copy data within this store",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "thisOffset",
        "description": "offset to start copying to"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "otherOffset",
        "description": "offset to start copying from"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "number of entries to copy"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3238,
    "kind": "method",
    "name": "sort",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#sort",
    "access": "public",
    "description": "Sort entries in the store given the compare function",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "compareFunction",
        "description": "function to sort by"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3239,
    "kind": "method",
    "name": "clear",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#clear",
    "access": "public",
    "description": "Empty the store",
    "lineNumber": 208,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3241,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/store/store.js~Store",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/store/store.js~Store#dispose",
    "access": "public",
    "description": "Dispose of the store entries and fields",
    "lineNumber": 216,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3242,
    "kind": "file",
    "name": "src/streamer/binary-streamer.js",
    "content": "/**\r\n * @file Binary Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer.js'\r\n\r\nclass BinaryStreamer extends Streamer {\r\n  constructor (bin, params) {\r\n    if (bin instanceof ArrayBuffer) bin = new Uint8Array(bin)\r\n    super(bin, params)\r\n  }\r\n\r\n  get type () { return 'binary' }\r\n\r\n  get __srcName () { return 'bin' }\r\n}\r\n\r\nexport default BinaryStreamer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/streamer/binary-streamer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3243,
    "kind": "class",
    "name": "BinaryStreamer",
    "memberof": "src/streamer/binary-streamer.js",
    "static": true,
    "longname": "src/streamer/binary-streamer.js~BinaryStreamer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/streamer/binary-streamer.js",
    "importStyle": "BinaryStreamer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/streamer/streamer.js~Streamer"
    ]
  },
  {
    "__docId__": 3244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/streamer/binary-streamer.js~BinaryStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/binary-streamer.js~BinaryStreamer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3245,
    "kind": "get",
    "name": "type",
    "memberof": "src/streamer/binary-streamer.js~BinaryStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/binary-streamer.js~BinaryStreamer#type",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 3246,
    "kind": "get",
    "name": "__srcName",
    "memberof": "src/streamer/binary-streamer.js~BinaryStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/binary-streamer.js~BinaryStreamer#__srcName",
    "access": "private",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3247,
    "kind": "file",
    "name": "src/streamer/file-streamer.js",
    "content": "/**\r\n * @file File Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer.js'\r\n\r\nclass FileStreamer extends Streamer {\r\n  get type () { return 'file' }\r\n\r\n  get __srcName () { return 'file' }\r\n\r\n  _read (callback) {\r\n    let reader\r\n\r\n    if (typeof importScripts === 'function') {\r\n      // Use FileReaderSync within Worker\r\n\r\n      reader = new window.FileReaderSync()\r\n      let data\r\n      if (this.binary || this.compressed) {\r\n        data = reader.readAsArrayBuffer(this.file)\r\n      } else {\r\n        data = reader.readAsText(this.file)\r\n      }\r\n\r\n        //\r\n\r\n      callback(data)\r\n    } else {\r\n      reader = new window.FileReader()\r\n\r\n      //\r\n\r\n      reader.onload = function (event) {\r\n        callback(event.target.result)\r\n      }\r\n\r\n      //\r\n\r\n      if (typeof this.onprogress === 'function') {\r\n        reader.onprogress = event => {\r\n          this.onprogress(event)\r\n        }\r\n      }\r\n\r\n      //\r\n\r\n      if (typeof this.onerror === 'function') {\r\n        reader.onerror = event => {\r\n          this.onerror(event)\r\n        }\r\n      }\r\n\r\n      //\r\n\r\n      if (this.binary || this.compressed) {\r\n        reader.readAsArrayBuffer(this.file)\r\n      } else {\r\n        reader.readAsText(this.file)\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default FileStreamer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/streamer/file-streamer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3248,
    "kind": "class",
    "name": "FileStreamer",
    "memberof": "src/streamer/file-streamer.js",
    "static": true,
    "longname": "src/streamer/file-streamer.js~FileStreamer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/streamer/file-streamer.js",
    "importStyle": "FileStreamer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/streamer/streamer.js~Streamer"
    ]
  },
  {
    "__docId__": 3249,
    "kind": "get",
    "name": "type",
    "memberof": "src/streamer/file-streamer.js~FileStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/file-streamer.js~FileStreamer#type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3250,
    "kind": "get",
    "name": "__srcName",
    "memberof": "src/streamer/file-streamer.js~FileStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/file-streamer.js~FileStreamer#__srcName",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3251,
    "kind": "method",
    "name": "_read",
    "memberof": "src/streamer/file-streamer.js~FileStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/file-streamer.js~FileStreamer#_read",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3252,
    "kind": "file",
    "name": "src/streamer/network-streamer.js",
    "content": "/**\r\n * @file Network Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer.js'\r\n\r\nclass NetworkStreamer extends Streamer {\r\n  get type () { return 'network' }\r\n\r\n  get __srcName () { return 'url' }\r\n\r\n  _read (callback) {\r\n    let url = this.src\r\n\r\n    if (typeof importScripts === 'function') {\r\n        // FIXME\r\n        // adjust relative path when inside a web worker\r\n      if (url.substr(0, 3) === '../') url = '../' + url\r\n    }\r\n\r\n    const xhr = new window.XMLHttpRequest()\r\n    xhr.open('GET', url, true)\r\n\r\n    //\r\n\r\n    xhr.addEventListener('load', function () {\r\n      if (xhr.status === 200 || xhr.status === 304 ||\r\n            // when requesting from local file system\r\n            // the status in Google Chrome/Chromium is 0\r\n            xhr.status === 0\r\n        ) {\r\n        try {\r\n          callback(xhr.response)\r\n        } catch (e) {\r\n          this.onerror(e)\r\n        }\r\n      } else {\r\n        if (typeof this.onerror === 'function') {\r\n          this.onerror(xhr.status)\r\n        }\r\n\r\n        throw new Error('NetworkStreamer._read: status code ' + xhr.status)\r\n      }\r\n    }.bind(this), false)\r\n\r\n    //\r\n\r\n    // if( typeof this.onprogress === \"function\" ){\r\n\r\n    //     xhr.addEventListener( 'progress', function ( event ) {\r\n\r\n    //         this.onprogress( event );\r\n\r\n    //     }.bind( this ), false );\r\n\r\n    // }\r\n\r\n    //\r\n\r\n    if (typeof this.onerror === 'function') {\r\n      xhr.addEventListener('error', function (event) {\r\n        this.onerror(event)\r\n      }.bind(this), false)\r\n    }\r\n\r\n    //\r\n\r\n    if (this.isBinary()) {\r\n      xhr.responseType = 'arraybuffer'\r\n    } else if (this.json) {\r\n      xhr.responseType = 'json'\r\n    } else if (this.xml) {\r\n      xhr.responseType = 'document'\r\n    } else {\r\n      xhr.responseType = 'text'\r\n    }\r\n    // xhr.crossOrigin = true;\r\n\r\n    xhr.send(null)\r\n\r\n    // try {\r\n    //     xhr.send( null );\r\n    // }catch( e ){\r\n    //     if( typeof this.onerror === \"function\" ){\r\n    //         this.onerror( e.message );\r\n    //     }\r\n    // }\r\n  }\r\n}\r\n\r\nexport default NetworkStreamer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/streamer/network-streamer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3253,
    "kind": "class",
    "name": "NetworkStreamer",
    "memberof": "src/streamer/network-streamer.js",
    "static": true,
    "longname": "src/streamer/network-streamer.js~NetworkStreamer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/streamer/network-streamer.js",
    "importStyle": "NetworkStreamer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/streamer/streamer.js~Streamer"
    ]
  },
  {
    "__docId__": 3254,
    "kind": "get",
    "name": "type",
    "memberof": "src/streamer/network-streamer.js~NetworkStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/network-streamer.js~NetworkStreamer#type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3255,
    "kind": "get",
    "name": "__srcName",
    "memberof": "src/streamer/network-streamer.js~NetworkStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/network-streamer.js~NetworkStreamer#__srcName",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3256,
    "kind": "method",
    "name": "_read",
    "memberof": "src/streamer/network-streamer.js~NetworkStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/network-streamer.js~NetworkStreamer#_read",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3257,
    "kind": "file",
    "name": "src/streamer/streamer.js",
    "content": "/**\r\n * @file Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { DecompressorRegistry } from '../globals.js'\r\nimport { uint8ToString, defaults } from '../utils.js'\r\n\r\nclass Streamer {\r\n  constructor (src, params) {\r\n    const p = params || {}\r\n\r\n    this.compressed = defaults(p.compressed, false)\r\n    this.binary = defaults(p.binary, false)\r\n    this.json = defaults(p.json, false)\r\n    this.xml = defaults(p.xml, false)\r\n\r\n    this.src = src\r\n    this.chunkSize = 1024 * 1024 * 10\r\n    this.newline = '\\n'\r\n\r\n    this.__pointer = 0\r\n    this.__partialLine = ''\r\n\r\n    if (this.__srcName) {\r\n      this[ this.__srcName ] = src\r\n    }\r\n  }\r\n\r\n  get type () { return '' }\r\n\r\n  get __srcName () { return undefined }\r\n\r\n  isBinary () {\r\n    return this.binary || this.compressed\r\n  }\r\n\r\n  onload () {}\r\n\r\n  onprogress () {}\r\n\r\n  onerror () {}\r\n\r\n  read () {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        this._read(data => {\r\n          const decompressFn = DecompressorRegistry.get(this.compressed)\r\n\r\n          if (this.compressed && decompressFn) {\r\n            this.data = decompressFn(data)\r\n          } else {\r\n            if ((this.binary || this.compressed) && data instanceof ArrayBuffer) {\r\n              data = new Uint8Array(data)\r\n            }\r\n            this.data = data\r\n          }\r\n\r\n          resolve(this.data)\r\n        })\r\n      } catch (e) {\r\n        reject(e)\r\n      }\r\n    })\r\n  }\r\n\r\n  _read (callback) {\r\n    // overwrite this method when this.src does not contain the data\r\n    callback(this.src)\r\n  }\r\n\r\n  _chunk (start, end) {\r\n    end = Math.min(this.data.length, end)\r\n\r\n    if (start === 0 && this.data.length === end) {\r\n      return this.data\r\n    } else {\r\n      if (this.isBinary()) {\r\n        return this.data.subarray(start, end)\r\n      } else {\r\n        return this.data.substring(start, end)\r\n      }\r\n    }\r\n  }\r\n\r\n  chunk (start) {\r\n    const end = start + this.chunkSize\r\n\r\n    return this._chunk(start, end)\r\n  }\r\n\r\n  peekLines (m) {\r\n    const data = this.data\r\n    const n = data.length\r\n\r\n    // FIXME does not work for multi-char newline\r\n    const newline = this.isBinary() ? this.newline.charCodeAt(0) : this.newline\r\n\r\n    let i\r\n    let count = 0\r\n    for (i = 0; i < n; ++i) {\r\n      if (data[ i ] === newline) ++count\r\n      if (count === m) break\r\n    }\r\n\r\n    const chunk = this._chunk(0, i + 1)\r\n    const d = this.chunkToLines(chunk, '', i > n)\r\n\r\n    return d.lines\r\n  }\r\n\r\n  chunkCount () {\r\n    return Math.floor(this.data.length / this.chunkSize) + 1\r\n  }\r\n\r\n  asText () {\r\n    return this.isBinary() ? uint8ToString(this.data) : this.data\r\n  }\r\n\r\n  chunkToLines (chunk, partialLine, isLast) {\r\n    const newline = this.newline\r\n\r\n    if (!this.isBinary() && chunk.length === this.data.length) {\r\n      return {\r\n        lines: chunk.split(newline),\r\n        partialLine: ''\r\n      }\r\n    }\r\n\r\n    let lines = []\r\n    const str = this.isBinary() ? uint8ToString(chunk) : chunk\r\n    const idx = str.lastIndexOf(newline)\r\n\r\n    if (idx === -1) {\r\n      partialLine += str\r\n    } else {\r\n      const str2 = partialLine + str.substr(0, idx)\r\n      lines = lines.concat(str2.split(newline))\r\n\r\n      if (idx === str.length - newline.length) {\r\n        partialLine = ''\r\n      } else {\r\n        partialLine = str.substr(idx + newline.length)\r\n      }\r\n    }\r\n\r\n    if (isLast && partialLine !== '') {\r\n      lines.push(partialLine)\r\n    }\r\n\r\n    return {\r\n      lines: lines,\r\n      partialLine: partialLine\r\n    }\r\n  }\r\n\r\n  nextChunk () {\r\n    const start = this.__pointer\r\n\r\n    if (start > this.data.length) {\r\n      return undefined\r\n    }\r\n\r\n    this.__pointer += this.chunkSize\r\n    return this.chunk(start)\r\n  }\r\n\r\n  nextChunkOfLines () {\r\n    const chunk = this.nextChunk()\r\n\r\n    if (chunk === undefined) {\r\n      return undefined\r\n    }\r\n\r\n    const isLast = this.__pointer > this.data.length\r\n    const d = this.chunkToLines(chunk, this.__partialLine, isLast)\r\n\r\n    this.__partialLine = d.partialLine\r\n\r\n    return d.lines\r\n  }\r\n\r\n  eachChunk (callback) {\r\n    const chunkSize = this.chunkSize\r\n    const n = this.data.length\r\n    const chunkCount = this.chunkCount()\r\n\r\n    for (let i = 0; i < n; i += chunkSize) {\r\n      const chunk = this.chunk(i)\r\n      const chunkNo = Math.round(i / chunkSize)\r\n\r\n      callback(chunk, chunkNo, chunkCount)\r\n    }\r\n  }\r\n\r\n  eachChunkOfLines (callback) {\r\n    this.eachChunk((chunk, chunkNo, chunkCount) => {\r\n      const isLast = chunkNo === chunkCount + 1\r\n      const d = this.chunkToLines(chunk, this.__partialLine, isLast)\r\n\r\n      this.__partialLine = d.partialLine\r\n\r\n      callback(d.lines, chunkNo, chunkCount)\r\n    })\r\n  }\r\n\r\n  dispose () {\r\n    delete this.src\r\n\r\n    if (this.__srcName) {\r\n      delete this[ this.__srcName ]\r\n    }\r\n  }\r\n}\r\n\r\nexport default Streamer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/streamer/streamer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3258,
    "kind": "class",
    "name": "Streamer",
    "memberof": "src/streamer/streamer.js",
    "static": true,
    "longname": "src/streamer/streamer.js~Streamer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/streamer/streamer.js",
    "importStyle": "Streamer",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3259,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3260,
    "kind": "member",
    "name": "compressed",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#compressed",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3261,
    "kind": "member",
    "name": "binary",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#binary",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 3262,
    "kind": "member",
    "name": "json",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#json",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 3263,
    "kind": "member",
    "name": "xml",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#xml",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3264,
    "kind": "member",
    "name": "src",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#src",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3265,
    "kind": "member",
    "name": "chunkSize",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#chunkSize",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3266,
    "kind": "member",
    "name": "newline",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#newline",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3267,
    "kind": "member",
    "name": "__pointer",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#__pointer",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3268,
    "kind": "member",
    "name": "__partialLine",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#__partialLine",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 3269,
    "kind": "member",
    "name": "[.__srcName]",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#[.__srcName]",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 3270,
    "kind": "get",
    "name": "type",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#type",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 3271,
    "kind": "get",
    "name": "__srcName",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#__srcName",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3272,
    "kind": "method",
    "name": "isBinary",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#isBinary",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3273,
    "kind": "method",
    "name": "onload",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#onload",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 3274,
    "kind": "method",
    "name": "onprogress",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#onprogress",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 3275,
    "kind": "method",
    "name": "onerror",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#onerror",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 3276,
    "kind": "method",
    "name": "read",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#read",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 3277,
    "kind": "member",
    "name": "data",
    "memberof": "src/streamer/streamer.js~Streamer",
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#data",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 3279,
    "kind": "method",
    "name": "_read",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#_read",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 3280,
    "kind": "method",
    "name": "_chunk",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#_chunk",
    "access": "private",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 3281,
    "kind": "method",
    "name": "chunk",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#chunk",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 3282,
    "kind": "method",
    "name": "peekLines",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#peekLines",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 3283,
    "kind": "method",
    "name": "chunkCount",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#chunkCount",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 3284,
    "kind": "method",
    "name": "asText",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#asText",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 3285,
    "kind": "method",
    "name": "chunkToLines",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#chunkToLines",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 3286,
    "kind": "method",
    "name": "nextChunk",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#nextChunk",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 3288,
    "kind": "method",
    "name": "nextChunkOfLines",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#nextChunkOfLines",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "undocument": true
  },
  {
    "__docId__": 3290,
    "kind": "method",
    "name": "eachChunk",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#eachChunk",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 3291,
    "kind": "method",
    "name": "eachChunkOfLines",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#eachChunkOfLines",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true
  },
  {
    "__docId__": 3293,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/streamer/streamer.js~Streamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/streamer.js~Streamer#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true
  },
  {
    "__docId__": 3294,
    "kind": "file",
    "name": "src/streamer/string-streamer.js",
    "content": "/**\r\n * @file String Streamer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Streamer from './streamer.js'\r\n\r\nclass StringStreamer extends Streamer {\r\n  get type () { return 'string' }\r\n\r\n  get __srcName () { return 'str' }\r\n\r\n  _chunk (start, end) {\r\n    return this.data.substr(start, end)\r\n  }\r\n}\r\n\r\nexport default StringStreamer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/streamer/string-streamer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3295,
    "kind": "class",
    "name": "StringStreamer",
    "memberof": "src/streamer/string-streamer.js",
    "static": true,
    "longname": "src/streamer/string-streamer.js~StringStreamer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/streamer/string-streamer.js",
    "importStyle": "StringStreamer",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/streamer/streamer.js~Streamer"
    ]
  },
  {
    "__docId__": 3296,
    "kind": "get",
    "name": "type",
    "memberof": "src/streamer/string-streamer.js~StringStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/string-streamer.js~StringStreamer#type",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3297,
    "kind": "get",
    "name": "__srcName",
    "memberof": "src/streamer/string-streamer.js~StringStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/string-streamer.js~StringStreamer#__srcName",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3298,
    "kind": "method",
    "name": "_chunk",
    "memberof": "src/streamer/string-streamer.js~StringStreamer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/streamer/string-streamer.js~StringStreamer#_chunk",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3299,
    "kind": "file",
    "name": "src/structure/entity.js",
    "content": "/**\r\n * @file Entity\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    UnknownEntity, PolymerEntity, NonPolymerEntity, MacrolideEntity, WaterEntity\r\n} from './structure-constants.js'\r\n\r\nfunction entityTypeFromString (string) {\r\n  string = string.toLowerCase()\r\n  switch (string) {\r\n    case 'polymer':\r\n      return PolymerEntity\r\n    case 'non-polymer':\r\n      return NonPolymerEntity\r\n    case 'macrolide':\r\n      return MacrolideEntity\r\n    case 'water':\r\n      return WaterEntity\r\n    default:\r\n      return UnknownEntity\r\n  }\r\n}\r\n\r\n/**\r\n * Entity of a {@link Structure}\r\n */\r\nclass Entity {\r\n    /**\r\n     * @param {Structure} structure - structure the entity belongs to\r\n     * @param {Integer} index - index within structure.entityList\r\n     * @param {String} description - entity description\r\n     * @param {String} type - entity type\r\n     * @param {Array} chainIndexList - entity chainIndexList\r\n     */\r\n  constructor (structure, index, description, type, chainIndexList) {\r\n    this.structure = structure\r\n    this.index = index\r\n    this.description = description || ''\r\n    this.entityType = entityTypeFromString(type || '')\r\n    this.chainIndexList = chainIndexList || []\r\n\r\n    chainIndexList.forEach(function (ci) {\r\n      structure.chainStore.entityIndex[ ci ] = index\r\n    })\r\n  }\r\n\r\n  get type () { return 'Entity' }\r\n\r\n  getEntityType () {\r\n    return this.entityType\r\n  }\r\n\r\n  isPolymer () {\r\n    return this.entityType === PolymerEntity\r\n  }\r\n\r\n  isNonPolymer () {\r\n    return this.entityType === NonPolymerEntity\r\n  }\r\n\r\n  isMacrolide () {\r\n    return this.entityType === MacrolideEntity\r\n  }\r\n\r\n  isWater () {\r\n    return this.entityType === WaterEntity\r\n  }\r\n\r\n  eachChain (callback) {\r\n    const cp = this.structure.getChainProxy()\r\n\r\n    this.chainIndexList.forEach(function (index) {\r\n      cp.index = index\r\n      callback(cp)\r\n    })\r\n  }\r\n}\r\n\r\nexport default Entity\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/entity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3300,
    "kind": "function",
    "name": "entityTypeFromString",
    "memberof": "src/structure/entity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/entity.js~entityTypeFromString",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/entity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3301,
    "kind": "class",
    "name": "Entity",
    "memberof": "src/structure/entity.js",
    "static": true,
    "longname": "src/structure/entity.js~Entity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/entity.js",
    "importStyle": "Entity",
    "description": "Entity of a {@link Structure}",
    "lineNumber": 30,
    "interface": false
  },
  {
    "__docId__": 3302,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "structure the entity belongs to"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "index within structure.entityList"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "entity description"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "entity type"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "chainIndexList",
        "description": "entity chainIndexList"
      }
    ]
  },
  {
    "__docId__": 3303,
    "kind": "member",
    "name": "structure",
    "memberof": "src/structure/entity.js~Entity",
    "static": false,
    "longname": "src/structure/entity.js~Entity#structure",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 3304,
    "kind": "member",
    "name": "index",
    "memberof": "src/structure/entity.js~Entity",
    "static": false,
    "longname": "src/structure/entity.js~Entity#index",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3305,
    "kind": "member",
    "name": "description",
    "memberof": "src/structure/entity.js~Entity",
    "static": false,
    "longname": "src/structure/entity.js~Entity#description",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 3306,
    "kind": "member",
    "name": "entityType",
    "memberof": "src/structure/entity.js~Entity",
    "static": false,
    "longname": "src/structure/entity.js~Entity#entityType",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 3307,
    "kind": "member",
    "name": "chainIndexList",
    "memberof": "src/structure/entity.js~Entity",
    "static": false,
    "longname": "src/structure/entity.js~Entity#chainIndexList",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 3308,
    "kind": "get",
    "name": "type",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#type",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 3309,
    "kind": "method",
    "name": "getEntityType",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#getEntityType",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 3310,
    "kind": "method",
    "name": "isPolymer",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#isPolymer",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 3311,
    "kind": "method",
    "name": "isNonPolymer",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#isNonPolymer",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 3312,
    "kind": "method",
    "name": "isMacrolide",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#isMacrolide",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 3313,
    "kind": "method",
    "name": "isWater",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#isWater",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 3314,
    "kind": "method",
    "name": "eachChain",
    "memberof": "src/structure/entity.js~Entity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/entity.js~Entity#eachChain",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 3315,
    "kind": "file",
    "name": "src/structure/structure-builder.js",
    "content": "/**\r\n * @file Structure Builder\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction StructureBuilder (structure) {\r\n  let currentModelindex = null\r\n  let currentChainid = null\r\n  let currentResname = null\r\n  let currentResno = null\r\n  let currentInscode = null\r\n  let currentHetero = null\r\n\r\n  let previousResname\r\n  let previousHetero\r\n\r\n  const atomStore = structure.atomStore\r\n  const residueStore = structure.residueStore\r\n  const chainStore = structure.chainStore\r\n  const modelStore = structure.modelStore\r\n\r\n  const residueMap = structure.residueMap\r\n\r\n  let ai = -1\r\n  let ri = -1\r\n  let ci = -1\r\n  let mi = -1\r\n\r\n  function addResidueType (ri) {\r\n    const count = residueStore.atomCount[ ri ]\r\n    const offset = residueStore.atomOffset[ ri ]\r\n    const atomTypeIdList = new Array(count)\r\n    for (let i = 0; i < count; ++i) {\r\n      atomTypeIdList[ i ] = atomStore.atomTypeId[ offset + i ]\r\n    }\r\n    residueStore.residueTypeId[ ri ] = residueMap.add(\r\n      previousResname, atomTypeIdList, previousHetero\r\n    )\r\n  }\r\n\r\n  this.addAtom = function (modelindex, chainname, chainid, resname, resno, hetero, sstruc, inscode) {\r\n    let addModel = false\r\n    let addChain = false\r\n    let addResidue = false\r\n\r\n    if (currentModelindex !== modelindex) {\r\n      addModel = true\r\n      addChain = true\r\n      addResidue = true\r\n      mi += 1\r\n      ci += 1\r\n      ri += 1\r\n    } else if (currentChainid !== chainid) {\r\n      addChain = true\r\n      addResidue = true\r\n      ci += 1\r\n      ri += 1\r\n    } else if (currentResno !== resno || currentResname !== resname || currentInscode !== inscode) {\r\n      addResidue = true\r\n      ri += 1\r\n    }\r\n    ai += 1\r\n\r\n    if (addModel) {\r\n      modelStore.growIfFull()\r\n      modelStore.chainOffset[ mi ] = ci\r\n      modelStore.chainCount[ mi ] = 0\r\n      modelStore.count += 1\r\n      chainStore.modelIndex[ ci ] = mi\r\n    }\r\n\r\n    if (addChain) {\r\n      chainStore.growIfFull()\r\n      chainStore.setChainname(ci, chainname)\r\n      chainStore.setChainid(ci, chainid)\r\n      chainStore.residueOffset[ ci ] = ri\r\n      chainStore.residueCount[ ci ] = 0\r\n      chainStore.count += 1\r\n      chainStore.modelIndex[ ci ] = mi\r\n      modelStore.chainCount[ mi ] += 1\r\n      residueStore.chainIndex[ ri ] = ci\r\n    }\r\n\r\n    if (addResidue) {\r\n      previousResname = currentResname\r\n      previousHetero = currentHetero\r\n      if (ri > 0) addResidueType(ri - 1)\r\n      residueStore.growIfFull()\r\n      residueStore.resno[ ri ] = resno\r\n      if (sstruc !== undefined) {\r\n        residueStore.sstruc[ ri ] = sstruc.charCodeAt(0)\r\n      }\r\n      if (inscode !== undefined) {\r\n        residueStore.inscode[ ri ] = inscode.charCodeAt(0)\r\n      }\r\n      residueStore.atomOffset[ ri ] = ai\r\n      residueStore.atomCount[ ri ] = 0\r\n      residueStore.count += 1\r\n      residueStore.chainIndex[ ri ] = ci\r\n      chainStore.residueCount[ ci ] += 1\r\n    }\r\n\r\n    atomStore.count += 1\r\n    atomStore.residueIndex[ ai ] = ri\r\n    residueStore.atomCount[ ri ] += 1\r\n\r\n    currentModelindex = modelindex\r\n    currentChainid = chainid\r\n    currentResname = resname\r\n    currentResno = resno\r\n    currentInscode = inscode\r\n    currentHetero = hetero\r\n  }\r\n\r\n  this.finalize = function () {\r\n    previousResname = currentResname\r\n    previousHetero = currentHetero\r\n    if (ri > -1) addResidueType(ri)\r\n  }\r\n}\r\n\r\nexport default StructureBuilder\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/structure-builder.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3316,
    "kind": "function",
    "name": "StructureBuilder",
    "memberof": "src/structure/structure-builder.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-builder.js~StructureBuilder",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/structure/structure-builder.js",
    "importStyle": "StructureBuilder",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Structure Builder"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 3317,
    "kind": "file",
    "name": "src/structure/structure-constants.js",
    "content": "/**\r\n * @file Structure Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// entity types\r\nconst UnknownEntity = 0\r\nconst PolymerEntity = 1\r\nconst NonPolymerEntity = 2\r\nconst MacrolideEntity = 3\r\nconst WaterEntity = 4\r\n\r\n// molecule types\r\nconst UnknownType = 0\r\nconst WaterType = 1\r\nconst IonType = 2\r\nconst ProteinType = 3\r\nconst RnaType = 4\r\nconst DnaType = 5\r\nconst SaccharideType = 6\r\n\r\n// backbone types\r\nconst UnknownBackboneType = 0\r\nconst ProteinBackboneType = 1\r\nconst RnaBackboneType = 2\r\nconst DnaBackboneType = 3\r\nconst CgProteinBackboneType = 4\r\nconst CgRnaBackboneType = 5\r\nconst CgDnaBackboneType = 6\r\n\r\n// chemical component types\r\nconst ChemCompProtein = [\r\n  'D-BETA-PEPTIDE, C-GAMMA LINKING', 'D-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n  'D-PEPTIDE COOH CARBOXY TERMINUS', 'D-PEPTIDE NH3 AMINO TERMINUS', 'D-PEPTIDE LINKING',\r\n  'L-BETA-PEPTIDE, C-GAMMA LINKING', 'L-GAMMA-PEPTIDE, C-DELTA LINKING',\r\n  'L-PEPTIDE COOH CARBOXY TERMINUS', 'L-PEPTIDE NH3 AMINO TERMINUS', 'L-PEPTIDE LINKING',\r\n  'PEPTIDE LINKING', 'PEPTIDE-LIKE'\r\n]\r\nconst ChemCompRna = [\r\n  'RNA OH 3 PRIME TERMINUS', 'RNA OH 5 PRIME TERMINUS', 'RNA LINKING'\r\n]\r\nconst ChemCompDna = [\r\n  'DNA OH 3 PRIME TERMINUS', 'DNA OH 5 PRIME TERMINUS', 'DNA LINKING',\r\n  'L-DNA LINKING', 'L-RNA LINKING'\r\n]\r\nconst ChemCompSaccharide = [\r\n  'D-SACCHARIDE', 'D-SACCHARIDE 1,4 AND 1,4 LINKING', 'D-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n  'L-SACCHARIDE', 'L-SACCHARIDE 1,4 AND 1,4 LINKING', 'L-SACCHARIDE 1,4 AND 1,6 LINKING',\r\n  'SACCHARIDE'\r\n]\r\nconst ChemCompOther = [\r\n  'OTHER'\r\n]\r\nconst ChemCompNonPolymer = [\r\n  'NON-POLYMER'\r\n]\r\nconst ChemCompHetero = ChemCompNonPolymer.concat(ChemCompOther, ChemCompSaccharide)\r\n\r\n// secondary structure\r\nconst SecStrucHelix = [ 'h', 'g', 'i' ]\r\nconst SecStrucSheet = [ 'e', 'b' ]\r\nconst SecStrucTurn = [ 's', 't', 'l', '' ]\r\n\r\n// http://dx.doi.org/10.1021/jp8111556 (or 2.0)\r\nconst VdwRadii = {\r\n  'H': 1.1,\r\n  'HE': 1.4,\r\n  'LI': 1.81,\r\n  'BE': 1.53,\r\n  'B': 1.92,\r\n  'C': 1.7,\r\n  'N': 1.55,\r\n  'O': 1.52,\r\n  'F': 1.47,\r\n  'NE': 1.54,\r\n  'NA': 2.27,\r\n  'MG': 1.73,\r\n  'AL': 1.84,\r\n  'SI': 2.1,\r\n  'P': 1.8,\r\n  'S': 1.8,\r\n  'CL': 1.75,\r\n  'AR': 1.88,\r\n  'K': 2.75,\r\n  'CA': 2.31,\r\n  'SC': 2.3,\r\n  'TI': 2.15,\r\n  'V': 2.05,\r\n  'CR': 2.05,\r\n  'MN': 2.05,\r\n  'FE': 2.05,\r\n  'CO': 2.0,\r\n  'NI': 2.0,\r\n  'CU': 2.0,\r\n  'ZN': 2.1,\r\n  'GA': 1.87,\r\n  'GE': 2.11,\r\n  'AS': 1.85,\r\n  'SE': 1.9,\r\n  'BR': 1.83,\r\n  'KR': 2.02,\r\n  'RB': 3.03,\r\n  'SR': 2.49,\r\n  'Y': 2.4,\r\n  'ZR': 2.3,\r\n  'NB': 2.15,\r\n  'MO': 2.1,\r\n  'TC': 2.05,\r\n  'RU': 2.05,\r\n  'RH': 2.0,\r\n  'PD': 2.05,\r\n  'AG': 2.1,\r\n  'CD': 2.2,\r\n  'IN': 2.2,\r\n  'SN': 1.93,\r\n  'SB': 2.17,\r\n  'TE': 2.06,\r\n  'I': 1.98,\r\n  'XE': 2.16,\r\n  'CS': 3.43,\r\n  'BA': 2.68,\r\n  'LA': 2.5,\r\n  'CE': 2.48,\r\n  'PR': 2.47,\r\n  'ND': 2.45,\r\n  'PM': 2.43,\r\n  'SM': 2.42,\r\n  'EU': 2.4,\r\n  'GD': 2.38,\r\n  'TB': 2.37,\r\n  'DY': 2.35,\r\n  'HO': 2.33,\r\n  'ER': 2.32,\r\n  'TM': 2.3,\r\n  'YB': 2.28,\r\n  'LU': 2.27,\r\n  'HF': 2.25,\r\n  'TA': 2.2,\r\n  'W': 2.1,\r\n  'RE': 2.05,\r\n  'OS': 2.0,\r\n  'IR': 2.0,\r\n  'PT': 2.05,\r\n  'AU': 2.1,\r\n  'HG': 2.05,\r\n  'TL': 1.96,\r\n  'PB': 2.02,\r\n  'BI': 2.07,\r\n  'PO': 1.97,\r\n  'AT': 2.02,\r\n  'RN': 2.2,\r\n  'FR': 3.48,\r\n  'RA': 2.83,\r\n  'AC': 2.0,\r\n  'TH': 2.4,\r\n  'PA': 2.0,\r\n  'U': 2.3,\r\n  'NP': 2.0,\r\n  'PU': 2.0,\r\n  'AM': 2.0,\r\n  'CM': 2.0,\r\n  'BK': 2.0,\r\n  'CF': 2.0,\r\n  'ES': 2.0,\r\n  'FM': 2.0,\r\n  'MD': 2.0,\r\n  'NO': 2.0,\r\n  'LR': 2.0,\r\n  'RF': 2.0,\r\n  'DB': 2.0,\r\n  'SG': 2.0,\r\n  'BH': 2.0,\r\n  'HS': 2.0,\r\n  'MT': 2.0,\r\n  'DS': 2.0,\r\n  'RG': 2.0,\r\n  'CN': 2.0,\r\n  'UUT': 2.0,\r\n  'FL': 2.0,\r\n  'UUP': 2.0,\r\n  'LV': 2.0,\r\n  'UUH': 2.0\r\n}\r\nconst DefaultVdwRadius = 2.0\r\n\r\n// Peter Rose (peter.rose@rcsb.org), private communication, average accross PDB\r\nconst ResidueRadii = {\r\n  '2QY': 6.58,\r\n  'CY0': 11.98,\r\n  '2QZ': 2.52,\r\n  'CY1': 6.59,\r\n  'HHK': 5.11,\r\n  'CXM': 4.69,\r\n  'HHI': 4.58,\r\n  'CY4': 4.57,\r\n  'S12': 18.57,\r\n  'CY3': 2.79,\r\n  'C5C': 5.35,\r\n  'PFX': 11.84,\r\n  '2R3': 6.94,\r\n  '2R1': 3.78,\r\n  'ILX': 4.99,\r\n  '32S': 5.68,\r\n  'BTK': 8.59,\r\n  '32T': 5.72,\r\n  'FAK': 9.8,\r\n  'B27': 2.78,\r\n  'ILM': 3.84,\r\n  'C4R': 5.63,\r\n  '32L': 6.75,\r\n  'SYS': 3.01,\r\n  '1MH': 5.04,\r\n  'ILE': 3.65,\r\n  'YNM': 6.39,\r\n  '2RX': 4.91,\r\n  'B3A': 2.48,\r\n  'GEE': 4.76,\r\n  '7MN': 7.34,\r\n  'B3E': 5.4,\r\n  'ARG': 6.33,\r\n  '200': 6.89,\r\n  'HIP': 5.47,\r\n  'HIA': 4.64,\r\n  'B3K': 5.89,\r\n  'HIC': 5.76,\r\n  'B3L': 4.96,\r\n  'B3M': 5.07,\r\n  'ARM': 6.86,\r\n  'ARO': 7.35,\r\n  'AR4': 8.42,\r\n  'PG1': 10.67,\r\n  'YOF': 6.44,\r\n  'IML': 3.74,\r\n  'SXE': 6.65,\r\n  'HIQ': 7.98,\r\n  'PFF': 6.31,\r\n  'HIS': 4.52,\r\n  '0TD': 3.62,\r\n  'C3Y': 5.24,\r\n  '1OP': 11.55,\r\n  '02Y': 4.77,\r\n  '02V': 4.83,\r\n  'ASB': 5.59,\r\n  '30V': 8.53,\r\n  'S2P': 4.81,\r\n  'ASP': 3.55,\r\n  'ASN': 3.54,\r\n  '2OR': 6.91,\r\n  'QMM': 6.13,\r\n  '2P0': 8.52,\r\n  'ASL': 5.36,\r\n  'HFA': 5.14,\r\n  '5PG': 5.69,\r\n  'B3X': 4.38,\r\n  'AS9': 4.1,\r\n  'ARV': 7.59,\r\n  'B3U': 6.06,\r\n  'S2C': 7.54,\r\n  'B3T': 3.34,\r\n  '175': 5.64,\r\n  'GFT': 8.18,\r\n  'HG7': 6.8,\r\n  'B3Q': 4.48,\r\n  'ASA': 3.64,\r\n  '02K': 2.94,\r\n  'B3Y': 7.45,\r\n  'PHD': 5.35,\r\n  'C6C': 6.42,\r\n  'BUC': 5.8,\r\n  'HGL': 8.07,\r\n  'PHE': 5.06,\r\n  '03Y': 2.6,\r\n  'PHA': 5.11,\r\n  'OCY': 5.0,\r\n  '4PH': 6.79,\r\n  '5OH': 4.7,\r\n  '31Q': 10.46,\r\n  'BTR': 7.98,\r\n  '3PX': 4.7,\r\n  '1PA': 8.07,\r\n  'ASX': 3.54,\r\n  'IOR': 7.23,\r\n  '03E': 3.38,\r\n  'PHL': 5.17,\r\n  'KWS': 5.09,\r\n  'PHI': 7.12,\r\n  'NAL': 7.22,\r\n  'S1H': 19.21,\r\n  '2ML': 3.86,\r\n  '2MR': 7.35,\r\n  'GHG': 4.83,\r\n  'TYY': 6.54,\r\n  '2MT': 3.67,\r\n  '56A': 13.01,\r\n  'SVA': 5.46,\r\n  'TYX': 8.31,\r\n  'TYS': 8.59,\r\n  'TYR': 6.38,\r\n  'TYQ': 6.43,\r\n  'HLU': 3.99,\r\n  'MYK': 19.47,\r\n  'TYO': 7.71,\r\n  'HLX': 4.98,\r\n  'TYN': 9.87,\r\n  'TYJ': 6.25,\r\n  'TYI': 6.49,\r\n  'LYH': 5.13,\r\n  'LYF': 12.19,\r\n  'SUN': 6.73,\r\n  'LYR': 18.28,\r\n  'TYB': 6.46,\r\n  '11W': 14.39,\r\n  'LYS': 5.54,\r\n  'LYN': 4.8,\r\n  '11Q': 4.85,\r\n  'LYO': 4.71,\r\n  'LYZ': 1.76,\r\n  'TXY': 6.44,\r\n  'MYN': 4.71,\r\n  'TY5': 10.6,\r\n  'HMR': 5.09,\r\n  '01W': 8.55,\r\n  'LYX': 13.36,\r\n  'TY8': 7.22,\r\n  'TY2': 6.49,\r\n  'KYN': 6.18,\r\n  'KYQ': 9.75,\r\n  'CZZ': 5.14,\r\n  'IIL': 3.81,\r\n  'HNC': 10.41,\r\n  'OIC': 4.62,\r\n  'LVN': 2.89,\r\n  'QIL': 3.84,\r\n  'JJL': 8.3,\r\n  'VAH': 3.88,\r\n  'JJJ': 7.5,\r\n  'JJK': 7.43,\r\n  'VAD': 2.56,\r\n  'CYW': 4.65,\r\n  '0QL': 5.72,\r\n  '143': 8.22,\r\n  'SVX': 7.04,\r\n  'CYJ': 11.64,\r\n  'SVY': 7.1,\r\n  'SVZ': 6.6,\r\n  'CYG': 8.03,\r\n  'CYF': 13.54,\r\n  'SVV': 5.09,\r\n  'GL3': 2.72,\r\n  '8SP': 14.26,\r\n  'CYS': 2.78,\r\n  '004': 4.33,\r\n  'CYR': 10.33,\r\n  'PLJ': 3.71,\r\n  'EXY': 7.37,\r\n  'HL2': 3.75,\r\n  'A5N': 5.21,\r\n  'CYQ': 5.67,\r\n  'CZ2': 5.16,\r\n  'LWY': 4.12,\r\n  'PM3': 8.78,\r\n  'OHS': 6.98,\r\n  'OHI': 5.35,\r\n  '3TY': 8.42,\r\n  'CYD': 8.55,\r\n  'DYS': 7.87,\r\n  'DAH': 6.47,\r\n  '4IK': 11.81,\r\n  '3EG': 3.66,\r\n  'AYA': 3.65,\r\n  '4IN': 6.31,\r\n  'DAB': 3.48,\r\n  '4HT': 6.03,\r\n  'RGL': 7.03,\r\n  'DAM': 2.49,\r\n  'NFA': 5.04,\r\n  'WFP': 6.07,\r\n  '2JC': 2.97,\r\n  'HAR': 7.55,\r\n  '2JG': 5.67,\r\n  'MH6': 1.72,\r\n  '2JF': 9.13,\r\n  '3FG': 4.96,\r\n  'MGN': 4.84,\r\n  'AZH': 5.36,\r\n  'AZK': 6.03,\r\n  'ZBZ': 7.79,\r\n  'TBG': 2.58,\r\n  'VAL': 2.51,\r\n  'MGG': 7.34,\r\n  'AZS': 5.61,\r\n  'FHL': 9.75,\r\n  '2JH': 4.56,\r\n  'IEL': 7.07,\r\n  'FHO': 6.75,\r\n  'DA2': 7.79,\r\n  'FH7': 6.99,\r\n  'ME0': 4.52,\r\n  '3GL': 4.84,\r\n  'MDO': 5.03,\r\n  'AZY': 7.37,\r\n  'A8E': 3.76,\r\n  'ZCL': 6.71,\r\n  'MDH': 2.58,\r\n  'LA2': 14.07,\r\n  '4FW': 6.1,\r\n  'YCM': 5.32,\r\n  'MDF': 4.95,\r\n  'YCP': 3.01,\r\n  'TEF': 8.63,\r\n  'FGP': 4.34,\r\n  'UF0': 19.72,\r\n  'XCN': 4.57,\r\n  'FGL': 2.56,\r\n  'MF3': 6.37,\r\n  'MEQ': 5.13,\r\n  'LAA': 3.23,\r\n  'IGL': 5.52,\r\n  'MET': 4.49,\r\n  'NIY': 6.81,\r\n  'QCS': 5.18,\r\n  'TCQ': 8.56,\r\n  'MEN': 4.33,\r\n  '4HL': 8.79,\r\n  'MEA': 4.95,\r\n  'EFC': 5.28,\r\n  'LAL': 2.41,\r\n  '2HF': 5.52,\r\n  'KBE': 5.64,\r\n  'OCS': 3.94,\r\n  'CAF': 5.46,\r\n  'NC1': 11.4,\r\n  'NBQ': 9.82,\r\n  'CAB': 4.19,\r\n  'MBQ': 9.55,\r\n  '193': 7.38,\r\n  '192': 2.44,\r\n  '0WZ': 7.61,\r\n  'CAS': 5.35,\r\n  'NB8': 11.98,\r\n  'OBS': 11.71,\r\n  '1AC': 2.42,\r\n  'PCA': 3.48,\r\n  'MCL': 9.73,\r\n  'LBY': 7.75,\r\n  'GAU': 4.67,\r\n  'PBF': 9.75,\r\n  'MCG': 6.46,\r\n  'DDE': 6.86,\r\n  '19W': 3.94,\r\n  'MD5': 9.33,\r\n  'MD6': 6.44,\r\n  'MD3': 8.41,\r\n  'MCS': 7.56,\r\n  'OBF': 3.64,\r\n  'UAL': 4.68,\r\n  'PAT': 6.05,\r\n  'IAM': 8.88,\r\n  'PAQ': 8.77,\r\n  'FDL': 9.49,\r\n  'NCB': 3.45,\r\n  'LCK': 9.81,\r\n  'DDZ': 2.52,\r\n  '2FM': 5.54,\r\n  'IAR': 6.77,\r\n  'OAS': 4.8,\r\n  'HBN': 8.8,\r\n  'TA4': 5.55,\r\n  '1C3': 7.43,\r\n  'ECX': 5.51,\r\n  'PF5': 6.28,\r\n  'RE3': 5.29,\r\n  'FCL': 6.25,\r\n  'ECC': 4.79,\r\n  'LDH': 7.06,\r\n  'NCY': 2.91,\r\n  'CCS': 4.58,\r\n  'PEC': 6.54,\r\n  '2CO': 4.45,\r\n  'LE1': 2.72,\r\n  'HCM': 5.53,\r\n  '07O': 8.05,\r\n  'HCL': 4.96,\r\n  'NEP': 6.94,\r\n  'PE1': 8.01,\r\n  'LEF': 4.37,\r\n  'FC0': 5.18,\r\n  'LED': 4.34,\r\n  'HCS': 4.09,\r\n  'DBU': 2.49,\r\n  'RE0': 5.53,\r\n  'LEN': 3.82,\r\n  '1E3': 8.71,\r\n  'BB9': 2.56,\r\n  'BB8': 5.14,\r\n  'PCS': 5.05,\r\n  'BB7': 4.56,\r\n  'BB6': 2.62,\r\n  'LEU': 3.83,\r\n  'DBZ': 7.08,\r\n  'LET': 11.29,\r\n  'DBY': 6.46,\r\n  'ICY': 7.76,\r\n  'MAA': 2.4,\r\n  'CGA': 7.91,\r\n  '5CS': 8.34,\r\n  'UGY': 3.7,\r\n  'LGY': 11.71,\r\n  'N10': 8.96,\r\n  'AAR': 6.39,\r\n  'FT6': 7.5,\r\n  'MOD': 12.62,\r\n  '5CW': 7.21,\r\n  'PVH': 4.58,\r\n  'BBC': 6.42,\r\n  'YYA': 7.3,\r\n  'O12': 14.08,\r\n  'NOT': 7.15,\r\n  'KGC': 9.88,\r\n  'MP4': 5.86,\r\n  '0CS': 4.07,\r\n  'MP8': 3.75,\r\n  'VLL': 2.54,\r\n  'VLM': 2.51,\r\n  'BCS': 8.03,\r\n  'MNL': 4.9,\r\n  'AA4': 4.47,\r\n  'SAC': 3.49,\r\n  'BCX': 2.99,\r\n  '3CF': 6.47,\r\n  'SAH': 11.7,\r\n  'NNH': 6.86,\r\n  'CGU': 4.71,\r\n  'SIB': 12.41,\r\n  'TLY': 8.78,\r\n  'SIC': 4.81,\r\n  'VMS': 8.82,\r\n  'TMD': 6.76,\r\n  'MMO': 6.53,\r\n  'PXU': 2.46,\r\n  '4AW': 6.22,\r\n  'OTH': 3.6,\r\n  'DLS': 6.84,\r\n  'MME': 4.99,\r\n  'DM0': 6.99,\r\n  '0FL': 2.76,\r\n  'SBL': 8.96,\r\n  'CDV': 3.72,\r\n  'OTY': 6.51,\r\n  'PYA': 7.75,\r\n  '2AS': 3.57,\r\n  'DMH': 4.92,\r\n  'ELY': 7.42,\r\n  'GVL': 9.6,\r\n  'FVA': 2.9,\r\n  'SAR': 2.48,\r\n  '4BF': 6.92,\r\n  'EME': 4.69,\r\n  'CDE': 2.51,\r\n  '3AR': 7.86,\r\n  '3AH': 9.11,\r\n  'AC5': 2.44,\r\n  'FTR': 6.08,\r\n  'MLL': 3.76,\r\n  'NPH': 11.66,\r\n  'NPI': 6.9,\r\n  'DMT': 6.67,\r\n  'PYX': 11.3,\r\n  'MLE': 3.87,\r\n  'PYL': 9.67,\r\n  'ZZU': 6.94,\r\n  'H5M': 3.61,\r\n  'SCH': 4.46,\r\n  'DMK': 3.52,\r\n  'FTY': 9.07,\r\n  '2AG': 3.7,\r\n  'ABA': 2.55,\r\n  'ZZJ': 2.44,\r\n  'MLZ': 6.8,\r\n  'MLY': 6.88,\r\n  'KCX': 7.28,\r\n  'ZZD': 8.16,\r\n  '3A5': 5.37,\r\n  'LHC': 7.75,\r\n  '9AT': 2.47,\r\n  'OZT': 3.4,\r\n  'THO': 2.62,\r\n  'THR': 2.5,\r\n  'DFI': 3.93,\r\n  'MKD': 6.42,\r\n  '4CY': 4.6,\r\n  'SDP': 6.07,\r\n  'DFO': 3.94,\r\n  '0A0': 3.45,\r\n  '4DB': 9.73,\r\n  'ML3': 6.26,\r\n  'BG1': 8.02,\r\n  'SD4': 4.57,\r\n  'THC': 3.8,\r\n  'SCS': 5.48,\r\n  'TH5': 4.65,\r\n  'BFD': 5.33,\r\n  'AEI': 6.34,\r\n  'TH6': 2.85,\r\n  'SCY': 4.53,\r\n  'TIS': 4.81,\r\n  'SEE': 4.53,\r\n  'BHD': 3.48,\r\n  'SEB': 8.18,\r\n  'SEC': 2.96,\r\n  'SEP': 4.8,\r\n  'CLH': 7.13,\r\n  'TIH': 5.02,\r\n  'CLG': 13.62,\r\n  'SEN': 6.43,\r\n  'XXA': 7.34,\r\n  'SEL': 2.46,\r\n  'SE7': 4.19,\r\n  '4CF': 7.72,\r\n  'G8M': 3.57,\r\n  'BH2': 3.51,\r\n  'UN2': 3.22,\r\n  'VR0': 10.51,\r\n  'MK8': 4.76,\r\n  'DHA': 2.32,\r\n  'LMQ': 4.69,\r\n  'SFE': 5.01,\r\n  'AHB': 3.47,\r\n  'OXX': 7.05,\r\n  'BIF': 9.63,\r\n  'IZO': 4.47,\r\n  'NMM': 8.25,\r\n  '0BN': 7.0,\r\n  'HZP': 3.12,\r\n  'NMC': 4.23,\r\n  'DHL': 2.69,\r\n  '9DS': 9.29,\r\n  'SER': 2.41,\r\n  'CHG': 4.2,\r\n  'MIR': 6.54,\r\n  'AGQ': 7.79,\r\n  'SET': 2.46,\r\n  'MIS': 6.32,\r\n  '4FB': 3.08,\r\n  '0AR': 8.46,\r\n  'LME': 3.99,\r\n  'FZN': 24.42,\r\n  'AGT': 9.04,\r\n  'IYR': 6.46,\r\n  '9DN': 9.31,\r\n  'CHP': 5.75,\r\n  'UNK': 1.64,\r\n  'XX1': 9.92,\r\n  'AGM': 6.57,\r\n  '0AH': 5.78,\r\n  'LLP': 10.22,\r\n  '0AF': 6.72,\r\n  '4DP': 9.28,\r\n  'HYP': 2.25,\r\n  'DIR': 5.8,\r\n  'LLY': 8.71,\r\n  '0AK': 6.11,\r\n  'NLE': 4.67,\r\n  'OYL': 6.42,\r\n  'WVL': 4.69,\r\n  '0A8': 8.1,\r\n  'NLY': 6.37,\r\n  'MHO': 4.89,\r\n  'VOL': 2.55,\r\n  '0A1': 7.1,\r\n  'MHL': 3.92,\r\n  'NLP': 4.81,\r\n  'NLQ': 4.65,\r\n  'MHW': 2.74,\r\n  'BIL': 4.7,\r\n  'NLO': 4.8,\r\n  'MHU': 7.51,\r\n  'XW1': 9.36,\r\n  'LLO': 10.13,\r\n  'SGB': 6.88,\r\n  'MHV': 3.6,\r\n  'MHS': 4.51,\r\n  '0A9': 5.17,\r\n  '0LF': 9.96,\r\n  'HT7': 6.82,\r\n  'X2W': 6.6,\r\n  'YPZ': 9.38,\r\n  'I58': 6.73,\r\n  'FLA': 2.4,\r\n  'M0H': 4.83,\r\n  'HSL': 2.46,\r\n  'FLE': 6.17,\r\n  'KOR': 10.1,\r\n  '1VR': 3.89,\r\n  'HSO': 4.56,\r\n  'TTS': 9.41,\r\n  'RVX': 7.01,\r\n  'TTQ': 7.71,\r\n  'H14': 5.27,\r\n  'HTI': 7.8,\r\n  'ONH': 6.14,\r\n  'LP6': 8.58,\r\n  'ONL': 4.83,\r\n  'AHH': 5.06,\r\n  'HS8': 7.4,\r\n  'HS9': 4.71,\r\n  'BL2': 5.82,\r\n  'AHP': 5.26,\r\n  '6HN': 7.34,\r\n  'HRP': 5.46,\r\n  'POM': 3.6,\r\n  'WPA': 5.11,\r\n  '2ZC': 4.29,\r\n  'CPC': 2.65,\r\n  'AIB': 2.4,\r\n  'XSN': 3.47,\r\n  'M2S': 5.28,\r\n  'GND': 6.67,\r\n  'GNC': 4.6,\r\n  'MVA': 2.56,\r\n  'OLZ': 5.32,\r\n  'M2L': 6.15,\r\n  'TRF': 6.69,\r\n  'NZH': 7.66,\r\n  'SRZ': 5.27,\r\n  'OLD': 10.47,\r\n  'CME': 5.86,\r\n  'CMH': 5.3,\r\n  'ALA': 2.38,\r\n  'TRQ': 7.36,\r\n  'PPN': 7.24,\r\n  'TRP': 6.07,\r\n  'TRO': 5.82,\r\n  'TRN': 5.95,\r\n  'NYS': 8.1,\r\n  'ALC': 5.26,\r\n  'U3X': 11.7,\r\n  'HVA': 2.58,\r\n  'TS9': 3.92,\r\n  'TRX': 7.27,\r\n  'TRW': 11.8,\r\n  'LPL': 7.51,\r\n  'GMA': 4.4,\r\n  'OMT': 5.07,\r\n  'CMT': 3.54,\r\n  'GME': 4.66,\r\n  'NYB': 6.07,\r\n  'PR3': 5.12,\r\n  'LPD': 2.48,\r\n  'GLU': 4.49,\r\n  '1X6': 6.84,\r\n  'LPG': 2.39,\r\n  'GLX': 4.52,\r\n  'PR4': 4.52,\r\n  'CML': 6.16,\r\n  'FME': 4.52,\r\n  'HTR': 6.48,\r\n  'PR7': 4.66,\r\n  'Z3E': 7.2,\r\n  'GLZ': 2.39,\r\n  'BMT': 6.37,\r\n  'WRP': 8.16,\r\n  'GLY': 2.37,\r\n  'OMY': 6.11,\r\n  'MTY': 5.46,\r\n  'OMX': 6.15,\r\n  'GLN': 4.46,\r\n  '2XA': 8.25,\r\n  '28X': 7.84,\r\n  '7JA': 9.46,\r\n  'FLT': 9.65,\r\n  'GLJ': 3.7,\r\n  'OMH': 5.26,\r\n  'TSY': 4.26,\r\n  'PRV': 4.28,\r\n  'CS4': 11.21,\r\n  'DOA': 12.33,\r\n  '23P': 5.42,\r\n  'CS3': 8.24,\r\n  '6CL': 6.47,\r\n  'PRR': 5.58,\r\n  'KST': 11.58,\r\n  'CS1': 7.23,\r\n  'PRS': 2.63,\r\n  'ZYJ': 11.4,\r\n  'IT1': 9.75,\r\n  'UU5': 4.98,\r\n  'ESB': 6.69,\r\n  'UU4': 2.49,\r\n  'ESC': 5.65,\r\n  'LSO': 10.58,\r\n  'ZYK': 11.45,\r\n  '9NV': 8.99,\r\n  '23F': 5.27,\r\n  'ORN': 4.25,\r\n  'HOX': 6.61,\r\n  'CSD': 3.95,\r\n  'FP9': 3.03,\r\n  'DO2': 4.44,\r\n  'SLL': 11.53,\r\n  'P3Q': 9.54,\r\n  'ORQ': 6.04,\r\n  'MSL': 5.21,\r\n  'DNP': 2.45,\r\n  'CSB': 3.51,\r\n  'WLU': 4.24,\r\n  'CSA': 5.7,\r\n  'MT2': 5.51,\r\n  'CSO': 3.53,\r\n  'TPO': 4.73,\r\n  'MSP': 13.11,\r\n  '23S': 6.09,\r\n  'MSO': 4.96,\r\n  'PRO': 2.41,\r\n  'TPL': 5.41,\r\n  'DNS': 8.79,\r\n  'CSK': 3.91,\r\n  'Z70': 7.4,\r\n  'CSJ': 7.51,\r\n  'DNW': 7.97,\r\n  'PRK': 9.15,\r\n  'GSU': 11.81,\r\n  'LTA': 6.57,\r\n  'HPE': 6.63,\r\n  'TPQ': 6.48,\r\n  'PRJ': 5.26,\r\n  'PSW': 4.65,\r\n  'L3O': 3.89,\r\n  'CSU': 4.89,\r\n  'ALY': 7.38,\r\n  'M3L': 7.12,\r\n  'CSW': 3.68,\r\n  'XPR': 7.68,\r\n  'D4P': 5.66,\r\n  'FOE': 8.17,\r\n  'SLZ': 5.69,\r\n  'CSP': 5.26,\r\n  'TQI': 7.68,\r\n  'ALT': 2.72,\r\n  'CSR': 5.42,\r\n  'CSS': 3.61,\r\n  'M3R': 7.18,\r\n  'ALO': 2.57,\r\n  'R4K': 4.67,\r\n  'SMF': 9.0,\r\n  'MSA': 2.73,\r\n  'SMC': 3.39,\r\n  'CSX': 3.47,\r\n  'SME': 4.8,\r\n  'ETA': 2.4,\r\n  'CSZ': 3.6,\r\n  '22G': 8.8,\r\n  'MSE': 4.62,\r\n  'ALN': 6.16,\r\n  'PSH': 7.26,\r\n  'CTE': 7.27,\r\n  'DON': 6.72,\r\n  'CTH': 3.45,\r\n  'U2X': 11.54,\r\n  '6CW': 7.56,\r\n  'TQZ': 6.97,\r\n  '3YM': 6.52,\r\n  'OSE': 4.49,\r\n  '2VA': 9.82,\r\n  'TQQ': 7.76,\r\n  'NRG': 8.35,\r\n  'BPE': 7.24,\r\n  'F2F': 6.25,\r\n  '1TQ': 8.58,\r\n  'I2M': 3.13,\r\n  'NVA': 3.76,\r\n  'R1A': 8.2,\r\n  'QPA': 6.95,\r\n  'C1X': 11.63,\r\n  'FRD': 5.05,\r\n  'HR7': 6.98,\r\n  'SNC': 3.93,\r\n  'QPH': 5.15,\r\n  '26B': 8.39,\r\n  'DPQ': 6.54,\r\n  'DPP': 2.51,\r\n  '2TY': 8.65,\r\n  'TNR': 6.88,\r\n  'PTH': 8.35,\r\n  'DPL': 3.58,\r\n  'APK': 8.79,\r\n  '1TY': 8.84,\r\n  'HRG': 7.36,\r\n  'PTM': 8.74,\r\n  '1U8': 3.62,\r\n  'PTR': 8.64,\r\n  'LVG': 3.01,\r\n  '6FL': 4.85,\r\n  'SOC': 4.05,\r\n  'KPI': 9.79,\r\n  'IPG': 2.91,\r\n  'P2Y': 2.51,\r\n  'N2C': 3.55,\r\n  'T0I': 7.34,\r\n  'MPH': 5.29,\r\n  'R2T': 4.71,\r\n  'TOX': 6.78,\r\n  'P2Q': 9.8,\r\n  'GPL': 10.77,\r\n  'MPJ': 5.07,\r\n  'F2Y': 6.2,\r\n  'T11': 8.58,\r\n  '9NR': 9.33,\r\n  'FPR': 8.85,\r\n  '9NF': 8.93,\r\n  'KPY': 10.17,\r\n  '9NE': 9.77,\r\n  'TOQ': 7.5,\r\n  'MPQ': 4.2,\r\n  'FPK': 3.08,\r\n  'HQA': 7.25,\r\n  'SOY': 10.94\r\n}\r\nconst DefaultResidueRadius = 5.0\r\n\r\n// http://dx.doi.org/10.1039/b801115j (or 1.6)\r\nconst CovalentRadii = {\r\n  'H': 0.31,\r\n  'HE': 0.28,\r\n  'LI': 1.28,\r\n  'BE': 0.96,\r\n  'B': 0.84,\r\n  'C': 0.76,\r\n  'N': 0.71,\r\n  'O': 0.66,\r\n  'F': 0.57,\r\n  'NE': 0.58,\r\n  'NA': 1.66,\r\n  'MG': 1.41,\r\n  'AL': 1.21,\r\n  'SI': 1.11,\r\n  'P': 1.07,\r\n  'S': 1.05,\r\n  'CL': 1.02,\r\n  'AR': 1.06,\r\n  'K': 2.03,\r\n  'CA': 1.76,\r\n  'SC': 1.7,\r\n  'TI': 1.6,\r\n  'V': 1.53,\r\n  'CR': 1.39,\r\n  'MN': 1.39,\r\n  'FE': 1.32,\r\n  'CO': 1.26,\r\n  'NI': 1.24,\r\n  'CU': 1.32,\r\n  'ZN': 1.22,\r\n  'GA': 1.22,\r\n  'GE': 1.2,\r\n  'AS': 1.19,\r\n  'SE': 1.2,\r\n  'BR': 1.2,\r\n  'KR': 1.16,\r\n  'RB': 2.2,\r\n  'SR': 1.95,\r\n  'Y': 1.9,\r\n  'ZR': 1.75,\r\n  'NB': 1.64,\r\n  'MO': 1.54,\r\n  'TC': 1.47,\r\n  'RU': 1.46,\r\n  'RH': 1.42,\r\n  'PD': 1.39,\r\n  'AG': 1.45,\r\n  'CD': 1.44,\r\n  'IN': 1.42,\r\n  'SN': 1.39,\r\n  'SB': 1.39,\r\n  'TE': 1.38,\r\n  'I': 1.39,\r\n  'XE': 1.4,\r\n  'CS': 2.44,\r\n  'BA': 2.15,\r\n  'LA': 2.07,\r\n  'CE': 2.04,\r\n  'PR': 2.03,\r\n  'ND': 2.01,\r\n  'PM': 1.99,\r\n  'SM': 1.98,\r\n  'EU': 1.98,\r\n  'GD': 1.96,\r\n  'TB': 1.94,\r\n  'DY': 1.92,\r\n  'HO': 1.92,\r\n  'ER': 1.89,\r\n  'TM': 1.9,\r\n  'YB': 1.87,\r\n  'LU': 1.87,\r\n  'HF': 1.75,\r\n  'TA': 1.7,\r\n  'W': 1.62,\r\n  'RE': 1.51,\r\n  'OS': 1.44,\r\n  'IR': 1.41,\r\n  'PT': 1.36,\r\n  'AU': 1.36,\r\n  'HG': 1.32,\r\n  'TL': 1.45,\r\n  'PB': 1.46,\r\n  'BI': 1.48,\r\n  'PO': 1.4,\r\n  'AT': 1.5,\r\n  'RN': 1.5,\r\n  'FR': 2.6,\r\n  'RA': 2.21,\r\n  'AC': 2.15,\r\n  'TH': 2.06,\r\n  'PA': 2.0,\r\n  'U': 1.96,\r\n  'NP': 1.9,\r\n  'PU': 1.87,\r\n  'AM': 1.8,\r\n  'CM': 1.69,\r\n  'BK': 1.6,\r\n  'CF': 1.6,\r\n  'ES': 1.6,\r\n  'FM': 1.6,\r\n  'MD': 1.6,\r\n  'NO': 1.6,\r\n  'LR': 1.6,\r\n  'RF': 1.6,\r\n  'DB': 1.6,\r\n  'SG': 1.6,\r\n  'BH': 1.6,\r\n  'HS': 1.6,\r\n  'MT': 1.6,\r\n  'DS': 1.6,\r\n  'RG': 1.6,\r\n  'CN': 1.6,\r\n  'UUT': 1.6,\r\n  'FL': 1.6,\r\n  'UUP': 1.6,\r\n  'LV': 1.6,\r\n  'UUH': 1.6\r\n}\r\nconst DefaultCovalentRadius = 1.6\r\n\r\n// http://blanco.biomol.uci.edu/Whole_residue_HFscales.txt\r\nconst ResidueHydrophobicity = {\r\n  // AA  DGwif   DGwoct  Oct-IF\r\n  'ALA': [ 0.17, 0.50, 0.33 ],\r\n  'ARG': [ 0.81, 1.81, 1.00 ],\r\n  'ASN': [ 0.42, 0.85, 0.43 ],\r\n  'ASP': [ 1.23, 3.64, 2.41 ],\r\n  'ASH': [ -0.07, 0.43, 0.50 ],\r\n  'CYS': [ -0.24, -0.02, 0.22 ],\r\n  'GLN': [ 0.58, 0.77, 0.19 ],\r\n  'GLU': [ 2.02, 3.63, 1.61 ],\r\n  'GLH': [ -0.01, 0.11, 0.12 ],\r\n  'GLY': [ 0.01, 1.15, 1.14 ],\r\n  // \"His+\": [  0.96,  2.33,  1.37 ],\r\n  'HIS': [ 0.17, 0.11, -0.06 ],\r\n  'ILE': [ -0.31, -1.12, -0.81 ],\r\n  'LEU': [ -0.56, -1.25, -0.69 ],\r\n  'LYS': [ 0.99, 2.80, 1.81 ],\r\n  'MET': [ -0.23, -0.67, -0.44 ],\r\n  'PHE': [ -1.13, -1.71, -0.58 ],\r\n  'PRO': [ 0.45, 0.14, -0.31 ],\r\n  'SER': [ 0.13, 0.46, 0.33 ],\r\n  'THR': [ 0.14, 0.25, 0.11 ],\r\n  'TRP': [ -1.85, -2.09, -0.24 ],\r\n  'TYR': [ -0.94, -0.71, 0.23 ],\r\n  'VAL': [ 0.07, -0.46, -0.53 ]\r\n}\r\nconst DefaultResidueHydrophobicity = [ 0.00, 0.00, 0.00 ]\r\n\r\nconst AA1 = {\r\n  'HIS': 'H',\r\n  'ARG': 'R',\r\n  'LYS': 'K',\r\n  'ILE': 'I',\r\n  'PHE': 'F',\r\n  'LEU': 'L',\r\n  'TRP': 'W',\r\n  'ALA': 'A',\r\n  'MET': 'M',\r\n  'PRO': 'P',\r\n  'CYS': 'C',\r\n  'ASN': 'N',\r\n  'VAL': 'V',\r\n  'GLY': 'G',\r\n  'SER': 'S',\r\n  'GLN': 'Q',\r\n  'TYR': 'Y',\r\n  'ASP': 'D',\r\n  'GLU': 'E',\r\n  'THR': 'T',\r\n\r\n  'ASH': 'D',\r\n  'GLH': 'E',\r\n\r\n  'UNK': ''\r\n}\r\n\r\nconst AA3 = Object.keys(AA1)\r\n\r\nconst RnaBases = [ 'A', 'C', 'T', 'G', 'U' ]\r\n\r\nconst DnaBases = [ 'DA', 'DC', 'DT', 'DG', 'DU', 'TCY', 'MCY', '5CM' ]\r\n\r\nconst PurinBases = [ 'A', 'G', 'DA', 'DG' ]\r\n\r\nconst WaterNames = [\r\n  'SOL', 'WAT', 'HOH', 'H2O', 'W', 'DOD', 'D3O', 'TIP3', 'TIP4', 'SPC'\r\n]\r\n\r\n// all chemical components with the word \"ion\" in their name, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// SELECT GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id) as c, id_\r\n//     FROM pdb.chem_comp WHERE name LIKE \"% ION%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nconst IonNames = [\r\n  '118', '119', '1AL', '1CU', '2FK', '2HP', '2OF', '3CO',\r\n  '3MT', '3NI', '3OF', '3P8', '4MO', '4PU', '543', '6MO', 'ACT', 'AG', 'AL',\r\n  'ALF', 'AM', 'ATH', 'AU', 'AU3', 'AUC', 'AZI', 'BA', 'BCT', 'BEF', 'BF4', 'BO4',\r\n  'BR', 'BS3', 'BSY', 'CA', 'CAC', 'CD', 'CD1', 'CD3', 'CD5', 'CE', 'CHT', 'CL',\r\n  'CO', 'CO3', 'CO5', 'CON', 'CR', 'CS', 'CSB', 'CU', 'CU1', 'CU3', 'CUA', 'CUZ',\r\n  'CYN', 'DME', 'DMI', 'DSC', 'DTI', 'DY', 'E4N', 'EDR', 'EMC', 'ER3', 'EU',\r\n  'EU3', 'F', 'FE', 'FE2', 'FPO', 'GA', 'GD3', 'GEP', 'HAI', 'HG', 'HGC', 'IN',\r\n  'IOD', 'IR', 'IR3', 'IRI', 'IUM', 'K', 'KO4', 'LA', 'LCO', 'LCP', 'LI', 'LU',\r\n  'MAC', 'MG', 'MH2', 'MH3', 'MLI', 'MLT', 'MMC', 'MN', 'MN3', 'MN5', 'MN6',\r\n  'MO1', 'MO2', 'MO3', 'MO4', 'MO5', 'MO6', 'MOO', 'MOS', 'MOW', 'MW1', 'MW2',\r\n  'MW3', 'NA', 'NA2', 'NA5', 'NA6', 'NAO', 'NAW', 'NCO', 'NET', 'NH4', 'NI',\r\n  'NI1', 'NI2', 'NI3', 'NO2', 'NO3', 'NRU', 'O4M', 'OAA', 'OC1', 'OC2', 'OC3',\r\n  'OC4', 'OC5', 'OC6', 'OC7', 'OC8', 'OCL', 'OCM', 'OCN', 'OCO', 'OF1', 'OF2',\r\n  'OF3', 'OH', 'OS', 'OS4', 'OXL', 'PB', 'PBM', 'PD', 'PDV', 'PER', 'PI', 'PO3',\r\n  'PO4', 'PR', 'PT', 'PT4', 'PTN', 'RB', 'RH3', 'RHD', 'RU', 'SB', 'SCN', 'SE4',\r\n  'SEK', 'SM', 'SMO', 'SO3', 'SO4', 'SR', 'T1A', 'TB', 'TBA', 'TCN', 'TEA', 'TH',\r\n  'THE', 'TL', 'TMA', 'TRA', 'UNX', 'V', 'VN3', 'VO4', 'W', 'WO5', 'Y1', 'YB',\r\n  'YB2', 'YH', 'YT3', 'ZCM', 'ZN', 'ZN2', 'ZN3', 'ZNO', 'ZO3',\r\n    // additional ion names\r\n  'OHX'\r\n]\r\n\r\n// all chemical components with the word \"%saccharide%\" in their type, Sep 2016\r\n//\r\n// SET SESSION group_concat_max_len = 1000000;\r\n// select GROUP_CONCAT(id_ ORDER BY id_ ASC SEPARATOR '\", \"') from\r\n// (\r\n//     SELECT count(obj_id), id_\r\n//     FROM pdb.chem_comp WHERE type like \"%SACCHARIDE%\"\r\n//     GROUP BY id_\r\n// ) AS t1;\r\nconst SaccharideNames = [\r\n  '045', '0AT', '0BD', '0MK', '0NZ', '0TS', '0V4', '0XY', '0YT', '10M',\r\n  '147', '149', '14T', '15L', '16G', '18T', '18Y', '1AR', '1BW', '1GL', '1GN',\r\n  '1JB', '1LL', '1NA', '1S3', '26M', '26Q', '26R', '26V', '26W', '26Y', '27C',\r\n  '289', '291', '293', '2DG', '2F8', '2FG', '2FL', '2FP', '2GL', '2M4', '2M5',\r\n  '32O', '34V', '3CM', '3DO', '3DY', '3FM', '3LR', '3MF', '3MG', '3SA', '3ZW',\r\n  '46D', '46M', '46Z', '48Z', '4CQ', '4GC', '4NN', '50A', '5DI', '5GF', '5MM',\r\n  '5RP', '5SA', '5SP', '64K', '6PG', '6SA', '7JZ', '7SA', 'A1Q', 'A2G', 'AAB',\r\n  'AAL', 'AAO', 'ABC', 'ABD', 'ABE', 'ABF', 'ABL', 'ACG', 'ACI', 'ACR', 'ACX',\r\n  'ADA', 'ADG', 'ADR', 'AF1', 'AFD', 'AFL', 'AFO', 'AFP', 'AFR', 'AGC', 'AGH',\r\n  'AGL', 'AHR', 'AIG', 'ALL', 'ALX', 'AMU', 'AOG', 'AOS', 'ARA', 'ARB', 'ARE',\r\n  'ARI', 'ASG', 'ASO', 'AXP', 'AXR', 'B0D', 'B16', 'B2G', 'B4G', 'B6D', 'B8D',\r\n  'B9D', 'BBK', 'BCD', 'BDG', 'BDP', 'BDR', 'BEM', 'BFP', 'BGC', 'BGL', 'BGP',\r\n  'BGS', 'BHG', 'BMA', 'BMX', 'BNG', 'BNX', 'BOG', 'BRI', 'BXF', 'BXP', 'BXX',\r\n  'BXY', 'C3X', 'C4X', 'C5X', 'CAP', 'CBI', 'CBK', 'CBS', 'CDR', 'CEG', 'CGF',\r\n  'CHO', 'CR1', 'CR6', 'CRA', 'CT3', 'CTO', 'CTR', 'CTT', 'D6G', 'DAF', 'DAG',\r\n  'DDA', 'DDB', 'DDL', 'DEL', 'DFR', 'DFX', 'DG0', 'DGC', 'DGD', 'DGM', 'DGS',\r\n  'DIG', 'DLF', 'DLG', 'DMU', 'DNO', 'DOM', 'DP5', 'DQQ', 'DQR', 'DR2', 'DR3',\r\n  'DR4', 'DRI', 'DSR', 'DT6', 'DVC', 'E4P', 'E5G', 'EAG', 'EBG', 'EBQ', 'EGA',\r\n  'EJT', 'EPG', 'ERE', 'ERI', 'F1P', 'F1X', 'F6P', 'FBP', 'FCA', 'FCB', 'FCT',\r\n  'FDP', 'FDQ', 'FFC', 'FIX', 'FMO', 'FRU', 'FSI', 'FU4', 'FUB', 'FUC', 'FUD',\r\n  'FUL', 'FXP', 'G16', 'G1P', 'G2F', 'G3I', 'G4D', 'G4S', 'G6D', 'G6P', 'G6S',\r\n  'GAC', 'GAD', 'GAL', 'GC1', 'GC4', 'GCD', 'GCN', 'GCO', 'GCS', 'GCT', 'GCU',\r\n  'GCV', 'GCW', 'GCX', 'GE1', 'GFG', 'GFP', 'GIV', 'GL0', 'GL2', 'GL5', 'GL6',\r\n  'GL7', 'GL9', 'GLA', 'GLB', 'GLC', 'GLD', 'GLF', 'GLG', 'GLO', 'GLP', 'GLS',\r\n  'GLT', 'GLW', 'GMH', 'GN1', 'GNX', 'GP1', 'GP4', 'GPH', 'GPM', 'GQ1', 'GQ2',\r\n  'GQ4', 'GS1', 'GS4', 'GSA', 'GSD', 'GTE', 'GTH', 'GTK', 'GTR', 'GTZ', 'GU0',\r\n  'GU1', 'GU2', 'GU3', 'GU4', 'GU5', 'GU6', 'GU8', 'GU9', 'GUF', 'GUP', 'GUZ',\r\n  'GYP', 'GYV', 'H2P', 'HDL', 'HMS', 'HS2', 'HSD', 'HSG', 'HSH', 'HSJ', 'HSQ',\r\n  'HSR', 'HSU', 'HSX', 'HSY', 'HSZ', 'IAB', 'IDG', 'IDR', 'IDS', 'IDT', 'IDU',\r\n  'IDX', 'IDY', 'IMK', 'IN1', 'IPT', 'ISL', 'KBG', 'KD2', 'KDA', 'KDM', 'KDO',\r\n  'KFN', 'KO1', 'KO2', 'KTU', 'L6S', 'LAG', 'LAI', 'LAK', 'LAO', 'LAT', 'LB2',\r\n  'LBT', 'LCN', 'LDY', 'LGC', 'LGU', 'LM2', 'LMT', 'LMU', 'LOG', 'LOX', 'LPK',\r\n  'LSM', 'LTM', 'LVZ', 'LXB', 'LXZ', 'M1F', 'M3M', 'M6P', 'M8C', 'MA1', 'MA2',\r\n  'MA3', 'MAB', 'MAG', 'MAL', 'MAN', 'MAT', 'MAV', 'MAW', 'MBG', 'MCU', 'MDA',\r\n  'MDM', 'MDP', 'MFA', 'MFB', 'MFU', 'MG5', 'MGA', 'MGL', 'MLB', 'MMA', 'MMN',\r\n  'MN0', 'MRP', 'MTT', 'MUG', 'MVP', 'MXY', 'N1L', 'N9S', 'NAA', 'NAG', 'NBG',\r\n  'NDG', 'NED', 'NG1', 'NG6', 'NGA', 'NGB', 'NGC', 'NGE', 'NGF', 'NGL', 'NGS',\r\n  'NGY', 'NHF', 'NM6', 'NM9', 'NTF', 'NTO', 'NTP', 'NXD', 'NYT', 'OPG', 'OPM',\r\n  'ORP', 'OX2', 'P3M', 'P53', 'P6P', 'PA5', 'PNA', 'PNG', 'PNW', 'PRP', 'PSJ',\r\n  'PSV', 'PTQ', 'QDK', 'QPS', 'QV4', 'R1P', 'R1X', 'R2B', 'R5P', 'RAA', 'RAE',\r\n  'RAF', 'RAM', 'RAO', 'RAT', 'RB5', 'RBL', 'RCD', 'RDP', 'REL', 'RER', 'RF5',\r\n  'RG1', 'RGG', 'RHA', 'RIB', 'RIP', 'RNS', 'RNT', 'ROB', 'ROR', 'RPA', 'RST',\r\n  'RUB', 'RUU', 'RZM', 'S6P', 'S7P', 'SA0', 'SCR', 'SDD', 'SF6', 'SF9', 'SG4',\r\n  'SG5', 'SG6', 'SG7', 'SGA', 'SGC', 'SGD', 'SGN', 'SGS', 'SHB', 'SHG', 'SI3',\r\n  'SIO', 'SOE', 'SOL', 'SSG', 'SUC', 'SUP', 'SUS', 'T6P', 'T6T', 'TAG', 'TCB',\r\n  'TDG', 'TGK', 'TGY', 'TH1', 'TIA', 'TM5', 'TM6', 'TM9', 'TMR', 'TMX', 'TOA',\r\n  'TOC', 'TRE', 'TYV', 'UCD', 'UDC', 'VG1', 'X0X', 'X1X', 'X2F', 'X4S', 'X5S',\r\n  'X6X', 'XBP', 'XDN', 'XDP', 'XIF', 'XIM', 'XLF', 'XLS', 'XMM', 'XUL', 'XXR',\r\n  'XYP', 'XYS', 'YO5', 'Z3Q', 'Z6J', 'Z9M', 'ZDC', 'ZDM'\r\n]\r\n\r\nconst ProteinBackboneAtoms = [\r\n  'CA', 'C', 'N', 'O',\r\n  'O1', 'O2', 'OC1', 'OC2', 'OX1', 'OXT',\r\n  'H', 'H1', 'H2', 'H3', 'HA', 'HN',\r\n  'BB'\r\n]\r\n\r\nconst NucleicBackboneAtoms = [\r\n  'P', \"O3'\", \"O5'\", \"C5'\", \"C4'\", \"C3'\", 'OP1', 'OP2',\r\n  'O3*', 'O5*', 'C5*', 'C4*', 'C3*'\r\n]\r\n\r\nconst ResidueTypeAtoms = {}\r\n\r\nResidueTypeAtoms[ ProteinBackboneType ] = {\r\n  trace: 'CA',\r\n  direction1: 'C',\r\n  direction2: [ 'O', 'OC1', 'O1', 'OX1', 'OXT' ],\r\n  backboneStart: 'N',\r\n  backboneEnd: 'C'\r\n}\r\n\r\nResidueTypeAtoms[ RnaBackboneType ] = {\r\n  trace: [ \"C4'\", 'C4*' ],\r\n  direction1: [ \"C1'\", 'C1*' ],\r\n  direction2: [ \"C3'\", 'C3*' ],\r\n  backboneStart: 'P',\r\n  backboneEnd: [ \"O3'\", 'O3*' ]\r\n}\r\n\r\nResidueTypeAtoms[ DnaBackboneType ] = {\r\n  trace: [ \"C3'\", 'C3*' ],\r\n  direction1: [ \"C2'\", 'C2*' ],\r\n  direction2: [ \"O4'\", 'O4*' ],\r\n  backboneStart: 'P',\r\n  backboneEnd: [ \"O3'\", 'O3*' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgProteinBackboneType ] = {\r\n  trace: [ 'CA', 'BB' ],\r\n  backboneStart: [ 'CA', 'BB' ],\r\n  backboneEnd: [ 'CA', 'BB' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgRnaBackboneType ] = {\r\n  trace: [ \"C4'\", 'C4*', 'P' ],\r\n  backboneStart: [ \"C4'\", 'C4*', 'P' ],\r\n  backboneEnd: [ \"C4'\", 'C4*', 'P' ]\r\n}\r\n\r\nResidueTypeAtoms[ CgDnaBackboneType ] = {\r\n  trace: [ \"C3'\", 'C3*', \"C2'\", 'P' ],  // C2' is used in martini ff\r\n  backboneStart: [ \"C3'\", 'C3*', \"C2'\", 'P' ],\r\n  backboneEnd: [ \"C3'\", 'C3*', \"C2'\", 'P' ]\r\n}\r\n\r\nResidueTypeAtoms[ UnknownBackboneType ] = {}\r\n\r\nexport {\r\n    UnknownEntity,\r\n    PolymerEntity,\r\n    NonPolymerEntity,\r\n    MacrolideEntity,\r\n    WaterEntity,\r\n\r\n    UnknownType,\r\n    WaterType,\r\n    IonType,\r\n    ProteinType,\r\n    RnaType,\r\n    DnaType,\r\n    SaccharideType,\r\n\r\n    UnknownBackboneType,\r\n    ProteinBackboneType,\r\n    RnaBackboneType,\r\n    DnaBackboneType,\r\n    CgProteinBackboneType,\r\n    CgRnaBackboneType,\r\n    CgDnaBackboneType,\r\n\r\n    ChemCompProtein,\r\n    ChemCompRna,\r\n    ChemCompDna,\r\n    ChemCompSaccharide,\r\n    ChemCompOther,\r\n    ChemCompNonPolymer,\r\n    ChemCompHetero,\r\n\r\n    SecStrucHelix,\r\n    SecStrucSheet,\r\n    SecStrucTurn,\r\n\r\n    VdwRadii,\r\n    DefaultVdwRadius,\r\n    ResidueRadii,\r\n    DefaultResidueRadius,\r\n    CovalentRadii,\r\n    DefaultCovalentRadius,\r\n    ResidueHydrophobicity,\r\n    DefaultResidueHydrophobicity,\r\n\r\n    AA1,\r\n    AA3,\r\n    RnaBases,\r\n    DnaBases,\r\n    PurinBases,\r\n    WaterNames,\r\n    IonNames,\r\n    SaccharideNames,\r\n\r\n    ProteinBackboneAtoms,\r\n    NucleicBackboneAtoms,\r\n\r\n    ResidueTypeAtoms\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/structure-constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3318,
    "kind": "variable",
    "name": "UnknownEntity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~UnknownEntity",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{UnknownEntity}",
    "description": "",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Structure Constants"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 3319,
    "kind": "variable",
    "name": "PolymerEntity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~PolymerEntity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{PolymerEntity}",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 3320,
    "kind": "variable",
    "name": "NonPolymerEntity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~NonPolymerEntity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{NonPolymerEntity}",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3321,
    "kind": "variable",
    "name": "MacrolideEntity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~MacrolideEntity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{MacrolideEntity}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3322,
    "kind": "variable",
    "name": "WaterEntity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~WaterEntity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{WaterEntity}",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3323,
    "kind": "variable",
    "name": "UnknownType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~UnknownType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{UnknownType}",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 3324,
    "kind": "variable",
    "name": "WaterType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~WaterType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{WaterType}",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 3325,
    "kind": "variable",
    "name": "IonType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~IonType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{IonType}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3326,
    "kind": "variable",
    "name": "ProteinType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ProteinType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ProteinType}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3327,
    "kind": "variable",
    "name": "RnaType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~RnaType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{RnaType}",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3328,
    "kind": "variable",
    "name": "DnaType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DnaType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DnaType}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3329,
    "kind": "variable",
    "name": "SaccharideType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~SaccharideType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{SaccharideType}",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3330,
    "kind": "variable",
    "name": "UnknownBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~UnknownBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{UnknownBackboneType}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 3331,
    "kind": "variable",
    "name": "ProteinBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ProteinBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ProteinBackboneType}",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3332,
    "kind": "variable",
    "name": "RnaBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~RnaBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{RnaBackboneType}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 3333,
    "kind": "variable",
    "name": "DnaBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DnaBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DnaBackboneType}",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 3334,
    "kind": "variable",
    "name": "CgProteinBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~CgProteinBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{CgProteinBackboneType}",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 3335,
    "kind": "variable",
    "name": "CgRnaBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~CgRnaBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{CgRnaBackboneType}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 3336,
    "kind": "variable",
    "name": "CgDnaBackboneType",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~CgDnaBackboneType",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{CgDnaBackboneType}",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 3337,
    "kind": "variable",
    "name": "ChemCompProtein",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompProtein",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompProtein}",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3338,
    "kind": "variable",
    "name": "ChemCompRna",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompRna",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompRna}",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3339,
    "kind": "variable",
    "name": "ChemCompDna",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompDna",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompDna}",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 3340,
    "kind": "variable",
    "name": "ChemCompSaccharide",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompSaccharide",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompSaccharide}",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 3341,
    "kind": "variable",
    "name": "ChemCompOther",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompOther",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompOther}",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 3342,
    "kind": "variable",
    "name": "ChemCompNonPolymer",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompNonPolymer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompNonPolymer}",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 3343,
    "kind": "variable",
    "name": "ChemCompHetero",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ChemCompHetero",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ChemCompHetero}",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 3344,
    "kind": "variable",
    "name": "SecStrucHelix",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~SecStrucHelix",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{SecStrucHelix}",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 3345,
    "kind": "variable",
    "name": "SecStrucSheet",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~SecStrucSheet",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{SecStrucSheet}",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 3346,
    "kind": "variable",
    "name": "SecStrucTurn",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~SecStrucTurn",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{SecStrucTurn}",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 3347,
    "kind": "variable",
    "name": "VdwRadii",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~VdwRadii",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{VdwRadii}",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 3348,
    "kind": "variable",
    "name": "DefaultVdwRadius",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DefaultVdwRadius",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DefaultVdwRadius}",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 3349,
    "kind": "variable",
    "name": "ResidueRadii",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ResidueRadii",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ResidueRadii}",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 3350,
    "kind": "variable",
    "name": "DefaultResidueRadius",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DefaultResidueRadius",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DefaultResidueRadius}",
    "description": null,
    "lineNumber": 920,
    "undocument": true
  },
  {
    "__docId__": 3351,
    "kind": "variable",
    "name": "CovalentRadii",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~CovalentRadii",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{CovalentRadii}",
    "description": null,
    "lineNumber": 923,
    "undocument": true
  },
  {
    "__docId__": 3352,
    "kind": "variable",
    "name": "DefaultCovalentRadius",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DefaultCovalentRadius",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DefaultCovalentRadius}",
    "description": null,
    "lineNumber": 1042,
    "undocument": true
  },
  {
    "__docId__": 3353,
    "kind": "variable",
    "name": "ResidueHydrophobicity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ResidueHydrophobicity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ResidueHydrophobicity}",
    "description": null,
    "lineNumber": 1045,
    "undocument": true
  },
  {
    "__docId__": 3354,
    "kind": "variable",
    "name": "DefaultResidueHydrophobicity",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DefaultResidueHydrophobicity",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DefaultResidueHydrophobicity}",
    "description": null,
    "lineNumber": 1071,
    "undocument": true
  },
  {
    "__docId__": 3355,
    "kind": "variable",
    "name": "AA1",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~AA1",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{AA1}",
    "description": null,
    "lineNumber": 1073,
    "undocument": true
  },
  {
    "__docId__": 3356,
    "kind": "variable",
    "name": "AA3",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~AA3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{AA3}",
    "description": null,
    "lineNumber": 1101,
    "undocument": true
  },
  {
    "__docId__": 3357,
    "kind": "variable",
    "name": "RnaBases",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~RnaBases",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{RnaBases}",
    "description": null,
    "lineNumber": 1103,
    "undocument": true
  },
  {
    "__docId__": 3358,
    "kind": "variable",
    "name": "DnaBases",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~DnaBases",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{DnaBases}",
    "description": null,
    "lineNumber": 1105,
    "undocument": true
  },
  {
    "__docId__": 3359,
    "kind": "variable",
    "name": "PurinBases",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~PurinBases",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{PurinBases}",
    "description": null,
    "lineNumber": 1107,
    "undocument": true
  },
  {
    "__docId__": 3360,
    "kind": "variable",
    "name": "WaterNames",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~WaterNames",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{WaterNames}",
    "description": null,
    "lineNumber": 1109,
    "undocument": true
  },
  {
    "__docId__": 3361,
    "kind": "variable",
    "name": "IonNames",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~IonNames",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{IonNames}",
    "description": null,
    "lineNumber": 1122,
    "undocument": true
  },
  {
    "__docId__": 3362,
    "kind": "variable",
    "name": "SaccharideNames",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~SaccharideNames",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{SaccharideNames}",
    "description": null,
    "lineNumber": 1154,
    "undocument": true
  },
  {
    "__docId__": 3363,
    "kind": "variable",
    "name": "ProteinBackboneAtoms",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ProteinBackboneAtoms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ProteinBackboneAtoms}",
    "description": null,
    "lineNumber": 1206,
    "undocument": true
  },
  {
    "__docId__": 3364,
    "kind": "variable",
    "name": "NucleicBackboneAtoms",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~NucleicBackboneAtoms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{NucleicBackboneAtoms}",
    "description": null,
    "lineNumber": 1213,
    "undocument": true
  },
  {
    "__docId__": 3365,
    "kind": "variable",
    "name": "ResidueTypeAtoms",
    "memberof": "src/structure/structure-constants.js",
    "static": true,
    "longname": "src/structure/structure-constants.js~ResidueTypeAtoms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-constants.js",
    "importStyle": "{ResidueTypeAtoms}",
    "description": null,
    "lineNumber": 1218,
    "undocument": true
  },
  {
    "__docId__": 3366,
    "kind": "file",
    "name": "src/structure/structure-utils.js",
    "content": "/**\r\n * @file Structure Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport { binarySearchIndexOf } from '../utils.js'\r\nimport Helixbundle from '../geometry/helixbundle.js'\r\nimport Kdtree from '../geometry/kdtree.js'\r\nimport { getSymmetryOperations } from '../symmetry/symmetry-utils.js'\r\nimport Assembly from '../symmetry/assembly.js'\r\n\r\nimport { UnknownBackboneType } from './structure-constants'\r\n\r\nfunction reorderAtoms (structure) {\r\n  if (Debug) Log.time('reorderAtoms')\r\n\r\n  var ap1 = structure.getAtomProxy()\r\n  var ap2 = structure.getAtomProxy()\r\n\r\n  function compareModelChainResno (index1, index2) {\r\n    ap1.index = index1\r\n    ap2.index = index2\r\n    if (ap1.modelindex < ap2.modelindex) {\r\n      return -1\r\n    } else if (ap1.modelindex > ap2.modelindex) {\r\n      return 1\r\n    } else {\r\n      if (ap1.chainname < ap2.chainname) {\r\n        return -1\r\n      } else if (ap1.chainname > ap2.chainname) {\r\n        return 1\r\n      } else {\r\n        if (ap1.resno < ap2.resno) {\r\n          return -1\r\n        } else if (ap1.resno > ap2.resno) {\r\n          return 1\r\n        } else {\r\n          return 0\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  structure.atomStore.sort(compareModelChainResno)\r\n\r\n  if (Debug) Log.timeEnd('reorderAtoms')\r\n}\r\n\r\nfunction assignSecondaryStructure (structure, secStruct) {\r\n  if (!secStruct) return\r\n\r\n  if (Debug) Log.time('assignSecondaryStructure')\r\n\r\n  var chainnames = []\r\n  structure.eachModel(function (mp) {\r\n    mp.eachChain(function (cp) {\r\n      chainnames.push(cp.chainname)\r\n    })\r\n  })\r\n\r\n  var chainnamesSorted = chainnames.slice().sort()\r\n  var chainnamesIndex = []\r\n  chainnamesSorted.forEach(function (c) {\r\n    chainnamesIndex.push(chainnames.indexOf(c))\r\n  })\r\n\r\n    // helix assignment\r\n\r\n  var helices = secStruct.helices\r\n\r\n  helices = helices.filter(function (h) {\r\n    return binarySearchIndexOf(chainnamesSorted, h[ 0 ]) >= 0\r\n  })\r\n\r\n  helices.sort(function (h1, h2) {\r\n    var c1 = h1[ 0 ]\r\n    var c2 = h2[ 0 ]\r\n    var r1 = h1[ 1 ]\r\n    var r2 = h2[ 1 ]\r\n\r\n    if (c1 === c2) {\r\n      if (r1 === r2) {\r\n        return 0\r\n      } else {\r\n        return r1 < r2 ? -1 : 1\r\n      }\r\n    } else {\r\n      var idx1 = binarySearchIndexOf(chainnamesSorted, c1)\r\n      var idx2 = binarySearchIndexOf(chainnamesSorted, c2)\r\n      return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\r\n    }\r\n  })\r\n\r\n  var residueStore = structure.residueStore\r\n\r\n  structure.eachModel(function (mp) {\r\n    var i = 0\r\n    var n = helices.length\r\n    if (n === 0) return\r\n    var helix = helices[ i ]\r\n    var helixRun = false\r\n    var done = false\r\n\r\n    mp.eachChain(function (cp) {\r\n      var chainChange = false\r\n\r\n      if (cp.chainname === helix[ 0 ]) {\r\n        var count = cp.residueCount\r\n        var offset = cp.residueOffset\r\n        var end = offset + count\r\n\r\n        for (var j = offset; j < end; ++j) {\r\n          if (residueStore.resno[ j ] === helix[ 1 ] &&  // resnoBeg\r\n                        residueStore.getInscode(j) === helix[ 2 ]   // inscodeBeg\r\n                    ) {\r\n            helixRun = true\r\n          }\r\n\r\n          if (helixRun) {\r\n            residueStore.sstruc[ j ] = helix[ 6 ]\r\n\r\n            if (residueStore.resno[ j ] === helix[ 4 ] &&  // resnoEnd\r\n                            residueStore.getInscode(j) === helix[ 5 ]   // inscodeEnd\r\n                        ) {\r\n              helixRun = false\r\n              i += 1\r\n\r\n              if (i < n) {\r\n                                // must look at previous residues as\r\n                                // residues may not be ordered by resno\r\n                j = offset - 1\r\n                helix = helices[ i ]\r\n                chainChange = cp.chainname !== helix[ 0 ]\r\n              } else {\r\n                done = true\r\n              }\r\n            }\r\n          }\r\n\r\n          if (chainChange || done) return\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n    // sheet assignment\r\n\r\n  var sheets = secStruct.sheets\r\n\r\n  sheets = sheets.filter(function (s) {\r\n    return binarySearchIndexOf(chainnamesSorted, s[ 0 ]) >= 0\r\n  })\r\n\r\n  sheets.sort(function (s1, s2) {\r\n    var c1 = s1[ 0 ]\r\n    var c2 = s2[ 0 ]\r\n\r\n    if (c1 === c2) return 0\r\n    var idx1 = binarySearchIndexOf(chainnamesSorted, c1)\r\n    var idx2 = binarySearchIndexOf(chainnamesSorted, c2)\r\n    return chainnamesIndex[ idx1 ] < chainnamesIndex[ idx2 ] ? -1 : 1\r\n  })\r\n\r\n  var strandCharCode = 'e'.charCodeAt(0)\r\n  structure.eachModel(function (mp) {\r\n    var i = 0\r\n    var n = sheets.length\r\n    if (n === 0) return\r\n    var sheet = sheets[ i ]\r\n    var sheetRun = false\r\n    var done = false\r\n\r\n    mp.eachChain(function (cp) {\r\n      var chainChange = false\r\n\r\n      if (cp.chainname === sheet[ 0 ]) {\r\n        var count = cp.residueCount\r\n        var offset = cp.residueOffset\r\n        var end = offset + count\r\n\r\n        for (var j = offset; j < end; ++j) {\r\n          if (residueStore.resno[ j ] === sheet[ 1 ] &&  // resnoBeg\r\n                        residueStore.getInscode(j) === sheet[ 2 ]   // inscodeBeg\r\n                    ) {\r\n            sheetRun = true\r\n          }\r\n\r\n          if (sheetRun) {\r\n            residueStore.sstruc[ j ] = strandCharCode\r\n\r\n            if (residueStore.resno[ j ] === sheet[ 4 ] &&  // resnoEnd\r\n                            residueStore.getInscode(j) === sheet[ 5 ]   // inscodeEnd\r\n                        ) {\r\n              sheetRun = false\r\n              i += 1\r\n\r\n              if (i < n) {\r\n                                // must look at previous residues as\r\n                                // residues may not be ordered by resno\r\n                j = offset - 1\r\n                sheet = sheets[ i ]\r\n                chainChange = cp.chainname !== sheet[ 0 ]\r\n              } else {\r\n                done = true\r\n              }\r\n            }\r\n          }\r\n\r\n          if (chainChange || done) return\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  if (Debug) Log.timeEnd('assignSecondaryStructure')\r\n}\r\n\r\nvar calculateSecondaryStructure = (function () {\r\n    // Implementation for proteins based on \"pv\"\r\n    //\r\n    // assigns secondary structure information based on a simple and very fast\r\n    // algorithm published by Zhang and Skolnick in their TM-align paper.\r\n    // Reference:\r\n    //\r\n    // TM-align: a protein structure alignment algorithm based on the Tm-score\r\n    // (2005) NAR, 33(7) 2302-2309\r\n\r\n  var zhangSkolnickSS = function (polymer, i, distances, delta) {\r\n    var structure = polymer.structure\r\n    var offset = polymer.residueIndexStart\r\n    var rp1 = structure.getResidueProxy()\r\n    var rp2 = structure.getResidueProxy()\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n\r\n    for (var j = Math.max(0, i - 2); j <= i; ++j) {\r\n      for (var k = 2; k < 5; ++k) {\r\n        if (j + k >= polymer.residueCount) {\r\n          continue\r\n        }\r\n\r\n        rp1.index = offset + j\r\n        rp2.index = offset + j + k\r\n        ap1.index = rp1.traceAtomIndex\r\n        ap2.index = rp2.traceAtomIndex\r\n\r\n        var d = ap1.distanceTo(ap2)\r\n\r\n        if (Math.abs(d - distances[ k - 2 ]) > delta) {\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  var isHelical = function (polymer, i) {\r\n    var helixDistances = [ 5.45, 5.18, 6.37 ]\r\n    var helixDelta = 2.1\r\n    return zhangSkolnickSS(polymer, i, helixDistances, helixDelta)\r\n  }\r\n\r\n  var isSheet = function (polymer, i) {\r\n    var sheetDistances = [ 6.1, 10.4, 13.0 ]\r\n    var sheetDelta = 1.42\r\n    return zhangSkolnickSS(polymer, i, sheetDistances, sheetDelta)\r\n  }\r\n\r\n  var proteinPolymer = function (p) {\r\n    var residueStore = p.residueStore\r\n    var offset = p.residueIndexStart\r\n    for (var i = 0, il = p.residueCount; i < il; ++i) {\r\n      var sstruc = 'c'\r\n      if (isHelical(p, i)) {\r\n        sstruc = 'h'\r\n      } else if (isSheet(p, i)) {\r\n        sstruc = 's'\r\n      }\r\n      residueStore.sstruc[ offset + i ] = sstruc.charCodeAt(0)\r\n    }\r\n  }\r\n\r\n  var cgPolymer = function (p) {\r\n    var localAngle = 20\r\n    var centerDist = 2.0\r\n\r\n    var residueStore = p.residueStore\r\n    var offset = p.residueIndexStart\r\n\r\n    var helixbundle = new Helixbundle(p)\r\n    var pos = helixbundle.position\r\n\r\n    var c1 = new Vector3()\r\n    var c2 = new Vector3()\r\n\r\n    for (var i = 0, il = p.residueCount; i < il; ++i) {\r\n      c1.fromArray(pos.center, i * 3)\r\n      c2.fromArray(pos.center, i * 3 + 3)\r\n      var d = c1.distanceTo(c2)\r\n\r\n      if (d < centerDist && d > 1.0 && pos.bending[ i ] < localAngle) {\r\n        residueStore.sstruc[ offset + i ] = 'h'.charCodeAt(0)\r\n        residueStore.sstruc[ offset + i + 1 ] = 'h'.charCodeAt(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  return function calculateSecondaryStructure (structure) {\r\n    if (Debug) Log.time('calculateSecondaryStructure')\r\n\r\n    structure.eachPolymer(function (p) {\r\n            // assign secondary structure\r\n      if (p.residueCount < 4) return\r\n      if (p.isCg()) {\r\n        cgPolymer(p)\r\n      } else if (p.isProtein()) {\r\n        proteinPolymer(p)\r\n      } else {\r\n        return\r\n      }\r\n\r\n            // set lone secondary structure assignments to \"c\"\r\n      var prevSstruc\r\n      var sstrucCount = 0\r\n      p.eachResidue(function (r) {\r\n        if (r.sstruc === prevSstruc) {\r\n          sstrucCount += 1\r\n        } else {\r\n          if (sstrucCount === 1) {\r\n            r.index -= 1\r\n            r.sstruc = 'c'\r\n          }\r\n          sstrucCount = 1\r\n          prevSstruc = r.sstruc\r\n        }\r\n      })\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('calculateSecondaryStructure')\r\n  }\r\n}())\r\n\r\n// const ChainnameAlphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" +\r\n//                           \"abcdefghijklmnopqrstuvwxyz\" +\r\n//                           \"0123456789\";\r\nconst ChainnameAlphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\r\n\r\nfunction getChainname (index) {\r\n  const n = ChainnameAlphabet.length\r\n  let j = index\r\n  let k = 0\r\n  let chainname = ChainnameAlphabet[j % n]\r\n  while (j >= n) {\r\n    j = Math.floor(j / n)\r\n    chainname += ChainnameAlphabet[j % n]\r\n    k += 1\r\n  }\r\n  if (k >= 5) {\r\n    Log.warn('chainname overflow')\r\n  }\r\n  return chainname\r\n}\r\n\r\nfunction calculateChainnames (structure, useExistingBonds) {\r\n  if (Debug) Log.time('calculateChainnames')\r\n\r\n  var doAutoChainName = true\r\n  structure.eachChain(function (c) {\r\n    if (c.chainname) doAutoChainName = false\r\n  })\r\n\r\n  if (doAutoChainName) {\r\n    var modelStore = structure.modelStore\r\n    var chainStore = structure.chainStore\r\n    var residueStore = structure.residueStore\r\n\r\n    var addChain = function (mIndex, chainname, rOffset, rCount) {\r\n      var ci = chainStore.count\r\n      for (var i = 0; i < rCount; ++i) {\r\n        residueStore.chainIndex[ rOffset + i ] = ci\r\n      }\r\n      chainStore.growIfFull()\r\n      chainStore.modelIndex[ ci ] = mIndex\r\n      chainStore.setChainname(ci, chainname)\r\n      chainStore.setChainid(ci, chainname)\r\n      chainStore.residueOffset[ ci ] = rOffset\r\n      chainStore.residueCount[ ci ] = rCount\r\n      chainStore.count += 1\r\n      modelStore.chainCount[ mIndex ] += 1\r\n    }\r\n\r\n    var ap1 = structure.getAtomProxy()\r\n    var ap2 = structure.getAtomProxy()\r\n\r\n    var i = 0\r\n    var mi = 0\r\n    var rStart = 0\r\n    var rEnd = 0\r\n    var chainData = []\r\n\r\n    if (residueStore.count === 1) {\r\n      chainData.push({\r\n        mIndex: 0,\r\n        chainname: 'A',\r\n        rStart: 0,\r\n        rCount: 1\r\n      })\r\n    } else {\r\n      structure.eachResidueN(2, function (rp1, rp2) {\r\n        var newChain = false\r\n\r\n        var bbType1 = rp1.backboneType\r\n        var bbType2 = rp2.backboneType\r\n        var bbTypeUnk = UnknownBackboneType\r\n\r\n        rEnd = rp1.index\r\n\r\n        if (rp1.modelIndex !== rp2.modelIndex) {\r\n          newChain = true\r\n        } else if (rp1.moleculeType !== rp2.moleculeType) {\r\n          newChain = true\r\n        } else if (bbType1 !== bbTypeUnk && bbType1 === bbType2) {\r\n          ap1.index = rp1.backboneEndAtomIndex\r\n          ap2.index = rp2.backboneStartAtomIndex\r\n          if (useExistingBonds) {\r\n            newChain = !ap1.hasBondTo(ap2)\r\n          } else {\r\n            newChain = !ap1.connectedTo(ap2)\r\n          }\r\n        }\r\n\r\n        // current chain goes to end of the structure\r\n        if (!newChain && rp2.index === residueStore.count - 1) {\r\n          newChain = true\r\n          rEnd = rp2.index\r\n        }\r\n\r\n        if (newChain) {\r\n          chainData.push({\r\n            mIndex: mi,\r\n            chainname: getChainname(i),\r\n            rStart: rStart,\r\n            rCount: rEnd - rStart + 1\r\n          })\r\n\r\n          i += 1\r\n\r\n          if (rp1.modelIndex !== rp2.modelIndex) {\r\n            i = 0\r\n            mi += 1\r\n          }\r\n\r\n          // new chain for the last residue of the structure\r\n          if (rp2.index === residueStore.count - 1 && rEnd !== rp2.index) {\r\n            chainData.push({\r\n              mIndex: mi,\r\n              chainname: getChainname(i),\r\n              rStart: residueStore.count - 1,\r\n              rCount: 1\r\n            })\r\n          }\r\n\r\n          rStart = rp2.index\r\n          rEnd = rp2.index\r\n        }\r\n      })\r\n    }\r\n\r\n    //\r\n\r\n    chainStore.count = 0\r\n    chainData.forEach(function (d) {\r\n      addChain(d.mIndex, d.chainname, d.rStart, d.rCount)\r\n    })\r\n\r\n    var chainOffset = 0\r\n    structure.eachModel(function (mp) {\r\n      modelStore.chainOffset[ mp.index ] = chainOffset\r\n      modelStore.chainCount[ mp.index ] -= 1\r\n      chainOffset += modelStore.chainCount[ mp.index ]\r\n    })\r\n  }\r\n\r\n  if (Debug) Log.timeEnd('calculateChainnames')\r\n}\r\n\r\nfunction calculateBonds (structure) {\r\n  if (Debug) Log.time('calculateBonds')\r\n\r\n  calculateBondsWithin(structure)\r\n  calculateBondsBetween(structure)\r\n\r\n  if (Debug) Log.timeEnd('calculateBonds')\r\n}\r\n\r\nfunction calculateResidueBonds (r) {\r\n  var structure = r.structure\r\n  var a1 = structure.getAtomProxy()\r\n  var a2 = structure.getAtomProxy()\r\n\r\n  var count = r.atomCount\r\n  var offset = r.atomOffset\r\n  var end = offset + count\r\n  var end1 = end - 1\r\n\r\n  if (count > 500) {\r\n    if (Debug) Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\r\n    return\r\n  }\r\n\r\n  var i, j\r\n  var atomIndices1 = []\r\n  var atomIndices2 = []\r\n  var bondOrders = []\r\n\r\n  if (count > 50) {\r\n    var kdtree = new Kdtree(r, true)\r\n    var radius = r.isCg() ? 1.2 : 2.3\r\n\r\n    for (i = offset; i < end1; ++i) {\r\n      a1.index = i\r\n      var maxd = a1.covalent + radius + 0.3\r\n      var nearestAtoms = kdtree.nearest(\r\n                a1, Infinity, maxd * maxd\r\n            )\r\n      var m = nearestAtoms.length\r\n      for (j = 0; j < m; ++j) {\r\n        a2.index = nearestAtoms[ j ].index\r\n        if (a1.index < a2.index) {\r\n          if (a1.connectedTo(a2)) {\r\n            atomIndices1.push(a1.index - offset)\r\n            atomIndices2.push(a2.index - offset)\r\n            bondOrders.push(1)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    for (i = offset; i < end1; ++i) {\r\n      a1.index = i\r\n      for (j = i + 1; j <= end1; ++j) {\r\n        a2.index = j\r\n        if (a1.connectedTo(a2)) {\r\n          atomIndices1.push(i - offset)\r\n          atomIndices2.push(j - offset)\r\n          bondOrders.push(1)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    atomIndices1: atomIndices1,\r\n    atomIndices2: atomIndices2,\r\n    bondOrders: bondOrders\r\n  }\r\n}\r\n\r\nfunction calculateAtomBondMap (structure) {\r\n  if (Debug) Log.time('calculateAtomBondMap')\r\n\r\n  var atomBondMap = []\r\n\r\n  structure.eachBond(function (bp) {\r\n    var ai1 = bp.atomIndex1\r\n    var ai2 = bp.atomIndex2\r\n    if (atomBondMap[ ai1 ] === undefined) atomBondMap[ ai1 ] = []\r\n    atomBondMap[ ai1 ][ ai2 ] = bp.index\r\n  })\r\n\r\n  if (Debug) Log.timeEnd('calculateAtomBondMap')\r\n\r\n  return atomBondMap\r\n}\r\n\r\nfunction calculateBondsWithin (structure, onlyAddRung) {\r\n  if (Debug) Log.time('calculateBondsWithin')\r\n\r\n  var bondStore = structure.bondStore\r\n  var rungBondStore = structure.rungBondStore\r\n  var rungAtomSet = structure.getAtomSet(false)\r\n  var a1 = structure.getAtomProxy()\r\n  var a2 = structure.getAtomProxy()\r\n  var bp = structure.getBondProxy()\r\n  var atomBondMap = onlyAddRung ? null : calculateAtomBondMap(structure)\r\n\r\n  structure.eachResidue(function (r) {\r\n    if (!onlyAddRung) {\r\n      var count = r.atomCount\r\n      var offset = r.atomOffset\r\n\r\n      if (count > 500) {\r\n        Log.warn('more than 500 atoms, skip residue for auto-bonding', r.qualifiedName())\r\n        return\r\n      }\r\n\r\n      var bonds = r.getBonds()\r\n      var atomIndices1 = bonds.atomIndices1\r\n      var atomIndices2 = bonds.atomIndices2\r\n      var bondOrders = bonds.bondOrders\r\n      var nn = atomIndices1.length\r\n\r\n      for (var i = 0; i < nn; ++i) {\r\n        var ai1 = atomIndices1[ i ] + offset\r\n        var ai2 = atomIndices2[ i ] + offset\r\n        var tmp = atomBondMap[ ai1 ]\r\n        if (tmp !== undefined && (tmp = tmp[ ai2 ]) !== undefined) {\r\n          bp.index = tmp\r\n          var residueTypeBondIndex = r.residueType.getBondIndex(ai1, ai2)\r\n          // overwrite residueType bondOrder with value from existing bond\r\n          bondOrders[ residueTypeBondIndex ] = bp.bondOrder\r\n        } else {\r\n          a1.index = ai1\r\n          a2.index = ai2\r\n          // only add bond if not already in bondStore\r\n          bondStore.addBond(a1, a2, bondOrders[ i ])\r\n        }\r\n      }\r\n    }\r\n\r\n    // get RNA/DNA rung pseudo bonds\r\n    var traceAtomIndex = r.residueType.traceAtomIndex\r\n    var rungEndAtomIndex = r.residueType.rungEndAtomIndex\r\n    if (traceAtomIndex !== -1 && rungEndAtomIndex !== -1) {\r\n      a1.index = r.traceAtomIndex\r\n      a2.index = r.rungEndAtomIndex\r\n      rungBondStore.addBond(a1, a2)\r\n      rungAtomSet.set(a1.index)\r\n      rungAtomSet.set(a2.index)\r\n    }\r\n  })\r\n\r\n  structure.atomSetDict.rung = rungAtomSet\r\n\r\n  if (Debug) Log.timeEnd('calculateBondsWithin')\r\n}\r\n\r\nfunction calculateBondsBetween (structure, onlyAddBackbone, useExistingBonds) {\r\n  if (Debug) Log.time('calculateBondsBetween')\r\n\r\n  var bondStore = structure.bondStore\r\n  var backboneBondStore = structure.backboneBondStore\r\n  var backboneAtomSet = structure.getAtomSet(false)\r\n  var ap1 = structure.getAtomProxy()\r\n  var ap2 = structure.getAtomProxy()\r\n\r\n  if (backboneBondStore.count === 0) {\r\n    backboneBondStore.resize(structure.residueStore.count)\r\n  }\r\n\r\n  function addBondIfConnected (rp1, rp2) {\r\n    var bbType1 = rp1.backboneType\r\n    var bbType2 = rp2.backboneType\r\n    if (bbType1 !== UnknownBackboneType && bbType1 === bbType2) {\r\n      ap1.index = rp1.backboneEndAtomIndex\r\n      ap2.index = rp2.backboneStartAtomIndex\r\n      if ((useExistingBonds && ap1.hasBondTo(ap2)) || ap1.connectedTo(ap2)) {\r\n        if (!onlyAddBackbone) {\r\n          bondStore.addBond(ap1, ap2, 1)  // assume single bond\r\n        }\r\n        ap1.index = rp1.traceAtomIndex\r\n        ap2.index = rp2.traceAtomIndex\r\n        backboneBondStore.addBond(ap1, ap2)\r\n        backboneAtomSet.set(ap1.index)\r\n        backboneAtomSet.set(ap2.index)\r\n      }\r\n    }\r\n  }\r\n\r\n  structure.eachResidueN(2, addBondIfConnected)\r\n\r\n  var rp1 = structure.getResidueProxy()\r\n  var rp2 = structure.getResidueProxy()\r\n\r\n  // check for cyclic chains\r\n  structure.eachChain(function (cp) {\r\n    if (cp.residueCount === 0) return\r\n    rp1.index = cp.residueOffset\r\n    rp2.index = cp.residueOffset + cp.residueCount - 1\r\n    addBondIfConnected(rp2, rp1)\r\n  })\r\n\r\n  structure.atomSetDict.backbone = backboneAtomSet\r\n\r\n  if (!onlyAddBackbone) {\r\n    if (Debug) Log.time('calculateBondsBetween inter')\r\n    const spatialHash = structure.spatialHash\r\n    structure.eachResidue(function (rp) {\r\n      if (rp.backboneType === UnknownBackboneType && !rp.isWater()) {\r\n        rp.eachAtom(function (ap) {\r\n          spatialHash.eachWithin(ap.x, ap.y, ap.z, 4, function (idx) {\r\n            ap2.index = idx\r\n            if (ap.residueIndex !== ap2.residueIndex) {\r\n              bondStore.addBondIfConnected(ap, ap2, 1)  // assume single bond\r\n            }\r\n          })\r\n        })\r\n      }\r\n    })\r\n    if (Debug) Log.timeEnd('calculateBondsBetween inter')\r\n  }\r\n\r\n  if (Debug) Log.timeEnd('calculateBondsBetween')\r\n}\r\n\r\nfunction buildUnitcellAssembly (structure) {\r\n  if (!structure.unitcell) return\r\n\r\n  if (Debug) Log.time('buildUnitcellAssembly')\r\n\r\n  var uc = structure.unitcell\r\n\r\n  var centerFrac = structure.center.clone().applyMatrix4(uc.cartToFrac)\r\n  var symopDict = getSymmetryOperations(uc.spacegroup)\r\n\r\n  var positionFrac = new Vector3()\r\n  var centerFracSymop = new Vector3()\r\n  var positionFracSymop = new Vector3()\r\n\r\n  if (centerFrac.x > 1) positionFrac.x -= 1\r\n  if (centerFrac.x < 0) positionFrac.x += 1\r\n  if (centerFrac.y > 1) positionFrac.y -= 1\r\n  if (centerFrac.y < 0) positionFrac.y += 1\r\n  if (centerFrac.z > 1) positionFrac.z -= 1\r\n  if (centerFrac.z < 0) positionFrac.z += 1\r\n\r\n  function getMatrixList (shift) {\r\n    var matrixList = []\r\n\r\n    Object.keys(symopDict).forEach(function (name) {\r\n      var m = symopDict[ name ].clone()\r\n\r\n      centerFracSymop.copy(centerFrac).applyMatrix4(m)\r\n      positionFracSymop.setFromMatrixPosition(m)\r\n      positionFracSymop.sub(positionFrac)\r\n\r\n      if (centerFracSymop.x > 1) positionFracSymop.x -= 1\r\n      if (centerFracSymop.x < 0) positionFracSymop.x += 1\r\n      if (centerFracSymop.y > 1) positionFracSymop.y -= 1\r\n      if (centerFracSymop.y < 0) positionFracSymop.y += 1\r\n      if (centerFracSymop.z > 1) positionFracSymop.z -= 1\r\n      if (centerFracSymop.z < 0) positionFracSymop.z += 1\r\n\r\n      if (shift) positionFracSymop.add(shift)\r\n\r\n      m.setPosition(positionFracSymop)\r\n      m.multiplyMatrices(uc.fracToCart, m)\r\n      m.multiply(uc.cartToFrac)\r\n\r\n      matrixList.push(m)\r\n    })\r\n\r\n    return matrixList\r\n  }\r\n\r\n  var unitcellAssembly = new Assembly('UNITCELL')\r\n  var unitcellMatrixList = getMatrixList()\r\n  var ncsMatrixList\r\n  if (structure.biomolDict.NCS) {\r\n    ncsMatrixList = [ new Matrix4() ].concat(\r\n            structure.biomolDict.NCS.partList[ 0 ].matrixList\r\n        )\r\n    var ncsUnitcellMatrixList = []\r\n    unitcellMatrixList.forEach(function (sm) {\r\n      ncsMatrixList.forEach(function (nm) {\r\n        ncsUnitcellMatrixList.push(sm.clone().multiply(nm))\r\n      })\r\n    })\r\n    unitcellAssembly.addPart(ncsUnitcellMatrixList)\r\n  } else {\r\n    unitcellAssembly.addPart(unitcellMatrixList)\r\n  }\r\n\r\n  var vec = new Vector3()\r\n  var supercellAssembly = new Assembly('SUPERCELL')\r\n  var supercellMatrixList = Array.prototype.concat.call(\r\n    getMatrixList(vec.set(1, 0, 0)),  // 655\r\n    getMatrixList(vec.set(0, 1, 0)),  // 565\r\n    getMatrixList(vec.set(0, 0, 1)),  // 556\r\n\r\n    getMatrixList(vec.set(-1, 0, 0)),  // 455\r\n    getMatrixList(vec.set(0, -1, 0)),  // 545\r\n    getMatrixList(vec.set(0, 0, -1)),  // 554\r\n\r\n    getMatrixList(vec.set(1, 1, 0)),  // 665\r\n    getMatrixList(vec.set(1, 0, 1)),  // 656\r\n    getMatrixList(vec.set(0, 1, 1)),  // 566\r\n\r\n    getMatrixList(vec.set(-1, -1, 0)),  // 445\r\n    getMatrixList(vec.set(-1, 0, -1)),  // 454\r\n    getMatrixList(vec.set(0, -1, -1)),  // 544\r\n\r\n    getMatrixList(vec.set(1, -1, -1)),  // 644\r\n    getMatrixList(vec.set(1, 1, -1)),  // 664\r\n    getMatrixList(vec.set(1, -1, 1)),  // 646\r\n    getMatrixList(vec.set(-1, 1, 1)),  // 466\r\n    getMatrixList(vec.set(-1, -1, 1)),  // 446\r\n    getMatrixList(vec.set(-1, 1, -1)),  // 464\r\n\r\n    getMatrixList(vec.set(0, 1, -1)),  // 564\r\n    getMatrixList(vec.set(0, -1, 1)),  // 546\r\n    getMatrixList(vec.set(1, 0, -1)),  // 654\r\n    getMatrixList(vec.set(-1, 0, 1)),  // 456\r\n    getMatrixList(vec.set(1, -1, 0)),  // 645\r\n    getMatrixList(vec.set(-1, 1, 0)),  // 465\r\n\r\n    getMatrixList(),                         // 555\r\n    getMatrixList(vec.set(1, 1, 1)),  // 666\r\n    getMatrixList(vec.set(-1, -1, -1))   // 444\r\n  )\r\n  if (structure.biomolDict.NCS) {\r\n    var ncsSupercellMatrixList = []\r\n    supercellMatrixList.forEach(function (sm) {\r\n      ncsMatrixList.forEach(function (nm) {\r\n        ncsSupercellMatrixList.push(sm.clone().multiply(nm))\r\n      })\r\n    })\r\n    supercellAssembly.addPart(ncsSupercellMatrixList)\r\n  } else {\r\n    supercellAssembly.addPart(supercellMatrixList)\r\n  }\r\n\r\n  structure.biomolDict.UNITCELL = unitcellAssembly\r\n  structure.biomolDict.SUPERCELL = supercellAssembly\r\n\r\n  if (Debug) Log.timeEnd('buildUnitcellAssembly')\r\n}\r\n\r\nconst elm1 = [ 'H', 'C', 'O', 'N', 'S', 'P' ]\r\nconst elm2 = [ 'NA', 'CL', 'FE' ]\r\n\r\nfunction guessElement (atomName) {\r\n  let at = atomName.trim().toUpperCase()\r\n  if (parseInt(at.charAt(0))) at = at.substr(1)\r\n    // parse again to check for a second integer\r\n  if (parseInt(at.charAt(0))) at = at.substr(1)\r\n  const n = at.length\r\n\r\n  if (n === 0) return ''\r\n  if (n === 1) return at\r\n  if (n === 2) {\r\n    if (elm2.indexOf(at) !== -1) return at\r\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\r\n  }\r\n  if (n >= 3) {\r\n    if (elm1.indexOf(at[0]) !== -1) return at[0]\r\n  }\r\n  return ''\r\n}\r\n\r\n/**\r\n * Assigns ResidueType bonds.\r\n * @param {Structure} structure - the structure object\r\n * @return {undefined}\r\n */\r\nfunction assignResidueTypeBonds (structure) {\r\n    // if( Debug ) Log.time( \"assignResidueTypeBonds\" );\r\n\r\n  var bondHash = structure.bondHash\r\n  var countArray = bondHash.countArray\r\n  var offsetArray = bondHash.offsetArray\r\n  var indexArray = bondHash.indexArray\r\n  var bp = structure.getBondProxy()\r\n\r\n  structure.eachResidue(function (rp) {\r\n    var residueType = rp.residueType\r\n    if (residueType.bonds !== undefined) return\r\n\r\n    var atomOffset = rp.atomOffset\r\n    var atomIndices1 = []\r\n    var atomIndices2 = []\r\n    var bondOrders = []\r\n    var bondDict = {}\r\n\r\n    rp.eachAtom(function (ap) {\r\n      var index = ap.index\r\n      var offset = offsetArray[ index ]\r\n      var count = countArray[ index ]\r\n      for (var i = 0, il = count; i < il; ++i) {\r\n        bp.index = indexArray[ offset + i ]\r\n        var idx1 = bp.atomIndex1\r\n        var idx2 = bp.atomIndex2\r\n        if (idx1 > idx2) {\r\n          var tmp = idx2\r\n          idx2 = idx1\r\n          idx1 = tmp\r\n        }\r\n        var hash = idx1 + '|' + idx2\r\n        if (bondDict[ hash ] === undefined) {\r\n          bondDict[ hash ] = true\r\n          atomIndices1.push(idx1 - atomOffset)\r\n          atomIndices2.push(idx2 - atomOffset)\r\n          bondOrders.push(bp.bondOrder)\r\n        }\r\n      }\r\n    })\r\n\r\n    residueType.bonds = {\r\n      atomIndices1: atomIndices1,\r\n      atomIndices2: atomIndices2,\r\n      bondOrders: bondOrders\r\n    }\r\n  })\r\n\r\n    // if( Debug ) Log.timeEnd( \"assignResidueTypeBonds\" );\r\n}\r\n\r\nexport {\r\n  reorderAtoms,\r\n  assignSecondaryStructure,\r\n  calculateSecondaryStructure,\r\n  getChainname,\r\n  calculateChainnames,\r\n  calculateBonds,\r\n  calculateResidueBonds,\r\n  calculateBondsWithin,\r\n  calculateBondsBetween,\r\n  buildUnitcellAssembly,\r\n  guessElement,\r\n  assignResidueTypeBonds\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/structure-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3367,
    "kind": "variable",
    "name": "ChainnameAlphabet",
    "memberof": "src/structure/structure-utils.js",
    "static": true,
    "longname": "src/structure/structure-utils.js~ChainnameAlphabet",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 351,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3368,
    "kind": "function",
    "name": "calculateAtomBondMap",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateAtomBondMap",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 564,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3369,
    "kind": "variable",
    "name": "elm1",
    "memberof": "src/structure/structure-utils.js",
    "static": true,
    "longname": "src/structure/structure-utils.js~elm1",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 834,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3370,
    "kind": "variable",
    "name": "elm2",
    "memberof": "src/structure/structure-utils.js",
    "static": true,
    "longname": "src/structure/structure-utils.js~elm2",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 835,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3371,
    "kind": "function",
    "name": "reorderAtoms",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~reorderAtoms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{reorderAtoms}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3372,
    "kind": "function",
    "name": "assignSecondaryStructure",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~assignSecondaryStructure",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{assignSecondaryStructure}",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 3373,
    "kind": "variable",
    "name": "calculateSecondaryStructure",
    "memberof": "src/structure/structure-utils.js",
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateSecondaryStructure",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateSecondaryStructure}",
    "description": null,
    "lineNumber": 222,
    "undocument": true
  },
  {
    "__docId__": 3374,
    "kind": "function",
    "name": "getChainname",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~getChainname",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{getChainname}",
    "description": null,
    "lineNumber": 353,
    "undocument": true
  },
  {
    "__docId__": 3375,
    "kind": "function",
    "name": "calculateChainnames",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateChainnames",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateChainnames}",
    "description": null,
    "lineNumber": 369,
    "undocument": true
  },
  {
    "__docId__": 3376,
    "kind": "function",
    "name": "calculateBonds",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateBonds",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateBonds}",
    "description": null,
    "lineNumber": 492,
    "undocument": true
  },
  {
    "__docId__": 3377,
    "kind": "function",
    "name": "calculateResidueBonds",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateResidueBonds",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateResidueBonds}",
    "description": null,
    "lineNumber": 501,
    "undocument": true
  },
  {
    "__docId__": 3378,
    "kind": "function",
    "name": "calculateBondsWithin",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateBondsWithin",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateBondsWithin}",
    "description": null,
    "lineNumber": 581,
    "undocument": true
  },
  {
    "__docId__": 3379,
    "kind": "function",
    "name": "calculateBondsBetween",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~calculateBondsBetween",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{calculateBondsBetween}",
    "description": null,
    "lineNumber": 643,
    "undocument": true
  },
  {
    "__docId__": 3380,
    "kind": "function",
    "name": "buildUnitcellAssembly",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~buildUnitcellAssembly",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{buildUnitcellAssembly}",
    "description": null,
    "lineNumber": 711,
    "undocument": true
  },
  {
    "__docId__": 3381,
    "kind": "function",
    "name": "guessElement",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~guessElement",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{guessElement}",
    "description": null,
    "lineNumber": 837,
    "undocument": true
  },
  {
    "__docId__": 3382,
    "kind": "function",
    "name": "assignResidueTypeBonds",
    "memberof": "src/structure/structure-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-utils.js~assignResidueTypeBonds",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-utils.js",
    "importStyle": "{assignResidueTypeBonds}",
    "description": "Assigns ResidueType bonds.",
    "lineNumber": 861,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3383,
    "kind": "file",
    "name": "src/structure/structure-view.js",
    "content": "/**\r\n * @file Structure View\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport Structure from './structure.js'\r\nimport Selection from '../selection/selection.js'\r\n\r\n/**\r\n * Get view on structure restricted to the selection\r\n * @param  {Selection} selection - the selection\r\n * @return {StructureView} the view on the structure\r\n */\r\nStructure.prototype.getView = function (selection) {\r\n    // added here to avoid cyclic import dependency\r\n  return new StructureView(this, selection)\r\n}\r\n\r\n/**\r\n * View on the structure, restricted to the selection\r\n */\r\nclass StructureView extends Structure {\r\n    /**\r\n     * @param {Structure} structure - the structure\r\n     * @param {Selection} selection - the selection\r\n     */\r\n  constructor (structure, selection) {\r\n    super()\r\n\r\n    this.structure = structure\r\n    this.selection = selection\r\n\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    this._bp = this.getBondProxy()\r\n    this._ap = this.getAtomProxy()\r\n    this._rp = this.getResidueProxy()\r\n    this._cp = this.getChainProxy()\r\n\r\n    if (this.selection) {\r\n      this.selection.signals.stringChanged.add(this.refresh, this)\r\n    }\r\n\r\n    this.structure.signals.refreshed.add(this.refresh, this)\r\n\r\n    this.refresh()\r\n  }\r\n\r\n  init () {}\r\n\r\n  get type () { return 'StructureView' }\r\n\r\n  get name () { return this.structure.name }\r\n  get path () { return this.structure.path }\r\n  get title () { return this.structure.title }\r\n  get id () { return this.structure.id }\r\n  get atomSetDict () { return this.structure.atomSetDict }\r\n  get biomolDict () { return this.structure.biomolDict }\r\n  get entityList () { return this.structure.entityList }\r\n  get unitcell () { return this.structure.unitcell }\r\n  get frames () { return this.structure.frames }\r\n  get boxes () { return this.structure.boxes }\r\n  get validation () { return this.structure.validation }\r\n  get bondStore () { return this.structure.bondStore }\r\n  get backboneBondStore () { return this.structure.backboneBondStore }\r\n  get rungBondStore () { return this.structure.rungBondStore }\r\n  get atomStore () { return this.structure.atomStore }\r\n  get residueStore () { return this.structure.residueStore }\r\n  get chainStore () { return this.structure.chainStore }\r\n  get modelStore () { return this.structure.modelStore }\r\n  get atomMap () { return this.structure.atomMap }\r\n  get residueMap () { return this.structure.residueMap }\r\n  get bondHash () { return this.structure.bondHash }\r\n  get spatialHash () { return this.structure.spatialHash }\r\n\r\n    /**\r\n     * Updates atomSet, bondSet, atomSetCache, atomCount, bondCount, boundingBox, center.\r\n     * @emits {Structure.signals.refreshed} when refreshed\r\n     * @return {undefined}\r\n     */\r\n  refresh () {\r\n    if (Debug) Log.time('StructureView.refresh')\r\n\r\n    this.atomSetCache = {}\r\n\r\n    this.atomSet = this.getAtomSet(this.selection, true)\r\n    if (this.structure.atomSet) {\r\n      this.atomSet = this.atomSet.intersection(this.structure.atomSet)\r\n    }\r\n\r\n    this.bondSet = this.getBondSet()\r\n\r\n    for (let name in this.atomSetDict) {\r\n      const atomSet = this.atomSetDict[ name ]\r\n      this.atomSetCache[ '__' + name ] = atomSet.makeIntersection(this.atomSet)\r\n    }\r\n\r\n    this.atomCount = this.atomSet.getSize()\r\n    this.bondCount = this.bondSet.getSize()\r\n\r\n    this.boundingBox = this.getBoundingBox()\r\n    this.center = this.boundingBox.getCenter()\r\n\r\n    if (Debug) Log.timeEnd('StructureView.refresh')\r\n\r\n    this.signals.refreshed.dispatch()\r\n  }\r\n\r\n    //\r\n\r\n  setSelection (selection) {\r\n    this.selection = selection\r\n\r\n    this.refresh()\r\n  }\r\n\r\n  getSelection (selection) {\r\n    const seleList = []\r\n\r\n    if (selection && selection.string) {\r\n      seleList.push(selection.string)\r\n    }\r\n\r\n    const parentSelection = this.structure.getSelection()\r\n    if (parentSelection && parentSelection.string) {\r\n      seleList.push(parentSelection.string)\r\n    }\r\n\r\n    if (this.selection && this.selection.string) {\r\n      seleList.push(this.selection.string)\r\n    }\r\n\r\n    let sele = ''\r\n    if (seleList.length > 0) {\r\n      sele = '( ' + seleList.join(' ) AND ( ') + ' )'\r\n    }\r\n\r\n    return new Selection(sele)\r\n  }\r\n\r\n  getStructure () {\r\n    return this.structure.getStructure()\r\n  }\r\n\r\n    //\r\n\r\n  eachBond (callback, selection) {\r\n    this.structure.eachBond(callback, this.getSelection(selection))\r\n  }\r\n\r\n  eachAtom (callback, selection) {\r\n    const ap = this.getAtomProxy()\r\n    const atomSet = this.getAtomSet(selection)\r\n    const n = this.atomStore.count\r\n\r\n    if (atomSet.getSize() < n) {\r\n      atomSet.forEach(function (index) {\r\n        ap.index = index\r\n        callback(ap)\r\n      })\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  eachResidue (callback, selection) {\r\n    this.structure.eachResidue(callback, this.getSelection(selection))\r\n  }\r\n\r\n    /**\r\n     * Not implemented\r\n     * @alias StructureView#eachResidueN\r\n     * @return {undefined}\r\n     */\r\n  eachResidueN (/* n, callback */) {\r\n    console.error('StructureView.eachResidueN() not implemented')\r\n  }\r\n\r\n  eachChain (callback, selection) {\r\n    this.structure.eachChain(callback, this.getSelection(selection))\r\n  }\r\n\r\n  eachModel (callback, selection) {\r\n    this.structure.eachModel(callback, this.getSelection(selection))\r\n  }\r\n\r\n    //\r\n\r\n  getAtomSet (selection, ignoreView) {\r\n    let atomSet = this.structure.getAtomSet(selection)\r\n    if (!ignoreView && this.atomSet) {\r\n      atomSet = atomSet.makeIntersection(this.atomSet)\r\n    }\r\n\r\n    return atomSet\r\n  }\r\n\r\n    //\r\n\r\n  getAtomIndices (selection) {\r\n    return this.structure.getAtomIndices(this.getSelection(selection))\r\n  }\r\n\r\n  refreshPosition () {\r\n    return this.structure.refreshPosition()\r\n  }\r\n\r\n    //\r\n\r\n  dispose () {\r\n    if (this.selection) {\r\n      this.selection.signals.stringChanged.remove(this.refresh, this)\r\n    }\r\n\r\n    this.structure.signals.refreshed.remove(this.refresh, this)\r\n\r\n    delete this.structure\r\n\r\n    delete this.atomSet\r\n    delete this.bondSet\r\n\r\n    delete this.atomCount\r\n    delete this.bondCount\r\n  }\r\n}\r\n\r\nexport default StructureView\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/structure-view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3384,
    "kind": "function",
    "name": "getView",
    "memberof": "src/structure/structure-view.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/structure-view.js~getView",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/structure-view.js",
    "importStyle": null,
    "description": "Get view on structure restricted to the selection",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StructureView"
      ],
      "spread": false,
      "description": "the view on the structure"
    },
    "ignore": true
  },
  {
    "__docId__": 3385,
    "kind": "class",
    "name": "StructureView",
    "memberof": "src/structure/structure-view.js",
    "static": true,
    "longname": "src/structure/structure-view.js~StructureView",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure-view.js",
    "importStyle": "StructureView",
    "description": "View on the structure, restricted to the selection",
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/structure/structure.js~Structure"
    ]
  },
  {
    "__docId__": 3386,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "the selection"
      }
    ]
  },
  {
    "__docId__": 3387,
    "kind": "member",
    "name": "structure",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#structure",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 3388,
    "kind": "member",
    "name": "selection",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#selection",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3389,
    "kind": "member",
    "name": "center",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#center",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 3390,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 3391,
    "kind": "member",
    "name": "_bp",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#_bp",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3392,
    "kind": "member",
    "name": "_ap",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#_ap",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 3393,
    "kind": "member",
    "name": "_rp",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#_rp",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 3394,
    "kind": "member",
    "name": "_cp",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#_cp",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 3395,
    "kind": "method",
    "name": "init",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#init",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 3396,
    "kind": "get",
    "name": "type",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#type",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 3397,
    "kind": "get",
    "name": "name",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#name",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 3398,
    "kind": "get",
    "name": "path",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#path",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 3399,
    "kind": "get",
    "name": "title",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#title",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 3400,
    "kind": "get",
    "name": "id",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#id",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 3401,
    "kind": "get",
    "name": "atomSetDict",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomSetDict",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 3402,
    "kind": "get",
    "name": "biomolDict",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#biomolDict",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 3403,
    "kind": "get",
    "name": "entityList",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#entityList",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 3404,
    "kind": "get",
    "name": "unitcell",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#unitcell",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 3405,
    "kind": "get",
    "name": "frames",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#frames",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 3406,
    "kind": "get",
    "name": "boxes",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#boxes",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 3407,
    "kind": "get",
    "name": "validation",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#validation",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 3408,
    "kind": "get",
    "name": "bondStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#bondStore",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "undocument": true
  },
  {
    "__docId__": 3409,
    "kind": "get",
    "name": "backboneBondStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#backboneBondStore",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true
  },
  {
    "__docId__": 3410,
    "kind": "get",
    "name": "rungBondStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#rungBondStore",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 3411,
    "kind": "get",
    "name": "atomStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomStore",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 3412,
    "kind": "get",
    "name": "residueStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#residueStore",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 3413,
    "kind": "get",
    "name": "chainStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#chainStore",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 3414,
    "kind": "get",
    "name": "modelStore",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#modelStore",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 3415,
    "kind": "get",
    "name": "atomMap",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomMap",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 3416,
    "kind": "get",
    "name": "residueMap",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#residueMap",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 3417,
    "kind": "get",
    "name": "bondHash",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#bondHash",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 3418,
    "kind": "get",
    "name": "spatialHash",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#spatialHash",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 3419,
    "kind": "method",
    "name": "refresh",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#refresh",
    "access": "public",
    "description": "Updates atomSet, bondSet, atomSetCache, atomCount, bondCount, boundingBox, center.",
    "lineNumber": 86,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    },
    "emits": [
      {
        "types": [
          "Structure.signals.refreshed"
        ],
        "description": "when refreshed"
      }
    ]
  },
  {
    "__docId__": 3420,
    "kind": "member",
    "name": "atomSetCache",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomSetCache",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 3421,
    "kind": "member",
    "name": "atomSet",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomSet",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 3423,
    "kind": "member",
    "name": "bondSet",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#bondSet",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 3424,
    "kind": "member",
    "name": "atomCount",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#atomCount",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 3425,
    "kind": "member",
    "name": "bondCount",
    "memberof": "src/structure/structure-view.js~StructureView",
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#bondCount",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true
  },
  {
    "__docId__": 3428,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#setSelection",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 3430,
    "kind": "method",
    "name": "getSelection",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#getSelection",
    "access": "public",
    "description": null,
    "lineNumber": 122,
    "undocument": true
  },
  {
    "__docId__": 3431,
    "kind": "method",
    "name": "getStructure",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#getStructure",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 3432,
    "kind": "method",
    "name": "eachBond",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachBond",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 3433,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachAtom",
    "access": "public",
    "description": null,
    "lineNumber": 156,
    "undocument": true
  },
  {
    "__docId__": 3434,
    "kind": "method",
    "name": "eachResidue",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachResidue",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 3435,
    "kind": "method",
    "name": "eachResidueN",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachResidueN",
    "access": "public",
    "description": "Not implemented",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@alias",
        "tagValue": "StructureView#eachResidueN"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3436,
    "kind": "method",
    "name": "eachChain",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachChain",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true
  },
  {
    "__docId__": 3437,
    "kind": "method",
    "name": "eachModel",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#eachModel",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 3438,
    "kind": "method",
    "name": "getAtomSet",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#getAtomSet",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true
  },
  {
    "__docId__": 3439,
    "kind": "method",
    "name": "getAtomIndices",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#getAtomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true
  },
  {
    "__docId__": 3440,
    "kind": "method",
    "name": "refreshPosition",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#refreshPosition",
    "access": "public",
    "description": null,
    "lineNumber": 212,
    "undocument": true
  },
  {
    "__docId__": 3441,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/structure/structure-view.js~StructureView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure-view.js~StructureView#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 218,
    "undocument": true
  },
  {
    "__docId__": 3442,
    "kind": "file",
    "name": "src/structure/structure.js",
    "content": "/**\r\n * @file Structure\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3 } from '../../lib/three.es6.js'\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { Debug, Log, ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { AtomPicker, BondPicker } from '../utils/picker.js'\r\nimport { copyWithin, arrayMin, arrayMax } from '../math/array-utils.js'\r\nimport BitArray from '../utils/bitarray.js'\r\nimport RadiusFactory from '../utils/radius-factory.js'\r\nimport { Matrix } from '../math/matrix-utils.js'\r\nimport PrincipalAxes from '../math/principal-axes.js'\r\nimport SpatialHash from '../geometry/spatial-hash.js'\r\nimport FilteredVolume from '../surface/filtered-volume.js'\r\n// import StructureView from \"./structure-view.js\";\r\n\r\nimport BondHash from '../store/bond-hash.js'\r\nimport BondStore from '../store/bond-store.js'\r\nimport AtomStore from '../store/atom-store.js'\r\nimport ResidueStore from '../store/residue-store.js'\r\nimport ChainStore from '../store/chain-store.js'\r\nimport ModelStore from '../store/model-store.js'\r\n\r\nimport AtomMap from '../store/atom-map.js'\r\nimport ResidueMap from '../store/residue-map.js'\r\n\r\nimport BondProxy from '../proxy/bond-proxy.js'\r\nimport AtomProxy from '../proxy/atom-proxy.js'\r\nimport ResidueProxy from '../proxy/residue-proxy.js'\r\nimport ChainProxy from '../proxy/chain-proxy.js'\r\nimport ModelProxy from '../proxy/model-proxy.js'\r\n\r\n/**\r\n * Structure header object.\r\n * @typedef {Object} StructureHeader - structure meta data\r\n * @property {String} [releaseDate] - release data, YYYY-MM-DD\r\n * @property {String} [depositionDate] - deposition data, YYYY-MM-DD\r\n * @property {Float} [resolution] - experimental resolution\r\n * @property {Float} [rFree] - r-free value\r\n * @property {Float} [rWork] - r-work value\r\n * @property {String[]} [experimentalMethods] - experimental methods\r\n */\r\n\r\n/**\r\n * Structure extra data.\r\n * @typedef {Object} StructureExtraData - structure extra data\r\n * @property {Object} [cif] - dictionary from cif parser\r\n * @property {Object[]} [sdf] - associated data items from sdf parser, one per compound\r\n */\r\n\r\n/**\r\n * Structure\r\n */\r\nclass Structure {\r\n  /**\r\n   * @param {String} name - structure name\r\n   * @param {String} path - source path\r\n   */\r\n  constructor (name, path) {\r\n    /**\r\n     * @type {{refreshed: Signal}}\r\n     */\r\n    this.signals = {\r\n      refreshed: new Signal()\r\n    }\r\n\r\n    this.init(name, path)\r\n  }\r\n\r\n  init (name, path) {\r\n    this.name = name\r\n    this.path = path\r\n    this.title = ''\r\n    this.id = ''\r\n    /**\r\n     * @type {StructureHeader}\r\n     */\r\n    this.header = {}\r\n    /**\r\n     * @type {StructureExtraData}\r\n     */\r\n    this.extraData = {}\r\n\r\n    this.atomSetCache = undefined\r\n    this.atomSetDict = {}\r\n    this.biomolDict = {}\r\n    /**\r\n     * @type {Entity[]}\r\n     */\r\n    this.entityList = []\r\n    /**\r\n     * @type {Unitcell}\r\n     */\r\n    this.unitcell = undefined\r\n\r\n    this.frames = []\r\n    this.boxes = []\r\n\r\n    /**\r\n     * @type {Validation}\r\n     */\r\n    this.validation = undefined\r\n\r\n    this.bondStore = new BondStore(0)\r\n    this.backboneBondStore = new BondStore(0)\r\n    this.rungBondStore = new BondStore(0)\r\n    this.atomStore = new AtomStore(0)\r\n    this.residueStore = new ResidueStore(0)\r\n    this.chainStore = new ChainStore(0)\r\n    this.modelStore = new ModelStore(0)\r\n\r\n    /**\r\n     * @type {AtomMap}\r\n     */\r\n    this.atomMap = new AtomMap(this)\r\n    /**\r\n     * @type {ResidueMap}\r\n     */\r\n    this.residueMap = new ResidueMap(this)\r\n\r\n    /**\r\n     * @type {BondHash}\r\n     */\r\n    this.bondHash = undefined\r\n    /**\r\n     * @type {SpatialHash}\r\n     */\r\n    this.spatialHash = undefined\r\n\r\n    this.atomSet = undefined\r\n    this.bondSet = undefined\r\n\r\n    /**\r\n     * @type {Vector3}\r\n     */\r\n    this.center = undefined\r\n    /**\r\n     * @type {Box3}\r\n     */\r\n    this.boundingBox = undefined\r\n\r\n    this._bp = this.getBondProxy()\r\n    this._ap = this.getAtomProxy()\r\n    this._rp = this.getResidueProxy()\r\n    this._cp = this.getChainProxy()\r\n  }\r\n\r\n  get type () { return 'Structure' }\r\n\r\n  finalizeAtoms () {\r\n    this.atomSet = this.getAtomSet()\r\n    this.atomCount = this.atomStore.count\r\n    this.boundingBox = this.getBoundingBox()\r\n    this.center = this.boundingBox.getCenter()\r\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\r\n  }\r\n\r\n  finalizeBonds () {\r\n    this.bondSet = this.getBondSet()\r\n    this.bondCount = this.bondStore.count\r\n    this.bondHash = new BondHash(this.bondStore, this.atomStore.count)\r\n\r\n    this.atomSetCache = {}\r\n    if (!this.atomSetDict.rung) {\r\n      this.atomSetDict.rung = this.getAtomSet(false)\r\n    }\r\n\r\n    for (let name in this.atomSetDict) {\r\n      this.atomSetCache[ '__' + name ] = this.atomSetDict[ name ].clone()\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  getBondProxy (index) {\r\n    return new BondProxy(this, index)\r\n  }\r\n\r\n  getAtomProxy (index) {\r\n    return new AtomProxy(this, index)\r\n  }\r\n\r\n  getResidueProxy (index) {\r\n    return new ResidueProxy(this, index)\r\n  }\r\n\r\n  getChainProxy (index) {\r\n    return new ChainProxy(this, index)\r\n  }\r\n\r\n  getModelProxy (index) {\r\n    return new ModelProxy(this, index)\r\n  }\r\n\r\n  //\r\n\r\n  getBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.bondStore.count\r\n    const bondSet = new BitArray(n)\r\n    const atomSet = this.atomSet\r\n\r\n    if (atomSet) {\r\n      const bp = this.getBondProxy()\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        if (atomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n          bondSet.set(bp.index)\r\n        }\r\n      }\r\n    } else {\r\n      bondSet.setAll()\r\n    }\r\n\r\n    return bondSet\r\n  }\r\n\r\n  getBackboneBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.backboneBondStore.count\r\n    const backboneBondSet = new BitArray(n)\r\n    const backboneAtomSet = this.atomSetCache.__backbone\r\n\r\n    if (backboneAtomSet) {\r\n      const bp = this.getBondProxy()\r\n      bp.bondStore = this.backboneBondStore\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        if (backboneAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n          backboneBondSet.set(bp.index)\r\n        }\r\n      }\r\n    } else {\r\n      backboneBondSet.set_all(true)\r\n    }\r\n\r\n    return backboneBondSet\r\n  }\r\n\r\n  getRungBondSet (/* selection */) {\r\n    // TODO implement selection parameter\r\n\r\n    const n = this.rungBondStore.count\r\n    const rungBondSet = new BitArray(n)\r\n    const rungAtomSet = this.atomSetCache.__rung\r\n\r\n    if (rungAtomSet) {\r\n      const bp = this.getBondProxy()\r\n      bp.bondStore = this.rungBondStore\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        if (rungAtomSet.isSet(bp.atomIndex1, bp.atomIndex2)) {\r\n          rungBondSet.set(bp.index)\r\n        }\r\n      }\r\n    } else {\r\n      rungBondSet.set_all(true)\r\n    }\r\n\r\n    return rungBondSet\r\n  }\r\n\r\n  /**\r\n   * Get a set of atoms\r\n   * @param  {Boolean|Selection|BitArray} selection - object defining how to\r\n   *                                      initialize the atom set.\r\n   *                                      Boolean: init with value;\r\n   *                                      Selection: init with selection;\r\n   *                                      BitArray: return bit array\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSet (selection) {\r\n    let atomSet\r\n    const n = this.atomStore.count\r\n\r\n    if (selection instanceof BitArray) {\r\n      atomSet = selection\r\n    } else if (selection && selection.test) {\r\n      const seleString = selection.string\r\n\r\n      if (seleString in this.atomSetCache) {\r\n        atomSet = this.atomSetCache[ seleString ]\r\n      } else {\r\n        atomSet = new BitArray(n)\r\n        this.eachAtom(function (ap) {\r\n          atomSet.set(ap.index)\r\n        }, selection)\r\n        this.atomSetCache[ seleString ] = atomSet\r\n      }\r\n    } else if (selection === false) {\r\n      atomSet = new BitArray(n)\r\n    } else {\r\n      atomSet = new BitArray(n, true)\r\n    }\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms around a set of atoms from a selection\r\n   * @param  {Selection} selection - the selection object\r\n   * @param  {Number} radius - radius to select within\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinSelection (selection, radius) {\r\n    const spatialHash = this.spatialHash\r\n    const atomSet = this.getAtomSet(false)\r\n    const ap = this.getAtomProxy()\r\n\r\n    this.getAtomSet(selection).forEach(function (idx) {\r\n      ap.index = idx\r\n      spatialHash.within(ap.x, ap.y, ap.z, radius).forEach(function (idx2) {\r\n        atomSet.set(idx2)\r\n      })\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms around a point\r\n   * @param  {Vector3|AtomProxy} point - the point\r\n   * @param  {Number} radius - radius to select within\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinPoint (point, radius) {\r\n    const p = point\r\n    const atomSet = this.getAtomSet(false)\r\n\r\n    this.spatialHash.within(p.x, p.y, p.z, radius).forEach(function (idx) {\r\n      atomSet.set(idx)\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of atoms within a volume\r\n   * @param  {Volume} volume - the volume\r\n   * @param  {Number} radius - radius to select within\r\n   * @param  {[type]} minValue - minimum value to be considered as within the volume\r\n   * @param  {[type]} maxValue - maximum value to be considered as within the volume\r\n   * @param  {[type]} outside - use only values falling outside of the min/max values\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinVolume (volume, radius, minValue, maxValue, outside) {\r\n    const fv = new FilteredVolume(volume, minValue, maxValue, outside)\r\n\r\n    const dp = fv.getDataPosition()\r\n    const n = dp.length\r\n    const r = fv.matrix.getMaxScaleOnAxis()\r\n    const atomSet = this.getAtomSet(false)\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      this.spatialHash.within(dp[ i ], dp[ i + 1 ], dp[ i + 2 ], r).forEach(function (idx) {\r\n        atomSet.set(idx)\r\n      })\r\n    }\r\n\r\n    return atomSet\r\n  }\r\n\r\n  /**\r\n   * Get set of all atoms within the groups of a selection\r\n   * @param  {Selection} selection - the selection object\r\n   * @return {BitArray} set of atoms\r\n   */\r\n  getAtomSetWithinGroup (selection) {\r\n    const atomResidueIndex = this.atomStore.residueIndex\r\n    const atomSet = this.getAtomSet(false)\r\n    const rp = this.getResidueProxy()\r\n\r\n    this.getAtomSet(selection).forEach(function (idx) {\r\n      rp.index = atomResidueIndex[ idx ]\r\n      for (let idx2 = rp.atomOffset; idx2 <= rp.atomEnd; ++idx2) {\r\n        atomSet.set(idx2)\r\n      }\r\n    })\r\n\r\n    return atomSet\r\n  }\r\n\r\n  //\r\n\r\n  getSelection () {\r\n    return false\r\n  }\r\n\r\n  getStructure () {\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Entity iterator\r\n   * @param  {function(entity: Entity)} callback - the callback\r\n   * @param  {EntityType} type - entity type\r\n   * @return {undefined}\r\n   */\r\n  eachEntity (callback, type) {\r\n    this.entityList.forEach(function (entity) {\r\n      if (type === undefined || entity.getEntityType() === type) {\r\n        callback(entity)\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Bond iterator\r\n   * @param  {function(bond: BondProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachBond (callback, selection) {\r\n    const bp = this.getBondProxy()\r\n    let bondSet\r\n\r\n    if (selection && selection.test) {\r\n      bondSet = this.getBondSet(selection)\r\n      if (this.bondSet) {\r\n        bondSet.intersection(this.bondSet)\r\n      }\r\n    }\r\n\r\n    if (bondSet) {\r\n      bondSet.forEach(function (index) {\r\n        bp.index = index\r\n        callback(bp)\r\n      })\r\n    } else {\r\n      const n = this.bondStore.count\r\n      for (let i = 0; i < n; ++i) {\r\n        bp.index = i\r\n        callback(bp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Atom iterator\r\n   * @param  {function(atom: AtomProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachAtom (callback, selection) {\r\n    if (selection && selection.test) {\r\n      this.eachModel(function (mp) {\r\n        mp.eachAtom(callback, selection)\r\n      }, selection)\r\n    } else {\r\n      const an = this.atomStore.count\r\n      const ap = this.getAtomProxy()\r\n      for (let i = 0; i < an; ++i) {\r\n        ap.index = i\r\n        callback(ap)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Residue iterator\r\n   * @param  {function(residue: ResidueProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachResidue (callback, selection) {\r\n    if (selection && selection.test) {\r\n      const mn = this.modelStore.count\r\n      const mp = this.getModelProxy()\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n      if (modelOnlyTest) {\r\n        for (let i = 0; i < mn; ++i) {\r\n          mp.index = i\r\n          if (modelOnlyTest(mp)) {\r\n            mp.eachResidue(callback, selection)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < mn; ++i) {\r\n          mp.index = i\r\n          mp.eachResidue(callback, selection)\r\n        }\r\n      }\r\n    } else {\r\n      const rn = this.residueStore.count\r\n      const rp = this.getResidueProxy()\r\n      for (let i = 0; i < rn; ++i) {\r\n        rp.index = i\r\n        callback(rp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Multi-residue iterator\r\n   * @param {Integer} n - window size\r\n   * @param  {function(residueList: ResidueProxy[])} callback - the callback\r\n   * @return {undefined}\r\n   */\r\n  eachResidueN (n, callback) {\r\n    const rn = this.residueStore.count\r\n    if (rn < n) return\r\n    const array = new Array(n)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      array[ i ] = this.getResidueProxy(i)\r\n    }\r\n    callback.apply(this, array)\r\n\r\n    for (let j = n; j < rn; ++j) {\r\n      for (let i = 0; i < n; ++i) {\r\n        array[ i ].index += 1\r\n      }\r\n      callback.apply(this, array)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Polymer iterator\r\n   * @param  {function(polymer: Polymer)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachPolymer (callback, selection) {\r\n    if (selection && selection.modelOnlyTest) {\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n\r\n      this.eachModel(function (mp) {\r\n        if (modelOnlyTest(mp)) {\r\n          mp.eachPolymer(callback, selection)\r\n        }\r\n      })\r\n    } else {\r\n      this.eachModel(function (mp) {\r\n        mp.eachPolymer(callback, selection)\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Chain iterator\r\n   * @param  {function(chain: ChainProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachChain (callback, selection) {\r\n    if (selection && selection.test) {\r\n      this.eachModel(function (mp) {\r\n        mp.eachChain(callback, selection)\r\n      })\r\n    } else {\r\n      const cn = this.chainStore.count\r\n      const cp = this.getChainProxy()\r\n      for (let i = 0; i < cn; ++i) {\r\n        cp.index = i\r\n        callback(cp)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Model iterator\r\n   * @param  {function(model: ModelProxy)} callback - the callback\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {undefined}\r\n   */\r\n  eachModel (callback, selection) {\r\n    const n = this.modelStore.count\r\n    const mp = this.getModelProxy()\r\n\r\n    if (selection && selection.test) {\r\n      const modelOnlyTest = selection.modelOnlyTest\r\n      if (modelOnlyTest) {\r\n        for (let i = 0; i < n; ++i) {\r\n          mp.index = i\r\n          if (modelOnlyTest(mp)) {\r\n            callback(mp, selection)\r\n          }\r\n        }\r\n      } else {\r\n        for (let i = 0; i < n; ++i) {\r\n          mp.index = i\r\n          callback(mp, selection)\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = 0; i < n; ++i) {\r\n        mp.index = i\r\n        callback(mp)\r\n      }\r\n    }\r\n  }\r\n\r\n  //\r\n\r\n  getAtomData (params) {\r\n    const p = Object.assign({}, params)\r\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\r\n\r\n    const what = p.what\r\n    const atomSet = defaults(p.atomSet, this.atomSet)\r\n\r\n    let radiusFactory, colormaker\r\n    let position, color, picking, radius, index\r\n\r\n    const atomData = {}\r\n    const ap = this.getAtomProxy()\r\n    const atomCount = atomSet.getSize()\r\n\r\n    if (!what || what.position) {\r\n      position = new Float32Array(atomCount * 3)\r\n      atomData.position = position\r\n    }\r\n    if (!what || what.color) {\r\n      color = new Float32Array(atomCount * 3)\r\n      atomData.color = color\r\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\r\n    }\r\n    if (!what || what.picking) {\r\n      picking = new Float32Array(atomCount)\r\n      atomData.picking = new AtomPicker(picking, this.getStructure())\r\n    }\r\n    if (!what || what.radius) {\r\n      radius = new Float32Array(atomCount)\r\n      atomData.radius = radius\r\n      radiusFactory = new RadiusFactory(p.radiusParams.radius, p.radiusParams.scale)\r\n    }\r\n    if (!what || what.index) {\r\n      index = new Float32Array(atomCount)\r\n      atomData.index = index\r\n    }\r\n\r\n    atomSet.forEach((idx, i) => {\r\n      const i3 = i * 3\r\n      ap.index = idx\r\n      if (position) {\r\n        ap.positionToArray(position, i3)\r\n      }\r\n      if (color) {\r\n        colormaker.atomColorToArray(ap, color, i3)\r\n      }\r\n      if (picking) {\r\n        picking[ i ] = idx\r\n      }\r\n      if (radius) {\r\n        radius[ i ] = radiusFactory.atomRadius(ap)\r\n      }\r\n      if (index) {\r\n        index[ i ] = idx\r\n      }\r\n    })\r\n    return atomData\r\n  }\r\n\r\n  getBondData (params) {\r\n    const p = Object.assign({}, params)\r\n    if (p.colorParams) p.colorParams.structure = this.getStructure()\r\n\r\n    const what = p.what\r\n    const bondSet = defaults(p.bondSet, this.bondSet)\r\n    const multipleBond = defaults(p.multipleBond, 'off')\r\n    const isMulti = multipleBond !== 'off'\r\n    const isOffset = multipleBond === 'offset'\r\n    const bondScale = defaults(p.bondScale, 0.4)\r\n    const bondSpacing = defaults(p.bondSpacing, 1.0)\r\n\r\n    let radiusFactory, colormaker\r\n    let position1, position2, color1, color2, picking, radius1, radius2\r\n\r\n    const bondData = {}\r\n    const bp = this.getBondProxy()\r\n    if (p.bondStore) bp.bondStore = p.bondStore\r\n    const ap1 = this.getAtomProxy()\r\n    const ap2 = this.getAtomProxy()\r\n\r\n    let bondCount\r\n    if (isMulti) {\r\n      const storeBondOrder = bp.bondStore.bondOrder\r\n      bondCount = 0\r\n      bondSet.forEach(function (index) {\r\n        bondCount += storeBondOrder[ index ]\r\n      })\r\n    } else {\r\n      bondCount = bondSet.getSize()\r\n    }\r\n\r\n    if (!what || what.position) {\r\n      position1 = new Float32Array(bondCount * 3)\r\n      position2 = new Float32Array(bondCount * 3)\r\n      bondData.position1 = position1\r\n      bondData.position2 = position2\r\n    }\r\n    if (!what || what.color) {\r\n      color1 = new Float32Array(bondCount * 3)\r\n      color2 = new Float32Array(bondCount * 3)\r\n      bondData.color = color1\r\n      bondData.color2 = color2\r\n      colormaker = ColormakerRegistry.getScheme(p.colorParams)\r\n    }\r\n    if (!what || what.picking) {\r\n      picking = new Float32Array(bondCount)\r\n      bondData.picking = new BondPicker(picking, this.getStructure(), p.bondStore)\r\n    }\r\n    if (!what || what.radius || (isMulti && what.position)) {\r\n      radiusFactory = new RadiusFactory(p.radiusParams.radius, p.radiusParams.scale)\r\n    }\r\n    if (!what || what.radius) {\r\n      radius1 = new Float32Array(bondCount)\r\n      bondData.radius = radius1\r\n      if (p.radius2) {\r\n        radius2 = new Float32Array(bondCount)\r\n        bondData.radius2 = radius2\r\n      }\r\n    }\r\n\r\n    let i = 0\r\n    let j, i3, k, bondOrder, radius, multiRadius, absOffset\r\n\r\n    const vt = new Vector3()\r\n    const vShortening = new Vector3()\r\n    const vShift = new Vector3()\r\n\r\n    bondSet.forEach(index => {\r\n      i3 = i * 3\r\n      bp.index = index\r\n      ap1.index = bp.atomIndex1\r\n      ap2.index = bp.atomIndex2\r\n      bondOrder = bp.bondOrder\r\n      if (position1) {\r\n        if (isMulti && bondOrder > 1) {\r\n          radius = radiusFactory.atomRadius(ap1)\r\n          multiRadius = radius * bondScale / (0.5 * bondOrder)\r\n\r\n          bp.calculateShiftDir(vShift)\r\n\r\n          if (isOffset) {\r\n            absOffset = 2 * bondSpacing * radius\r\n            vShift.multiplyScalar(absOffset)\r\n            vShift.negate()\r\n\r\n            // Shortening is calculated so that neighbouring double\r\n            // bonds on tetrahedral geometry (e.g. sulphonamide)\r\n            // are not quite touching (arccos(1.9 / 2) ~ 109deg)\r\n            // but don't shorten beyond 10% each end or it looks odd\r\n            vShortening.subVectors(ap2, ap1).multiplyScalar(\r\n              Math.max(0.1, absOffset / 1.88)\r\n            )\r\n            ap1.positionToArray(position1, i3)\r\n            ap2.positionToArray(position2, i3)\r\n\r\n            if (bondOrder >= 2) {\r\n              vt.addVectors(ap1, vShift).add(vShortening).toArray(position1, i3 + 3)\r\n              vt.addVectors(ap2, vShift).sub(vShortening).toArray(position2, i3 + 3)\r\n\r\n              if (bondOrder >= 3) {\r\n                vt.subVectors(ap1, vShift).add(vShortening).toArray(position1, i3 + 6)\r\n                vt.subVectors(ap2, vShift).sub(vShortening).toArray(position2, i3 + 6)\r\n              }\r\n            }\r\n          } else {\r\n            absOffset = (bondSpacing - bondScale) * radius\r\n            vShift.multiplyScalar(absOffset)\r\n\r\n            if (bondOrder === 2) {\r\n              vt.addVectors(ap1, vShift).toArray(position1, i3)\r\n              vt.subVectors(ap1, vShift).toArray(position1, i3 + 3)\r\n              vt.addVectors(ap2, vShift).toArray(position2, i3)\r\n              vt.subVectors(ap2, vShift).toArray(position2, i3 + 3)\r\n            } else if (bondOrder === 3) {\r\n              ap1.positionToArray(position1, i3)\r\n              vt.addVectors(ap1, vShift).toArray(position1, i3 + 3)\r\n              vt.subVectors(ap1, vShift).toArray(position1, i3 + 6)\r\n              ap2.positionToArray(position2, i3)\r\n              vt.addVectors(ap2, vShift).toArray(position2, i3 + 3)\r\n              vt.subVectors(ap2, vShift).toArray(position2, i3 + 6)\r\n            } else {\r\n              // todo, better fallback\r\n              ap1.positionToArray(position1, i3)\r\n              ap2.positionToArray(position2, i3)\r\n            }\r\n          }\r\n        } else {\r\n          ap1.positionToArray(position1, i3)\r\n          ap2.positionToArray(position2, i3)\r\n        }\r\n      }\r\n      if (color1) {\r\n        colormaker.bondColorToArray(bp, 1, color1, i3)\r\n        colormaker.bondColorToArray(bp, 0, color2, i3)\r\n        if (isMulti && bondOrder > 1) {\r\n          for (j = 1; j < bondOrder; ++j) {\r\n            k = j * 3 + i3\r\n            copyWithin(color1, i3, k, 3)\r\n            copyWithin(color2, i3, k, 3)\r\n          }\r\n        }\r\n      }\r\n      if (picking) {\r\n        picking[ i ] = index\r\n        if (isMulti && bondOrder > 1) {\r\n          for (j = 1; j < bondOrder; ++j) {\r\n            picking[ i + j ] = index\r\n          }\r\n        }\r\n      }\r\n      if (radius1) {\r\n        radius1[ i ] = radiusFactory.atomRadius(ap1)\r\n        if (isMulti && bondOrder > 1) {\r\n          multiRadius = radius1[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\r\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n            radius1[ i + j ] = multiRadius\r\n          }\r\n        }\r\n      }\r\n      if (radius2) {\r\n        radius2[ i ] = radiusFactory.atomRadius(ap2)\r\n        if (isMulti && bondOrder > 1) {\r\n          multiRadius = radius2[ i ] * bondScale / (isOffset ? 1 : (0.5 * bondOrder))\r\n          for (j = isOffset ? 1 : 0; j < bondOrder; ++j) {\r\n            radius2[ i + j ] = multiRadius\r\n          }\r\n        }\r\n      }\r\n      i += isMulti ? bondOrder : 1\r\n    })\r\n\r\n    return bondData\r\n  }\r\n\r\n  getBackboneAtomData (params) {\r\n    params = Object.assign({\r\n      atomSet: this.atomSetCache.__backbone\r\n    }, params)\r\n\r\n    return this.getAtomData(params)\r\n  }\r\n\r\n  getBackboneBondData (params) {\r\n    params = Object.assign({\r\n      bondSet: this.getBackboneBondSet(),\r\n      bondStore: this.backboneBondStore\r\n    }, params)\r\n\r\n    return this.getBondData(params)\r\n  }\r\n\r\n  getRungAtomData (params) {\r\n    params = Object.assign({\r\n      atomSet: this.atomSetCache.__rung\r\n    }, params)\r\n\r\n    return this.getAtomData(params)\r\n  }\r\n\r\n  getRungBondData (params) {\r\n    params = Object.assign({\r\n      bondSet: this.getRungBondSet(),\r\n      bondStore: this.rungBondStore\r\n    }, params)\r\n\r\n    return this.getBondData(params)\r\n  }\r\n\r\n  //\r\n\r\n  /**\r\n   * Gets the bounding box of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @param  {Box3} [box] - optional target\r\n   * @return {Vector3} the box\r\n   */\r\n  getBoundingBox (selection, box) {\r\n    if (Debug) Log.time('getBoundingBox')\r\n\r\n    box = box || new Box3()\r\n\r\n    let minX = +Infinity\r\n    let minY = +Infinity\r\n    let minZ = +Infinity\r\n\r\n    let maxX = -Infinity\r\n    let maxY = -Infinity\r\n    let maxZ = -Infinity\r\n\r\n    this.eachAtom(function (ap) {\r\n      const x = ap.x\r\n      const y = ap.y\r\n      const z = ap.z\r\n\r\n      if (x < minX) minX = x\r\n      if (y < minY) minY = y\r\n      if (z < minZ) minZ = z\r\n\r\n      if (x > maxX) maxX = x\r\n      if (y > maxY) maxY = y\r\n      if (z > maxZ) maxZ = z\r\n    }, selection)\r\n\r\n    box.min.set(minX, minY, minZ)\r\n    box.max.set(maxX, maxY, maxZ)\r\n\r\n    if (Debug) Log.timeEnd('getBoundingBox')\r\n\r\n    return box\r\n  }\r\n\r\n  /**\r\n   * Gets the principal axes of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {PrincipalAxes} the principal axes\r\n   */\r\n  getPrincipalAxes (selection) {\r\n    if (Debug) Log.time('getPrincipalAxes')\r\n\r\n    let i = 0\r\n    const coords = new Matrix(3, this.atomCount)\r\n    const cd = coords.data\r\n\r\n    this.eachAtom(function (a) {\r\n      cd[ i + 0 ] = a.x\r\n      cd[ i + 1 ] = a.y\r\n      cd[ i + 2 ] = a.z\r\n      i += 3\r\n    }, selection)\r\n\r\n    if (Debug) Log.timeEnd('getPrincipalAxes')\r\n\r\n    return new PrincipalAxes(coords)\r\n  }\r\n\r\n  /**\r\n   * Gets the center of the (selected) structure atoms\r\n   * @param  {Selection} [selection] - the selection\r\n   * @return {Vector3} the center\r\n   */\r\n  atomCenter (selection) {\r\n    if (selection) {\r\n      return this.getBoundingBox(selection).getCenter()\r\n    } else {\r\n      return this.center.clone()\r\n    }\r\n  }\r\n\r\n  hasCoords () {\r\n    var atomStore = this.atomStore\r\n    return (\r\n      arrayMin(atomStore.x) !== 0 || arrayMax(atomStore.x) !== 0 ||\r\n      arrayMin(atomStore.y) !== 0 || arrayMax(atomStore.y) !== 0 ||\r\n      arrayMin(atomStore.z) !== 0 || arrayMax(atomStore.z) !== 0\r\n    )\r\n  }\r\n\r\n  getSequence (selection) {\r\n    const seq = []\r\n    const rp = this.getResidueProxy()\r\n\r\n    this.eachAtom(function (ap) {\r\n      rp.index = ap.residueIndex\r\n      if (ap.index === rp.traceAtomIndex) {\r\n        seq.push(rp.getResname1())\r\n      }\r\n    }, selection)\r\n\r\n    return seq\r\n  }\r\n\r\n  getAtomIndices (selection) {\r\n    let indices\r\n\r\n    if (selection && selection.string) {\r\n      indices = []\r\n      this.eachAtom(function (ap) {\r\n        indices.push(ap.index)\r\n      }, selection)\r\n    } else {\r\n      const p = { what: { index: true } }\r\n      indices = this.getAtomData(p).index\r\n    }\r\n\r\n    return indices\r\n  }\r\n\r\n  /**\r\n   * Get number of unique chainnames\r\n   * @param  {Selection} selection - limit count to selection\r\n   * @return {Integer} count\r\n   */\r\n  getChainnameCount (selection) {\r\n    const chainnames = new Set()\r\n    this.eachChain(function (cp) {\r\n      if (cp.residueCount) {\r\n        chainnames.add(cp.chainname)\r\n      }\r\n    }, selection)\r\n\r\n    return chainnames.size\r\n  }\r\n\r\n  //\r\n\r\n  updatePosition (position) {\r\n    let i = 0\r\n\r\n    this.eachAtom(function (ap) {\r\n      ap.positionFromArray(position, i)\r\n      i += 3\r\n    })\r\n  }\r\n\r\n  refreshPosition () {\r\n    this.getBoundingBox(undefined, this.boundingBox)\r\n    this.boundingBox.getCenter(this.center)\r\n    this.spatialHash = new SpatialHash(this.atomStore, this.boundingBox)\r\n  }\r\n\r\n  /**\r\n   * Calls dispose() method of property objects.\r\n   * Unsets properties to help garbage collection.\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    if (this.frames) this.frames.length = 0\r\n    if (this.boxes) this.boxes.length = 0\r\n\r\n    this.bondStore.dispose()\r\n    this.backboneBondStore.dispose()\r\n    this.rungBondStore.dispose()\r\n    this.atomStore.dispose()\r\n    this.residueStore.dispose()\r\n    this.chainStore.dispose()\r\n    this.modelStore.dispose()\r\n\r\n    delete this.bondStore\r\n    delete this.atomStore\r\n    delete this.residueStore\r\n    delete this.chainStore\r\n    delete this.modelStore\r\n\r\n    delete this.frames\r\n    delete this.boxes\r\n    delete this.cif\r\n\r\n    delete this.bondSet\r\n    delete this.atomSet\r\n  }\r\n}\r\n\r\nexport default Structure\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/structure.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3443,
    "kind": "typedef",
    "name": "StructureHeader",
    "memberof": "src/structure/structure.js",
    "static": true,
    "longname": "src/structure/structure.js~StructureHeader",
    "access": "public",
    "description": "Structure header object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "releaseDate",
        "description": "release data, YYYY-MM-DD"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "depositionDate",
        "description": "deposition data, YYYY-MM-DD"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "resolution",
        "description": "experimental resolution"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "rFree",
        "description": "r-free value"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": true,
        "name": "rWork",
        "description": "r-work value"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "name": "experimentalMethods",
        "description": "experimental methods"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StructureHeader"
    }
  },
  {
    "__docId__": 3444,
    "kind": "typedef",
    "name": "StructureExtraData",
    "memberof": "src/structure/structure.js",
    "static": true,
    "longname": "src/structure/structure.js~StructureExtraData",
    "access": "public",
    "description": "Structure extra data.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "cif",
        "description": "dictionary from cif parser"
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "name": "sdf",
        "description": "associated data items from sdf parser, one per compound"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "StructureExtraData"
    }
  },
  {
    "__docId__": 3445,
    "kind": "class",
    "name": "Structure",
    "memberof": "src/structure/structure.js",
    "static": true,
    "longname": "src/structure/structure.js~Structure",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/structure.js",
    "importStyle": "Structure",
    "description": "Structure",
    "lineNumber": 59,
    "interface": false
  },
  {
    "__docId__": 3446,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "structure name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "source path"
      }
    ]
  },
  {
    "__docId__": 3447,
    "kind": "member",
    "name": "signals",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#signals",
    "access": "public",
    "description": "",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "{refreshed: Signal}"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3448,
    "kind": "method",
    "name": "init",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#init",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 3449,
    "kind": "member",
    "name": "name",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#name",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 3450,
    "kind": "member",
    "name": "path",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#path",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 3451,
    "kind": "member",
    "name": "title",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#title",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 3452,
    "kind": "member",
    "name": "id",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#id",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "undocument": true
  },
  {
    "__docId__": 3453,
    "kind": "member",
    "name": "header",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#header",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "StructureHeader"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3454,
    "kind": "member",
    "name": "extraData",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#extraData",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "StructureExtraData"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3455,
    "kind": "member",
    "name": "atomSetCache",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomSetCache",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 3456,
    "kind": "member",
    "name": "atomSetDict",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomSetDict",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 3457,
    "kind": "member",
    "name": "biomolDict",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#biomolDict",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 3458,
    "kind": "member",
    "name": "entityList",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#entityList",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Entity[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3459,
    "kind": "member",
    "name": "unitcell",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#unitcell",
    "access": "public",
    "description": "",
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "Unitcell"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3460,
    "kind": "member",
    "name": "frames",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#frames",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 3461,
    "kind": "member",
    "name": "boxes",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#boxes",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 3462,
    "kind": "member",
    "name": "validation",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#validation",
    "access": "public",
    "description": "",
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "Validation"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3463,
    "kind": "member",
    "name": "bondStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#bondStore",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "undocument": true
  },
  {
    "__docId__": 3464,
    "kind": "member",
    "name": "backboneBondStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#backboneBondStore",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 3465,
    "kind": "member",
    "name": "rungBondStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#rungBondStore",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "undocument": true
  },
  {
    "__docId__": 3466,
    "kind": "member",
    "name": "atomStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomStore",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 3467,
    "kind": "member",
    "name": "residueStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#residueStore",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 3468,
    "kind": "member",
    "name": "chainStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#chainStore",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 3469,
    "kind": "member",
    "name": "modelStore",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#modelStore",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 3470,
    "kind": "member",
    "name": "atomMap",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomMap",
    "access": "public",
    "description": "",
    "lineNumber": 120,
    "type": {
      "nullable": null,
      "types": [
        "AtomMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3471,
    "kind": "member",
    "name": "residueMap",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#residueMap",
    "access": "public",
    "description": "",
    "lineNumber": 124,
    "type": {
      "nullable": null,
      "types": [
        "ResidueMap"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3472,
    "kind": "member",
    "name": "bondHash",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#bondHash",
    "access": "public",
    "description": "",
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "BondHash"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3473,
    "kind": "member",
    "name": "spatialHash",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#spatialHash",
    "access": "public",
    "description": "",
    "lineNumber": 133,
    "type": {
      "nullable": null,
      "types": [
        "SpatialHash"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3474,
    "kind": "member",
    "name": "atomSet",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomSet",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true
  },
  {
    "__docId__": 3475,
    "kind": "member",
    "name": "bondSet",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#bondSet",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 3476,
    "kind": "member",
    "name": "center",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#center",
    "access": "public",
    "description": "",
    "lineNumber": 141,
    "type": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3477,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#boundingBox",
    "access": "public",
    "description": "",
    "lineNumber": 145,
    "type": {
      "nullable": null,
      "types": [
        "Box3"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3478,
    "kind": "member",
    "name": "_bp",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#_bp",
    "access": "private",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 3479,
    "kind": "member",
    "name": "_ap",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#_ap",
    "access": "private",
    "description": null,
    "lineNumber": 148,
    "undocument": true
  },
  {
    "__docId__": 3480,
    "kind": "member",
    "name": "_rp",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#_rp",
    "access": "private",
    "description": null,
    "lineNumber": 149,
    "undocument": true
  },
  {
    "__docId__": 3481,
    "kind": "member",
    "name": "_cp",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#_cp",
    "access": "private",
    "description": null,
    "lineNumber": 150,
    "undocument": true
  },
  {
    "__docId__": 3482,
    "kind": "get",
    "name": "type",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#type",
    "access": "public",
    "description": null,
    "lineNumber": 153,
    "undocument": true
  },
  {
    "__docId__": 3483,
    "kind": "method",
    "name": "finalizeAtoms",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#finalizeAtoms",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "undocument": true
  },
  {
    "__docId__": 3485,
    "kind": "member",
    "name": "atomCount",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomCount",
    "access": "public",
    "description": null,
    "lineNumber": 157,
    "undocument": true
  },
  {
    "__docId__": 3489,
    "kind": "method",
    "name": "finalizeBonds",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#finalizeBonds",
    "access": "public",
    "description": null,
    "lineNumber": 163,
    "undocument": true
  },
  {
    "__docId__": 3491,
    "kind": "member",
    "name": "bondCount",
    "memberof": "src/structure/structure.js~Structure",
    "static": false,
    "longname": "src/structure/structure.js~Structure#bondCount",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true
  },
  {
    "__docId__": 3494,
    "kind": "method",
    "name": "getBondProxy",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBondProxy",
    "access": "public",
    "description": null,
    "lineNumber": 180,
    "undocument": true
  },
  {
    "__docId__": 3495,
    "kind": "method",
    "name": "getAtomProxy",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomProxy",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 3496,
    "kind": "method",
    "name": "getResidueProxy",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getResidueProxy",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 3497,
    "kind": "method",
    "name": "getChainProxy",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getChainProxy",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 3498,
    "kind": "method",
    "name": "getModelProxy",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getModelProxy",
    "access": "public",
    "description": null,
    "lineNumber": 196,
    "undocument": true
  },
  {
    "__docId__": 3499,
    "kind": "method",
    "name": "getBondSet",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBondSet",
    "access": "public",
    "description": null,
    "lineNumber": 202,
    "undocument": true
  },
  {
    "__docId__": 3500,
    "kind": "method",
    "name": "getBackboneBondSet",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBackboneBondSet",
    "access": "public",
    "description": null,
    "lineNumber": 225,
    "undocument": true
  },
  {
    "__docId__": 3501,
    "kind": "method",
    "name": "getRungBondSet",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getRungBondSet",
    "access": "public",
    "description": null,
    "lineNumber": 249,
    "undocument": true
  },
  {
    "__docId__": 3502,
    "kind": "method",
    "name": "getAtomSet",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomSet",
    "access": "public",
    "description": "Get a set of atoms",
    "lineNumber": 282,
    "params": [
      {
        "nullable": null,
        "types": [
          "Boolean",
          "Selection",
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "object defining how to\n                                     initialize the atom set.\n                                     Boolean: init with value;\n                                     Selection: init with selection;\n                                     BitArray: return bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "set of atoms"
    }
  },
  {
    "__docId__": 3503,
    "kind": "method",
    "name": "getAtomSetWithinSelection",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomSetWithinSelection",
    "access": "public",
    "description": "Get set of atoms around a set of atoms from a selection",
    "lineNumber": 315,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "the selection object"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius to select within"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "set of atoms"
    }
  },
  {
    "__docId__": 3504,
    "kind": "method",
    "name": "getAtomSetWithinPoint",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomSetWithinPoint",
    "access": "public",
    "description": "Get set of atoms around a point",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "Vector3",
          "AtomProxy"
        ],
        "spread": false,
        "optional": false,
        "name": "point",
        "description": "the point"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius to select within"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "set of atoms"
    }
  },
  {
    "__docId__": 3505,
    "kind": "method",
    "name": "getAtomSetWithinVolume",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomSetWithinVolume",
    "access": "public",
    "description": "Get set of atoms within a volume",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "Volume"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": "the volume"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "radius",
        "description": "radius to select within"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "minValue",
        "description": "minimum value to be considered as within the volume"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "maxValue",
        "description": "maximum value to be considered as within the volume"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "outside",
        "description": "use only values falling outside of the min/max values"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "set of atoms"
    }
  },
  {
    "__docId__": 3506,
    "kind": "method",
    "name": "getAtomSetWithinGroup",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomSetWithinGroup",
    "access": "public",
    "description": "Get set of all atoms within the groups of a selection",
    "lineNumber": 378,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "the selection object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "set of atoms"
    }
  },
  {
    "__docId__": 3507,
    "kind": "method",
    "name": "getSelection",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getSelection",
    "access": "public",
    "description": null,
    "lineNumber": 395,
    "undocument": true
  },
  {
    "__docId__": 3508,
    "kind": "method",
    "name": "getStructure",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getStructure",
    "access": "public",
    "description": null,
    "lineNumber": 399,
    "undocument": true
  },
  {
    "__docId__": 3509,
    "kind": "method",
    "name": "eachEntity",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachEntity",
    "access": "public",
    "description": "Entity iterator",
    "lineNumber": 409,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(entity: Entity)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "EntityType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "entity type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3510,
    "kind": "method",
    "name": "eachBond",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachBond",
    "access": "public",
    "description": "Bond iterator",
    "lineNumber": 423,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(bond: BondProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3511,
    "kind": "method",
    "name": "eachAtom",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachAtom",
    "access": "public",
    "description": "Atom iterator",
    "lineNumber": 454,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(atom: AtomProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3512,
    "kind": "method",
    "name": "eachResidue",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachResidue",
    "access": "public",
    "description": "Residue iterator",
    "lineNumber": 475,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(residue: ResidueProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3513,
    "kind": "method",
    "name": "eachResidueN",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachResidueN",
    "access": "public",
    "description": "Multi-residue iterator",
    "lineNumber": 509,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "window size"
      },
      {
        "nullable": null,
        "types": [
          "function(residueList: ResidueProxy[])"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3514,
    "kind": "method",
    "name": "eachPolymer",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachPolymer",
    "access": "public",
    "description": "Polymer iterator",
    "lineNumber": 533,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(polymer: Polymer)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3515,
    "kind": "method",
    "name": "eachChain",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachChain",
    "access": "public",
    "description": "Chain iterator",
    "lineNumber": 555,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(chain: ChainProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3516,
    "kind": "method",
    "name": "eachModel",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#eachModel",
    "access": "public",
    "description": "Model iterator",
    "lineNumber": 576,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(model: ModelProxy)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      },
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3517,
    "kind": "method",
    "name": "getAtomData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 605,
    "undocument": true
  },
  {
    "__docId__": 3518,
    "kind": "method",
    "name": "getBondData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBondData",
    "access": "public",
    "description": null,
    "lineNumber": 664,
    "undocument": true
  },
  {
    "__docId__": 3519,
    "kind": "method",
    "name": "getBackboneAtomData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBackboneAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 839,
    "undocument": true
  },
  {
    "__docId__": 3520,
    "kind": "method",
    "name": "getBackboneBondData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBackboneBondData",
    "access": "public",
    "description": null,
    "lineNumber": 847,
    "undocument": true
  },
  {
    "__docId__": 3521,
    "kind": "method",
    "name": "getRungAtomData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getRungAtomData",
    "access": "public",
    "description": null,
    "lineNumber": 856,
    "undocument": true
  },
  {
    "__docId__": 3522,
    "kind": "method",
    "name": "getRungBondData",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getRungBondData",
    "access": "public",
    "description": null,
    "lineNumber": 864,
    "undocument": true
  },
  {
    "__docId__": 3523,
    "kind": "method",
    "name": "getBoundingBox",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getBoundingBox",
    "access": "public",
    "description": "Gets the bounding box of the (selected) structure atoms",
    "lineNumber": 881,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      },
      {
        "nullable": null,
        "types": [
          "Box3"
        ],
        "spread": false,
        "optional": true,
        "name": "box",
        "description": "optional target"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the box"
    }
  },
  {
    "__docId__": 3524,
    "kind": "method",
    "name": "getPrincipalAxes",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getPrincipalAxes",
    "access": "public",
    "description": "Gets the principal axes of the (selected) structure atoms",
    "lineNumber": 921,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PrincipalAxes"
      ],
      "spread": false,
      "description": "the principal axes"
    }
  },
  {
    "__docId__": 3525,
    "kind": "method",
    "name": "atomCenter",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#atomCenter",
    "access": "public",
    "description": "Gets the center of the (selected) structure atoms",
    "lineNumber": 945,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": true,
        "name": "selection",
        "description": "the selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the center"
    }
  },
  {
    "__docId__": 3526,
    "kind": "method",
    "name": "hasCoords",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#hasCoords",
    "access": "public",
    "description": null,
    "lineNumber": 953,
    "undocument": true
  },
  {
    "__docId__": 3527,
    "kind": "method",
    "name": "getSequence",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getSequence",
    "access": "public",
    "description": null,
    "lineNumber": 962,
    "undocument": true
  },
  {
    "__docId__": 3528,
    "kind": "method",
    "name": "getAtomIndices",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getAtomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 976,
    "undocument": true
  },
  {
    "__docId__": 3529,
    "kind": "method",
    "name": "getChainnameCount",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#getChainnameCount",
    "access": "public",
    "description": "Get number of unique chainnames",
    "lineNumber": 997,
    "params": [
      {
        "nullable": null,
        "types": [
          "Selection"
        ],
        "spread": false,
        "optional": false,
        "name": "selection",
        "description": "limit count to selection"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "count"
    }
  },
  {
    "__docId__": 3530,
    "kind": "method",
    "name": "updatePosition",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#updatePosition",
    "access": "public",
    "description": null,
    "lineNumber": 1010,
    "undocument": true
  },
  {
    "__docId__": 3531,
    "kind": "method",
    "name": "refreshPosition",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#refreshPosition",
    "access": "public",
    "description": null,
    "lineNumber": 1019,
    "undocument": true
  },
  {
    "__docId__": 3533,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/structure/structure.js~Structure",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/structure.js~Structure#dispose",
    "access": "public",
    "description": "Calls dispose() method of property objects.\nUnsets properties to help garbage collection.",
    "lineNumber": 1030,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3534,
    "kind": "file",
    "name": "src/structure/validation.js",
    "content": "/**\r\n * @file Validation\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Color } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { ClashPicker } from '../utils/picker.js'\r\nimport { uniformArray3 } from '../math/array-utils.js'\r\nimport { guessElement } from '../structure/structure-utils.js'\r\n\r\nfunction getSele (a, atomname, useAltcode) {\r\n  const icode = a.icode.value\r\n  const chain = a.chain.value\r\n  const altcode = a.altcode.value\r\n  let sele = a.resnum.value\r\n  if (icode.trim()) sele += '^' + icode\r\n  if (chain.trim()) sele += ':' + chain\r\n  if (atomname) sele += '.' + atomname\r\n  if (useAltcode && altcode.trim()) sele += '%' + altcode\r\n  sele += '/' + (parseInt(a.model.value) - 1)\r\n  return sele\r\n}\r\n\r\nfunction setBitDict (dict, key, bit) {\r\n  if (dict[ key ] === undefined) {\r\n    dict[ key ] = bit\r\n  } else {\r\n    dict[ key ] |= bit\r\n  }\r\n}\r\n\r\nfunction hasAttrValue (attr, value) {\r\n  return attr !== undefined && attr.value === value\r\n}\r\n\r\nfunction getAtomSele (ap) {\r\n  const icode = ap.inscode\r\n  const chain = ap.chainname\r\n  const atomname = ap.atomname\r\n  const altcode = ap.altloc\r\n  let sele = ap.resno\r\n  if (icode) sele += '^' + icode\r\n  if (chain) sele += ':' + chain\r\n  if (atomname) sele += '.' + atomname\r\n  if (altcode) sele += '%' + altcode\r\n  sele += '/' + ap.modelIndex\r\n  return sele\r\n}\r\n\r\nfunction getProblemCount (clashDict, g, ga) {\r\n  let geoProblemCount = 0\r\n\r\n  const clashes = g.getElementsByTagName('clash')\r\n  for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n    if (clashDict[ clashes[ j ].attributes.cid.value ]) {\r\n      geoProblemCount += 1\r\n      break\r\n    }\r\n  }\r\n\r\n  const angleOutliers = g.getElementsByTagName('angle-outlier')\r\n  if (angleOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  const bondOutliers = g.getElementsByTagName('bond-outlier')\r\n  if (bondOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  const planeOutliers = g.getElementsByTagName('plane-outlier')\r\n  if (planeOutliers.length > 0) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.rota, 'OUTLIER')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.rama, 'OUTLIER')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  if (hasAttrValue(ga.RNApucker, 'outlier')) {\r\n    geoProblemCount += 1\r\n  }\r\n\r\n  return geoProblemCount\r\n}\r\n\r\nclass Validation {\r\n  constructor (name, path) {\r\n    this.name = name\r\n    this.path = path\r\n\r\n    this.rsrzDict = {}\r\n    this.rsccDict = {}\r\n    this.clashDict = {}\r\n    this.clashArray = []\r\n    this.geoDict = {}\r\n    this.geoAtomDict = {}\r\n    this.atomDict = {}\r\n    this.clashSele = 'NONE'\r\n  }\r\n\r\n  get type () { return 'validation' }\r\n\r\n  fromXml (xml) {\r\n    if (Debug) Log.time('Validation.fromXml')\r\n\r\n    const rsrzDict = this.rsrzDict\r\n    const rsccDict = this.rsccDict\r\n    const clashDict = this.clashDict\r\n    const clashArray = this.clashArray\r\n    const geoDict = this.geoDict\r\n    const geoAtomDict = this.geoAtomDict\r\n    const atomDict = this.atomDict\r\n\r\n    const groups = xml.getElementsByTagName('ModelledSubgroup')\r\n\r\n    const _clashDict = {}\r\n    const clashList = []\r\n\r\n    if (Debug) Log.time('Validation.fromXml#clashDict')\r\n\r\n    for (let i = 0, il = groups.length; i < il; ++i) {\r\n      const g = groups[ i ]\r\n      const ga = g.attributes\r\n\r\n      const sele = getSele(ga)\r\n      if (ga.rsrz !== undefined) {\r\n        rsrzDict[ sele ] = parseFloat(ga.rsrz.value)\r\n      }\r\n      if (ga.rscc !== undefined) {\r\n        rsccDict[ sele ] = parseFloat(ga.rscc.value)\r\n      }\r\n      ga.sele = sele\r\n\r\n      const clashes = g.getElementsByTagName('clash')\r\n\r\n      for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n        const ca = clashes[ j ].attributes\r\n        const atom = ca.atom.value\r\n\r\n        if (guessElement(atom) !== 'H') {\r\n          const cid = ca.cid.value\r\n          const atomSele = getSele(ga, atom, true)\r\n          atomDict[ atomSele ] = true\r\n\r\n          if (_clashDict[ cid ] === undefined) {\r\n            _clashDict[ cid ] = {\r\n              sele1: atomSele,\r\n              res1: sele\r\n            }\r\n          } else {\r\n            const c = _clashDict[ cid ]\r\n            if (c.res1 !== sele) {\r\n              c.sele2 = atomSele\r\n              c.res2 = sele\r\n              clashList.push(c.res1, sele)\r\n              clashDict[ cid ] = c\r\n              clashArray.push(c)\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (Debug) Log.timeEnd('Validation.fromXml#clashDict')\r\n\r\n    for (let i = 0, il = groups.length; i < il; ++i) {\r\n      const g = groups[ i ]\r\n      const ga = g.attributes\r\n\r\n      const sele = ga.sele\r\n      const isPolymer = ga.seq.value !== '.'\r\n\r\n      if (isPolymer) {\r\n        const geoProblemCount = getProblemCount(clashDict, g, ga)\r\n        if (geoProblemCount > 0) {\r\n          geoDict[ sele ] = geoProblemCount\r\n        }\r\n      } else {\r\n        const clashes = g.getElementsByTagName('clash')\r\n        const mogBondOutliers = g.getElementsByTagName('mog-bond-outlier')\r\n        const mogAngleOutliers = g.getElementsByTagName('mog-angle-outlier')\r\n\r\n        if (mogBondOutliers.length > 0 || mogAngleOutliers.length > 0 || clashes.length > 0) {\r\n          const atomDict = {}\r\n          geoAtomDict[ sele ] = atomDict\r\n\r\n          for (let j = 0, jl = clashes.length; j < jl; ++j) {\r\n            const ca = clashes[ j ].attributes\r\n            if (clashDict[ ca.cid.value ]) {\r\n              setBitDict(atomDict, ca.atom.value, 1)\r\n            }\r\n          }\r\n\r\n          for (let j = 0, jl = mogBondOutliers.length; j < jl; ++j) {\r\n            const mbo = mogBondOutliers[ j ].attributes\r\n            mbo.atoms.value.split(',').forEach(function (atomname) {\r\n              setBitDict(atomDict, atomname, 2)\r\n            })\r\n          }\r\n\r\n          for (let j = 0, jl = mogAngleOutliers.length; j < jl; ++j) {\r\n            const mao = mogAngleOutliers[ j ].attributes\r\n            mao.atoms.value.split(',').forEach(function (atomname) {\r\n              setBitDict(atomDict, atomname, 4)\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.clashSele = clashList.length ? clashList.join(' OR ') : 'NONE'\r\n\r\n    if (Debug) Log.timeEnd('Validation.fromXml')\r\n  }\r\n\r\n  getClashData (params) {\r\n    if (Debug) Log.time('Validation.getClashData')\r\n\r\n    const p = params || {}\r\n\r\n    const s = p.structure\r\n    const atomSet = s.atomSet\r\n    const c = new Color(defaults(p.color, '#f0027f'))\r\n\r\n    const ap1 = s.getAtomProxy()\r\n    const ap2 = s.getAtomProxy()\r\n    const vDir = new Vector3()\r\n    const vPos1 = new Vector3()\r\n    const vPos2 = new Vector3()\r\n\r\n    const clashArray = this.clashArray\r\n    const n = clashArray.length\r\n\r\n    const position1 = new Float32Array(n * 3)\r\n    const position2 = new Float32Array(n * 3)\r\n    const color = uniformArray3(n, c.r, c.g, c.b)\r\n    const radius = new Float32Array(n)\r\n    const picking = new Float32Array(n)\r\n\r\n    if (Debug) Log.time('Validation.getClashData#atomDict')\r\n\r\n    const atomDict = this.atomDict\r\n\r\n    s.eachAtom(function (ap) {\r\n      const sele = getAtomSele(ap)\r\n      if (atomDict[ sele ] === true) {\r\n        atomDict[ sele ] = ap.index\r\n      }\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('Validation.getClashData#atomDict')\r\n\r\n    let i = 0\r\n\r\n    clashArray.forEach(function (c, idx) {\r\n      ap1.index = atomDict[ c.sele1 ]\r\n      ap2.index = atomDict[ c.sele2 ]\r\n\r\n      if (ap1.index === undefined || ap2.index === undefined ||\r\n                !atomSet.isSet(ap1.index, ap2.index)) return\r\n\r\n      vDir.subVectors(ap2, ap1).setLength(ap1.vdw)\r\n      vPos1.copy(ap1).add(vDir)\r\n\r\n      vDir.subVectors(ap1, ap2).setLength(ap2.vdw)\r\n      vPos2.copy(ap2).add(vDir)\r\n\r\n      const dHalf = ap1.distanceTo(ap2) / 2\r\n      const r1 = Math.sqrt(ap1.vdw * ap1.vdw - dHalf * dHalf)\r\n      const r2 = Math.sqrt(ap2.vdw * ap2.vdw - dHalf * dHalf)\r\n\r\n      vPos1.toArray(position1, i * 3)\r\n      vPos2.toArray(position2, i * 3)\r\n      radius[ i ] = (r1 + r2) / 2\r\n      picking[ i ] = idx\r\n\r\n      ++i\r\n    })\r\n\r\n    if (Debug) Log.timeEnd('Validation.getClashData')\r\n\r\n    return {\r\n      position1: position1.subarray(0, i * 3),\r\n      position2: position2.subarray(0, i * 3),\r\n      color: color.subarray(0, i * 3),\r\n      color2: color.subarray(0, i * 3),\r\n      radius: radius.subarray(0, i),\r\n      picking: new ClashPicker(picking.subarray(0, i), this, s)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Validation\r\n",
    "static": true,
    "longname": "D:/nglLib/src/structure/validation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3535,
    "kind": "function",
    "name": "getSele",
    "memberof": "src/structure/validation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/validation.js~getSele",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3536,
    "kind": "function",
    "name": "setBitDict",
    "memberof": "src/structure/validation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/validation.js~setBitDict",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3537,
    "kind": "function",
    "name": "hasAttrValue",
    "memberof": "src/structure/validation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/validation.js~hasAttrValue",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3538,
    "kind": "function",
    "name": "getAtomSele",
    "memberof": "src/structure/validation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/validation.js~getAtomSele",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3539,
    "kind": "function",
    "name": "getProblemCount",
    "memberof": "src/structure/validation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/structure/validation.js~getProblemCount",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3540,
    "kind": "class",
    "name": "Validation",
    "memberof": "src/structure/validation.js",
    "static": true,
    "longname": "src/structure/validation.js~Validation",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/structure/validation.js",
    "importStyle": "Validation",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3541,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/structure/validation.js~Validation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/validation.js~Validation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 3542,
    "kind": "member",
    "name": "name",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#name",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 3543,
    "kind": "member",
    "name": "path",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#path",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 3544,
    "kind": "member",
    "name": "rsrzDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#rsrzDict",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 3545,
    "kind": "member",
    "name": "rsccDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#rsccDict",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 3546,
    "kind": "member",
    "name": "clashDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#clashDict",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 3547,
    "kind": "member",
    "name": "clashArray",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#clashArray",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 3548,
    "kind": "member",
    "name": "geoDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#geoDict",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true
  },
  {
    "__docId__": 3549,
    "kind": "member",
    "name": "geoAtomDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#geoAtomDict",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 3550,
    "kind": "member",
    "name": "atomDict",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#atomDict",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true
  },
  {
    "__docId__": 3551,
    "kind": "member",
    "name": "clashSele",
    "memberof": "src/structure/validation.js~Validation",
    "static": false,
    "longname": "src/structure/validation.js~Validation#clashSele",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "undocument": true
  },
  {
    "__docId__": 3552,
    "kind": "get",
    "name": "type",
    "memberof": "src/structure/validation.js~Validation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/validation.js~Validation#type",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true
  },
  {
    "__docId__": 3553,
    "kind": "method",
    "name": "fromXml",
    "memberof": "src/structure/validation.js~Validation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/validation.js~Validation#fromXml",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true
  },
  {
    "__docId__": 3555,
    "kind": "method",
    "name": "getClashData",
    "memberof": "src/structure/validation.js~Validation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/structure/validation.js~Validation#getClashData",
    "access": "public",
    "description": null,
    "lineNumber": 225,
    "undocument": true
  },
  {
    "__docId__": 3556,
    "kind": "file",
    "name": "src/surface/av-surface.js",
    "content": "/**\r\n * @file AV Surface\r\n * @author Fred Ludlow <fred.ludlow@gmail.com>\r\n * @private\r\n */\r\n\r\nimport { getSurfaceGrid } from './surface-utils.js'\r\nimport { VolumeSurface } from './volume.js'\r\nimport { uniformArray } from '../math/array-utils.js'\r\nimport {\r\n    computeBoundingBox, v3multiplyScalar, v3cross, v3normalize\r\n} from '../math/vector-utils.js'\r\nimport { defaults } from '../utils.js'\r\n\r\n/**\r\n * Modifed from SpatialHash\r\n *\r\n * Main differences are:\r\n * - Optimized grid size to ensure we only ever need to look +/-1 cell\r\n * - Aware of atomic radii and will only output atoms within rAtom + rExtra\r\n *   (see withinRadii method)\r\n *\r\n * (Uses rounding rather than bitshifting as consequence of arbitrary grid size)\r\n * @class\r\n * @param {Float32Array} atomsX - x coordinates\r\n * @param {Float32Array} atomsY - y coordinates\r\n * @param {Float32Array} atomsZ - z coordinates\r\n * @param {Float32Array} atomsR - atom radii\r\n * @param {Float32Array} min - xyz min coordinates\r\n * @param {Float32Array} max - xyz max coordinates\r\n * @param {Float} maxDistance - max distance\r\n */\r\nfunction AVHash (atomsX, atomsY, atomsZ, atomsR, min, max, maxDistance) {\r\n  var nAtoms = atomsX.length\r\n\r\n  var minX = min[ 0 ]\r\n  var minY = min[ 1 ]\r\n  var minZ = min[ 2 ]\r\n\r\n  var maxX = max[ 0 ]\r\n  var maxY = max[ 1 ]\r\n  var maxZ = max[ 2 ]\r\n\r\n  function hashFunc (w, minW) {\r\n    return Math.floor((w - minW) / maxDistance)\r\n  }\r\n\r\n  var iDim = hashFunc(maxX, minX) + 1\r\n  var jDim = hashFunc(maxY, minY) + 1\r\n  var kDim = hashFunc(maxZ, minZ) + 1\r\n\r\n  var nCells = iDim * jDim * kDim\r\n\r\n  var jkDim = jDim * kDim\r\n\r\n  /* Get cellID for cartesian x,y,z */\r\n  var cellID = function (x, y, z) {\r\n    return (((hashFunc(x, minX) * jDim) + hashFunc(y, minY)) * kDim) + hashFunc(z, minZ)\r\n  }\r\n\r\n  /* Initial building, could probably be optimized further */\r\n  var preHash = [] // preHash[ cellID ] = [ atomId1, atomId2 ];\r\n\r\n  for (var i = 0; i < nAtoms; i++) {\r\n    var cid = cellID(atomsX[ i ], atomsY[ i ], atomsZ[ i ])\r\n\r\n    if (preHash[ cid ] === undefined) {\r\n      preHash[ cid ] = [ i ]\r\n    } else {\r\n      preHash[ cid ].push(i)\r\n    }\r\n  }\r\n\r\n  var cellOffsets = new Uint32Array(nCells)\r\n  var cellLengths = new Uint16Array(nCells)\r\n  var data = new Uint32Array(nAtoms)\r\n\r\n  var offset = 0\r\n  var maxCellLength = 0\r\n\r\n  for (i = 0; i < nCells; i++) {\r\n    var start = cellOffsets[ i ] = offset\r\n\r\n    var subArray = preHash[ i ]\r\n\r\n    if (subArray !== undefined) {\r\n      for (var j = 0; j < subArray.length; j++) {\r\n        data[ offset ] = subArray[ j ]\r\n        offset++\r\n      }\r\n    }\r\n\r\n    var cellLength = offset - start\r\n    cellLengths[ i ] = cellLength\r\n\r\n    if (cellLength > maxCellLength) { maxCellLength = cellLength }\r\n  }\r\n\r\n  // Maximum number of neighbours we could ever produce (27 adjacent cells of equal population)\r\n  this.neighbourListLength = (27 * maxCellLength) + 1\r\n\r\n  /**\r\n   * Populate the supplied out array with atom indices that are within rAtom + rExtra\r\n   * of x,y,z\r\n   *\r\n   * -1 in out array indicates the end of the list\r\n   *\r\n   * @param  {Float} x - x coordinate\r\n   * @param  {Float} y - y coordinate\r\n   * @param  {Float} z - z coordinate\r\n   * @param  {Float} rExtra - additional radius\r\n   * @param  {Float32Array} out - pre-allocated output array\r\n   * @return {undefined}\r\n   */\r\n  this.withinRadii = function (x, y, z, rExtra, out) {\r\n    var outIdx = 0\r\n\r\n    var nearI = hashFunc(x, minX)\r\n    var nearJ = hashFunc(y, minY)\r\n    var nearK = hashFunc(z, minZ)\r\n\r\n    var loI = Math.max(0, nearI - 1)\r\n    var loJ = Math.max(0, nearJ - 1)\r\n    var loK = Math.max(0, nearK - 1)\r\n\r\n    var hiI = Math.min(iDim, nearI + 1)\r\n    var hiJ = Math.min(jDim, nearJ + 1)\r\n    var hiK = Math.min(kDim, nearK + 1)\r\n\r\n    for (var i = loI; i <= hiI; ++i) {\r\n      var iOffset = i * jkDim\r\n\r\n      for (var j = loJ; j <= hiJ; ++j) {\r\n        var jOffset = j * kDim\r\n\r\n        for (var k = loK; k <= hiK; ++k) {\r\n          var cid = iOffset + jOffset + k\r\n\r\n          var cellStart = cellOffsets[ cid ]\r\n          var cellEnd = cellStart + cellLengths[ cid ]\r\n\r\n          for (var dataIndex = cellStart; dataIndex < cellEnd; dataIndex++) {\r\n            var atomIndex = data[ dataIndex ]\r\n            var dx = atomsX[ atomIndex ] - x\r\n            var dy = atomsY[ atomIndex ] - y\r\n            var dz = atomsZ[ atomIndex ] - z\r\n            var rSum = atomsR[ atomIndex ] + rExtra\r\n\r\n            if ((dx * dx + dy * dy + dz * dz) <= (rSum * rSum)) {\r\n              out[ outIdx++ ] = data[ dataIndex ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Add terminator\r\n    out[ outIdx ] = -1\r\n  }\r\n}\r\n\r\nfunction AVSurface (coordList, radiusList, indexList) {\r\n  // Field generation method adapted from AstexViewer (Mike Hartshorn)\r\n  // by Fred Ludlow.\r\n  // Other parts based heavily on NGL (Alexander Rose) EDT Surface class\r\n  //\r\n  // Should work as a drop-in alternative to EDTSurface (though some of\r\n  // the EDT paramters are not relevant in this method).\r\n\r\n  var nAtoms = radiusList.length\r\n\r\n  var x = new Float32Array(nAtoms)\r\n  var y = new Float32Array(nAtoms)\r\n  var z = new Float32Array(nAtoms)\r\n\r\n  for (var i = 0; i < nAtoms; i++) {\r\n    var ci = 3 * i\r\n    x[ i ] = coordList[ ci ]\r\n    y[ i ] = coordList[ ci + 1 ]\r\n    z[ i ] = coordList[ ci + 2 ]\r\n  }\r\n\r\n  var bbox = computeBoundingBox(coordList)\r\n  if (coordList.length === 0) {\r\n    bbox[ 0 ].set([ 0, 0, 0 ])\r\n    bbox[ 1 ].set([ 0, 0, 0 ])\r\n  }\r\n  var min = bbox[0]\r\n  var max = bbox[1]\r\n\r\n  var r, r2  // Atom positions, expanded radii (squared)\r\n  var maxRadius\r\n\r\n  // Parameters\r\n  var probeRadius, scaleFactor, setAtomID, probePositions\r\n\r\n  // Cache last value for obscured test\r\n  var lastClip = -1\r\n\r\n  // Grid params\r\n  var dim, matrix, grid, atomIndex\r\n\r\n  // grid indices -> xyz coords\r\n  var gridx, gridy, gridz\r\n\r\n  // Lookup tables:\r\n  var sinTable, cosTable\r\n\r\n  // Spatial Hash\r\n  var hash\r\n\r\n  // Neighbour array to be filled by hash\r\n  var neighbours\r\n\r\n  // Vectors for Torus Projection\r\n  var mid = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n  var n1 = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n  var n2 = new Float32Array([ 0.0, 0.0, 0.0 ])\r\n\r\n  var ngTorus\r\n\r\n  function init (_probeRadius, _scaleFactor, _setAtomID, _probePositions) {\r\n    probeRadius = defaults(_probeRadius, 1.4)\r\n    scaleFactor = defaults(_scaleFactor, 2.0)\r\n    setAtomID = defaults(_setAtomID, true)\r\n    probePositions = defaults(_probePositions, 30)\r\n\r\n    r = new Float32Array(nAtoms)\r\n    r2 = new Float32Array(nAtoms)\r\n\r\n    for (var i = 0; i < r.length; ++i) {\r\n      var rExt = radiusList[ i ] + probeRadius\r\n      r[ i ] = rExt\r\n      r2[ i ] = rExt * rExt\r\n    }\r\n\r\n    maxRadius = 0\r\n    for (var j = 0; j < r.length; ++j) {\r\n      if (r[ j ] > maxRadius) maxRadius = r[ j ]\r\n    }\r\n\r\n    initializeGrid()\r\n    initializeAngleTables()\r\n    initializeHash()\r\n\r\n    lastClip = -1\r\n  }\r\n\r\n  function fillGridDim (a, start, step) {\r\n    for (var i = 0; i < a.length; i++) {\r\n      a[i] = start + (step * i)\r\n    }\r\n  }\r\n\r\n  function initializeGrid () {\r\n    var surfGrid = getSurfaceGrid(\r\n      min, max, maxRadius, scaleFactor, 0.0\r\n    )\r\n\r\n    scaleFactor = surfGrid.scaleFactor\r\n    dim = surfGrid.dim\r\n    matrix = surfGrid.matrix\r\n\r\n    ngTorus = Math.min(5, 2 + Math.floor(probeRadius * scaleFactor))\r\n\r\n    grid = uniformArray(dim[0] * dim[1] * dim[2], -1001.0)\r\n\r\n    atomIndex = new Int32Array(grid.length)\r\n\r\n    gridx = new Float32Array(dim[0])\r\n    gridy = new Float32Array(dim[1])\r\n    gridz = new Float32Array(dim[2])\r\n\r\n    fillGridDim(gridx, min[0], 1 / scaleFactor)\r\n    fillGridDim(gridy, min[1], 1 / scaleFactor)\r\n    fillGridDim(gridz, min[2], 1 / scaleFactor)\r\n  }\r\n\r\n  function initializeAngleTables () {\r\n    var theta = 0.0\r\n    var step = 2 * Math.PI / probePositions\r\n\r\n    cosTable = new Float32Array(probePositions)\r\n    sinTable = new Float32Array(probePositions)\r\n    for (var i = 0; i < probePositions; i++) {\r\n      cosTable[ i ] = Math.cos(theta)\r\n      sinTable[ i ] = Math.sin(theta)\r\n      theta += step\r\n    }\r\n  }\r\n\r\n  function initializeHash () {\r\n    hash = new AVHash(x, y, z, r, min, max, 2.01 * maxRadius)\r\n    neighbours = new Int32Array(hash.neighbourListLength)\r\n  }\r\n\r\n  function obscured (x, y, z, a, b) {\r\n    // Is the point at x,y,z obscured by any of the atoms\r\n    // specifeid by indices in neighbours. Ignore indices\r\n    // a and b (these are the relevant atoms in projectPoints/Torii)\r\n\r\n    // Cache the last clipped atom (as very often the same one in\r\n    // subsequent calls)\r\n    var ai\r\n\r\n    if (lastClip !== -1) {\r\n      ai = lastClip\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n        return ai\r\n      } else {\r\n        lastClip = -1\r\n      }\r\n    }\r\n\r\n    var ni = 0\r\n    ai = neighbours[ ni ]\r\n    while (ai >= 0) {\r\n      if (ai !== a && ai !== b && singleAtomObscures(ai, x, y, z)) {\r\n        lastClip = ai\r\n        return ai\r\n      }\r\n      ai = neighbours[ ++ni ]\r\n    }\r\n\r\n    lastClip = -1\r\n\r\n    return -1\r\n  }\r\n\r\n  function singleAtomObscures (ai, x, y, z) {\r\n    var ci = 3 * ai\r\n    var ra2 = r2[ ai ]\r\n    var dx = coordList[ ci ] - x\r\n    var dy = coordList[ ci + 1 ] - y\r\n    var dz = coordList[ ci + 2 ] - z\r\n    var d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    return d2 < ra2\r\n  }\r\n\r\n  function projectPoints () {\r\n    // For each atom:\r\n    //     Iterate over a subsection of the grid, for each point:\r\n    //         If current value < 0.0, unvisited, set positive\r\n    //\r\n    //         In any case: Project this point onto surface of the atomic sphere\r\n    //         If this projected point is not obscured by any other atom\r\n    //             Calcualte delta distance and set grid value to minimum of\r\n    //             itself and delta\r\n\r\n    // Should we alias frequently accessed closure variables??\r\n    // Assume JS engine capable of optimizing this\r\n    // anyway...\r\n\r\n    for (var i = 0; i < nAtoms; i++) {\r\n      var ax = x[ i ]\r\n      var ay = y[ i ]\r\n      var az = z[ i ]\r\n      var ar = r[ i ]\r\n      var ar2 = r2[ i ]\r\n\r\n      hash.withinRadii(ax, ay, az, ar, neighbours)\r\n\r\n      // Number of grid points, round this up...\r\n      var ng = Math.ceil(ar * scaleFactor)\r\n\r\n      // Center of the atom, mapped to grid points (take floor)\r\n      var iax = Math.floor(scaleFactor * (ax - min[ 0 ]))\r\n      var iay = Math.floor(scaleFactor * (ay - min[ 1 ]))\r\n      var iaz = Math.floor(scaleFactor * (az - min[ 2 ]))\r\n\r\n      // Extents of grid to consider for this atom\r\n      var minx = Math.max(0, iax - ng)\r\n      var miny = Math.max(0, iay - ng)\r\n      var minz = Math.max(0, iaz - ng)\r\n\r\n      // Add two to these points:\r\n      // - iax are floor'd values so this ensures coverage\r\n      // - these are loop limits (exclusive)\r\n      var maxx = Math.min(dim[ 0 ], iax + ng + 2)\r\n      var maxy = Math.min(dim[ 1 ], iay + ng + 2)\r\n      var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\r\n\r\n      for (var ix = minx; ix < maxx; ix++) {\r\n        var dx = gridx[ ix ] - ax\r\n        var xoffset = dim[ 1 ] * dim[ 2 ] * ix\r\n\r\n        for (var iy = miny; iy < maxy; iy++) {\r\n          var dy = gridy[ iy ] - ay\r\n          var dxy2 = dx * dx + dy * dy\r\n          var xyoffset = xoffset + dim[ 2 ] * iy\r\n\r\n          for (var iz = minz; iz < maxz; iz++) {\r\n            var dz = gridz[ iz ] - az\r\n            var d2 = dxy2 + dz * dz\r\n\r\n            if (d2 < ar2) {\r\n              var idx = iz + xyoffset\r\n\r\n              if (grid[idx] < 0.0) {\r\n                // Unvisited, make positive\r\n                grid[ idx ] = -grid[ idx ]\r\n              }\r\n              // Project on to the surface of the sphere\r\n              // sp is the projected point ( dx, dy, dz ) * ( ra / d )\r\n              var d = Math.sqrt(d2)\r\n              var ap = ar / d\r\n              var spx = dx * ap\r\n              var spy = dy * ap\r\n              var spz = dz * ap\r\n\r\n              spx += ax\r\n              spy += ay\r\n              spz += az\r\n\r\n              if (obscured(spx, spy, spz, i, -1) === -1) {\r\n                var dd = ar - d\r\n                if (dd < grid[ idx ]) {\r\n                  grid[ idx ] = dd\r\n                  if (setAtomID) atomIndex[ idx ] = i\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorii () {\r\n    for (var i = 0; i < nAtoms; i++) {\r\n      hash.withinRadii(x[ i ], y[ i ], z[ i ], r[ i ], neighbours)\r\n      var ia = 0\r\n      var ni = neighbours[ ia ]\r\n      while (ni >= 0) {\r\n        if (i < ni) {\r\n          projectTorus(i, ni)\r\n        }\r\n        ni = neighbours[ ++ia ]\r\n      }\r\n    }\r\n  }\r\n\r\n  function projectTorus (a, b) {\r\n    var r1 = r[ a ]\r\n    var r2 = r[ b ]\r\n    var dx = mid[0] = x[ b ] - x[ a ]\r\n    var dy = mid[1] = y[ b ] - y[ a ]\r\n    var dz = mid[2] = z[ b ] - z[ a ]\r\n    var d2 = dx * dx + dy * dy + dz * dz\r\n\r\n    // This check now redundant as already done in AVHash.withinRadii\r\n    // if( d2 > (( r1 + r2 ) * ( r1 + r2 )) ){ return; }\r\n\r\n    var d = Math.sqrt(d2)\r\n\r\n    // Find angle between a->b vector and the circle\r\n    // of their intersection by cosine rule\r\n    var cosA = (r1 * r1 + d * d - r2 * r2) / (2.0 * r1 * d)\r\n\r\n    // distance along a->b at intersection\r\n    var dmp = r1 * cosA\r\n\r\n    v3normalize(mid, mid)\r\n\r\n    // Create normal to line\r\n    normalToLine(n1, mid)\r\n    v3normalize(n1, n1)\r\n\r\n    // Cross together for second normal vector\r\n    v3cross(n2, mid, n1)\r\n    v3normalize(n2, n2)\r\n\r\n    // r is radius of circle of intersection\r\n    var rInt = Math.sqrt(r1 * r1 - dmp * dmp)\r\n\r\n    v3multiplyScalar(n1, n1, rInt)\r\n    v3multiplyScalar(n2, n2, rInt)\r\n    v3multiplyScalar(mid, mid, dmp)\r\n\r\n    mid[ 0 ] += x[ a ]\r\n    mid[ 1 ] += y[ a ]\r\n    mid[ 2 ] += z[ a ]\r\n\r\n    lastClip = -1\r\n\r\n    var ng = ngTorus\r\n\r\n    for (var i = 0; i < probePositions; i++) {\r\n      var cost = cosTable[ i ]\r\n      var sint = sinTable[ i ]\r\n\r\n      var px = mid[ 0 ] + cost * n1[ 0 ] + sint * n2[ 0 ]\r\n      var py = mid[ 1 ] + cost * n1[ 1 ] + sint * n2[ 1 ]\r\n      var pz = mid[ 2 ] + cost * n1[ 2 ] + sint * n2[ 2 ]\r\n\r\n      if (obscured(px, py, pz, a, b) === -1) {\r\n        // As above, iterate over our grid...\r\n        // px, py, pz in grid coords\r\n        var iax = Math.floor(scaleFactor * (px - min[ 0 ]))\r\n        var iay = Math.floor(scaleFactor * (py - min[ 1 ]))\r\n        var iaz = Math.floor(scaleFactor * (pz - min[ 2 ]))\r\n\r\n        var minx = Math.max(0, iax - ng)\r\n        var miny = Math.max(0, iay - ng)\r\n        var minz = Math.max(0, iaz - ng)\r\n\r\n        var maxx = Math.min(dim[ 0 ], iax + ng + 2)\r\n        var maxy = Math.min(dim[ 1 ], iay + ng + 2)\r\n        var maxz = Math.min(dim[ 2 ], iaz + ng + 2)\r\n\r\n        for (var ix = minx; ix < maxx; ix++) {\r\n          dx = px - gridx[ ix ]\r\n          var xoffset = dim[ 1 ] * dim[ 2 ] * ix\r\n\r\n          for (var iy = miny; iy < maxy; iy++) {\r\n            dy = py - gridy[ iy ]\r\n            var dxy2 = dx * dx + dy * dy\r\n            var xyoffset = xoffset + dim[ 2 ] * iy\r\n\r\n            for (var iz = minz; iz < maxz; iz++) {\r\n              dz = pz - gridz[ iz ]\r\n              d2 = dxy2 + dz * dz\r\n              var idx = iz + xyoffset\r\n              var current = grid[ idx ]\r\n\r\n              if (current > 0.0 && d2 < (current * current)) {\r\n                grid[ idx ] = Math.sqrt(d2)\r\n                if (setAtomID) atomIndex[ idx ] = a\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function normalToLine (out, p) {\r\n    out[ 0 ] = out[ 1 ] = out[ 2 ] = 1.0\r\n    if (p[ 0 ] !== 0) {\r\n      out[ 0 ] = (p[ 1 ] + p[ 2 ]) / -p[ 0 ]\r\n    } else if (p[ 1 ] !== 0) {\r\n      out[ 1 ] = (p[ 0 ] + p[ 2 ]) / -p[ 1 ]\r\n    } else if (p[ 2 ] !== 0) {\r\n      out[ 2 ] = (p[ 0 ] + p[ 1 ]) / -p[ 2 ]\r\n    }\r\n    return out\r\n  }\r\n\r\n  function fixNegatives () {\r\n    for (var i = 0; i < grid.length; i++) {\r\n      if (grid[ i ] < 0) grid[ i ] = 0\r\n    }\r\n  }\r\n\r\n  function fixAtomIDs () {\r\n    for (var i = 0; i < atomIndex.length; i++) {\r\n      atomIndex[ i ] = indexList[ atomIndex[ i ] ]\r\n    }\r\n  }\r\n\r\n  function getVolume (probeRadius, scaleFactor, setAtomID) {\r\n        // Basic steps are:\r\n        // 1) Initialize\r\n        // 2) Project points\r\n        // 3) Project torii\r\n\r\n    console.time('AVSurface.getVolume')\r\n\r\n    console.time('AVSurface.init')\r\n    init(probeRadius, scaleFactor, setAtomID)\r\n    console.timeEnd('AVSurface.init')\r\n\r\n    console.time('AVSurface.projectPoints')\r\n    projectPoints()\r\n    console.timeEnd('AVSurface.projectPoints')\r\n\r\n    console.time('AVSurface.projectTorii')\r\n    projectTorii()\r\n    console.timeEnd('AVSurface.projectTorii')\r\n    fixNegatives()\r\n    fixAtomIDs()\r\n\r\n    console.timeEnd('AVSurface.getVolume')\r\n  }\r\n\r\n  this.getSurface = function (type, probeRadius, scaleFactor, cutoff, setAtomID, smooth, contour) {\r\n        // type and cutoff left in for compatibility with EDTSurface.getSurface\r\n        // function signature\r\n\r\n    getVolume(probeRadius, scaleFactor, setAtomID)\r\n\r\n    var volsurf = new VolumeSurface(\r\n            grid, dim[ 2 ], dim[ 1 ], dim[ 0 ], atomIndex\r\n        )\r\n\r\n    return volsurf.getSurface(probeRadius, false, undefined, matrix, contour)\r\n  }\r\n}\r\nAVSurface.__deps = [\r\n  getSurfaceGrid, VolumeSurface, uniformArray, computeBoundingBox,\r\n  v3multiplyScalar, v3cross, v3normalize,\r\n  AVHash,\r\n  defaults\r\n]\r\n\r\nexport { AVSurface, AVHash }\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/av-surface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3557,
    "kind": "function",
    "name": "AVSurface",
    "memberof": "src/surface/av-surface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/av-surface.js~AVSurface",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/av-surface.js",
    "importStyle": "{AVSurface}",
    "description": null,
    "lineNumber": 161,
    "undocument": true
  },
  {
    "__docId__": 3558,
    "kind": "function",
    "name": "AVHash",
    "memberof": "src/surface/av-surface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/av-surface.js~AVHash",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/av-surface.js",
    "importStyle": "{AVHash}",
    "description": "Modifed from SpatialHash\n\nMain differences are:\n- Optimized grid size to ensure we only ever need to look +/-1 cell\n- Aware of atomic radii and will only output atoms within rAtom + rExtra\n  (see withinRadii method)\n\n(Uses rounding rather than bitshifting as consequence of arbitrary grid size)",
    "lineNumber": 33,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomsX",
        "description": "x coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomsY",
        "description": "y coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomsZ",
        "description": "z coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomsR",
        "description": "atom radii"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "xyz min coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "xyz max coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Float"
        ],
        "spread": false,
        "optional": false,
        "name": "maxDistance",
        "description": "max distance"
      }
    ]
  },
  {
    "__docId__": 3559,
    "kind": "file",
    "name": "src/surface/edt-surface.js",
    "content": "/**\r\n * @file EDT Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { VolumeSurface } from './volume.js'\r\nimport Grid from '../geometry/grid.js'\r\nimport { computeBoundingBox } from '../math/vector-utils.js'\r\nimport { getRadiusDict, getSurfaceGrid } from './surface-utils.js'\r\n\r\nfunction EDTSurface (coordList, radiusList, indexList) {\r\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n    //\r\n    // Permission to use, copy, modify, and distribute this program for\r\n    // any purpose, with or without fee, is hereby granted, provided that\r\n    // the notices on the head, the reference information, and this\r\n    // copyright notice appear in all copies or substantial portions of\r\n    // the Software. It is provided \"as is\" without express or implied\r\n    // warranty.\r\n    //\r\n    // ported to JavaScript by biochem_fan (http://webglmol.sourceforge.jp/)\r\n    // refactored by dkoes (https://github.com/dkoes)\r\n    //\r\n    // adapted to NGL by Alexander Rose\r\n\r\n  var radiusDict = getRadiusDict(radiusList)\r\n  var bbox = computeBoundingBox(coordList)\r\n  if (coordList.length === 0) {\r\n    bbox[ 0 ].set([ 0, 0, 0 ])\r\n    bbox[ 1 ].set([ 0, 0, 0 ])\r\n  }\r\n  var min = bbox[ 0 ]\r\n  var max = bbox[ 1 ]\r\n\r\n  var probeRadius, scaleFactor, cutoff\r\n  var pLength, pWidth, pHeight\r\n  var matrix, ptran\r\n  var depty, widxz\r\n  var cutRadius\r\n  var setAtomID\r\n  var vpBits, vpDistance, vpAtomID\r\n\r\n  function init (btype, _probeRadius, _scaleFactor, _cutoff, _setAtomID) {\r\n    probeRadius = _probeRadius || 1.4\r\n    scaleFactor = _scaleFactor || 2.0\r\n    setAtomID = _setAtomID || true\r\n\r\n    var maxRadius = 0\r\n    for (var radius in radiusDict) {\r\n      maxRadius = Math.max(maxRadius, radius)\r\n    }\r\n\r\n    var grid = getSurfaceGrid(\r\n            min, max, maxRadius, scaleFactor, btype ? probeRadius : 0\r\n        )\r\n\r\n    pLength = grid.dim[0]\r\n    pWidth = grid.dim[1]\r\n    pHeight = grid.dim[2]\r\n\r\n    matrix = grid.matrix\r\n    ptran = grid.tran\r\n    scaleFactor = grid.scaleFactor\r\n\r\n        // boundingatom caches\r\n    depty = {}\r\n    widxz = {}\r\n    boundingatom(btype)\r\n\r\n    cutRadius = probeRadius * scaleFactor\r\n\r\n    if (_cutoff) {\r\n      cutoff = _cutoff\r\n    } else {\r\n            // cutoff = Math.max( 0.1, -1.2 + scaleFactor * probeRadius );\r\n      cutoff = probeRadius / scaleFactor\r\n    }\r\n\r\n    vpBits = new Uint8Array(pLength * pWidth * pHeight)\r\n    if (btype) {\r\n      vpDistance = new Float64Array(pLength * pWidth * pHeight)\r\n    }\r\n    if (setAtomID) {\r\n      vpAtomID = new Int32Array(pLength * pWidth * pHeight)\r\n    }\r\n  }\r\n\r\n    // constants for vpBits bitmasks\r\n  var INOUT = 1\r\n  var ISDONE = 2\r\n  var ISBOUND = 4\r\n\r\n  var nb = [\r\n    new Int32Array([ 1, 0, 0 ]), new Int32Array([ -1, 0, 0 ]),\r\n    new Int32Array([ 0, 1, 0 ]), new Int32Array([ 0, -1, 0 ]),\r\n    new Int32Array([ 0, 0, 1 ]), new Int32Array([ 0, 0, -1 ]),\r\n    new Int32Array([ 1, 1, 0 ]), new Int32Array([ 1, -1, 0 ]),\r\n    new Int32Array([ -1, 1, 0 ]), new Int32Array([ -1, -1, 0 ]),\r\n    new Int32Array([ 1, 0, 1 ]), new Int32Array([ 1, 0, -1 ]),\r\n    new Int32Array([ -1, 0, 1 ]), new Int32Array([ -1, 0, -1 ]),\r\n    new Int32Array([ 0, 1, 1 ]), new Int32Array([ 0, 1, -1 ]),\r\n    new Int32Array([ 0, -1, 1 ]), new Int32Array([ 0, -1, -1 ]),\r\n    new Int32Array([ 1, 1, 1 ]), new Int32Array([ 1, 1, -1 ]),\r\n    new Int32Array([ 1, -1, 1 ]), new Int32Array([ -1, 1, 1 ]),\r\n    new Int32Array([ 1, -1, -1 ]), new Int32Array([ -1, -1, 1 ]),\r\n    new Int32Array([ -1, 1, -1 ]), new Int32Array([ -1, -1, -1 ])\r\n  ]\r\n\r\n    //\r\n\r\n  this.getVolume = function (type, probeRadius, scaleFactor, cutoff, setAtomID) {\r\n    console.time('EDTSurface.getVolume')\r\n\r\n    var btype = type !== 'vws'\r\n\r\n    init(btype, probeRadius, scaleFactor, cutoff, setAtomID)\r\n\r\n    fillvoxels(btype)\r\n    buildboundary()\r\n\r\n    if (type === 'ms' || type === 'ses') {\r\n      fastdistancemap()\r\n    }\r\n\r\n    if (type === 'ses') {\r\n      boundingatom(false)\r\n      fillvoxelswaals()\r\n    }\r\n\r\n    marchingcubeinit(type)\r\n\r\n        // set atomindex in the volume data\r\n    for (var i = 0, il = vpAtomID.length; i < il; ++i) {\r\n      vpAtomID[ i ] = indexList[ vpAtomID[ i ] ]\r\n    }\r\n\r\n    console.timeEnd('EDTSurface.getVolume')\r\n\r\n    return {\r\n      data: vpBits,\r\n      nx: pHeight,\r\n      ny: pWidth,\r\n      nz: pLength,\r\n      atomindex: vpAtomID\r\n    }\r\n  }\r\n\r\n  this.getSurface = function (type, probeRadius, scaleFactor, cutoff, setAtomID, smooth, contour) {\r\n    var vd = this.getVolume(\r\n      type, probeRadius, scaleFactor, cutoff, setAtomID\r\n    )\r\n\r\n    var volsurf = new VolumeSurface(\r\n      vd.data, vd.nx, vd.ny, vd.nz, vd.atomindex\r\n    )\r\n\r\n    return volsurf.getSurface(1, smooth, undefined, matrix, contour)\r\n  }\r\n\r\n  function boundingatom (btype) {\r\n    var r\r\n    var j\r\n    var k\r\n    var txz\r\n    var tdept\r\n    var sradius\r\n    var tradius\r\n    var widxzR\r\n    var deptyName\r\n    var indx\r\n\r\n    for (var name in radiusDict) {\r\n      r = radiusDict[ name ]\r\n\r\n      if (depty[ name ]) continue\r\n\r\n      if (!btype) {\r\n        tradius = r * scaleFactor + 0.5\r\n      } else {\r\n        tradius = (r + probeRadius) * scaleFactor + 0.5\r\n      }\r\n\r\n      sradius = tradius * tradius\r\n      widxzR = Math.floor(tradius) + 1\r\n      deptyName = new Int32Array(widxzR * widxzR)\r\n      indx = 0\r\n\r\n      for (j = 0; j < widxzR; ++j) {\r\n        for (k = 0; k < widxzR; ++k) {\r\n          txz = j * j + k * k\r\n\r\n          if (txz > sradius) {\r\n            deptyName[ indx ] = -1\r\n          } else {\r\n            tdept = Math.sqrt(sradius - txz)\r\n            deptyName[ indx ] = Math.floor(tdept)\r\n          }\r\n\r\n          ++indx\r\n        }\r\n      }\r\n\r\n      widxz[ name ] = widxzR\r\n      depty[ name ] = deptyName\r\n    }\r\n  }\r\n\r\n  function fillatom (idx) {\r\n    var ci = idx * 3\r\n    var ri = idx\r\n\r\n    var cx, cy, cz, ox, oy, oz, mi, mj, mk, i, j, k, si, sj, sk\r\n    var ii, jj, kk\r\n\r\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\r\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\r\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\r\n\r\n    var at = radiusList[ ri ]\r\n    var deptyAt = depty[ at ]\r\n    var nind = 0\r\n    var pWH = pWidth * pHeight\r\n    var n = widxz[ at ]\r\n\r\n    var deptyAtNind\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      for (j = 0; j < n; ++j) {\r\n        deptyAtNind = deptyAt[ nind ]\r\n\r\n        if (deptyAtNind !== -1) {\r\n          for (ii = -1; ii < 2; ++ii) {\r\n            for (jj = -1; jj < 2; ++jj) {\r\n              for (kk = -1; kk < 2; ++kk) {\r\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                  mi = ii * i\r\n                  mk = kk * j\r\n\r\n                  for (k = 0; k <= deptyAtNind; ++k) {\r\n                    mj = k * jj\r\n                    si = cx + mi\r\n                    sj = cy + mj\r\n                    sk = cz + mk\r\n\r\n                    if (si < 0 || sj < 0 || sk < 0 ||\r\n                      si >= pLength || sj >= pWidth || sk >= pHeight\r\n                    ) {\r\n                      continue\r\n                    }\r\n\r\n                    var index = si * pWH + sj * pHeight + sk\r\n\r\n                    if (!setAtomID) {\r\n                      vpBits[ index ] |= INOUT\r\n                    } else {\r\n                      if (!(vpBits[ index ] & INOUT)) {\r\n                        vpBits[ index ] |= INOUT\r\n                        vpAtomID[ index ] = idx\r\n                      } else if (vpBits[ index ] & INOUT) {\r\n                        var ci2 = vpAtomID[ index ]\r\n\r\n                        if (ci2 !== ci) {\r\n                          ox = cx + mi - Math.floor(0.5 + scaleFactor * (coordList[ci2] + ptran[0]))\r\n                          oy = cy + mj - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 1] + ptran[1]))\r\n                          oz = cz + mk - Math.floor(0.5 + scaleFactor * (coordList[ci2 + 2] + ptran[2]))\r\n\r\n                          if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                            vpAtomID[ index ] = idx\r\n                          }\r\n                        }\r\n                      }\r\n                    }\r\n                  }// k\r\n                }// if\r\n              }// kk\r\n            }// jj\r\n          }// ii\r\n        }// if\r\n\r\n        nind++\r\n      }// j\r\n    }// i\r\n  }\r\n\r\n  function fillvoxels (btype) {\r\n    console.time('EDTSurface fillvoxels')\r\n\r\n    var i, il\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      vpBits[ i ] = 0\r\n      if (btype) vpDistance[ i ] = -1.0\r\n      if (setAtomID) vpAtomID[ i ] = -1\r\n    }\r\n\r\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n      fillatom(i)\r\n    }\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      if (vpBits[ i ] & INOUT) {\r\n        vpBits[ i ] |= ISDONE\r\n      }\r\n    }\r\n\r\n    console.timeEnd('EDTSurface fillvoxels')\r\n  }\r\n\r\n  function fillAtomWaals (idx) {\r\n    var ci = idx * 3\r\n    var ri = idx\r\n\r\n    var cx\r\n    var cy\r\n    var cz\r\n    var ox\r\n    var oy\r\n    var oz\r\n    var nind = 0\r\n\r\n    var mi\r\n    var mj\r\n    var mk\r\n    var si\r\n    var sj\r\n    var sk\r\n    var i\r\n    var j\r\n    var k\r\n    var ii\r\n    var jj\r\n    var kk\r\n    var n\r\n\r\n    cx = Math.floor(0.5 + scaleFactor * (coordList[ ci ] + ptran[0]))\r\n    cy = Math.floor(0.5 + scaleFactor * (coordList[ ci + 1 ] + ptran[1]))\r\n    cz = Math.floor(0.5 + scaleFactor * (coordList[ ci + 2 ] + ptran[2]))\r\n\r\n    var at = radiusList[ ri ]\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0, n = widxz[at]; i < n; ++i) {\r\n      for (j = 0; j < n; ++j) {\r\n        if (depty[ at ][ nind ] !== -1) {\r\n          for (ii = -1; ii < 2; ++ii) {\r\n            for (jj = -1; jj < 2; ++jj) {\r\n              for (kk = -1; kk < 2; ++kk) {\r\n                if (ii !== 0 && jj !== 0 && kk !== 0) {\r\n                  mi = ii * i\r\n                  mk = kk * j\r\n\r\n                  for (k = 0; k <= depty[ at ][ nind ]; ++k) {\r\n                    mj = k * jj\r\n                    si = cx + mi\r\n                    sj = cy + mj\r\n                    sk = cz + mk\r\n\r\n                    if (si < 0 || sj < 0 || sk < 0 ||\r\n                      si >= pLength || sj >= pWidth || sk >= pHeight\r\n                    ) {\r\n                      continue\r\n                    }\r\n\r\n                    var index = si * pWH + sj * pHeight + sk\r\n\r\n                    if (!(vpBits[ index ] & ISDONE)) {\r\n                      vpBits[ index ] |= ISDONE\r\n                      if (setAtomID) vpAtomID[ index ] = idx\r\n                    } else if (setAtomID) {\r\n                      var ci2 = vpAtomID[ index ]\r\n\r\n                      ox = Math.floor(0.5 + scaleFactor * (coordList[ ci2 ] + ptran[0]))\r\n                      oy = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 1 ] + ptran[1]))\r\n                      oz = Math.floor(0.5 + scaleFactor * (coordList[ ci2 + 2 ] + ptran[2]))\r\n\r\n                      if (mi * mi + mj * mj + mk * mk < ox * ox + oy * oy + oz * oz) {\r\n                        vpAtomID[ index ] = idx\r\n                      }\r\n                    }\r\n                  }// k\r\n                }// if\r\n              }// kk\r\n            }// jj\r\n          }// ii\r\n        }// if\r\n\r\n        nind++\r\n      }// j\r\n    }// i\r\n  }\r\n\r\n  function fillvoxelswaals () {\r\n    var i, il\r\n\r\n    for (i = 0, il = vpBits.length; i < il; ++i) {\r\n      vpBits[ i ] &= ~ISDONE  // not isdone\r\n    }\r\n\r\n    for (i = 0, il = coordList.length / 3; i < il; ++i) {\r\n      fillAtomWaals(i)\r\n    }\r\n  }\r\n\r\n  function buildboundary () {\r\n    var i, j, k\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pHeight; ++j) {\r\n        for (k = 0; k < pWidth; ++k) {\r\n          var index = i * pWH + k * pHeight + j\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n                // var flagbound = false;\r\n            var ii = 0\r\n\r\n                // while( !flagbound && ii < 26 ){\r\n            while (ii < 26) {\r\n              var ti = i + nb[ ii ][ 0 ]\r\n              var tj = j + nb[ ii ][ 2 ]\r\n              var tk = k + nb[ ii ][ 1 ]\r\n\r\n              if (ti > -1 && ti < pLength &&\r\n                        tk > -1 && tk < pWidth &&\r\n                        tj > -1 && tj < pHeight &&\r\n                        !(vpBits[ ti * pWH + tk * pHeight + tj ] & INOUT)\r\n                    ) {\r\n                vpBits[ index ] |= ISBOUND\r\n                        // flagbound = true;\r\n                break\r\n              } else {\r\n                ii++\r\n              }\r\n            }\r\n          }\r\n        } // k\r\n      } // j\r\n    } // i\r\n  }\r\n\r\n  function fastdistancemap () {\r\n    console.time('EDTSurface fastdistancemap')\r\n\r\n    var i, j, k, n\r\n\r\n    var boundPoint = new Grid(\r\n            pLength, pWidth, pHeight, Uint16Array, 3\r\n        )\r\n    var pWH = pWidth * pHeight\r\n    var cutRSq = cutRadius * cutRadius\r\n\r\n    var totalsurfacevox = 0\r\n        // var totalinnervox = 0;\r\n\r\n    var index\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n\r\n          vpBits[ index ] &= ~ISDONE\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n            if (vpBits[ index ] & ISBOUND) {\r\n              boundPoint.set(\r\n                                i, j, k,\r\n                                i, j, k\r\n                            )\r\n\r\n              vpDistance[ index ] = 0\r\n              vpBits[ index ] |= ISDONE\r\n\r\n              totalsurfacevox += 1\r\n            }/* else{\r\n\r\n                            totalinnervox += 1;\r\n\r\n                        } */\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    var inarray = new Int32Array(3 * totalsurfacevox)\r\n    var positin = 0\r\n    var outarray = new Int32Array(3 * totalsurfacevox)\r\n    var positout = 0\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n\r\n          if (vpBits[ index ] & ISBOUND) {\r\n            inarray[ positin ] = i\r\n            inarray[ positin + 1 ] = j\r\n            inarray[ positin + 2 ] = k\r\n            positin += 3\r\n\r\n            vpBits[ index ] &= ~ISBOUND\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    do {\r\n      positout = fastoneshell(inarray, boundPoint, positin, outarray)\r\n      positin = 0\r\n\r\n      for (i = 0, n = positout; i < n; i += 3) {\r\n        index = pWH * outarray[ i ] + pHeight * outarray[ i + 1 ] + outarray[ i + 2 ]\r\n        vpBits[ index ] &= ~ISBOUND\r\n\r\n        if (vpDistance[ index ] <= 1.0404 * cutRSq) {\r\n                // if( vpDistance[ index ] <= 1.02 * cutRadius ){\r\n\r\n          inarray[ positin ] = outarray[ i ]\r\n          inarray[ positin + 1 ] = outarray[ i + 1 ]\r\n          inarray[ positin + 2 ] = outarray[ i + 2 ]\r\n          positin += 3\r\n        }\r\n      }\r\n    } while (positin > 0)\r\n\r\n        // var cutsf = Math.max( 0, scaleFactor - 0.5 );\r\n        // cutoff = cutRadius - 0.5 / ( 0.1 + cutsf );\r\n    var cutoffSq = cutoff * cutoff\r\n\r\n    var index2\r\n    var bp = new Uint16Array(3)\r\n\r\n    for (i = 0; i < pLength; ++i) {\r\n      for (j = 0; j < pWidth; ++j) {\r\n        for (k = 0; k < pHeight; ++k) {\r\n          index = i * pWH + j * pHeight + k\r\n          vpBits[ index ] &= ~ISBOUND\r\n\r\n                    // ses solid\r\n\r\n          if (vpBits[ index ] & INOUT) {\r\n            if (!(vpBits[ index ] & ISDONE) ||\r\n                            ((vpBits[ index ] & ISDONE) && vpDistance[ index ] >= cutoffSq)\r\n                        ) {\r\n              vpBits[ index ] |= ISBOUND\r\n\r\n              if (setAtomID && (vpBits[ index ] & ISDONE)) {\r\n                boundPoint.toArray(i, j, k, bp)\r\n                index2 = bp[ 0 ] * pWH + bp[ 1 ] * pHeight + bp[ 2 ]\r\n\r\n                vpAtomID[ index ] = vpAtomID[ index2 ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.timeEnd('EDTSurface fastdistancemap')\r\n  }\r\n\r\n  function fastoneshell (inarray, boundPoint, positin, outarray) {\r\n        // *allocout,voxel2\r\n        // ***boundPoint, int*\r\n        // outnum, int *elimi)\r\n    var tx, ty, tz\r\n    var dx, dy, dz\r\n    var i, j, n\r\n    var square\r\n    var index\r\n    var nbj\r\n    var bp = new Uint16Array(3)\r\n    var positout = 0\r\n\r\n    if (positin === 0) {\r\n      return positout\r\n    }\r\n\r\n    var tnvix = -1\r\n    var tnviy = -1\r\n    var tnviz = -1\r\n\r\n    var pWH = pWidth * pHeight\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 0; j < 6; ++j) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1\r\n                ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[ index ] & INOUT) && !(vpBits[ index ] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            vpDistance[ index ] = square\r\n            vpBits[ index ] |= ISDONE\r\n            vpBits[ index ] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[ index ] & INOUT) && (vpBits[ index ] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[ index ]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[ index ] = square\r\n\r\n              if (!(vpBits[ index ] & ISBOUND)) {\r\n                vpBits[ index ] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 6; j < 18; j++) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1\r\n                ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            vpDistance[index] = square\r\n            vpBits[index] |= ISDONE\r\n            vpBits[index] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[index]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[index] = square\r\n\r\n              if (!(vpBits[index] & ISBOUND)) {\r\n                vpBits[index] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    for (i = 0, n = positin; i < n; i += 3) {\r\n      tx = inarray[ i ]\r\n      ty = inarray[ i + 1 ]\r\n      tz = inarray[ i + 2 ]\r\n      boundPoint.toArray(tx, ty, tz, bp)\r\n\r\n      for (j = 18; j < 26; j++) {\r\n        nbj = nb[ j ]\r\n        tnvix = tx + nbj[ 0 ]\r\n        tnviy = ty + nbj[ 1 ]\r\n        tnviz = tz + nbj[ 2 ]\r\n\r\n        if (tnvix < pLength && tnvix > -1 &&\r\n                    tnviy < pWidth && tnviy > -1 &&\r\n                    tnviz < pHeight && tnviz > -1\r\n                ) {\r\n          index = tnvix * pWH + pHeight * tnviy + tnviz\r\n\r\n          if ((vpBits[index] & INOUT) && !(vpBits[index] & ISDONE)) {\r\n            boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            vpDistance[index] = square\r\n            vpBits[index] |= ISDONE\r\n            vpBits[index] |= ISBOUND\r\n\r\n            outarray[ positout ] = tnvix\r\n            outarray[ positout + 1 ] = tnviy\r\n            outarray[ positout + 2 ] = tnviz\r\n            positout += 3\r\n          } else if ((vpBits[index] & INOUT) && (vpBits[index] & ISDONE)) {\r\n            dx = tnvix - bp[ 0 ]\r\n            dy = tnviy - bp[ 1 ]\r\n            dz = tnviz - bp[ 2 ]\r\n            square = dx * dx + dy * dy + dz * dz\r\n                        // square = Math.sqrt( square );\r\n\r\n            if (square < vpDistance[index]) {\r\n              boundPoint.fromArray(tnvix, tnviy, tnviz, bp)\r\n              vpDistance[index] = square\r\n\r\n              if (!(vpBits[index] & ISBOUND)) {\r\n                vpBits[index] |= ISBOUND\r\n\r\n                outarray[ positout ] = tnvix\r\n                outarray[ positout + 1 ] = tnviy\r\n                outarray[ positout + 2 ] = tnviz\r\n                positout += 3\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return positout\r\n  }\r\n\r\n  function marchingcubeinit (stype) {\r\n    var i\r\n    var n = vpBits.length\r\n\r\n    if (stype === 'vws') {\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'ms') {  // ses without vdw => ms\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISDONE\r\n        if (vpBits[ i ] & ISBOUND) {\r\n          vpBits[ i ] |= ISDONE\r\n        }\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'ses') {\r\n      for (i = 0; i < n; ++i) {\r\n        if ((vpBits[ i ] & ISBOUND) && (vpBits[ i ] & ISDONE)) {\r\n          vpBits[ i ] &= ~ISBOUND\r\n        } else if ((vpBits[ i ] & ISBOUND) && !(vpBits[ i ] & ISDONE)) {\r\n          vpBits[ i ] |= ISDONE\r\n        }\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    } else if (stype === 'sas') {\r\n      for (i = 0; i < n; ++i) {\r\n        vpBits[ i ] &= ~ISBOUND\r\n        vpBits[ i ] = (vpBits[ i ] & ISDONE) ? 1 : 0\r\n      }\r\n    }\r\n  }\r\n}\r\nEDTSurface.__deps = [\r\n  getSurfaceGrid, getRadiusDict, VolumeSurface, computeBoundingBox, Grid\r\n]\r\n\r\nexport default EDTSurface\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/edt-surface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3560,
    "kind": "function",
    "name": "EDTSurface",
    "memberof": "src/surface/edt-surface.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/edt-surface.js~EDTSurface",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/edt-surface.js",
    "importStyle": "EDTSurface",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3561,
    "kind": "file",
    "name": "src/surface/filtered-volume.js",
    "content": "/**\r\n * @file Filtered Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Volume from './volume.js'\r\n\r\nclass FilteredVolume {\r\n  constructor (volume, minValue, maxValue, outside) {\r\n    this.volume = volume\r\n    this.setFilter(minValue, maxValue, outside)\r\n  }\r\n\r\n  get header () { return this.volume.header }\r\n  get matrix () { return this.volume.matrix }\r\n  get normalMatrix () { return this.volume.normalMatrix }\r\n  get inverseMatrix () { return this.volume.inverseMatrix }\r\n  get center () { return this.volume.center }\r\n  get boundingBox () { return this.volume.boundingBox }\r\n  get min () { return this.volume.min }\r\n  get max () { return this.volume.max }\r\n  get mean () { return this.volume.mean }\r\n  get rms () { return this.volume.rms }\r\n\r\n  _getFilterHash (minValue, maxValue, outside) {\r\n    return JSON.stringify([ minValue, maxValue, outside ])\r\n  }\r\n\r\n  setFilter (minValue, maxValue, outside) {\r\n    if (isNaN(minValue) && this.header) {\r\n      minValue = this.header.DMEAN + 2.0 * this.header.ARMS\r\n    }\r\n\r\n    minValue = (minValue !== undefined && !isNaN(minValue)) ? minValue : -Infinity\r\n    maxValue = defaults(maxValue, Infinity)\r\n    outside = defaults(outside, false)\r\n\r\n    const data = this.volume.data\r\n    const position = this.volume.position\r\n    const atomindex = this.volume.atomindex\r\n\r\n    const filterHash = this._getFilterHash(minValue, maxValue, outside)\r\n\r\n    if (filterHash === this._filterHash) {\r\n      // already filtered\r\n      return\r\n    } else if (minValue === -Infinity && maxValue === Infinity) {\r\n      this.data = data\r\n      this.position = position\r\n      this.atomindex = atomindex\r\n    } else {\r\n      const n = data.length\r\n\r\n      if (!this._dataBuffer) {\r\n        // ArrayBuffer for re-use as Float32Array backend\r\n\r\n        this._dataBuffer = new ArrayBuffer(n * 4)\r\n        this._positionBuffer = new ArrayBuffer(n * 3 * 4)\r\n        if (atomindex) this._atomindexBuffer = new ArrayBuffer(n * 4)\r\n      }\r\n\r\n      const filteredData = new Float32Array(this._dataBuffer)\r\n      const filteredPosition = new Float32Array(this._positionBuffer)\r\n      let filteredAtomindex\r\n      if (atomindex) filteredAtomindex = new Uint32Array(this._atomindexBuffer)\r\n\r\n      let j = 0\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        const i3 = i * 3\r\n        const v = data[ i ]\r\n\r\n        if ((!outside && v >= minValue && v <= maxValue) ||\r\n            (outside && (v < minValue || v > maxValue))\r\n        ) {\r\n          const j3 = j * 3\r\n\r\n          filteredData[ j ] = v\r\n\r\n          filteredPosition[ j3 + 0 ] = position[ i3 + 0 ]\r\n          filteredPosition[ j3 + 1 ] = position[ i3 + 1 ]\r\n          filteredPosition[ j3 + 2 ] = position[ i3 + 2 ]\r\n\r\n          if (atomindex) filteredAtomindex[ j ] = atomindex[ i ]\r\n\r\n          j += 1\r\n        }\r\n      }\r\n\r\n      // set views\r\n\r\n      this.data = new Float32Array(this._dataBuffer, 0, j)\r\n      this.position = new Float32Array(this._positionBuffer, 0, j * 3)\r\n      if (atomindex) this.atomindex = new Float32Array(this._atomindexBuffer, 0, j)\r\n    }\r\n\r\n    this._filterHash = filterHash\r\n  }\r\n}\r\n\r\nFilteredVolume.prototype.getValueForSigma = Volume.prototype.getValueForSigma\r\nFilteredVolume.prototype.getSigmaForValue = Volume.prototype.getSigmaForValue\r\n\r\nFilteredVolume.prototype.getDataAtomindex = Volume.prototype.getDataAtomindex\r\nFilteredVolume.prototype.getDataPosition = Volume.prototype.getDataPosition\r\nFilteredVolume.prototype.getDataColor = Volume.prototype.getDataColor\r\nFilteredVolume.prototype.getDataPicking = Volume.prototype.getDataPicking\r\nFilteredVolume.prototype.getDataSize = Volume.prototype.getDataSize\r\n\r\nexport default FilteredVolume\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/filtered-volume.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3562,
    "kind": "class",
    "name": "FilteredVolume",
    "memberof": "src/surface/filtered-volume.js",
    "static": true,
    "longname": "src/surface/filtered-volume.js~FilteredVolume",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/filtered-volume.js",
    "importStyle": "FilteredVolume",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3563,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3564,
    "kind": "member",
    "name": "volume",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#volume",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3565,
    "kind": "get",
    "name": "header",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#header",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 3566,
    "kind": "get",
    "name": "matrix",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3567,
    "kind": "get",
    "name": "normalMatrix",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#normalMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3568,
    "kind": "get",
    "name": "inverseMatrix",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#inverseMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3569,
    "kind": "get",
    "name": "center",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#center",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3570,
    "kind": "get",
    "name": "boundingBox",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3571,
    "kind": "get",
    "name": "min",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#min",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3572,
    "kind": "get",
    "name": "max",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#max",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3573,
    "kind": "get",
    "name": "mean",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#mean",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 3574,
    "kind": "get",
    "name": "rms",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#rms",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3575,
    "kind": "method",
    "name": "_getFilterHash",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#_getFilterHash",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 3576,
    "kind": "method",
    "name": "setFilter",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#setFilter",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 3577,
    "kind": "member",
    "name": "data",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#data",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 3578,
    "kind": "member",
    "name": "position",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#position",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 3579,
    "kind": "member",
    "name": "atomindex",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#atomindex",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 3580,
    "kind": "member",
    "name": "_dataBuffer",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#_dataBuffer",
    "access": "private",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 3581,
    "kind": "member",
    "name": "_positionBuffer",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#_positionBuffer",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 3582,
    "kind": "member",
    "name": "_atomindexBuffer",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#_atomindexBuffer",
    "access": "private",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 3586,
    "kind": "member",
    "name": "_filterHash",
    "memberof": "src/surface/filtered-volume.js~FilteredVolume",
    "static": false,
    "longname": "src/surface/filtered-volume.js~FilteredVolume#_filterHash",
    "access": "private",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 3587,
    "kind": "file",
    "name": "src/surface/marching-cubes.js",
    "content": "/**\r\n * @file Marching Cubes\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { getUintArray } from '../utils.js'\r\n\r\nfunction getEdgeTable () {\r\n  return new Uint32Array([\r\n    0x0, 0x109, 0x203, 0x30a, 0x406, 0x50f, 0x605, 0x70c,\r\n    0x80c, 0x905, 0xa0f, 0xb06, 0xc0a, 0xd03, 0xe09, 0xf00,\r\n    0x190, 0x99, 0x393, 0x29a, 0x596, 0x49f, 0x795, 0x69c,\r\n    0x99c, 0x895, 0xb9f, 0xa96, 0xd9a, 0xc93, 0xf99, 0xe90,\r\n    0x230, 0x339, 0x33, 0x13a, 0x636, 0x73f, 0x435, 0x53c,\r\n    0xa3c, 0xb35, 0x83f, 0x936, 0xe3a, 0xf33, 0xc39, 0xd30,\r\n    0x3a0, 0x2a9, 0x1a3, 0xaa, 0x7a6, 0x6af, 0x5a5, 0x4ac,\r\n    0xbac, 0xaa5, 0x9af, 0x8a6, 0xfaa, 0xea3, 0xda9, 0xca0,\r\n    0x460, 0x569, 0x663, 0x76a, 0x66, 0x16f, 0x265, 0x36c,\r\n    0xc6c, 0xd65, 0xe6f, 0xf66, 0x86a, 0x963, 0xa69, 0xb60,\r\n    0x5f0, 0x4f9, 0x7f3, 0x6fa, 0x1f6, 0xff, 0x3f5, 0x2fc,\r\n    0xdfc, 0xcf5, 0xfff, 0xef6, 0x9fa, 0x8f3, 0xbf9, 0xaf0,\r\n    0x650, 0x759, 0x453, 0x55a, 0x256, 0x35f, 0x55, 0x15c,\r\n    0xe5c, 0xf55, 0xc5f, 0xd56, 0xa5a, 0xb53, 0x859, 0x950,\r\n    0x7c0, 0x6c9, 0x5c3, 0x4ca, 0x3c6, 0x2cf, 0x1c5, 0xcc,\r\n    0xfcc, 0xec5, 0xdcf, 0xcc6, 0xbca, 0xac3, 0x9c9, 0x8c0,\r\n    0x8c0, 0x9c9, 0xac3, 0xbca, 0xcc6, 0xdcf, 0xec5, 0xfcc,\r\n    0xcc, 0x1c5, 0x2cf, 0x3c6, 0x4ca, 0x5c3, 0x6c9, 0x7c0,\r\n    0x950, 0x859, 0xb53, 0xa5a, 0xd56, 0xc5f, 0xf55, 0xe5c,\r\n    0x15c, 0x55, 0x35f, 0x256, 0x55a, 0x453, 0x759, 0x650,\r\n    0xaf0, 0xbf9, 0x8f3, 0x9fa, 0xef6, 0xfff, 0xcf5, 0xdfc,\r\n    0x2fc, 0x3f5, 0xff, 0x1f6, 0x6fa, 0x7f3, 0x4f9, 0x5f0,\r\n    0xb60, 0xa69, 0x963, 0x86a, 0xf66, 0xe6f, 0xd65, 0xc6c,\r\n    0x36c, 0x265, 0x16f, 0x66, 0x76a, 0x663, 0x569, 0x460,\r\n    0xca0, 0xda9, 0xea3, 0xfaa, 0x8a6, 0x9af, 0xaa5, 0xbac,\r\n    0x4ac, 0x5a5, 0x6af, 0x7a6, 0xaa, 0x1a3, 0x2a9, 0x3a0,\r\n    0xd30, 0xc39, 0xf33, 0xe3a, 0x936, 0x83f, 0xb35, 0xa3c,\r\n    0x53c, 0x435, 0x73f, 0x636, 0x13a, 0x33, 0x339, 0x230,\r\n    0xe90, 0xf99, 0xc93, 0xd9a, 0xa96, 0xb9f, 0x895, 0x99c,\r\n    0x69c, 0x795, 0x49f, 0x596, 0x29a, 0x393, 0x99, 0x190,\r\n    0xf00, 0xe09, 0xd03, 0xc0a, 0xb06, 0xa0f, 0x905, 0x80c,\r\n    0x70c, 0x605, 0x50f, 0x406, 0x30a, 0x203, 0x109, 0x0\r\n  ])\r\n}\r\n\r\nfunction getTriTable () {\r\n  return new Int32Array([\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 8, 3, 9, 8, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 2, 10, 0, 2, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 8, 3, 2, 10, 8, 10, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 11, 2, 8, 11, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 11, 2, 1, 9, 11, 9, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 10, 1, 11, 10, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 10, 1, 0, 8, 10, 8, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 9, 0, 3, 11, 9, 11, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 3, 0, 7, 3, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 1, 9, 4, 7, 1, 7, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 4, 7, 3, 0, 4, 1, 2, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 2, 10, 9, 0, 2, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 10, 9, 2, 9, 7, 2, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n    8, 4, 7, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 4, 7, 11, 2, 4, 2, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 1, 8, 4, 7, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 7, 11, 9, 4, 11, 9, 11, 2, 9, 2, 1, -1, -1, -1, -1,\r\n    3, 10, 1, 3, 11, 10, 7, 8, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 11, 10, 1, 4, 11, 1, 0, 4, 7, 11, 4, -1, -1, -1, -1,\r\n    4, 7, 8, 9, 0, 11, 9, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n    4, 7, 11, 4, 11, 9, 9, 11, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 5, 4, 1, 5, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 5, 4, 8, 3, 5, 3, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 1, 2, 10, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 2, 10, 5, 4, 2, 4, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 10, 5, 3, 2, 5, 3, 5, 4, 3, 4, 8, -1, -1, -1, -1,\r\n    9, 5, 4, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 11, 2, 0, 8, 11, 4, 9, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 5, 4, 0, 1, 5, 2, 3, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 1, 5, 2, 5, 8, 2, 8, 11, 4, 8, 5, -1, -1, -1, -1,\r\n    10, 3, 11, 10, 1, 3, 9, 5, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 5, 0, 8, 1, 8, 10, 1, 8, 11, 10, -1, -1, -1, -1,\r\n    5, 4, 0, 5, 0, 11, 5, 11, 10, 11, 0, 3, -1, -1, -1, -1,\r\n    5, 4, 8, 5, 8, 10, 10, 8, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 7, 8, 5, 7, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 3, 0, 9, 5, 3, 5, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 7, 8, 0, 1, 7, 1, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 7, 8, 9, 5, 7, 10, 1, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 1, 2, 9, 5, 0, 5, 3, 0, 5, 7, 3, -1, -1, -1, -1,\r\n    8, 0, 2, 8, 2, 5, 8, 5, 7, 10, 5, 2, -1, -1, -1, -1,\r\n    2, 10, 5, 2, 5, 3, 3, 5, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 9, 5, 7, 8, 9, 3, 11, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 7, 9, 7, 2, 9, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n    2, 3, 11, 0, 1, 8, 1, 7, 8, 1, 5, 7, -1, -1, -1, -1,\r\n    11, 2, 1, 11, 1, 7, 7, 1, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 8, 8, 5, 7, 10, 1, 3, 10, 3, 11, -1, -1, -1, -1,\r\n    5, 7, 0, 5, 0, 9, 7, 11, 0, 1, 0, 10, 11, 10, 0, -1,\r\n    11, 10, 0, 11, 0, 3, 10, 5, 0, 8, 0, 7, 5, 7, 0, -1,\r\n    11, 10, 5, 7, 11, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 1, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 8, 3, 1, 9, 8, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 5, 2, 6, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 5, 1, 2, 6, 3, 0, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 6, 5, 9, 0, 6, 0, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 9, 8, 5, 8, 2, 5, 2, 6, 3, 2, 8, -1, -1, -1, -1,\r\n    2, 3, 11, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 0, 8, 11, 2, 0, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 1, 9, 2, 9, 11, 2, 9, 8, 11, -1, -1, -1, -1,\r\n    6, 3, 11, 6, 5, 3, 5, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 11, 0, 11, 5, 0, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n    3, 11, 6, 0, 3, 6, 0, 6, 5, 0, 5, 9, -1, -1, -1, -1,\r\n    6, 5, 9, 6, 9, 11, 11, 9, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 3, 0, 4, 7, 3, 6, 5, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 5, 10, 6, 8, 4, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 6, 5, 1, 9, 7, 1, 7, 3, 7, 9, 4, -1, -1, -1, -1,\r\n    6, 1, 2, 6, 5, 1, 4, 7, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 5, 5, 2, 6, 3, 0, 4, 3, 4, 7, -1, -1, -1, -1,\r\n    8, 4, 7, 9, 0, 5, 0, 6, 5, 0, 2, 6, -1, -1, -1, -1,\r\n    7, 3, 9, 7, 9, 4, 3, 2, 9, 5, 9, 6, 2, 6, 9, -1,\r\n    3, 11, 2, 7, 8, 4, 10, 6, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 10, 6, 4, 7, 2, 4, 2, 0, 2, 7, 11, -1, -1, -1, -1,\r\n    0, 1, 9, 4, 7, 8, 2, 3, 11, 5, 10, 6, -1, -1, -1, -1,\r\n    9, 2, 1, 9, 11, 2, 9, 4, 11, 7, 11, 4, 5, 10, 6, -1,\r\n    8, 4, 7, 3, 11, 5, 3, 5, 1, 5, 11, 6, -1, -1, -1, -1,\r\n    5, 1, 11, 5, 11, 6, 1, 0, 11, 7, 11, 4, 0, 4, 11, -1,\r\n    0, 5, 9, 0, 6, 5, 0, 3, 6, 11, 6, 3, 8, 4, 7, -1,\r\n    6, 5, 9, 6, 9, 11, 4, 7, 9, 7, 11, 9, -1, -1, -1, -1,\r\n    10, 4, 9, 6, 4, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 10, 6, 4, 9, 10, 0, 8, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 0, 1, 10, 6, 0, 6, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 3, 1, 8, 1, 6, 8, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n    1, 4, 9, 1, 2, 4, 2, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 1, 2, 9, 2, 4, 9, 2, 6, 4, -1, -1, -1, -1,\r\n    0, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 3, 2, 8, 2, 4, 4, 2, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 4, 9, 10, 6, 4, 11, 2, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 2, 2, 8, 11, 4, 9, 10, 4, 10, 6, -1, -1, -1, -1,\r\n    3, 11, 2, 0, 1, 6, 0, 6, 4, 6, 1, 10, -1, -1, -1, -1,\r\n    6, 4, 1, 6, 1, 10, 4, 8, 1, 2, 1, 11, 8, 11, 1, -1,\r\n    9, 6, 4, 9, 3, 6, 9, 1, 3, 11, 6, 3, -1, -1, -1, -1,\r\n    8, 11, 1, 8, 1, 0, 11, 6, 1, 9, 1, 4, 6, 4, 1, -1,\r\n    3, 11, 6, 3, 6, 0, 0, 6, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 4, 8, 11, 6, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 10, 6, 7, 8, 10, 8, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 7, 3, 0, 10, 7, 0, 9, 10, 6, 7, 10, -1, -1, -1, -1,\r\n    10, 6, 7, 1, 10, 7, 1, 7, 8, 1, 8, 0, -1, -1, -1, -1,\r\n    10, 6, 7, 10, 7, 1, 1, 7, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 6, 1, 6, 8, 1, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n    2, 6, 9, 2, 9, 1, 6, 7, 9, 0, 9, 3, 7, 3, 9, -1,\r\n    7, 8, 0, 7, 0, 6, 6, 0, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 3, 2, 6, 7, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 11, 10, 6, 8, 10, 8, 9, 8, 6, 7, -1, -1, -1, -1,\r\n    2, 0, 7, 2, 7, 11, 0, 9, 7, 6, 7, 10, 9, 10, 7, -1,\r\n    1, 8, 0, 1, 7, 8, 1, 10, 7, 6, 7, 10, 2, 3, 11, -1,\r\n    11, 2, 1, 11, 1, 7, 10, 6, 1, 6, 7, 1, -1, -1, -1, -1,\r\n    8, 9, 6, 8, 6, 7, 9, 1, 6, 11, 6, 3, 1, 3, 6, -1,\r\n    0, 9, 1, 11, 6, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 8, 0, 7, 0, 6, 3, 11, 0, 11, 6, 0, -1, -1, -1, -1,\r\n    7, 11, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 8, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 9, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 1, 9, 8, 3, 1, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 1, 2, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 3, 0, 8, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 9, 0, 2, 10, 9, 6, 11, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 11, 7, 2, 10, 3, 10, 8, 3, 10, 9, 8, -1, -1, -1, -1,\r\n    7, 2, 3, 6, 2, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    7, 0, 8, 7, 6, 0, 6, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 7, 6, 2, 3, 7, 0, 1, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 6, 2, 1, 8, 6, 1, 9, 8, 8, 7, 6, -1, -1, -1, -1,\r\n    10, 7, 6, 10, 1, 7, 1, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 7, 6, 1, 7, 10, 1, 8, 7, 1, 0, 8, -1, -1, -1, -1,\r\n    0, 3, 7, 0, 7, 10, 0, 10, 9, 6, 10, 7, -1, -1, -1, -1,\r\n    7, 6, 10, 7, 10, 8, 8, 10, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 8, 4, 11, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 6, 11, 3, 0, 6, 0, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 6, 11, 8, 4, 6, 9, 0, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 4, 6, 9, 6, 3, 9, 3, 1, 11, 3, 6, -1, -1, -1, -1,\r\n    6, 8, 4, 6, 11, 8, 2, 10, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 3, 0, 11, 0, 6, 11, 0, 4, 6, -1, -1, -1, -1,\r\n    4, 11, 8, 4, 6, 11, 0, 2, 9, 2, 10, 9, -1, -1, -1, -1,\r\n    10, 9, 3, 10, 3, 2, 9, 4, 3, 11, 3, 6, 4, 6, 3, -1,\r\n    8, 2, 3, 8, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 4, 2, 4, 6, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 9, 0, 2, 3, 4, 2, 4, 6, 4, 3, 8, -1, -1, -1, -1,\r\n    1, 9, 4, 1, 4, 2, 2, 4, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 1, 3, 8, 6, 1, 8, 4, 6, 6, 10, 1, -1, -1, -1, -1,\r\n    10, 1, 0, 10, 0, 6, 6, 0, 4, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 6, 3, 4, 3, 8, 6, 10, 3, 0, 3, 9, 10, 9, 3, -1,\r\n    10, 9, 4, 6, 10, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 5, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 4, 9, 5, 11, 7, 6, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 0, 1, 5, 4, 0, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 7, 6, 8, 3, 4, 3, 5, 4, 3, 1, 5, -1, -1, -1, -1,\r\n    9, 5, 4, 10, 1, 2, 7, 6, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    6, 11, 7, 1, 2, 10, 0, 8, 3, 4, 9, 5, -1, -1, -1, -1,\r\n    7, 6, 11, 5, 4, 10, 4, 2, 10, 4, 0, 2, -1, -1, -1, -1,\r\n    3, 4, 8, 3, 5, 4, 3, 2, 5, 10, 5, 2, 11, 7, 6, -1,\r\n    7, 2, 3, 7, 6, 2, 5, 4, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 5, 4, 0, 8, 6, 0, 6, 2, 6, 8, 7, -1, -1, -1, -1,\r\n    3, 6, 2, 3, 7, 6, 1, 5, 0, 5, 4, 0, -1, -1, -1, -1,\r\n    6, 2, 8, 6, 8, 7, 2, 1, 8, 4, 8, 5, 1, 5, 8, -1,\r\n    9, 5, 4, 10, 1, 6, 1, 7, 6, 1, 3, 7, -1, -1, -1, -1,\r\n    1, 6, 10, 1, 7, 6, 1, 0, 7, 8, 7, 0, 9, 5, 4, -1,\r\n    4, 0, 10, 4, 10, 5, 0, 3, 10, 6, 10, 7, 3, 7, 10, -1,\r\n    7, 6, 10, 7, 10, 8, 5, 4, 10, 4, 8, 10, -1, -1, -1, -1,\r\n    6, 9, 5, 6, 11, 9, 11, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 6, 11, 0, 6, 3, 0, 5, 6, 0, 9, 5, -1, -1, -1, -1,\r\n    0, 11, 8, 0, 5, 11, 0, 1, 5, 5, 6, 11, -1, -1, -1, -1,\r\n    6, 11, 3, 6, 3, 5, 5, 3, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 10, 9, 5, 11, 9, 11, 8, 11, 5, 6, -1, -1, -1, -1,\r\n    0, 11, 3, 0, 6, 11, 0, 9, 6, 5, 6, 9, 1, 2, 10, -1,\r\n    11, 8, 5, 11, 5, 6, 8, 0, 5, 10, 5, 2, 0, 2, 5, -1,\r\n    6, 11, 3, 6, 3, 5, 2, 10, 3, 10, 5, 3, -1, -1, -1, -1,\r\n    5, 8, 9, 5, 2, 8, 5, 6, 2, 3, 8, 2, -1, -1, -1, -1,\r\n    9, 5, 6, 9, 6, 0, 0, 6, 2, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 5, 8, 1, 8, 0, 5, 6, 8, 3, 8, 2, 6, 2, 8, -1,\r\n    1, 5, 6, 2, 1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 3, 6, 1, 6, 10, 3, 8, 6, 5, 6, 9, 8, 9, 6, -1,\r\n    10, 1, 0, 10, 0, 6, 9, 5, 0, 5, 6, 0, -1, -1, -1, -1,\r\n    0, 3, 8, 5, 6, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 5, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 5, 10, 7, 5, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 5, 10, 11, 7, 5, 8, 3, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 11, 7, 5, 10, 11, 1, 9, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    10, 7, 5, 10, 11, 7, 9, 8, 1, 8, 3, 1, -1, -1, -1, -1,\r\n    11, 1, 2, 11, 7, 1, 7, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 1, 2, 7, 1, 7, 5, 7, 2, 11, -1, -1, -1, -1,\r\n    9, 7, 5, 9, 2, 7, 9, 0, 2, 2, 11, 7, -1, -1, -1, -1,\r\n    7, 5, 2, 7, 2, 11, 5, 9, 2, 3, 2, 8, 9, 8, 2, -1,\r\n    2, 5, 10, 2, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 2, 0, 8, 5, 2, 8, 7, 5, 10, 2, 5, -1, -1, -1, -1,\r\n    9, 0, 1, 5, 10, 3, 5, 3, 7, 3, 10, 2, -1, -1, -1, -1,\r\n    9, 8, 2, 9, 2, 1, 8, 7, 2, 10, 2, 5, 7, 5, 2, -1,\r\n    1, 3, 5, 3, 7, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 7, 0, 7, 1, 1, 7, 5, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 0, 3, 9, 3, 5, 5, 3, 7, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 8, 7, 5, 9, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 8, 4, 5, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    5, 0, 4, 5, 11, 0, 5, 10, 11, 11, 3, 0, -1, -1, -1, -1,\r\n    0, 1, 9, 8, 4, 10, 8, 10, 11, 10, 4, 5, -1, -1, -1, -1,\r\n    10, 11, 4, 10, 4, 5, 11, 3, 4, 9, 4, 1, 3, 1, 4, -1,\r\n    2, 5, 1, 2, 8, 5, 2, 11, 8, 4, 5, 8, -1, -1, -1, -1,\r\n    0, 4, 11, 0, 11, 3, 4, 5, 11, 2, 11, 1, 5, 1, 11, -1,\r\n    0, 2, 5, 0, 5, 9, 2, 11, 5, 4, 5, 8, 11, 8, 5, -1,\r\n    9, 4, 5, 2, 11, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 5, 10, 3, 5, 2, 3, 4, 5, 3, 8, 4, -1, -1, -1, -1,\r\n    5, 10, 2, 5, 2, 4, 4, 2, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 10, 2, 3, 5, 10, 3, 8, 5, 4, 5, 8, 0, 1, 9, -1,\r\n    5, 10, 2, 5, 2, 4, 1, 9, 2, 9, 4, 2, -1, -1, -1, -1,\r\n    8, 4, 5, 8, 5, 3, 3, 5, 1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 4, 5, 1, 0, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    8, 4, 5, 8, 5, 3, 9, 0, 5, 0, 3, 5, -1, -1, -1, -1,\r\n    9, 4, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 11, 7, 4, 9, 11, 9, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 8, 3, 4, 9, 7, 9, 11, 7, 9, 10, 11, -1, -1, -1, -1,\r\n    1, 10, 11, 1, 11, 4, 1, 4, 0, 7, 4, 11, -1, -1, -1, -1,\r\n    3, 1, 4, 3, 4, 8, 1, 10, 4, 7, 4, 11, 10, 11, 4, -1,\r\n    4, 11, 7, 9, 11, 4, 9, 2, 11, 9, 1, 2, -1, -1, -1, -1,\r\n    9, 7, 4, 9, 11, 7, 9, 1, 11, 2, 11, 1, 0, 8, 3, -1,\r\n    11, 7, 4, 11, 4, 2, 2, 4, 0, -1, -1, -1, -1, -1, -1, -1,\r\n    11, 7, 4, 11, 4, 2, 8, 3, 4, 3, 2, 4, -1, -1, -1, -1,\r\n    2, 9, 10, 2, 7, 9, 2, 3, 7, 7, 4, 9, -1, -1, -1, -1,\r\n    9, 10, 7, 9, 7, 4, 10, 2, 7, 8, 7, 0, 2, 0, 7, -1,\r\n    3, 7, 10, 3, 10, 2, 7, 4, 10, 1, 10, 0, 4, 0, 10, -1,\r\n    1, 10, 2, 8, 7, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 1, 4, 1, 7, 7, 1, 3, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 9, 1, 4, 1, 7, 0, 8, 1, 8, 7, 1, -1, -1, -1, -1,\r\n    4, 0, 3, 7, 4, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    4, 8, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 10, 8, 10, 11, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 9, 3, 9, 11, 11, 9, 10, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 1, 10, 0, 10, 8, 8, 10, 11, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 1, 10, 11, 3, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 2, 11, 1, 11, 9, 9, 11, 8, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 0, 9, 3, 9, 11, 1, 2, 9, 2, 11, 9, -1, -1, -1, -1,\r\n    0, 2, 11, 8, 0, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    3, 2, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 8, 2, 8, 10, 10, 8, 9, -1, -1, -1, -1, -1, -1, -1,\r\n    9, 10, 2, 0, 9, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    2, 3, 8, 2, 8, 10, 0, 1, 8, 1, 10, 8, -1, -1, -1, -1,\r\n    1, 10, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    1, 3, 8, 9, 1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 9, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    0, 3, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\r\n    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1\r\n  ])\r\n}\r\n\r\n// Triangles are constructed between points on cube edges.\r\n// allowedContours[edge1][edge1] indicates which lines from a given\r\n// triangle should be shown in line mode.\r\n\r\n// Values are bitmasks:\r\n// In loop over cubes we keep another bitmask indicating whether our current\r\n// cell is the first x-value (1),\r\n// first y-value (2) or first z-value (4) of the current loop.\r\n// We draw all lines on leading faces but only draw trailing face lines the first\r\n// time through the loop\r\n// A value of 8 below means the edge is always drawn (leading face)\r\n\r\n// E.g. the first row, lines between edge0 and other edges in the bottom\r\n// x-y plane are only drawn for the first value of z, edges in the\r\n// x-z plane are only drawn for the first value of y. No other lines\r\n// are drawn as they're redundant\r\n// The line between edge 1 and 5 is always drawn as it's on the leading edge\r\n\r\nfunction getAllowedContours () {\r\n  return [\r\n\r\n    [ 0, 4, 4, 4, 2, 0, 0, 0, 2, 2, 0, 0 ], // 1 2 3 4 8 9\r\n    [ 4, 0, 4, 4, 0, 8, 0, 0, 0, 8, 8, 0 ], // 0 2 3 5 9 10\r\n    [ 4, 4, 0, 4, 0, 0, 8, 0, 0, 0, 8, 8 ], // 0 1 3 6 10 11\r\n    [ 4, 4, 4, 0, 0, 0, 0, 1, 1, 0, 0, 1 ], // 0 1 2 7 8 11\r\n    [ 2, 0, 0, 0, 0, 8, 8, 8, 2, 2, 0, 0 ], // 0 5 6 7 8 9\r\n    [ 0, 8, 0, 0, 8, 0, 8, 8, 0, 8, 8, 0 ], // And rotate it\r\n    [ 0, 0, 8, 0, 8, 8, 0, 8, 0, 0, 8, 8 ],\r\n    [ 0, 0, 0, 1, 8, 8, 8, 0, 1, 0, 0, 1 ],\r\n    [ 2, 0, 0, 1, 2, 0, 0, 1, 0, 2, 0, 1 ], // 0 3 4 7 9 11\r\n    [ 2, 8, 0, 0, 2, 8, 0, 0, 2, 0, 8, 0 ], // And rotate some more\r\n    [ 0, 8, 8, 0, 0, 8, 8, 0, 0, 8, 0, 8 ],\r\n    [ 0, 0, 8, 1, 0, 0, 8, 1, 1, 0, 8, 0 ]\r\n\r\n  ]\r\n}\r\n\r\nfunction MarchingCubes (field, nx, ny, nz, atomindex) {\r\n    // Based on alteredq / http://alteredqualia.com/\r\n    // port of greggman's ThreeD version of marching cubes to Three.js\r\n    // http://webglsamples.googlecode.com/hg/blob/blob.html\r\n    //\r\n    // Adapted for NGL by Alexander Rose\r\n\r\n  var isolevel = 0\r\n  var noNormals = false\r\n  var contour = false\r\n  var wrap = false\r\n\r\n  var n = nx * ny * nz\r\n\r\n    // deltas\r\n  var yd = nx\r\n  var zd = nx * ny\r\n\r\n  var normalCache, vertexIndex\r\n  var count, icount\r\n\r\n  var ilist = new Int32Array(12)\r\n\r\n  var positionArray = []\r\n  var normalArray = []\r\n  var indexArray = []\r\n  var atomindexArray = []\r\n\r\n  var edgeTable = getEdgeTable()\r\n  var triTable = getTriTable()\r\n  var allowedContours = getAllowedContours()\r\n\r\n  var mx, my, mz\r\n\r\n    //\r\n\r\n  this.triangulate = function (_isolevel, _noNormals, _box, _contour, _wrap) {\r\n    isolevel = _isolevel\r\n    contour = _contour\r\n    wrap = _wrap\r\n        // Normals currently disabled in contour mode for performance (unused)\r\n    noNormals = _noNormals || contour\r\n\r\n    if (!noNormals && !normalCache) {\r\n      normalCache = new Float32Array(n * 3)\r\n    }\r\n\r\n    var vIndexLength = contour ? n * 3 : n\r\n\r\n    if (!vertexIndex || vertexIndex.length !== vIndexLength) {\r\n            // In contour mode we want all drawn edges parallel to one axis,\r\n            // so interpolation must be calculated in each dimension (rather\r\n            // than re-using a single interpolated vertex)\r\n      vertexIndex = new Int32Array(vIndexLength)\r\n    }\r\n\r\n    count = 0\r\n    icount = 0\r\n\r\n    if (_box !== undefined) {\r\n      var min = _box[ 0 ].map(Math.round)\r\n      var max = _box[ 1 ].map(Math.round)\r\n\r\n      mx = nx * Math.ceil(Math.abs(min[ 0 ]) / nx)\r\n      my = ny * Math.ceil(Math.abs(min[ 1 ]) / ny)\r\n      mz = nz * Math.ceil(Math.abs(min[ 2 ]) / nz)\r\n\r\n      triangulate(\r\n                min[ 0 ], min[ 1 ], min[ 2 ],\r\n                max[ 0 ], max[ 1 ], max[ 2 ]\r\n            )\r\n    } else {\r\n      mx = my = mz = 0\r\n\r\n      triangulate()\r\n    }\r\n\r\n    positionArray.length = count * 3\r\n    if (!noNormals) normalArray.length = count * 3\r\n    indexArray.length = icount\r\n    if (atomindex) atomindexArray.length = count\r\n\r\n    return {\r\n      position: new Float32Array(positionArray),\r\n      normal: noNormals ? undefined : new Float32Array(normalArray),\r\n      index: getUintArray(indexArray, positionArray.length / 3),\r\n      atomindex: atomindex ? new Int32Array(atomindexArray) : undefined,\r\n      contour: contour\r\n    }\r\n  }\r\n\r\n    // polygonization\r\n\r\n  function lerp (a, b, t) { return a + (b - a) * t }\r\n\r\n  function index (x, y, z) {\r\n    x = (x + mx) % nx\r\n    y = (y + my) % ny\r\n    z = (z + mz) % nz\r\n    return ((zd * z) + yd * y) + x\r\n  }\r\n\r\n  function VIntX (q, offset, x, y, z, valp1, valp2) {\r\n    var _q = contour ? 3 * q : q\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c + 0 ] = x + mu\r\n      positionArray[ c + 1 ] = y\r\n      positionArray[ c + 2 ] = z\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n\r\n        normalArray[ c ] = -lerp(nc[ q3 ], nc[ q3 + 3 ], mu)\r\n        normalArray[ c + 1 ] = -lerp(nc[ q3 + 1 ], nc[ q3 + 4 ], mu)\r\n        normalArray[ c + 2 ] = -lerp(nc[ q3 + 2 ], nc[ q3 + 5 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function VIntY (q, offset, x, y, z, valp1, valp2) {\r\n    var _q = contour ? 3 * q + 1 : q\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c ] = x\r\n      positionArray[ c + 1 ] = y + mu\r\n      positionArray[ c + 2 ] = z\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n        var q6 = q3 + yd * 3\r\n\r\n        normalArray[ c ] = -lerp(nc[ q3 ], nc[ q6 ], mu)\r\n        normalArray[ c + 1 ] = -lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\r\n        normalArray[ c + 2 ] = -lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * yd ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function VIntZ (q, offset, x, y, z, valp1, valp2) {\r\n    var _q = contour ? 3 * q + 2 : q\r\n\r\n    if (vertexIndex[ _q ] < 0) {\r\n      var mu = (isolevel - valp1) / (valp2 - valp1)\r\n      var nc = normalCache\r\n\r\n      var c = count * 3\r\n\r\n      positionArray[ c ] = x\r\n      positionArray[ c + 1 ] = y\r\n      positionArray[ c + 2 ] = z + mu\r\n\r\n      if (!noNormals) {\r\n        var q3 = q * 3\r\n        var q6 = q3 + zd * 3\r\n\r\n        normalArray[ c ] = -lerp(nc[ q3 ], nc[ q6 ], mu)\r\n        normalArray[ c + 1 ] = -lerp(nc[ q3 + 1 ], nc[ q6 + 1 ], mu)\r\n        normalArray[ c + 2 ] = -lerp(nc[ q3 + 2 ], nc[ q6 + 2 ], mu)\r\n      }\r\n\r\n      if (atomindex) atomindexArray[ count ] = atomindex[ q + Math.round(mu) * zd ]\r\n\r\n      vertexIndex[ _q ] = count\r\n      ilist[ offset ] = count\r\n\r\n      count += 1\r\n    } else {\r\n      ilist[ offset ] = vertexIndex[ _q ]\r\n    }\r\n  }\r\n\r\n  function compNorm (q) {\r\n    var q3 = q * 3\r\n\r\n    if (normalCache[ q3 ] === 0.0) {\r\n      normalCache[ q3 ] = field[ (q - 1 + n) % n ] - field[ (q + 1) % n ]\r\n      normalCache[ q3 + 1 ] = field[ (q - yd + n) % n ] - field[ (q + yd) % n ]\r\n      normalCache[ q3 + 2 ] = field[ (q - zd + n) % n ] - field[ (q + zd) % n ]\r\n    }\r\n  }\r\n\r\n  function polygonize (fx, fy, fz, q, edgeFilter) {\r\n        // cache indices\r\n    var q1\r\n    var qy\r\n    var qz\r\n    var q1y\r\n    var q1z\r\n    var qyz\r\n    var q1yz\r\n    if (wrap) {\r\n      q = index(fx, fy, fz)\r\n      q1 = index(fx + 1, fy, fz)\r\n      qy = index(fx, fy + 1, fz)\r\n      qz = index(fx, fy, fz + 1)\r\n      q1y = index(fx + 1, fy + 1, fz)\r\n      q1z = index(fx + 1, fy, fz + 1)\r\n      qyz = index(fx, fy + 1, fz + 1)\r\n      q1yz = index(fx + 1, fy + 1, fz + 1)\r\n    } else {\r\n      q1 = q + 1\r\n      qy = q + yd\r\n      qz = q + zd\r\n      q1y = qy + 1\r\n      q1z = qz + 1\r\n      qyz = qy + zd\r\n      q1yz = qyz + 1\r\n    }\r\n\r\n    var cubeindex = 0\r\n    var field0 = field[ q ]\r\n    var field1 = field[ q1 ]\r\n    var field2 = field[ qy ]\r\n    var field3 = field[ q1y ]\r\n    var field4 = field[ qz ]\r\n    var field5 = field[ q1z ]\r\n    var field6 = field[ qyz ]\r\n    var field7 = field[ q1yz ]\r\n\r\n    if (field0 < isolevel) cubeindex |= 1\r\n    if (field1 < isolevel) cubeindex |= 2\r\n    if (field2 < isolevel) cubeindex |= 8\r\n    if (field3 < isolevel) cubeindex |= 4\r\n    if (field4 < isolevel) cubeindex |= 16\r\n    if (field5 < isolevel) cubeindex |= 32\r\n    if (field6 < isolevel) cubeindex |= 128\r\n    if (field7 < isolevel) cubeindex |= 64\r\n\r\n        // if cube is entirely in/out of the surface - bail, nothing to draw\r\n\r\n    var bits = edgeTable[ cubeindex ]\r\n    if (bits === 0) return 0\r\n\r\n    var fx2 = fx + 1\r\n    var fy2 = fy + 1\r\n    var fz2 = fz + 1\r\n\r\n        // top of the cube\r\n\r\n    if (bits & 1) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(q1)\r\n      }\r\n      VIntX(q, 0, fx, fy, fz, field0, field1)\r\n    }\r\n\r\n    if (bits & 2) {\r\n      if (!noNormals) {\r\n        compNorm(q1)\r\n        compNorm(q1y)\r\n      }\r\n      VIntY(q1, 1, fx2, fy, fz, field1, field3)\r\n    }\r\n\r\n    if (bits & 4) {\r\n      if (!noNormals) {\r\n        compNorm(qy)\r\n        compNorm(q1y)\r\n      }\r\n      VIntX(qy, 2, fx, fy2, fz, field2, field3)\r\n    }\r\n\r\n    if (bits & 8) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(qy)\r\n      }\r\n      VIntY(q, 3, fx, fy, fz, field0, field2)\r\n    }\r\n\r\n        // bottom of the cube\r\n\r\n    if (bits & 16) {\r\n      if (!noNormals) {\r\n        compNorm(qz)\r\n        compNorm(q1z)\r\n      }\r\n      VIntX(qz, 4, fx, fy, fz2, field4, field5)\r\n    }\r\n\r\n    if (bits & 32) {\r\n      if (!noNormals) {\r\n        compNorm(q1z)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntY(q1z, 5, fx2, fy, fz2, field5, field7)\r\n    }\r\n\r\n    if (bits & 64) {\r\n      if (!noNormals) {\r\n        compNorm(qyz)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntX(qyz, 6, fx, fy2, fz2, field6, field7)\r\n    }\r\n\r\n    if (bits & 128) {\r\n      if (!noNormals) {\r\n        compNorm(qz)\r\n        compNorm(qyz)\r\n      }\r\n      VIntY(qz, 7, fx, fy, fz2, field4, field6)\r\n    }\r\n\r\n        // vertical lines of the cube\r\n\r\n    if (bits & 256) {\r\n      if (!noNormals) {\r\n        compNorm(q)\r\n        compNorm(qz)\r\n      }\r\n      VIntZ(q, 8, fx, fy, fz, field0, field4)\r\n    }\r\n\r\n    if (bits & 512) {\r\n      if (!noNormals) {\r\n        compNorm(q1)\r\n        compNorm(q1z)\r\n      }\r\n      VIntZ(q1, 9, fx2, fy, fz, field1, field5)\r\n    }\r\n\r\n    if (bits & 1024) {\r\n      if (!noNormals) {\r\n        compNorm(q1y)\r\n        compNorm(q1yz)\r\n      }\r\n      VIntZ(q1y, 10, fx2, fy2, fz, field3, field7)\r\n    }\r\n\r\n    if (bits & 2048) {\r\n      if (!noNormals) {\r\n        compNorm(qy)\r\n        compNorm(qyz)\r\n      }\r\n      VIntZ(qy, 11, fx, fy2, fz, field2, field6)\r\n    }\r\n\r\n    var triIndex = cubeindex << 4  // re-purpose cubeindex into an offset into triTable\r\n\r\n    var e1\r\n    var e2\r\n    var e3\r\n    var i = 0\r\n\r\n        // here is where triangles are created\r\n\r\n    while (triTable[ triIndex + i ] !== -1) {\r\n      e1 = triTable[ triIndex + i ]\r\n      e2 = triTable[ triIndex + i + 1 ]\r\n      e3 = triTable[ triIndex + i + 2 ]\r\n\r\n      if (contour) {\r\n        if (allowedContours[ e1 ][ e2 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e1 ]\r\n          indexArray[ icount++ ] = ilist[ e2 ]\r\n        }\r\n        if (allowedContours[ e2 ][ e3 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e2 ]\r\n          indexArray[ icount++ ] = ilist[ e3 ]\r\n        }\r\n        if (allowedContours[ e1 ][ e3 ] & edgeFilter) {\r\n          indexArray[ icount++ ] = ilist[ e1 ]\r\n          indexArray[ icount++ ] = ilist[ e3 ]\r\n        }\r\n      } else {\r\n                // FIXME normals flipping (see above) and vertex order reversal\r\n        indexArray[ icount++ ] = ilist[ e2 ]\r\n        indexArray[ icount++ ] = ilist[ e1 ]\r\n        indexArray[ icount++ ] = ilist[ e3 ]\r\n      }\r\n\r\n      i += 3\r\n    }\r\n  }\r\n\r\n  function triangulate (xBeg, yBeg, zBeg, xEnd, yEnd, zEnd) {\r\n    var q\r\n    var q3\r\n    var x\r\n    var y\r\n    var z\r\n    var yOffset\r\n    var zOffset\r\n\r\n    xBeg = xBeg !== undefined ? xBeg : 0\r\n    yBeg = yBeg !== undefined ? yBeg : 0\r\n    zBeg = zBeg !== undefined ? zBeg : 0\r\n\r\n    xEnd = xEnd !== undefined ? xEnd : nx - 1\r\n    yEnd = yEnd !== undefined ? yEnd : ny - 1\r\n    zEnd = zEnd !== undefined ? zEnd : nz - 1\r\n\r\n    if (!wrap) {\r\n      if (noNormals) {\r\n        xBeg = Math.max(0, xBeg)\r\n        yBeg = Math.max(0, yBeg)\r\n        zBeg = Math.max(0, zBeg)\r\n\r\n        xEnd = Math.min(nx - 1, xEnd)\r\n        yEnd = Math.min(ny - 1, yEnd)\r\n        zEnd = Math.min(nz - 1, zEnd)\r\n      } else {\r\n        xBeg = Math.max(1, xBeg)\r\n        yBeg = Math.max(1, yBeg)\r\n        zBeg = Math.max(1, zBeg)\r\n\r\n        xEnd = Math.min(nx - 2, xEnd)\r\n        yEnd = Math.min(ny - 2, yEnd)\r\n        zEnd = Math.min(nz - 2, zEnd)\r\n      }\r\n    }\r\n\r\n    var xBeg2, yBeg2, zBeg2, xEnd2, yEnd2, zEnd2\r\n\r\n    if (!wrap) {\r\n            // init part of the vertexIndex\r\n            // (takes a significant amount of time to do for all)\r\n\r\n      xBeg2 = Math.max(0, xBeg - 2)\r\n      yBeg2 = Math.max(0, yBeg - 2)\r\n      zBeg2 = Math.max(0, zBeg - 2)\r\n\r\n      xEnd2 = Math.min(nx, xEnd + 2)\r\n      yEnd2 = Math.min(ny, yEnd + 2)\r\n      zEnd2 = Math.min(nz, zEnd + 2)\r\n\r\n      for (z = zBeg2; z < zEnd2; ++z) {\r\n        zOffset = zd * z\r\n        for (y = yBeg2; y < yEnd2; ++y) {\r\n          yOffset = zOffset + yd * y\r\n          for (x = xBeg2; x < xEnd2; ++x) {\r\n            if (contour) {\r\n              q = 3 * (yOffset + x)\r\n              vertexIndex[ q ] = -1\r\n              vertexIndex[ q + 1 ] = -1\r\n              vertexIndex[ q + 2 ] = -1\r\n            } else {\r\n              q = (yOffset + x)\r\n              vertexIndex[ q ] = -1\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      xBeg2 = xBeg - 2\r\n      yBeg2 = yBeg - 2\r\n      zBeg2 = zBeg - 2\r\n\r\n      xEnd2 = xEnd + 2\r\n      yEnd2 = yEnd + 2\r\n      zEnd2 = zEnd + 2\r\n\r\n      for (z = zBeg2; z < zEnd2; ++z) {\r\n        for (y = yBeg2; y < yEnd2; ++y) {\r\n          for (x = xBeg2; x < xEnd2; ++x) {\r\n            if (contour) {\r\n              q3 = index(x, y, z) * 3\r\n              vertexIndex[ q3 ] = -1\r\n              vertexIndex[ q3 + 1 ] = -1\r\n              vertexIndex[ q3 + 2 ] = -1\r\n            } else {\r\n              q = index(x, y, z)\r\n              vertexIndex[ q ] = -1\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!wrap) {\r\n            // clip space where the isovalue is too low\r\n\r\n      var __break\r\n      var __xBeg = xBeg; var __yBeg = yBeg; var __zBeg = zBeg\r\n      var __xEnd = xEnd; var __yEnd = yEnd; var __zEnd = zEnd\r\n\r\n      __break = false\r\n      for (z = zBeg; z < zEnd; ++z) {\r\n        for (y = yBeg; y < yEnd; ++y) {\r\n          for (x = xBeg; x < xEnd; ++x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __zBeg = z\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (y = yBeg; y < yEnd; ++y) {\r\n        for (z = __zBeg; z < zEnd; ++z) {\r\n          for (x = xBeg; x < xEnd; ++x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __yBeg = y\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (x = xBeg; x < xEnd; ++x) {\r\n        for (y = __yBeg; y < yEnd; ++y) {\r\n          for (z = __zBeg; z < zEnd; ++z) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __xBeg = x\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (z = zEnd; z >= zBeg; --z) {\r\n        for (y = yEnd; y >= yBeg; --y) {\r\n          for (x = xEnd; x >= xBeg; --x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __zEnd = z\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (y = yEnd; y >= yBeg; --y) {\r\n        for (z = __zEnd; z >= zBeg; --z) {\r\n          for (x = xEnd; x >= xBeg; --x) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __yEnd = y\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n      __break = false\r\n      for (x = xEnd; x >= xBeg; --x) {\r\n        for (y = __yEnd; y >= yBeg; --y) {\r\n          for (z = __zEnd; z >= zBeg; --z) {\r\n            q = ((nx * ny) * z) + (nx * y) + x\r\n            if (field[ q ] >= isolevel) {\r\n              __xEnd = x\r\n              __break = true\r\n              break\r\n            }\r\n          }\r\n          if (__break) break\r\n        }\r\n        if (__break) break\r\n      }\r\n\r\n            //\r\n\r\n      if (noNormals) {\r\n        xBeg = Math.max(0, __xBeg - 1)\r\n        yBeg = Math.max(0, __yBeg - 1)\r\n        zBeg = Math.max(0, __zBeg - 1)\r\n\r\n        xEnd = Math.min(nx - 1, __xEnd + 1)\r\n        yEnd = Math.min(ny - 1, __yEnd + 1)\r\n        zEnd = Math.min(nz - 1, __zEnd + 1)\r\n      } else {\r\n        xBeg = Math.max(1, __xBeg - 1)\r\n        yBeg = Math.max(1, __yBeg - 1)\r\n        zBeg = Math.max(1, __zBeg - 1)\r\n\r\n        xEnd = Math.min(nx - 2, __xEnd + 1)\r\n        yEnd = Math.min(ny - 2, __yEnd + 1)\r\n        zEnd = Math.min(nz - 2, __zEnd + 1)\r\n      }\r\n    }\r\n\r\n        // polygonize part of the grid\r\n    var edgeFilter = 15\r\n    for (z = zBeg; z < zEnd; ++z, edgeFilter &= ~4) {\r\n      zOffset = zd * z\r\n      edgeFilter |= 2\r\n      for (y = yBeg; y < yEnd; ++y, edgeFilter &= ~2) {\r\n        yOffset = zOffset + yd * y\r\n        edgeFilter |= 1\r\n        for (x = xBeg; x < xEnd; ++x, edgeFilter &= ~1) {\r\n          q = yOffset + x\r\n          polygonize(x, y, z, q, edgeFilter)\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nMarchingCubes.__deps = [ getEdgeTable, getTriTable, getAllowedContours, getUintArray ]\r\n\r\nexport default MarchingCubes\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/marching-cubes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3588,
    "kind": "function",
    "name": "getEdgeTable",
    "memberof": "src/surface/marching-cubes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/marching-cubes.js~getEdgeTable",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/surface/marching-cubes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3589,
    "kind": "function",
    "name": "getTriTable",
    "memberof": "src/surface/marching-cubes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/marching-cubes.js~getTriTable",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/surface/marching-cubes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3590,
    "kind": "function",
    "name": "getAllowedContours",
    "memberof": "src/surface/marching-cubes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/marching-cubes.js~getAllowedContours",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/surface/marching-cubes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3591,
    "kind": "function",
    "name": "MarchingCubes",
    "memberof": "src/surface/marching-cubes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/marching-cubes.js~MarchingCubes",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/marching-cubes.js",
    "importStyle": "MarchingCubes",
    "description": null,
    "lineNumber": 344,
    "undocument": true
  },
  {
    "__docId__": 3592,
    "kind": "file",
    "name": "src/surface/molecular-surface.js",
    "content": "/**\r\n * @file Molecular Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { WorkerRegistry } from '../globals.js'\r\nimport Worker from '../worker/worker.js'\r\nimport EDTSurface from './edt-surface.js'\r\nimport { AVSurface } from './av-surface.js'\r\nimport Surface from './surface.js'\r\n\r\nWorkerRegistry.add('molsurf', function func (e, callback) {\r\n  const a = e.data.args\r\n  const p = e.data.params\r\n  if (a && p) {\r\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\r\n    const surf = new SurfClass(a.coordList, a.radiusList, a.indexList)\r\n    const sd = surf.getSurface(\r\n            p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour\r\n        )\r\n    const transferList = [ sd.position.buffer, sd.index.buffer ]\r\n    if (sd.normal) transferList.push(sd.normal.buffer)\r\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\r\n    const data = {\r\n      sd: sd,\r\n      p: p\r\n    }\r\n    callback(data, transferList)\r\n  }\r\n}, [ EDTSurface, AVSurface ])\r\n\r\n/**\r\n * Molecular surface parameter object.\r\n * @typedef {Object} MolecularSurfaceParameters - stage parameters\r\n * @property {String} type - \"av\" or \"edt\"\r\n * @property {Number} probeRadius - probe radius\r\n * @property {Number} scaleFactor - higher for better quality\r\n * @property {Integer} smooth - number of smoothing cycles to apply\r\n * @property {String} name - name for created surface\r\n */\r\n\r\n/**\r\n * Create Molecular surfaces\r\n */\r\nclass MolecularSurface {\r\n  constructor (structure) {\r\n    this.structure = structure\r\n  }\r\n\r\n  _getAtomData () {\r\n    return this.structure.getAtomData({\r\n      what: { position: true, radius: true, index: true },\r\n      radiusParams: { radius: 'vdw', scale: 1 }\r\n    })\r\n  }\r\n\r\n  _makeSurface (sd, p) {\r\n    var surface = new Surface(p.name, '', sd)\r\n\r\n    surface.info.type = p.type\r\n    surface.info.probeRadius = p.probeRadius\r\n    surface.info.scaleFactor = p.scaleFactor\r\n    surface.info.smooth = p.smooth\r\n    surface.info.cutoff = p.cutoff\r\n\r\n    return surface\r\n  }\r\n\r\n    /**\r\n     * Get molecular surface\r\n     * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n     * @return {Surface} the surface\r\n     */\r\n  getSurface (params) {\r\n    const p = params || {}\r\n\r\n    const atomData = this._getAtomData()\r\n    const coordList = atomData.position\r\n    const radiusList = atomData.radius\r\n    const indexList = atomData.index\r\n\r\n    const SurfClass = (p.type === 'av') ? AVSurface : EDTSurface\r\n    const surf = new SurfClass(coordList, radiusList, indexList)\r\n    const sd = surf.getSurface(\r\n            p.type, p.probeRadius, p.scaleFactor, p.cutoff, true, p.smooth, p.contour\r\n        )\r\n\r\n    return this._makeSurface(sd, p)\r\n  }\r\n\r\n    /**\r\n     * Get molecular surface asynchronous\r\n     * @param {MolecularSurfaceParameters} params - parameters for surface creation\r\n     * @param {function(surface: Surface)} callback - function to be called after surface is created\r\n     * @return {undefined}\r\n     */\r\n  getSurfaceWorker (params, callback) {\r\n    const p = Object.assign({}, params)\r\n\r\n    if (window.Worker) {\r\n      if (this.worker === undefined) {\r\n        this.worker = new Worker('molsurf')\r\n      }\r\n\r\n      const atomData = this._getAtomData()\r\n      const coordList = atomData.position\r\n      const radiusList = atomData.radius\r\n      const indexList = atomData.index\r\n\r\n      const msg = {\r\n        args: {\r\n          coordList: coordList,\r\n          radiusList: radiusList,\r\n          indexList: indexList\r\n        },\r\n        params: p\r\n      }\r\n\r\n      const transferList = [\r\n        coordList.buffer, radiusList.buffer, indexList.buffer\r\n      ]\r\n\r\n      this.worker.post(msg, transferList,\r\n\r\n                e => {\r\n                  callback(this._makeSurface(e.data.sd, p))\r\n                },\r\n\r\n                e => {\r\n                  console.warn(\r\n                        'MolecularSurface.getSurfaceWorker error - trying without worker', e\r\n                    )\r\n                  this.worker.terminate()\r\n                  this.worker = undefined\r\n                  const surface = this.getSurface(p)\r\n                  callback(surface)\r\n                }\r\n\r\n            )\r\n    } else {\r\n      const surface = this.getSurface(p)\r\n      callback(surface)\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Cleanup\r\n     * @return {undefined}\r\n     */\r\n  dispose () {\r\n    if (this.worker) this.worker.terminate()\r\n  }\r\n}\r\n\r\nexport default MolecularSurface\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/molecular-surface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3593,
    "kind": "typedef",
    "name": "MolecularSurfaceParameters",
    "memberof": "src/surface/molecular-surface.js",
    "static": true,
    "longname": "src/surface/molecular-surface.js~MolecularSurfaceParameters",
    "access": "public",
    "description": "Molecular surface parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "\"av\" or \"edt\""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "probeRadius",
        "description": "probe radius"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "scaleFactor",
        "description": "higher for better quality"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "smooth",
        "description": "number of smoothing cycles to apply"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "name for created surface"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "MolecularSurfaceParameters"
    }
  },
  {
    "__docId__": 3594,
    "kind": "class",
    "name": "MolecularSurface",
    "memberof": "src/surface/molecular-surface.js",
    "static": true,
    "longname": "src/surface/molecular-surface.js~MolecularSurface",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/molecular-surface.js",
    "importStyle": "MolecularSurface",
    "description": "Create Molecular surfaces",
    "lineNumber": 46,
    "interface": false
  },
  {
    "__docId__": 3595,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 3596,
    "kind": "member",
    "name": "structure",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#structure",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 3597,
    "kind": "method",
    "name": "_getAtomData",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#_getAtomData",
    "access": "private",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 3598,
    "kind": "method",
    "name": "_makeSurface",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#_makeSurface",
    "access": "private",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 3599,
    "kind": "method",
    "name": "getSurface",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#getSurface",
    "access": "public",
    "description": "Get molecular surface",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "MolecularSurfaceParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters for surface creation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Surface"
      ],
      "spread": false,
      "description": "the surface"
    }
  },
  {
    "__docId__": 3600,
    "kind": "method",
    "name": "getSurfaceWorker",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#getSurfaceWorker",
    "access": "public",
    "description": "Get molecular surface asynchronous",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "MolecularSurfaceParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters for surface creation"
      },
      {
        "nullable": null,
        "types": [
          "function(surface: Surface)"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "function to be called after surface is created"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3601,
    "kind": "member",
    "name": "worker",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#worker",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 3603,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/surface/molecular-surface.js~MolecularSurface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/molecular-surface.js~MolecularSurface#dispose",
    "access": "public",
    "description": "Cleanup",
    "lineNumber": 151,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3604,
    "kind": "file",
    "name": "src/surface/surface-utils.js",
    "content": "/**\r\n * @file Surface Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { degToRad } from '../math/math-utils.js'\r\nimport {\r\n    m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\r\n} from '../math/matrix-utils.js'\r\nimport {\r\n    v3addScalar, v3subScalar, v3divideScalar, v3multiplyScalar,\r\n    v3floor, v3ceil, v3sub, v3negate,\r\n    v3cross, v3fromArray, normalizeVector3array\r\n} from '../math/vector-utils.js'\r\n\r\nfunction laplacianSmooth (verts, faces, numiter, inflate) {\r\n    // based on D. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular\r\n    // Surfaces by Euclidean Distance Transform. PLoS ONE 4(12): e8140.\r\n    //\r\n    // Permission to use, copy, modify, and distribute this program for\r\n    // any purpose, with or without fee, is hereby granted, provided that\r\n    // the notices on the head, the reference information, and this\r\n    // copyright notice appear in all copies or substantial portions of\r\n    // the Software. It is provided \"as is\" without express or implied\r\n    // warranty.\r\n    //\r\n    // ported to JavaScript and adapted to NGL by Alexander Rose\r\n\r\n  numiter = numiter || 1\r\n  inflate = inflate || true\r\n\r\n  var nv = verts.length / 3\r\n  var nf = faces.length / 3\r\n  var norms\r\n\r\n  if (inflate) {\r\n    norms = new Float32Array(nv * 3)\r\n  }\r\n\r\n  var tps = new Float32Array(nv * 3)\r\n\r\n  var i\r\n  var ndeg = 20\r\n  var vertdeg = new Array(ndeg)\r\n\r\n  for (i = 0; i < ndeg; ++i) {\r\n    vertdeg[ i ] = new Uint32Array(nv)\r\n  }\r\n\r\n  for (i = 0; i < nv; ++i) {\r\n    vertdeg[ 0 ][ i ] = 0\r\n  }\r\n\r\n  var j, jl\r\n  var flagvert\r\n\r\n    // for each face\r\n\r\n  for (i = 0; i < nf; ++i) {\r\n    var ao = i * 3\r\n    var bo = i * 3 + 1\r\n    var co = i * 3 + 2\r\n\r\n        // vertex a\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ao] ]; j < jl; ++j) {\r\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ ao ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ bo ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ ao ] ]; j < jl; ++j) {\r\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ ao ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ ao ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ ao ] ] ][ faces[ ao ] ] = faces[ co ]\r\n    }\r\n\r\n        // vertex b\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\r\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ bo ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ ao ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ bo ] ]; j < jl; ++j) {\r\n      if (faces[ co ] === vertdeg[ j + 1 ][ faces[ bo ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ bo ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ bo ] ] ][ faces[ bo ] ] = faces[ co ]\r\n    }\r\n\r\n        // vertex c\r\n\r\n    flagvert = true\r\n    for (j = 0; j < vertdeg[ 0 ][ faces[ co ] ]; ++j) {\r\n      if (faces[ ao ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ co ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ ao ]\r\n    }\r\n\r\n    flagvert = true\r\n    for (j = 0, jl = vertdeg[ 0 ][ faces[ co ] ]; j < jl; ++j) {\r\n      if (faces[ bo ] === vertdeg[ j + 1 ][ faces[ co ] ]) {\r\n        flagvert = false\r\n        break\r\n      }\r\n    }\r\n    if (flagvert) {\r\n      vertdeg[ 0 ][ faces[ co ] ]++\r\n      vertdeg[ vertdeg[ 0 ][ faces[ co ] ] ][ faces[ co ] ] = faces[ bo ]\r\n    }\r\n  }\r\n\r\n  var wt = 1.0\r\n  var wt2 = 0.5\r\n  var i3, vi3, vdi, wtvi, wt2vi\r\n  var ssign = -1\r\n  var scaleFactor = 1\r\n  var outwt = 0.75 / (scaleFactor + 3.5)  // area-preserving\r\n\r\n    // smoothing iterations\r\n\r\n  for (var k = 0; k < numiter; ++k) {\r\n        // for each vertex\r\n\r\n    for (i = 0; i < nv; ++i) {\r\n      i3 = i * 3\r\n      vdi = vertdeg[ 0 ][ i ]\r\n\r\n      if (vdi < 3) {\r\n        tps[ i3 ] = verts[ i3 ]\r\n        tps[ i3 + 1 ] = verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] = verts[ i3 + 2 ]\r\n      } else if (vdi === 3 || vdi === 4) {\r\n        tps[ i3 ] = 0\r\n        tps[ i3 + 1 ] = 0\r\n        tps[ i3 + 2 ] = 0\r\n\r\n        for (j = 0; j < vdi; ++j) {\r\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\r\n          tps[ i3 ] += verts[ vi3 ]\r\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\r\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\r\n        }\r\n\r\n        tps[ i3 ] += wt2 * verts[ i3 ]\r\n        tps[ i3 + 1 ] += wt2 * verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] += wt2 * verts[ i3 + 2 ]\r\n\r\n        wt2vi = wt2 + vdi\r\n        tps[ i3 ] /= wt2vi\r\n        tps[ i3 + 1 ] /= wt2vi\r\n        tps[ i3 + 2 ] /= wt2vi\r\n      } else {\r\n        tps[ i3 ] = 0\r\n        tps[ i3 + 1 ] = 0\r\n        tps[ i3 + 2 ] = 0\r\n\r\n        for (j = 0; j < vdi; ++j) {\r\n          vi3 = vertdeg[ j + 1 ][ i ] * 3\r\n          tps[ i3 ] += verts[ vi3 ]\r\n          tps[ i3 + 1 ] += verts[ vi3 + 1 ]\r\n          tps[ i3 + 2 ] += verts[ vi3 + 2 ]\r\n        }\r\n\r\n        tps[ i3 ] += wt * verts[ i3 ]\r\n        tps[ i3 + 1 ] += wt * verts[ i3 + 1 ]\r\n        tps[ i3 + 2 ] += wt * verts[ i3 + 2 ]\r\n\r\n        wtvi = wt + vdi\r\n        tps[ i3 ] /= wtvi\r\n        tps[ i3 + 1 ] /= wtvi\r\n        tps[ i3 + 2 ] /= wtvi\r\n      }\r\n    }\r\n\r\n    verts.set(tps)  // copy smoothed positions\r\n\r\n    if (inflate) {\r\n      computeVertexNormals(verts, faces, norms)\r\n      var nv3 = nv * 3\r\n\r\n      for (i3 = 0; i3 < nv3; i3 += 3) {\r\n                // if(verts[i].inout) ssign=1;\r\n                // else ssign=-1;\r\n\r\n        verts[ i3 ] += ssign * outwt * norms[ i3 ]\r\n        verts[ i3 + 1 ] += ssign * outwt * norms[ i3 + 1 ]\r\n        verts[ i3 + 2 ] += ssign * outwt * norms[ i3 + 2 ]\r\n      }\r\n    }\r\n  }\r\n}\r\nlaplacianSmooth.__deps = [ computeVertexNormals ]\r\n\r\nfunction computeVertexNormals (position, index, normal) {\r\n  var i, il\r\n\r\n  if (normal === undefined) {\r\n    normal = new Float32Array(position.length)\r\n  } else {\r\n        // reset existing normals to zero\r\n    for (i = 0, il = normal.length; i < il; i++) {\r\n      normal[ i ] = 0\r\n    }\r\n  }\r\n\r\n  var a = new Float32Array(3)\r\n  var b = new Float32Array(3)\r\n  var c = new Float32Array(3)\r\n  var cb = new Float32Array(3)\r\n  var ab = new Float32Array(3)\r\n\r\n  if (index) {\r\n        // indexed elements\r\n    for (i = 0, il = index.length; i < il; i += 3) {\r\n      var ai = index[ i ] * 3\r\n      var bi = index[ i + 1 ] * 3\r\n      var ci = index[ i + 2 ] * 3\r\n\r\n      v3fromArray(a, position, ai)\r\n      v3fromArray(b, position, bi)\r\n      v3fromArray(c, position, ci)\r\n\r\n      v3sub(cb, c, b)\r\n      v3sub(ab, a, b)\r\n      v3cross(cb, cb, ab)\r\n\r\n      normal[ ai ] += cb[ 0 ]\r\n      normal[ ai + 1 ] += cb[ 1 ]\r\n      normal[ ai + 2 ] += cb[ 2 ]\r\n\r\n      normal[ bi ] += cb[ 0 ]\r\n      normal[ bi + 1 ] += cb[ 1 ]\r\n      normal[ bi + 2 ] += cb[ 2 ]\r\n\r\n      normal[ ci ] += cb[ 0 ]\r\n      normal[ ci + 1 ] += cb[ 1 ]\r\n      normal[ ci + 2 ] += cb[ 2 ]\r\n    }\r\n  } else {\r\n        // non-indexed elements (unconnected triangle soup)\r\n    for (i = 0, il = position.length; i < il; i += 9) {\r\n      v3fromArray(a, position, i)\r\n      v3fromArray(b, position, i + 3)\r\n      v3fromArray(c, position, i + 6)\r\n\r\n      v3sub(cb, c, b)\r\n      v3sub(ab, a, b)\r\n      v3cross(cb, cb, ab)\r\n\r\n      normal[ i ] = cb[ 0 ]\r\n      normal[ i + 1 ] = cb[ 1 ]\r\n      normal[ i + 2 ] = cb[ 2 ]\r\n\r\n      normal[ i + 3 ] = cb[ 0 ]\r\n      normal[ i + 4 ] = cb[ 1 ]\r\n      normal[ i + 5 ] = cb[ 2 ]\r\n\r\n      normal[ i + 6 ] = cb[ 0 ]\r\n      normal[ i + 7 ] = cb[ 1 ]\r\n      normal[ i + 8 ] = cb[ 2 ]\r\n    }\r\n  }\r\n\r\n  normalizeVector3array(normal)\r\n\r\n  return normal\r\n}\r\ncomputeVertexNormals.__deps = [\r\n  v3sub, v3cross, v3fromArray, normalizeVector3array\r\n]\r\n\r\nfunction getRadiusDict (radiusList) {\r\n  var radiusDict = {}\r\n  for (var i = 0, il = radiusList.length; i < il; ++i) {\r\n    radiusDict[ radiusList[ i ] ] = true\r\n  }\r\n  return radiusDict\r\n}\r\n\r\nfunction getSurfaceGrid (min, max, maxRadius, scaleFactor, extraMargin) {\r\n    // need margin to avoid boundary/round off effects\r\n  var margin = (1 / scaleFactor) * 3\r\n  margin += maxRadius\r\n\r\n  v3subScalar(min, min, extraMargin + margin)\r\n  v3addScalar(max, max, extraMargin + margin)\r\n\r\n  v3multiplyScalar(min, min, scaleFactor)\r\n  v3floor(min, min)\r\n  v3divideScalar(min, min, scaleFactor)\r\n\r\n  v3multiplyScalar(max, max, scaleFactor)\r\n  v3ceil(max, max)\r\n  v3divideScalar(max, max, scaleFactor)\r\n\r\n  var dim = new Float32Array(3)\r\n  v3sub(dim, max, min)\r\n  v3multiplyScalar(dim, dim, scaleFactor)\r\n  v3ceil(dim, dim)\r\n  v3addScalar(dim, dim, 1)\r\n\r\n  var maxSize = Math.pow(10, 6) * 256\r\n  var tmpSize = dim[ 0 ] * dim[ 1 ] * dim[ 2 ] * 3\r\n\r\n  if (maxSize <= tmpSize) {\r\n    scaleFactor *= Math.pow(maxSize / tmpSize, 1 / 3)\r\n\r\n    v3multiplyScalar(min, min, scaleFactor)\r\n    v3floor(min, min)\r\n    v3divideScalar(min, min, scaleFactor)\r\n\r\n    v3multiplyScalar(max, max, scaleFactor)\r\n    v3ceil(max, max)\r\n    v3divideScalar(max, max, scaleFactor)\r\n\r\n    v3sub(dim, max, min)\r\n    v3multiplyScalar(dim, dim, scaleFactor)\r\n    v3ceil(dim, dim)\r\n    v3addScalar(dim, dim, 1)\r\n  }\r\n\r\n  var tran = new Float32Array(min)\r\n  v3negate(tran, tran)\r\n\r\n    // coordinate transformation matrix\r\n  var matrix = m4new()\r\n  var mroty = m4new()\r\n  m4makeRotationY(mroty, degToRad(90))\r\n  m4multiply(matrix, matrix, mroty)\r\n\r\n  var mscale = m4new()\r\n  m4makeScale(\r\n    mscale,\r\n    -1 / scaleFactor,\r\n    1 / scaleFactor,\r\n    1 / scaleFactor\r\n  )\r\n  m4multiply(matrix, matrix, mscale)\r\n\r\n  var mtrans = m4new()\r\n  m4makeTranslation(\r\n    mtrans,\r\n    -scaleFactor * tran[2],\r\n    -scaleFactor * tran[1],\r\n    -scaleFactor * tran[0]\r\n  )\r\n  m4multiply(matrix, matrix, mtrans)\r\n\r\n  return {\r\n    dim: dim,\r\n    tran: tran,\r\n    matrix: matrix,\r\n    scaleFactor: scaleFactor\r\n  }\r\n}\r\ngetSurfaceGrid.__deps = [\r\n  degToRad,\r\n  v3subScalar, v3addScalar, v3divideScalar, v3multiplyScalar,\r\n  v3floor, v3ceil, v3sub, v3negate,\r\n  m4new, m4multiply, m4makeTranslation, m4makeScale, m4makeRotationY\r\n]\r\n\r\nexport {\r\n    laplacianSmooth,\r\n    computeVertexNormals,\r\n    getRadiusDict,\r\n    getSurfaceGrid\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/surface-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3605,
    "kind": "function",
    "name": "laplacianSmooth",
    "memberof": "src/surface/surface-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/surface-utils.js~laplacianSmooth",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/surface-utils.js",
    "importStyle": "{laplacianSmooth}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3606,
    "kind": "function",
    "name": "computeVertexNormals",
    "memberof": "src/surface/surface-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/surface-utils.js~computeVertexNormals",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/surface-utils.js",
    "importStyle": "{computeVertexNormals}",
    "description": null,
    "lineNumber": 226,
    "undocument": true
  },
  {
    "__docId__": 3607,
    "kind": "function",
    "name": "getRadiusDict",
    "memberof": "src/surface/surface-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/surface-utils.js~getRadiusDict",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/surface-utils.js",
    "importStyle": "{getRadiusDict}",
    "description": null,
    "lineNumber": 304,
    "undocument": true
  },
  {
    "__docId__": 3608,
    "kind": "function",
    "name": "getSurfaceGrid",
    "memberof": "src/surface/surface-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/surface-utils.js~getSurfaceGrid",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/surface-utils.js",
    "importStyle": "{getSurfaceGrid}",
    "description": null,
    "lineNumber": 312,
    "undocument": true
  },
  {
    "__docId__": 3609,
    "kind": "file",
    "name": "src/surface/surface.js",
    "content": "/**\r\n * @file Surface\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3, Geometry, BufferGeometry, Group, Color } from '../../lib/three.es6.js'\r\n\r\nimport { Debug, Log, ColormakerRegistry } from '../globals.js'\r\nimport { getUintArray } from '../utils.js'\r\nimport { AtomPicker, SurfacePicker } from '../utils/picker.js'\r\nimport { uniformArray, uniformArray3, serialArray } from '../math/array-utils.js'\r\nimport Selection from '../selection/selection.js'\r\n\r\n/**\r\n * Surface\r\n */\r\nclass Surface {\r\n    /**\r\n     * @param {String} name - surface name\r\n     * @param {String} path - source path\r\n     * @param {Object} data - surface data\r\n     * @param {Float32Array} data.position - surface positions\r\n     * @param {Int32Array} data.index - surface indices\r\n     * @param {Float32Array} data.normal - surface normals\r\n     * @param {Float32Array} data.color - surface colors\r\n     * @param {Int32Array} data.atomindex - atom indices\r\n     * @param {boolean} data.contour - contour mode flag\r\n     */\r\n  constructor (name, path, data) {\r\n    this.name = name || ''\r\n    this.path = path || ''\r\n    this.info = {}\r\n\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    if (data instanceof Geometry ||\r\n            data instanceof BufferGeometry ||\r\n            data instanceof Group\r\n        ) {\r\n            // to be removed\r\n      this.fromGeometry(data)\r\n    } else if (data) {\r\n      this.set(\r\n                data.position,\r\n                data.index,\r\n                data.normal,\r\n                data.color,\r\n                data.atomindex,\r\n                data.contour\r\n            )\r\n\r\n      this.boundingBox.setFromArray(data.position)\r\n      this.boundingBox.getCenter(this.center)\r\n    }\r\n  }\r\n\r\n  get type () { return 'Surface' }\r\n\r\n    /**\r\n     * set surface data\r\n     * @param {Float32Array} position - surface positions\r\n     * @param {Int32Array} index - surface indices\r\n     * @param {Float32Array} normal - surface normals\r\n     * @param {Float32Array} color - surface colors\r\n     * @param {Int32Array} atomindex - atom indices\r\n     * @param {boolean} contour - contour mode flag\r\n     * @return {undefined}\r\n     */\r\n  set (position, index, normal, color, atomindex, contour) {\r\n        /**\r\n         * @type {Float32Array}\r\n         */\r\n    this.position = position\r\n        /**\r\n         * @type {Uint32Array|Uint16Array|undefined}\r\n         */\r\n    this.index = index\r\n        /**\r\n         * @type {Float32Array|undefined}\r\n         */\r\n    this.normal = normal\r\n        /**\r\n         * @type {Float32Array|undefined}\r\n         */\r\n    this.color = color\r\n        /**\r\n         * @type {Int32Array|undefined}\r\n         */\r\n    this.atomindex = atomindex\r\n\r\n    this.size = position.length / 3\r\n    this.contour = contour\r\n  }\r\n\r\n  fromGeometry (geometry) {\r\n    if (Debug) Log.time('GeometrySurface.fromGeometry')\r\n\r\n    let geo\r\n\r\n    if (geometry instanceof Geometry) {\r\n      geometry.computeVertexNormals(true)\r\n      geo = new BufferGeometry().fromGeometry(geometry)\r\n    } else if (geometry instanceof BufferGeometry) {\r\n      geo = geometry\r\n    } else {\r\n      geo = geometry[ 0 ]\r\n    }\r\n\r\n    if (!geo.boundingBox) geo.computeBoundingBox()\r\n\r\n    this.boundingBox.copy(geo.boundingBox)\r\n    this.boundingBox.getCenter(this.center)\r\n\r\n    let position, color, index, normal\r\n\r\n    if (geo instanceof BufferGeometry) {\r\n      const attr = geo.attributes\r\n      const an = attr.normal ? attr.normal.array : false\r\n\r\n            // assume there are no normals if the first is zero\r\n      if (!an || (an[ 0 ] === 0 && an[ 1 ] === 0 && an[ 2 ] === 0)) {\r\n        geo.computeVertexNormals()\r\n      }\r\n\r\n      position = attr.position.array\r\n      index = attr.index ? attr.index.array : null\r\n      normal = attr.normal.array\r\n    }\r\n\r\n    this.set(position, index, normal, color, undefined)\r\n\r\n    if (Debug) Log.timeEnd('GeometrySurface.setGeometry')\r\n  }\r\n\r\n  getPosition () {\r\n    return this.position\r\n  }\r\n\r\n  getColor (params) {\r\n    const p = params || {}\r\n    p.surface = this\r\n\r\n    const n = this.size\r\n    const array = new Float32Array(n * 3)\r\n    const colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    if (colormaker.volumeColor || p.scheme === 'random') {\r\n      for (let i = 0; i < n; ++i) {\r\n        colormaker.volumeColorToArray(i, array, i * 3)\r\n      }\r\n    } else if (colormaker.positionColor) {\r\n      const v = new Vector3()\r\n      const pos = this.position\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        var i3 = i * 3\r\n        v.set(pos[ i3 ], pos[ i3 + 1 ], pos[ i3 + 2 ])\r\n        colormaker.positionColorToArray(v, array, i3)\r\n      }\r\n    } else if (colormaker.atomColor && this.atomindex) {\r\n      const atomProxy = p.structure.getAtomProxy()\r\n      const atomindex = this.atomindex\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        atomProxy.index = atomindex[ i ]\r\n        colormaker.atomColorToArray(atomProxy, array, i * 3)\r\n      }\r\n    } else {\r\n      const tc = new Color(p.value)\r\n      uniformArray3(n, tc.r, tc.g, tc.b, array)\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  getPicking (structure) {\r\n    if (this.atomindex && structure) {\r\n      return new AtomPicker(this.atomindex, structure)\r\n    } else {\r\n      return new SurfacePicker(serialArray(this.size), this)\r\n    }\r\n  }\r\n\r\n  getNormal () {\r\n    return this.normal\r\n  }\r\n\r\n  getSize (size, scale) {\r\n    return uniformArray(this.size, size * scale)\r\n  }\r\n\r\n  getIndex () {\r\n    return this.index\r\n  }\r\n\r\n  getFilteredIndex (sele, structure) {\r\n    if (sele && this.atomindex) {\r\n      const selection = new Selection(sele)\r\n      const atomSet = structure.getAtomSet(selection)\r\n      const filteredIndex = []\r\n\r\n      const atomindex = this.atomindex\r\n      const index = this.index\r\n      const n = index.length\r\n      const elementSize = this.contour ? 2 : 3\r\n\r\n      let j = 0\r\n\r\n      for (let i = 0; i < n; i += elementSize) {\r\n        let include = true\r\n\r\n        for (let a = 0; a < elementSize; a++) {\r\n          const idx = index[ i + a ]\r\n          const ai = atomindex[ idx ]\r\n          if (!atomSet.get(ai)) {\r\n            include = false\r\n            break\r\n          }\r\n        }\r\n\r\n        if (!include) { continue }\r\n\r\n        for (let a = 0; a < elementSize; a++, j++) {\r\n          filteredIndex[ j ] = index[ i + a ]\r\n        }\r\n      }\r\n\r\n      return getUintArray(filteredIndex, this.position.length / 3)\r\n    } else {\r\n      return this.index\r\n    }\r\n  }\r\n\r\n  getAtomindex () {\r\n    return this.atomindex\r\n  }\r\n\r\n  dispose () {\r\n\r\n        //\r\n\r\n  }\r\n}\r\n\r\nexport default Surface\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/surface.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3610,
    "kind": "class",
    "name": "Surface",
    "memberof": "src/surface/surface.js",
    "static": true,
    "longname": "src/surface/surface.js~Surface",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/surface.js",
    "importStyle": "Surface",
    "description": "Surface",
    "lineNumber": 18,
    "interface": false
  },
  {
    "__docId__": 3611,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "surface name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "source path"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "surface data"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.position",
        "description": "surface positions"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.index",
        "description": "surface indices"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.normal",
        "description": "surface normals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.color",
        "description": "surface colors"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data.atomindex",
        "description": "atom indices"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.contour",
        "description": "contour mode flag"
      }
    ]
  },
  {
    "__docId__": 3612,
    "kind": "member",
    "name": "name",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#name",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 3613,
    "kind": "member",
    "name": "path",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#path",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3614,
    "kind": "member",
    "name": "info",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#info",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3615,
    "kind": "member",
    "name": "center",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#center",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 3616,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 3617,
    "kind": "get",
    "name": "type",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#type",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 3618,
    "kind": "method",
    "name": "set",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#set",
    "access": "public",
    "description": "set surface data",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "surface positions"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "surface indices"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "normal",
        "description": "surface normals"
      },
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "surface colors"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomindex",
        "description": "atom indices"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "contour",
        "description": "contour mode flag"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3619,
    "kind": "member",
    "name": "position",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#position",
    "access": "public",
    "description": "",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Float32Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3620,
    "kind": "member",
    "name": "index",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#index",
    "access": "public",
    "description": "",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Uint32Array",
        "Uint16Array",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3621,
    "kind": "member",
    "name": "normal",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#normal",
    "access": "public",
    "description": "",
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "Float32Array",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3622,
    "kind": "member",
    "name": "color",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#color",
    "access": "public",
    "description": "",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Float32Array",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3623,
    "kind": "member",
    "name": "atomindex",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#atomindex",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "Int32Array",
        "undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3624,
    "kind": "member",
    "name": "size",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#size",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 3625,
    "kind": "member",
    "name": "contour",
    "memberof": "src/surface/surface.js~Surface",
    "static": false,
    "longname": "src/surface/surface.js~Surface#contour",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 3626,
    "kind": "method",
    "name": "fromGeometry",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#fromGeometry",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 3627,
    "kind": "method",
    "name": "getPosition",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getPosition",
    "access": "public",
    "description": null,
    "lineNumber": 137,
    "undocument": true
  },
  {
    "__docId__": 3628,
    "kind": "method",
    "name": "getColor",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getColor",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true
  },
  {
    "__docId__": 3629,
    "kind": "method",
    "name": "getPicking",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getPicking",
    "access": "public",
    "description": null,
    "lineNumber": 178,
    "undocument": true
  },
  {
    "__docId__": 3630,
    "kind": "method",
    "name": "getNormal",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getNormal",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true
  },
  {
    "__docId__": 3631,
    "kind": "method",
    "name": "getSize",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getSize",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 3632,
    "kind": "method",
    "name": "getIndex",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getIndex",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 3633,
    "kind": "method",
    "name": "getFilteredIndex",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getFilteredIndex",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true
  },
  {
    "__docId__": 3634,
    "kind": "method",
    "name": "getAtomindex",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#getAtomindex",
    "access": "public",
    "description": null,
    "lineNumber": 236,
    "undocument": true
  },
  {
    "__docId__": 3635,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/surface/surface.js~Surface",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/surface.js~Surface#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 240,
    "undocument": true
  },
  {
    "__docId__": 3636,
    "kind": "file",
    "name": "src/surface/volume-slice.js",
    "content": "/**\r\n * @file Volume Slice\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { SlicePicker } from '../utils/picker.js'\r\n\r\nclass VolumeSlice {\r\n  constructor (volume, params) {\r\n    const p = params || {}\r\n\r\n    this.dimension = defaults(p.dimension, 'x')\r\n    this.positionType = defaults(p.positionType, 'percent')\r\n    this.position = defaults(p.position, 30)\r\n    this.thresholdType = defaults(p.thresholdType, 'sigma')\r\n    this.thresholdMin = defaults(p.thresholdMin, -Infinity)\r\n    this.thresholdMax = defaults(p.thresholdMax, Infinity)\r\n    this.normalize = defaults(p.normalize, false)\r\n\r\n    this.volume = volume\r\n  }\r\n\r\n  getPositionFromCoordinate (coord) {\r\n    const dim = this.dimension\r\n    const v = this.volume\r\n    const m = v.matrix\r\n\r\n    const mp = new Vector3().setFromMatrixPosition(m)[ dim ]\r\n    const ms = new Vector3().setFromMatrixScale(m)[ dim ]\r\n\r\n    let vn\r\n    if (dim === 'x') {\r\n      vn = v.nx\r\n    } else if (dim === 'y') {\r\n      vn = v.ny\r\n    } else {\r\n      vn = v.nz\r\n    }\r\n\r\n    return Math.round((((coord - mp) / (vn / 100)) + 1) / ms)\r\n  }\r\n\r\n  getData (params) {\r\n    params = params || {}\r\n\r\n    const v = this.volume\r\n    const d = v.data\r\n    const m = v.matrix\r\n\r\n    let p\r\n    if (this.positionType === 'coordinate') {\r\n      p = this.getPositionFromCoordinate(this.position)\r\n    } else {\r\n      p = this.position\r\n    }\r\n\r\n    function pos (dimLen) {\r\n      return Math.round((dimLen / 100) * (p - 1))\r\n    }\r\n\r\n    function index (x, y, z, i) {\r\n      return (z * v.ny * v.nx + y * v.nx + x) * 3 + i\r\n    }\r\n\r\n    const position = new Float32Array(4 * 3)\r\n    const vec = new Vector3()\r\n\r\n    let width, height\r\n    let x\r\n    let y\r\n    let z\r\n    let x0 = 0\r\n    let y0 = 0\r\n    let z0 = 0\r\n    let nx = v.nx\r\n    let ny = v.ny\r\n    let nz = v.nz\r\n\r\n    function setVec (x, y, z, offset) {\r\n      vec.set(x, y, z).applyMatrix4(m).toArray(position, offset)\r\n    }\r\n\r\n    if (this.dimension === 'x') {\r\n      x = pos(v.nx)\r\n      y = v.ny - 1\r\n      z = v.nz - 1\r\n\r\n      width = v.nz\r\n      height = v.ny\r\n\r\n      x0 = x\r\n      nx = x0 + 1\r\n\r\n      setVec(x, 0, 0, 0)\r\n      setVec(x, y, 0, 3)\r\n      setVec(x, 0, z, 6)\r\n      setVec(x, y, z, 9)\r\n    } else if (this.dimension === 'y') {\r\n      x = v.nx - 1\r\n      y = pos(v.ny)\r\n      z = v.nz - 1\r\n\r\n      width = v.nz\r\n      height = v.nx\r\n\r\n      y0 = y\r\n      ny = y0 + 1\r\n\r\n      setVec(0, y, 0, 0)\r\n      setVec(x, y, 0, 3)\r\n      setVec(0, y, z, 6)\r\n      setVec(x, y, z, 9)\r\n    } else if (this.dimension === 'z') {\r\n      x = v.nx - 1\r\n      y = v.ny - 1\r\n      z = pos(v.nz)\r\n\r\n      width = v.nx\r\n      height = v.ny\r\n\r\n      z0 = z\r\n      nz = z0 + 1\r\n\r\n      setVec(0, 0, z, 0)\r\n      setVec(0, y, z, 3)\r\n      setVec(x, 0, z, 6)\r\n      setVec(x, y, z, 9)\r\n    }\r\n\r\n    let i = 0\r\n    let j = 0\r\n    const imageData = new Uint8Array(width * height * 4)\r\n    const pickingArray = new Float32Array(width * height)\r\n\r\n    let tMin, tMax\r\n    if (this.thresholdType === 'sigma') {\r\n      tMin = v.getValueForSigma(this.thresholdMin)\r\n      tMax = v.getValueForSigma(this.thresholdMax)\r\n    } else {\r\n      tMin = this.thresholdMin\r\n      tMax = this.thresholdMax\r\n    }\r\n\r\n    const cp = Object.assign({}, params.colorParams, { volume: v })\r\n    if (this.normalize) {\r\n      cp.domain = [ 0, 1 ]\r\n    }\r\n    const colormaker = ColormakerRegistry.getScheme(cp)\r\n    const tmp = new Float32Array(3)\r\n    const scale = colormaker.getScale()\r\n\r\n    let min, max, diff\r\n    if (this.normalize) {\r\n      min = +Infinity\r\n      max = -Infinity\r\n      for (let iy = y0; iy < ny; ++iy) {\r\n        for (let ix = x0; ix < nx; ++ix) {\r\n          for (let iz = z0; iz < nz; ++iz) {\r\n            const idx = index(ix, iy, iz, 0) / 3\r\n            const val = d[ idx ]\r\n            if (val < min) min = val\r\n            if (val > max) max = val\r\n          }\r\n        }\r\n      }\r\n      diff = max - min\r\n    }\r\n\r\n    for (let iy = y0; iy < ny; ++iy) {\r\n      for (let ix = x0; ix < nx; ++ix) {\r\n        for (let iz = z0; iz < nz; ++iz) {\r\n          const idx = index(ix, iy, iz, 0) / 3\r\n          let val = d[ idx ]\r\n          if (this.normalize) {\r\n            val = (val - min) / diff\r\n          }\r\n\r\n          colormaker.colorToArray(scale(val), tmp)\r\n          imageData[ i ] = Math.round(tmp[ 0 ] * 255)\r\n          imageData[ i + 1 ] = Math.round(tmp[ 1 ] * 255)\r\n          imageData[ i + 2 ] = Math.round(tmp[ 2 ] * 255)\r\n          imageData[ i + 3 ] = (val > tMin && val < tMax) ? 255 : 0\r\n\r\n          pickingArray[ j ] = idx\r\n\r\n          ++j\r\n          i += 4\r\n        }\r\n      }\r\n    }\r\n\r\n    const picking = new SlicePicker(pickingArray, v)\r\n\r\n    return { position, imageData, width, height, picking }\r\n  }\r\n}\r\n\r\nexport default VolumeSlice\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/volume-slice.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3637,
    "kind": "class",
    "name": "VolumeSlice",
    "memberof": "src/surface/volume-slice.js",
    "static": true,
    "longname": "src/surface/volume-slice.js~VolumeSlice",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/volume-slice.js",
    "importStyle": "VolumeSlice",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 3638,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3639,
    "kind": "member",
    "name": "dimension",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#dimension",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3640,
    "kind": "member",
    "name": "positionType",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#positionType",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3641,
    "kind": "member",
    "name": "position",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#position",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3642,
    "kind": "member",
    "name": "thresholdType",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#thresholdType",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3643,
    "kind": "member",
    "name": "thresholdMin",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#thresholdMin",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3644,
    "kind": "member",
    "name": "thresholdMax",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#thresholdMax",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3645,
    "kind": "member",
    "name": "normalize",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#normalize",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3646,
    "kind": "member",
    "name": "volume",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#volume",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3647,
    "kind": "method",
    "name": "getPositionFromCoordinate",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#getPositionFromCoordinate",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 3648,
    "kind": "method",
    "name": "getData",
    "memberof": "src/surface/volume-slice.js~VolumeSlice",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume-slice.js~VolumeSlice#getData",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 3649,
    "kind": "file",
    "name": "src/surface/volume.js",
    "content": "/**\r\n * @file Volume\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3, Box3, Matrix3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { WorkerRegistry, ColormakerRegistry } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport WorkerPool from '../worker/worker-pool.js'\r\nimport { VolumePicker } from '../utils/picker.js'\r\nimport {\r\n  uniformArray, serialArray,\r\n  arrayMin, arrayMax, arraySum, arrayMean, arrayRms\r\n} from '../math/array-utils'\r\nimport MarchingCubes from './marching-cubes.js'\r\nimport { laplacianSmooth, computeVertexNormals } from './surface-utils.js'\r\nimport {\r\n  applyMatrix4toVector3array, applyMatrix3toVector3array\r\n} from '../math/vector-utils.js'\r\nimport { m3new, m3makeNormal } from '../math/matrix-utils.js'\r\nimport Surface from './surface.js'\r\n\r\nfunction VolumeSurface (data, nx, ny, nz, atomindex) {\r\n  var mc = new MarchingCubes(data, nx, ny, nz, atomindex)\r\n\r\n  function getSurface (isolevel, smooth, box, matrix, contour, wrap) {\r\n    const sd = mc.triangulate(isolevel, smooth, box, contour, wrap)\r\n    if (smooth && !contour) {\r\n      laplacianSmooth(sd.position, sd.index, smooth, true)\r\n      sd.normal = computeVertexNormals(sd.position, sd.index)\r\n    }\r\n    if (matrix) {\r\n      applyMatrix4toVector3array(matrix, sd.position)\r\n      if (sd.normal) {\r\n        const normalMatrix = m3new()\r\n        m3makeNormal(normalMatrix, matrix)\r\n        applyMatrix3toVector3array(normalMatrix, sd.normal)\r\n      }\r\n    }\r\n    return sd\r\n  }\r\n\r\n  this.getSurface = getSurface\r\n}\r\nVolumeSurface.__deps = [\r\n  laplacianSmooth, computeVertexNormals, MarchingCubes,\r\n  applyMatrix4toVector3array, applyMatrix3toVector3array,\r\n  m3new, m3makeNormal\r\n]\r\n\r\nWorkerRegistry.add('surf', function func (e, callback) {\r\n  const a = e.data.args\r\n  const p = e.data.params\r\n  if (a) {\r\n    /* global self */\r\n    self.volsurf = new VolumeSurface(a[0], a[1], a[2], a[3], a[4])\r\n  }\r\n  if (p) {\r\n    const sd = self.volsurf.getSurface(\r\n            p.isolevel, p.smooth, p.box, p.matrix, p.contour, p.wrap\r\n        )\r\n    const transferList = [ sd.position.buffer, sd.index.buffer ]\r\n    if (sd.normal) transferList.push(sd.normal.buffer)\r\n    if (sd.atomindex) transferList.push(sd.atomindex.buffer)\r\n    const data = {\r\n      sd: sd,\r\n      p: p\r\n    }\r\n    callback(data, transferList)\r\n  }\r\n}, [ VolumeSurface ])\r\n\r\n/**\r\n * Volume\r\n */\r\nclass Volume {\r\n  /**\r\n   * Make Volume instance\r\n   * @param {String} name - volume name\r\n   * @param {String} path - source path\r\n   * @param {Float32array} data - volume 3d grid\r\n   * @param {Integer} nx - x dimension of the 3d volume\r\n   * @param {Integer} ny - y dimension of the 3d volume\r\n   * @param {Integer} nz - z dimension of the 3d volume\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   */\r\n  constructor (name, path, data, nx, ny, nz, atomindex) {\r\n    this.name = name\r\n    this.path = path\r\n\r\n    this.matrix = new Matrix4()\r\n    this.normalMatrix = new Matrix3()\r\n    this.inverseMatrix = new Matrix4()\r\n    this.center = new Vector3()\r\n    this.boundingBox = new Box3()\r\n\r\n    this.setData(data, nx, ny, nz, atomindex)\r\n  }\r\n\r\n  get type () { return 'Volume' }\r\n\r\n  /**\r\n   * set volume data\r\n   * @param {Float32array} data - volume 3d grid\r\n   * @param {Integer} nx - x dimension of the 3d volume\r\n   * @param {Integer} ny - y dimension of the 3d volume\r\n   * @param {Integer} nz - z dimension of the 3d volume\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   * @return {undefined}\r\n   */\r\n  setData (data, nx, ny, nz, atomindex) {\r\n    this.nx = nx || 1\r\n    this.ny = ny || 1\r\n    this.nz = nz || 1\r\n\r\n    this.data = data || new Float32Array(1)\r\n    this.setAtomindex(atomindex)\r\n\r\n    delete this._position\r\n\r\n    delete this._min\r\n    delete this._max\r\n    delete this._mean\r\n    delete this._rms\r\n\r\n    if (this.worker) this.worker.terminate()\r\n  }\r\n\r\n  /**\r\n   * Set statistics, which can be different from the data in this volume,\r\n   * if this volume is a slice of a bigger volume\r\n   * @param {Number|undefined} min - minimum value of the whole data set\r\n   * @param {Number|undefined} max - maximum value of the whole data set\r\n   * @param {Number|undefined} mean - average value of the whole data set\r\n   * @param {Number|undefined} rms - sigma value of the whole data set\r\n   */\r\n  setStats (min, max, mean, rms) {\r\n    this._min = min\r\n    this._max = max\r\n    this._mean = mean\r\n    this._rms = rms\r\n  }\r\n\r\n  /**\r\n   * set transformation matrix\r\n   * @param {Matrix4} matrix - 4x4 transformation matrix\r\n   * @return {undefined}\r\n   */\r\n  setMatrix (matrix) {\r\n    this.matrix.copy(matrix)\r\n\r\n    const bb = this.boundingBox\r\n    const v = this.center  // temporary re-purposing\r\n\r\n    const x = this.nx - 1\r\n    const y = this.ny - 1\r\n    const z = this.nz - 1\r\n\r\n    bb.makeEmpty()\r\n\r\n    bb.expandByPoint(v.set(x, y, z))\r\n    bb.expandByPoint(v.set(x, y, 0))\r\n    bb.expandByPoint(v.set(x, 0, z))\r\n    bb.expandByPoint(v.set(x, 0, 0))\r\n    bb.expandByPoint(v.set(0, y, z))\r\n    bb.expandByPoint(v.set(0, 0, z))\r\n    bb.expandByPoint(v.set(0, y, 0))\r\n    bb.expandByPoint(v.set(0, 0, 0))\r\n\r\n    bb.applyMatrix4(this.matrix)\r\n    bb.getCenter(this.center)\r\n\r\n    // make normal matrix\r\n\r\n    const me = this.matrix.elements\r\n    const r0 = new Vector3(me[0], me[1], me[2])\r\n    const r1 = new Vector3(me[4], me[5], me[6])\r\n    const r2 = new Vector3(me[8], me[9], me[10])\r\n    const cp = new Vector3()\r\n    //        [ r0 ]       [ r1 x r2 ]\r\n    // M3x3 = [ r1 ]   N = [ r2 x r0 ]\r\n    //        [ r2 ]       [ r0 x r1 ]\r\n    const ne = this.normalMatrix.elements\r\n    cp.crossVectors(r1, r2)\r\n    ne[ 0 ] = cp.x\r\n    ne[ 1 ] = cp.y\r\n    ne[ 2 ] = cp.z\r\n    cp.crossVectors(r2, r0)\r\n    ne[ 3 ] = cp.x\r\n    ne[ 4 ] = cp.y\r\n    ne[ 5 ] = cp.z\r\n    cp.crossVectors(r0, r1)\r\n    ne[ 6 ] = cp.x\r\n    ne[ 7 ] = cp.y\r\n    ne[ 8 ] = cp.z\r\n\r\n    this.inverseMatrix.getInverse(this.matrix)\r\n  }\r\n\r\n  /**\r\n   * set atom indices\r\n   * @param {Int32Array} atomindex - atom indices corresponding to the cells in the 3d grid\r\n   * @return {undefined}\r\n     */\r\n  setAtomindex (atomindex) {\r\n    this.atomindex = atomindex\r\n  }\r\n\r\n  getBox (center, size, target) {\r\n    if (!target) target = new Box3()\r\n\r\n    target.set(center, center)\r\n    target.expandByScalar(size)\r\n    target.applyMatrix4(this.inverseMatrix)\r\n\r\n    target.min.round()\r\n    target.max.round()\r\n\r\n    return target\r\n  }\r\n\r\n  _getBox (center, size) {\r\n    if (!center || !size) return\r\n\r\n    if (!this.__box) this.__box = new Box3()\r\n    const box = this.getBox(center, size, this.__box)\r\n    return [ box.min.toArray(), box.max.toArray() ]\r\n  }\r\n\r\n  _makeSurface (sd, isolevel, smooth) {\r\n    const name = this.name + '@' + isolevel.toPrecision(2)\r\n    const surface = new Surface(name, '', sd)\r\n    surface.info.isolevel = isolevel\r\n    surface.info.smooth = smooth\r\n    surface.info.volume = this\r\n\r\n    return surface\r\n  }\r\n\r\n  getSurface (isolevel, smooth, center, size, contour, wrap) {\r\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\r\n    smooth = defaults(smooth, 0)\r\n\r\n    //\r\n\r\n    if (this.volsurf === undefined) {\r\n      this.volsurf = new VolumeSurface(\r\n        this.data, this.nx, this.ny, this.nz, this.atomindex\r\n      )\r\n    }\r\n\r\n    const box = this._getBox(center, size)\r\n    const sd = this.volsurf.getSurface(\r\n      isolevel, smooth, box, this.matrix.elements, contour, wrap\r\n    )\r\n\r\n    return this._makeSurface(sd, isolevel, smooth)\r\n  }\r\n\r\n  getSurfaceWorker (isolevel, smooth, center, size, contour, wrap, callback) {\r\n    isolevel = isNaN(isolevel) ? this.getValueForSigma(2) : isolevel\r\n    smooth = smooth || 0\r\n\r\n    //\r\n\r\n    if (window.Worker) {\r\n      if (this.workerPool === undefined) {\r\n        this.workerPool = new WorkerPool('surf', 2)\r\n      }\r\n\r\n      const msg = {}\r\n      const worker = this.workerPool.getNextWorker()\r\n\r\n      if (worker.postCount === 0) {\r\n        msg.args = [\r\n          this.data, this.nx, this.ny, this.nz, this.atomindex\r\n        ]\r\n      }\r\n\r\n      msg.params = {\r\n        isolevel: isolevel,\r\n        smooth: smooth,\r\n        box: this._getBox(center, size),\r\n        matrix: this.matrix.elements,\r\n        contour: contour,\r\n        wrap: wrap\r\n      }\r\n\r\n      worker.post(msg, undefined,\r\n        e => {\r\n          const sd = e.data.sd\r\n          const p = e.data.p\r\n          callback(this._makeSurface(sd, p.isolevel, p.smooth))\r\n        },\r\n        e => {\r\n          console.warn(\r\n            'Volume.getSurfaceWorker error - trying without worker', e\r\n          )\r\n          const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\r\n          callback(surface)\r\n        }\r\n      )\r\n    } else {\r\n      const surface = this.getSurface(isolevel, smooth, center, size, contour, wrap)\r\n      callback(surface)\r\n    }\r\n  }\r\n\r\n  getValueForSigma (sigma) {\r\n    return this.mean + defaults(sigma, 2) * this.rms\r\n  }\r\n\r\n  getSigmaForValue (value) {\r\n    return (defaults(value, 0) - this.mean) / this.rms\r\n  }\r\n\r\n  get position () {\r\n    if (!this._position) {\r\n      const nz = this.nz\r\n      const ny = this.ny\r\n      const nx = this.nx\r\n      const position = new Float32Array(nx * ny * nz * 3)\r\n\r\n      let p = 0\r\n      for (let z = 0; z < nz; ++z) {\r\n        for (let y = 0; y < ny; ++y) {\r\n          for (let x = 0; x < nx; ++x) {\r\n            position[ p + 0 ] = x\r\n            position[ p + 1 ] = y\r\n            position[ p + 2 ] = z\r\n            p += 3\r\n          }\r\n        }\r\n      }\r\n\r\n      applyMatrix4toVector3array(this.matrix.elements, position)\r\n      this._position = position\r\n    }\r\n\r\n    return this._position\r\n  }\r\n\r\n  getDataAtomindex () {\r\n    return this.atomindex\r\n  }\r\n\r\n  getDataPosition () {\r\n    return this.position\r\n  }\r\n\r\n  getDataColor (params) {\r\n    const p = params || {}\r\n    p.volume = this\r\n    p.scale = p.scale || 'Spectral'\r\n    p.domain = p.domain || [ this.min, this.max ]\r\n\r\n    const colormaker = ColormakerRegistry.getScheme(p)\r\n\r\n    const n = this.position.length / 3\r\n    const array = new Float32Array(n * 3)\r\n\r\n    // var atoms = p.structure.atoms;\r\n    // var atomindex = this.atomindex;\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      colormaker.volumeColorToArray(i, array, i * 3)\r\n      // a = atoms[ atomindex[ i ] ];\r\n      // if( a ) colormaker.atomColorToArray( a, array, i * 3 );\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  getDataPicking () {\r\n    const picking = serialArray(this.position.length / 3)\r\n    return new VolumePicker(picking, this)\r\n  }\r\n\r\n  getDataSize (size, scale) {\r\n    const data = this.data\r\n    const n = this.position.length / 3\r\n    let array\r\n\r\n    switch (size) {\r\n      case 'value':\r\n        array = new Float32Array(data)\r\n        break\r\n\r\n      case 'abs-value':\r\n        array = new Float32Array(data)\r\n        for (let i = 0; i < n; ++i) {\r\n          array[ i ] = Math.abs(array[ i ])\r\n        }\r\n        break\r\n\r\n      case 'value-min': {\r\n        array = new Float32Array(data)\r\n        const min = this.min\r\n        for (let i = 0; i < n; ++i) {\r\n          array[ i ] -= min\r\n        }\r\n        break\r\n      }\r\n\r\n      case 'deviation':\r\n        array = new Float32Array(data)\r\n        break\r\n\r\n      default:\r\n        array = uniformArray(n, size)\r\n        break\r\n    }\r\n\r\n    if (scale !== 1.0) {\r\n      for (let i = 0; i < n; ++i) {\r\n        array[ i ] *= scale\r\n      }\r\n    }\r\n\r\n    return array\r\n  }\r\n\r\n  get min () {\r\n    if (this._min === undefined) {\r\n      this._min = arrayMin(this.data)\r\n    }\r\n    return this._min\r\n  }\r\n\r\n  get max () {\r\n    if (this._max === undefined) {\r\n      this._max = arrayMax(this.data)\r\n    }\r\n    return this._max\r\n  }\r\n\r\n  get sum () {\r\n    if (this._sum === undefined) {\r\n      this._sum = arraySum(this.data)\r\n    }\r\n    return this._sum\r\n  }\r\n\r\n  get mean () {\r\n    if (this._mean === undefined) {\r\n      this._mean = arrayMean(this.data)\r\n    }\r\n    return this._mean\r\n  }\r\n\r\n  get rms () {\r\n    if (this._rms === undefined) {\r\n      this._rms = arrayRms(this.data)\r\n    }\r\n    return this._rms\r\n  }\r\n\r\n  clone () {\r\n    const vol = new Volume(\r\n      this.name,\r\n      this.path,\r\n\r\n      this.data,\r\n\r\n      this.nx,\r\n      this.ny,\r\n      this.nz,\r\n\r\n      this.atomindex\r\n    )\r\n\r\n    vol.matrix.copy(this.matrix)\r\n    vol.header = Object.assign({}, this.header)\r\n\r\n    return vol\r\n  }\r\n\r\n  dispose () {\r\n    if (this.workerPool) this.workerPool.terminate()\r\n  }\r\n}\r\n\r\nexport default Volume\r\n\r\nexport {\r\n    VolumeSurface\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/surface/volume.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3650,
    "kind": "class",
    "name": "Volume",
    "memberof": "src/surface/volume.js",
    "static": true,
    "longname": "src/surface/volume.js~Volume",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/volume.js",
    "importStyle": "Volume",
    "description": "Volume",
    "lineNumber": 78,
    "interface": false
  },
  {
    "__docId__": 3651,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#constructor",
    "access": "public",
    "description": "Make Volume instance",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "volume name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "source path"
      },
      {
        "nullable": null,
        "types": [
          "Float32array"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "volume 3d grid"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "nx",
        "description": "x dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "ny",
        "description": "y dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "nz",
        "description": "z dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomindex",
        "description": "atom indices corresponding to the cells in the 3d grid"
      }
    ]
  },
  {
    "__docId__": 3652,
    "kind": "member",
    "name": "name",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#name",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "undocument": true
  },
  {
    "__docId__": 3653,
    "kind": "member",
    "name": "path",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#path",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 3654,
    "kind": "member",
    "name": "matrix",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#matrix",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 3655,
    "kind": "member",
    "name": "normalMatrix",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#normalMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true
  },
  {
    "__docId__": 3656,
    "kind": "member",
    "name": "inverseMatrix",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#inverseMatrix",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 3657,
    "kind": "member",
    "name": "center",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#center",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 3658,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true
  },
  {
    "__docId__": 3659,
    "kind": "get",
    "name": "type",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#type",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "undocument": true
  },
  {
    "__docId__": 3660,
    "kind": "method",
    "name": "setData",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#setData",
    "access": "public",
    "description": "set volume data",
    "lineNumber": 113,
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32array"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "volume 3d grid"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "nx",
        "description": "x dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "ny",
        "description": "y dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "nz",
        "description": "z dimension of the 3d volume"
      },
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomindex",
        "description": "atom indices corresponding to the cells in the 3d grid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3661,
    "kind": "member",
    "name": "nx",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#nx",
    "access": "public",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 3662,
    "kind": "member",
    "name": "ny",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#ny",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "undocument": true
  },
  {
    "__docId__": 3663,
    "kind": "member",
    "name": "nz",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#nz",
    "access": "public",
    "description": null,
    "lineNumber": 116,
    "undocument": true
  },
  {
    "__docId__": 3664,
    "kind": "member",
    "name": "data",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#data",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 3665,
    "kind": "method",
    "name": "setStats",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#setStats",
    "access": "public",
    "description": "Set statistics, which can be different from the data in this volume,\nif this volume is a slice of a bigger volume",
    "lineNumber": 139,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "min",
        "description": "minimum value of the whole data set"
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "max",
        "description": "maximum value of the whole data set"
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "mean",
        "description": "average value of the whole data set"
      },
      {
        "nullable": null,
        "types": [
          "Number",
          "undefined"
        ],
        "spread": false,
        "optional": false,
        "name": "rms",
        "description": "sigma value of the whole data set"
      }
    ]
  },
  {
    "__docId__": 3666,
    "kind": "member",
    "name": "_min",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_min",
    "access": "private",
    "description": null,
    "lineNumber": 140,
    "undocument": true
  },
  {
    "__docId__": 3667,
    "kind": "member",
    "name": "_max",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_max",
    "access": "private",
    "description": null,
    "lineNumber": 141,
    "undocument": true
  },
  {
    "__docId__": 3668,
    "kind": "member",
    "name": "_mean",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_mean",
    "access": "private",
    "description": null,
    "lineNumber": 142,
    "undocument": true
  },
  {
    "__docId__": 3669,
    "kind": "member",
    "name": "_rms",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_rms",
    "access": "private",
    "description": null,
    "lineNumber": 143,
    "undocument": true
  },
  {
    "__docId__": 3670,
    "kind": "method",
    "name": "setMatrix",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#setMatrix",
    "access": "public",
    "description": "set transformation matrix",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": false,
        "name": "matrix",
        "description": "4x4 transformation matrix"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3671,
    "kind": "method",
    "name": "setAtomindex",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#setAtomindex",
    "access": "public",
    "description": "set atom indices",
    "lineNumber": 207,
    "params": [
      {
        "nullable": null,
        "types": [
          "Int32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "atomindex",
        "description": "atom indices corresponding to the cells in the 3d grid"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3672,
    "kind": "member",
    "name": "atomindex",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#atomindex",
    "access": "public",
    "description": null,
    "lineNumber": 208,
    "undocument": true
  },
  {
    "__docId__": 3673,
    "kind": "method",
    "name": "getBox",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getBox",
    "access": "public",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 3674,
    "kind": "method",
    "name": "_getBox",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#_getBox",
    "access": "private",
    "description": null,
    "lineNumber": 224,
    "undocument": true
  },
  {
    "__docId__": 3675,
    "kind": "member",
    "name": "__box",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#__box",
    "access": "private",
    "description": null,
    "lineNumber": 227,
    "undocument": true
  },
  {
    "__docId__": 3676,
    "kind": "method",
    "name": "_makeSurface",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#_makeSurface",
    "access": "private",
    "description": null,
    "lineNumber": 232,
    "undocument": true
  },
  {
    "__docId__": 3677,
    "kind": "method",
    "name": "getSurface",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getSurface",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "undocument": true
  },
  {
    "__docId__": 3678,
    "kind": "member",
    "name": "volsurf",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#volsurf",
    "access": "public",
    "description": null,
    "lineNumber": 249,
    "undocument": true
  },
  {
    "__docId__": 3679,
    "kind": "method",
    "name": "getSurfaceWorker",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getSurfaceWorker",
    "access": "public",
    "description": null,
    "lineNumber": 262,
    "undocument": true
  },
  {
    "__docId__": 3680,
    "kind": "member",
    "name": "workerPool",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#workerPool",
    "access": "public",
    "description": null,
    "lineNumber": 270,
    "undocument": true
  },
  {
    "__docId__": 3681,
    "kind": "method",
    "name": "getValueForSigma",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getValueForSigma",
    "access": "public",
    "description": null,
    "lineNumber": 311,
    "undocument": true
  },
  {
    "__docId__": 3682,
    "kind": "method",
    "name": "getSigmaForValue",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getSigmaForValue",
    "access": "public",
    "description": null,
    "lineNumber": 315,
    "undocument": true
  },
  {
    "__docId__": 3683,
    "kind": "get",
    "name": "position",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#position",
    "access": "public",
    "description": null,
    "lineNumber": 319,
    "undocument": true
  },
  {
    "__docId__": 3684,
    "kind": "member",
    "name": "_position",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_position",
    "access": "private",
    "description": null,
    "lineNumber": 339,
    "undocument": true
  },
  {
    "__docId__": 3685,
    "kind": "method",
    "name": "getDataAtomindex",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getDataAtomindex",
    "access": "public",
    "description": null,
    "lineNumber": 345,
    "undocument": true
  },
  {
    "__docId__": 3686,
    "kind": "method",
    "name": "getDataPosition",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getDataPosition",
    "access": "public",
    "description": null,
    "lineNumber": 349,
    "undocument": true
  },
  {
    "__docId__": 3687,
    "kind": "method",
    "name": "getDataColor",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getDataColor",
    "access": "public",
    "description": null,
    "lineNumber": 353,
    "undocument": true
  },
  {
    "__docId__": 3688,
    "kind": "method",
    "name": "getDataPicking",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getDataPicking",
    "access": "public",
    "description": null,
    "lineNumber": 376,
    "undocument": true
  },
  {
    "__docId__": 3689,
    "kind": "method",
    "name": "getDataSize",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#getDataSize",
    "access": "public",
    "description": null,
    "lineNumber": 381,
    "undocument": true
  },
  {
    "__docId__": 3690,
    "kind": "get",
    "name": "min",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#min",
    "access": "public",
    "description": null,
    "lineNumber": 425,
    "undocument": true
  },
  {
    "__docId__": 3692,
    "kind": "get",
    "name": "max",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#max",
    "access": "public",
    "description": null,
    "lineNumber": 432,
    "undocument": true
  },
  {
    "__docId__": 3694,
    "kind": "get",
    "name": "sum",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#sum",
    "access": "public",
    "description": null,
    "lineNumber": 439,
    "undocument": true
  },
  {
    "__docId__": 3695,
    "kind": "member",
    "name": "_sum",
    "memberof": "src/surface/volume.js~Volume",
    "static": false,
    "longname": "src/surface/volume.js~Volume#_sum",
    "access": "private",
    "description": null,
    "lineNumber": 441,
    "undocument": true
  },
  {
    "__docId__": 3696,
    "kind": "get",
    "name": "mean",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#mean",
    "access": "public",
    "description": null,
    "lineNumber": 446,
    "undocument": true
  },
  {
    "__docId__": 3698,
    "kind": "get",
    "name": "rms",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#rms",
    "access": "public",
    "description": null,
    "lineNumber": 453,
    "undocument": true
  },
  {
    "__docId__": 3700,
    "kind": "method",
    "name": "clone",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#clone",
    "access": "public",
    "description": null,
    "lineNumber": 460,
    "undocument": true
  },
  {
    "__docId__": 3701,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/surface/volume.js~Volume",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/surface/volume.js~Volume#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 480,
    "undocument": true
  },
  {
    "__docId__": 3702,
    "kind": "function",
    "name": "VolumeSurface",
    "memberof": "src/surface/volume.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/surface/volume.js~VolumeSurface",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/surface/volume.js",
    "importStyle": "{VolumeSurface}",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3703,
    "kind": "file",
    "name": "src/symmetry/assembly.js",
    "content": "/**\r\n * @file Assembly\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4, Box3 } from '../../lib/three.es6.js'\r\n\r\nimport { uniqueArray } from '../utils.js'\r\nimport Selection from '../selection/selection.js'\r\n\r\nfunction selectionFromChains (chainList) {\r\n  let sele = ''\r\n  if (chainList.length > 0) {\r\n    sele = ':' + uniqueArray(chainList).join(' OR :')\r\n  }\r\n  return new Selection(sele)\r\n}\r\n\r\n/**\r\n * Assembly of transformed parts of a {@link Structure}\r\n */\r\nclass Assembly {\r\n  /**\r\n   * @param {String} name - assembly name\r\n   */\r\n  constructor (name) {\r\n    this.name = name || ''\r\n    this.partList = []\r\n  }\r\n\r\n  get type () { return 'Assembly' }\r\n\r\n  /**\r\n   * Add transformed parts to the assembly\r\n   * @example\r\n   * var m1 = new NGL.Matrix4().set( ... );\r\n   * var m2 = new NGL.Matrix4().set( ... );\r\n   * var assembly = new NGL.Assembly( \"myAssembly\" );\r\n   * // add part that transforms chain 'A' and 'B' using matrices `m1` and `m2`\r\n   * assembly.addPart( [ m1, m2 ], [ \"A\", \"B\" ] )\r\n   *\r\n   * @param {Matrix4[]} matrixList - array of 4x4 transformation matrices\r\n   * @param {String[]} chainList - array of chain names\r\n   * @return {AssemblyPart} the added assembly part\r\n   */\r\n  addPart (matrixList, chainList) {\r\n    const part = new AssemblyPart(matrixList, chainList)\r\n    this.partList.push(part)\r\n    return part\r\n  }\r\n\r\n  _getCount (structure, methodName) {\r\n    let count = 0\r\n\r\n    this.partList.forEach(function (part) {\r\n      count += part[ methodName ](structure)\r\n    })\r\n\r\n    return count\r\n  }\r\n\r\n  /**\r\n   * Get the number of atom for a given structure\r\n   * @param  {Structure} structure - the given structure\r\n   * @return {Integer} number of atoms in the assembly\r\n   */\r\n  getAtomCount (structure) {\r\n    return this._getCount(structure, 'getAtomCount')\r\n  }\r\n\r\n  /**\r\n   * Get the number of residues for a given structure\r\n   * @param  {Structure} structure - the given structure\r\n   * @return {Integer} number of residues in the assembly\r\n   */\r\n  getResidueCount (structure) {\r\n    return this._getCount(structure, 'getResidueCount')\r\n  }\r\n\r\n  /**\r\n   * Get number of instances the assembly will produce, i.e.\r\n   * the number of transformations performed by the assembly\r\n   * @return {Integer} number of instances\r\n   */\r\n  getInstanceCount () {\r\n    let instanceCount = 0\r\n\r\n    this.partList.forEach(function (part) {\r\n      instanceCount += part.matrixList.length\r\n    })\r\n\r\n    return instanceCount\r\n  }\r\n\r\n  /**\r\n   * Determine if the assembly is the full and untransformed structure\r\n   * @param  {Structure}  structure - the given structure\r\n   * @return {Boolean} whether the assembly is identical to the structure\r\n   */\r\n  isIdentity (structure) {\r\n    if (this.partList.length !== 1) return false\r\n\r\n    const part = this.partList[ 0 ]\r\n    if (part.matrixList.length !== 1) return false\r\n\r\n    const identityMatrix = new Matrix4()\r\n    if (!identityMatrix.equals(part.matrixList[ 0 ])) return false\r\n\r\n    let structureChainList = []\r\n    structure.eachChain(function (cp) {\r\n      structureChainList.push(cp.chainname)\r\n    })\r\n    structureChainList = uniqueArray(structureChainList)\r\n    if (part.chainList.length !== structureChainList.length) return false\r\n\r\n    return true\r\n  }\r\n\r\n  getBoundingBox (structure) {\r\n    const boundingBox = new Box3()\r\n\r\n    this.partList.forEach(function (part) {\r\n      const partBox = part.getBoundingBox(structure)\r\n      boundingBox.expandByPoint(partBox.min)\r\n      boundingBox.expandByPoint(partBox.max)\r\n    })\r\n\r\n    return boundingBox\r\n  }\r\n\r\n  getCenter (structure) {\r\n    return this.getBoundingBox(structure).getCenter()\r\n  }\r\n\r\n  getSelection () {\r\n    let chainList = []\r\n    this.partList.forEach(function (part) {\r\n      chainList = chainList.concat(part.chainList)\r\n    })\r\n    return selectionFromChains(chainList)\r\n  }\r\n}\r\n\r\nclass AssemblyPart {\r\n  constructor (matrixList, chainList) {\r\n    this.matrixList = matrixList || []\r\n    this.chainList = chainList || []\r\n  }\r\n\r\n  get type () { return 'AssemblyPart' }\r\n\r\n  _getCount (structure, propertyName) {\r\n    let count = 0\r\n    const chainList = this.chainList\r\n\r\n    structure.eachChain(function (cp) {\r\n      if (chainList.length === 0 || chainList.includes(cp.chainname)) {\r\n        count += cp[ propertyName ]\r\n      }\r\n    })\r\n\r\n    return this.matrixList.length * count\r\n  }\r\n\r\n  getAtomCount (structure) {\r\n    return this._getCount(structure, 'atomCount')\r\n  }\r\n\r\n  getResidueCount (structure) {\r\n    return this._getCount(structure, 'residueCount')\r\n  }\r\n\r\n  getBoundingBox (structure) {\r\n    const partBox = new Box3()\r\n    const instanceBox = new Box3()\r\n\r\n    const selection = this.getSelection()\r\n    const structureBox = structure.getBoundingBox(selection)\r\n\r\n    this.matrixList.forEach(function (matrix) {\r\n      instanceBox.copy(structureBox).applyMatrix4(matrix)\r\n      partBox.expandByPoint(instanceBox.min)\r\n      partBox.expandByPoint(instanceBox.max)\r\n    })\r\n\r\n    return partBox\r\n  }\r\n\r\n  getSelection () {\r\n    return selectionFromChains(this.chainList)\r\n  }\r\n\r\n  getView (structure) {\r\n    const selection = this.getSelection()\r\n    if (selection) {\r\n      return structure.getView(selection)\r\n    } else {\r\n      return structure\r\n    }\r\n  }\r\n\r\n  getInstanceList () {\r\n    const instanceList = []\r\n    for (let j = 0, jl = this.matrixList.length; j < jl; ++j) {\r\n      instanceList.push({\r\n        id: j + 1,\r\n        name: j,\r\n        matrix: this.matrixList[ j ]\r\n      })\r\n    }\r\n    return instanceList\r\n  }\r\n}\r\n\r\nexport default Assembly\r\n",
    "static": true,
    "longname": "D:/nglLib/src/symmetry/assembly.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3704,
    "kind": "function",
    "name": "selectionFromChains",
    "memberof": "src/symmetry/assembly.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/symmetry/assembly.js~selectionFromChains",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/symmetry/assembly.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3705,
    "kind": "class",
    "name": "AssemblyPart",
    "memberof": "src/symmetry/assembly.js",
    "static": true,
    "longname": "src/symmetry/assembly.js~AssemblyPart",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/symmetry/assembly.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 3706,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 146,
    "undocument": true
  },
  {
    "__docId__": 3707,
    "kind": "member",
    "name": "matrixList",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#matrixList",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 3708,
    "kind": "member",
    "name": "chainList",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#chainList",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true
  },
  {
    "__docId__": 3709,
    "kind": "get",
    "name": "type",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#type",
    "access": "public",
    "description": null,
    "lineNumber": 151,
    "undocument": true
  },
  {
    "__docId__": 3710,
    "kind": "method",
    "name": "_getCount",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#_getCount",
    "access": "private",
    "description": null,
    "lineNumber": 153,
    "undocument": true
  },
  {
    "__docId__": 3711,
    "kind": "method",
    "name": "getAtomCount",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getAtomCount",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 3712,
    "kind": "method",
    "name": "getResidueCount",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getResidueCount",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 3713,
    "kind": "method",
    "name": "getBoundingBox",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getBoundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 3714,
    "kind": "method",
    "name": "getSelection",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getSelection",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 3715,
    "kind": "method",
    "name": "getView",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getView",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 3716,
    "kind": "method",
    "name": "getInstanceList",
    "memberof": "src/symmetry/assembly.js~AssemblyPart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~AssemblyPart#getInstanceList",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true
  },
  {
    "__docId__": 3717,
    "kind": "class",
    "name": "Assembly",
    "memberof": "src/symmetry/assembly.js",
    "static": true,
    "longname": "src/symmetry/assembly.js~Assembly",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/symmetry/assembly.js",
    "importStyle": "Assembly",
    "description": "Assembly of transformed parts of a {@link Structure}",
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 3718,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "assembly name"
      }
    ]
  },
  {
    "__docId__": 3719,
    "kind": "member",
    "name": "name",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#name",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 3720,
    "kind": "member",
    "name": "partList",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#partList",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 3721,
    "kind": "get",
    "name": "type",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#type",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3722,
    "kind": "method",
    "name": "addPart",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#addPart",
    "access": "public",
    "description": "Add transformed parts to the assembly",
    "examples": [
      "var m1 = new NGL.Matrix4().set( ... );\nvar m2 = new NGL.Matrix4().set( ... );\nvar assembly = new NGL.Assembly( \"myAssembly\" );\n// add part that transforms chain 'A' and 'B' using matrices `m1` and `m2`\nassembly.addPart( [ m1, m2 ], [ \"A\", \"B\" ] )"
    ],
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "Matrix4[]"
        ],
        "spread": false,
        "optional": false,
        "name": "matrixList",
        "description": "array of 4x4 transformation matrices"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chainList",
        "description": "array of chain names"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AssemblyPart"
      ],
      "spread": false,
      "description": "the added assembly part"
    }
  },
  {
    "__docId__": 3723,
    "kind": "method",
    "name": "_getCount",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#_getCount",
    "access": "private",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 3724,
    "kind": "method",
    "name": "getAtomCount",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getAtomCount",
    "access": "public",
    "description": "Get the number of atom for a given structure",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the given structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "number of atoms in the assembly"
    }
  },
  {
    "__docId__": 3725,
    "kind": "method",
    "name": "getResidueCount",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getResidueCount",
    "access": "public",
    "description": "Get the number of residues for a given structure",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the given structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "number of residues in the assembly"
    }
  },
  {
    "__docId__": 3726,
    "kind": "method",
    "name": "getInstanceCount",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getInstanceCount",
    "access": "public",
    "description": "Get number of instances the assembly will produce, i.e.\nthe number of transformations performed by the assembly",
    "lineNumber": 86,
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "number of instances"
    }
  },
  {
    "__docId__": 3727,
    "kind": "method",
    "name": "isIdentity",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#isIdentity",
    "access": "public",
    "description": "Determine if the assembly is the full and untransformed structure",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the given structure"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "whether the assembly is identical to the structure"
    }
  },
  {
    "__docId__": 3728,
    "kind": "method",
    "name": "getBoundingBox",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getBoundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 120,
    "undocument": true
  },
  {
    "__docId__": 3729,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getCenter",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true
  },
  {
    "__docId__": 3730,
    "kind": "method",
    "name": "getSelection",
    "memberof": "src/symmetry/assembly.js~Assembly",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/assembly.js~Assembly#getSelection",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true
  },
  {
    "__docId__": 3731,
    "kind": "file",
    "name": "src/symmetry/symmetry-constants.js",
    "content": "/**\r\n * @file Symmetry Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nvar SymOpCode = {\r\n  ' ': 'X',\r\n  '!': 'Y',\r\n  '#': 'Z',\r\n  '$': '-X',\r\n  '%': '-Y',\r\n  '&': '-Z',\r\n  \"'\": 'Y+1/2',\r\n  '(': '1/2+X',\r\n  ')': '1/2+Y',\r\n  '*': '1/2-X',\r\n  '+': '1/2+Z',\r\n  ',': '1/2-Y',\r\n  '-': '1/2-Z',\r\n  '.': 'X+1/2',\r\n  '/': 'Z+1/2',\r\n  '0': '-X+1/2',\r\n  '1': '-Y+1/2',\r\n  '2': '-Z+1/2',\r\n  '3': '1/4+X',\r\n  '4': '1/4-Y',\r\n  '5': '1/4+Z',\r\n  '6': '1/4-X',\r\n  '7': '1/4+Y',\r\n  '8': '3/4-Y',\r\n  '9': '3/4+Z',\r\n  ':': '3/4+Y',\r\n  ';': '3/4+X',\r\n  '<': '3/4-X',\r\n  '=': '1/4-Z',\r\n  '>': '3/4-Z',\r\n  '?': 'X-Y',\r\n  '@': 'Y-X',\r\n  'A': 'Z+1/3',\r\n  'B': 'Z+2/3',\r\n  'C': 'X+2/3',\r\n  'D': 'Y+1/3',\r\n  'E': '-Y+2/3',\r\n  'F': 'X-Y+1/3',\r\n  'G': 'Y-X+2/3',\r\n  'H': '-X+1/3',\r\n  'I': 'X+1/3',\r\n  'J': 'Y+2/3',\r\n  'K': '-Y+1/3',\r\n  'L': 'X-Y+2/3',\r\n  'M': 'Y-X+1/3',\r\n  'N': '-X+2/3',\r\n  'O': '2/3+X',\r\n  'P': '1/3+Y',\r\n  'Q': '1/3+Z',\r\n  'R': '2/3-Y',\r\n  'S': '1/3+X-Y',\r\n  'T': '2/3+Y-X',\r\n  'U': '1/3-X',\r\n  'V': '2/3-X',\r\n  'W': '1/3-Y',\r\n  'X': '1/3-Z',\r\n  'Y': '2/3+Y',\r\n  'Z': '1/3+Y-X',\r\n  '[': '2/3+X-Y',\r\n  ']': '1/3+X',\r\n  '^': '2/3+Z',\r\n  '_': '2/3-Z',\r\n  '`': '5/6+Z',\r\n  'a': '1/6+Z',\r\n  'b': '5/6-Z',\r\n  'c': '1/6-Z',\r\n  'd': 'Z+5/6',\r\n  'e': 'Z+1/6',\r\n  'f': 'Z+1/4',\r\n  'g': '+Y'\r\n}\r\n\r\n// encoded, originally from CCP4 symop.lib\r\nvar EncodedSymOp = {\r\n  'P 1': ' !#',\r\n  'P -1': ' !#$%&',\r\n  'P 1 2 1': ' !#$!&',\r\n  'P 1 21 1': \" !#$'&\",\r\n  'C 1 2 1': ' !#$!&()#*)&',\r\n  'P 1 m 1': ' !# %#',\r\n  'P 1 c 1': ' !# %+',\r\n  'C 1 m 1': ' !# %#()#(,#',\r\n  'C 1 c 1': ' !# %+()#(,+',\r\n  'P 1 2/m 1': ' !# %#$!&$%&',\r\n  'P 1 21/m 1': ' !#$)&$%& ,#',\r\n  'C 1 2/m 1': ' !# %#$!&$%&()#(,#*)&*,&',\r\n  'P 1 2/c 1': ' !#$!-$%& %+',\r\n  'P 1 21/c 1': ' !#$%&$)- ,+',\r\n  'C 1 2/c 1': ' !#$!-$%& %+()#*)-*,&(,+',\r\n  'P 2 2 2': ' !#$%#$!& %&',\r\n  'P 2 2 21': ' !#$%+$!- %&',\r\n  'P 21 21 2': ' !#$%#*)&(,&',\r\n  'P 21 21 21': ' !#*%+$)-(,&',\r\n  'C 2 2 21': ' !#$%+$!- %&()#*,+*)-(,&',\r\n  'C 2 2 2': ' !#$%#$!& %&()#*,#*)&(,&',\r\n  'F 2 2 2': ' !#$%#$!& %& )+$,+$)- ,-(!+*%+*!-(%-()#*,#*)&(,&',\r\n  'I 2 2 2': \" !#$%# %&$!&.'/01/.120'2\",\r\n  'I 21 21 21': ' !#*%+$)-(,&()+$,#*!& %-',\r\n  'P m m 2': ' !#$%# %#$!#',\r\n  'P m c 21': ' !#$%+ %+$!#',\r\n  'P c c 2': ' !#$%# %+$!+',\r\n  'P m a 2': ' !#$%#(%#*!#',\r\n  'P c a 21': ' !#$%+(%#*!+',\r\n  'P n c 2': ' !#$%# ,+$)+',\r\n  'P m n 21': ' !#*%+(%+$!#',\r\n  'P b a 2': ' !#$%#(,#*)#',\r\n  'P n a 21': ' !#$%+(,#*)+',\r\n  'P n n 2': ' !#$%#(,+*)+',\r\n  'C m m 2': ' !#$%# %#$!#()#*,#(,#*)#',\r\n  'C m c 21': ' !#$%+ %+$!#()#*,+(,+*)#',\r\n  'C c c 2': ' !#$%# %+$!+()#*,#(,+*)+',\r\n  'A m m 2': ' !#$%# %#$!# )+$,+ ,+$)+',\r\n  'A b m 2': ' !#$%# ,#$)# )+$,+ %+$!+',\r\n  'A m a 2': ' !#$%#(%#*!# )+$,+(,+*)+',\r\n  'A b a 2': ' !#$%#(,#*)# )+$,+(%+*!+',\r\n  'F m m 2': ' !#$%# %#$!# )+$,+ ,+$)+(!+*%+(%+*!+()#*,#(,#*)#',\r\n  'F d d 2': ' !#$%#345675 )+$,+3896:9(!+*%+;49<79()#*,#;85<:5',\r\n  'I m m 2': ' !#$%# %#$!#()+*,+(,+*)+',\r\n  'I b a 2': ' !#$%#(,#*)#()+*,+ %+$!+',\r\n  'I m a 2': ' !#$%#(%#*!#()+*,+ ,+$)+',\r\n  'P 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#',\r\n  'P 2/n 2/n 2/n': ' !#$%#$!& %&*,-()-(,+*)+',\r\n  'P 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+',\r\n  'P 2/b 2/a 2/n': ' !#$%#$!& %&*,&()&(,#*)#',\r\n  'P 21/m 2/m 2/a': ' !#*%#$!&(%&$%&(!& %#*!#',\r\n  'P 2/n 21/n 2/a': ' !#*%#*)- ,-$%&(!&(,+$)+',\r\n  'P 2/m 2/n 21/a': ' !#*%+*!- %&$%&(!-(%+$!#',\r\n  'P 21/c 2/c 2/a': ' !#*%#$!-(%-$%&(!& %+*!+',\r\n  'P 21/b 21/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#',\r\n  'P 21/c 21/c 2/n': ' !#*,#$)-(%-$%&()& ,+*!+',\r\n  'P 2/b 21/c 21/m': ' !#$%+$)- ,&$%& !- ,+$)#',\r\n  'P 21/n 21/n 2/m': ' !#$%#*)-(,-$%& !&(,+*)+',\r\n  'P 21/m 21/m 2/n': \" !#$%#*'&.,&*,&.'& %#$!#\",\r\n  'P 21/b 2/c 21/n': ' !#*,+$!-(,&$%&()- %+*)#',\r\n  'P 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#',\r\n  'P 21/n 21/m 21/a': \" !#0%/$'&.12$%&.!2 1#0'/\",\r\n  'C 2/m 2/c 21/m': ' !#$%+$!- %&$%& !- %+$!#()#*,+*)-(,&*,&()-(,+*)#',\r\n  'C 2/m 2/c 21/a': ' !#$,+$)- %&$%& )- ,+$!#()#*%+*!-(,&*,&(!-(%+*)#',\r\n  'C 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()#*,#*)&(,&*,&()&(,#*)#',\r\n  'C 2/c 2/c 2/m': ' !#$%#$!- %-$%& !& %+$!+()#*,#*)-(,-*,&()&(,+*)+',\r\n  'C 2/m 2/m 2/a': ' !#$,#$)& %&$%& )& ,#$!#()#*%#*!&(,&*,&(!&(%#*)#',\r\n  'C 2/c 2/c 2/a': ' !#*,#$!&(,&$,-(!- ,+*!+()#$%#*)& %&*%- )-(%+$)+',\r\n  'F 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!# )+$,+$)- ,-$,- )- ,+$)+(!+*%+*!-(%-*%-(!-(%+*!+()#*,#*)&(,&*,&()&(,#*)#',\r\n  'F 2/d 2/d 2/d': ' !#$%#$!& %&64=37=345675 )+$,+$)- ,-68>3:>3896:9(!+*%+*!-(%-<4>;7>;49<79()#*,#*)&(,&<8=;:=;85<:5',\r\n  'I 2/m 2/m 2/m': ' !#$%#$!& %&$%& !& %#$!#()+*,+*)-(,-*,-()-(,+*)+',\r\n  'I 2/b 2/a 2/m': ' !#$%#*)&(,&$%& !&(,#*)#()+*,+$!- %-*,-()- %+$!+',\r\n  'I 21/b 21/c 21/a': ' !#*%+$)-(,&$%&(!- ,+*)#()+$,#*!& %-*,- )&(%#$!+',\r\n  'I 21/m 21/m 21/a': ' !#$,#$)& %&$%& )& ,#$!#()+*%+*!-(,-*,-(!-(%+*)+',\r\n  'P 4': ' !#$%#% #!$#',\r\n  'P 41': ' !#$%+% 5!$9',\r\n  'P 42': ' !#$%#% +!$+',\r\n  'P 43': ' !#$%+% 9!$5',\r\n  'I 4': ' !#$%#% #!$#()+*,+,(+)*+',\r\n  'I 41': ' !#*,+%(5)$9()+$%#, 9!*5',\r\n  'P -4': ' !#$%#!$&% &',\r\n  'I -4': ' !#$%#!$&% &()+*,+)*-,(-',\r\n  'P 4/m': ' !#$%#% #!$#$%& !&!$&% &',\r\n  'P 42/m': ' !#$%#% +!$+$%& !&!$-% -',\r\n  'P 4/n': ' !#$%#,(#)*#*,&()&!$&% &',\r\n  'P 42/n': ' !#$%#,(+)*+*,-()-!$&% &',\r\n  'I 4/m': ' !#$%#% #!$#$%& !&!$&% &()+*,+,(+)*+*,-()-)*-,(-',\r\n  'I 41/a': ' !#*,+%(5)$9$,=(!>!$&,(-()+$%#, 9!*5*%> )=)*-% &',\r\n  'P 4 2 2': ' !#$%#% #!$#$!& %&! &%$&',\r\n  'P 4 21 2': ' !#$%#,(#)*#*)&(,&! &%$&',\r\n  'P 41 2 2': ' !#$%+% 5!$9$!& %-! >%$=',\r\n  'P 41 21 2': ' !#$%+,(5)*9*)=(,>! &%$-',\r\n  'P 42 2 2': ' !#$%#% +!$+$!& %&! -%$-',\r\n  'P 42 21 2': ' !#$%#,(+)*+*)-(,-! &%$&',\r\n  'P 43 2 2': ' !#$%+% 9!$5$!& %-! =%$>',\r\n  'P 43 21 2': ' !#$%+,(9)*5*)>(,=! &%$-',\r\n  'I 4 2 2': ' !#$%#% #!$#$!& %&! &%$&()+*,+,(+)*+*)-(,-)(-,*-',\r\n  'I 41 2 2': ' !#*,+%(5)$9*!> ,=)(-%$&()+$%#, 9!*5$)=(%>! &,*-',\r\n  'P 4 m m': ' !#$%#% #!$# %#$!#%$#! #',\r\n  'P 4 b m': ' !#$%#% #!$#(,#*)#,*#)(#',\r\n  'P 42 c m': ' !#$%#% +!$+ %+$!+%$#! #',\r\n  'P 42 n m': ' !#$%#,(+)*+(,+*)+%$#! #',\r\n  'P 4 c c': ' !#$%#% #!$# %+$!+%$+! +',\r\n  'P 4 n c': ' !#$%#% #!$#(,+*)+,*+)(+',\r\n  'P 42 m c': ' !#$%#% +!$+ %#$!#%$+! +',\r\n  'P 42 b c': ' !#$%#% +!$+(,#*)#,*+)(+',\r\n  'I 4 m m': ' !#$%#% #!$# %#$!#%$#! #()+*,+,(+)*+(,+*)+,*+)(+',\r\n  'I 4 c m': ' !#$%#% #!$# %+$!+%$+! +()+*,+,(+)*+(,#*)#,*#)(#',\r\n  'I 41 m d': ' !#*,+%(5)$9 %#*)+%*5) 9()+$%#, 9!*5(,+$!#,$9!(5',\r\n  'I 41 c d': ' !#*,+%(5)$9 %+*)#%*9) 5()+$%#, 9!*5(,#$!+,$5!(9',\r\n  'P -4 2 m': ' !#$%#% &!$&$!& %&%$#! #',\r\n  'P -4 2 c': ' !#$%#% &!$&$!- %-%$+! +',\r\n  'P -4 21 m': ' !#$%#% &!$&*)&(,&,*#)(#',\r\n  'P -4 21 c': ' !#$%#% &!$&*)-(,-,*+)(+',\r\n  'P -4 m 2': ' !#$%#!$&% & %#$!#! &%$&',\r\n  'P -4 c 2': ' !#$%#% &!$& %+$!+! -%$-',\r\n  'P -4 b 2': ' !#$%#% &!$&(,#*)#)(&,*&',\r\n  'P -4 n 2': ' !#$%#% &!$&(,+*)+)(-,*-',\r\n  'I -4 m 2': ' !#$%#% &!$& %#$!#! &%$&()+*,+,(-)*-(,+*)+)(-,*-',\r\n  'I -4 c 2': ' !#$%#% &!$& %+$!+! -%$-()+*,+,(-)*-(,#*)#)(&,*&',\r\n  'I -4 2 m': ' !#$%#% &!$&$!& %&%$#! #()+*,+,(-)*-*)-(,-,*+)(+',\r\n  'I -4 2 d': ' !#$%#% &!$&*!>(%>,$9) 9()+*,+,(-)*-$)= ,=%*5!(5',\r\n  'P 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #',\r\n  'P 4/m 2/c 2/c': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +',\r\n  'P 4/n 2/b 2/m': ' !#$%#% #!$#$!& %&! &%$&*,&()&)*&,(&(,#*)#,*#)(#',\r\n  'P 4/n 2/n 2/c': ' !#$%#% #!$#$!& %&! &%$&*,-()-)*-,(-(,+*)+,*+)(+',\r\n  'P 4/m 21/b 2/m': ' !#$%#% #!$#*)&(,&)(&,*&$%& !&!$&% &(,#*)#,*#)(#',\r\n  'P 4/m 21/n 2/c': ' !#$%#% #!$#*)-(,-)(-,*-$%& !&!$&% &(,+*)+,*+)(+',\r\n  'P 4/n 21/m 2/m': ' !#$%#,(#)*#*)&(,&! &%$&*,&()&!$&% & %#$!#,*#)(#',\r\n  'P 4/n 2/c 2/c': ' !#$%#,(#)*#*)-(,-! -%$-*,&()&!$&% & %+$!+,*+)(+',\r\n  'P 42/m 2/m 2/c': ' !#$%#% +!$+$!& %&! -%$-$%& !&!$-% - %#$!#%$+! +',\r\n  'P 42/m 2/c 2/m': ' !#$%#% +!$+$!- %-! &%$&$%& !&!$-% - %+$!+%$#! #',\r\n  'P 42/n 2/b 2/c': ' !#$%#,(+)*+$!- %-)(&,*&*,-()-!$&% &(,#*)#%$+! +',\r\n  'P 42/n 2/n 2/m': ' !#$%#,(+)*+$!& %&)(-,*-*,-()-!$&% &(,+*)+%$#! #',\r\n  'P 42/m 21/b 2/c': ' !#$%#% +!$+*)&(,&)(-,*-$%& !&!$-% -(,#*)#,*+)(+',\r\n  'P 42/m 21/n 2/m': \" !#$%#,./'*/*'-.,-! &%$&$%& !&'*-,.-.,/*'/%$#! #\",\r\n  'P 42/n 21/m 2/c': ' !#$%#,(+)*+*)-(,-! &%$&*,-()-!$&% & %#$!#,*+)(+',\r\n  'P 42/n 21/c 2/m': ' !#$%#,(+)*+*)&(,&! -%$-*,-()-!$&% & %+$!+,*#)(#',\r\n  'I 4/m 2/m 2/m': ' !#$%#% #!$#$!& %&! &%$&$%& !&!$&% & %#$!#%$#! #()+*,+,(+)*+*)-(,-)(-,*-*,-()-)*-,(-(,+*)+,*+)(+',\r\n  'I 4/m 2/c 2/m': ' !#$%#% #!$#$!- %-! -%$-$%& !&!$&% & %+$!+%$+! +()+*,+,(+)*+*)&(,&)(&,*&*,-()-)*-,(-(,#*)#,*#)(#',\r\n  'I 41/a 2/m 2/d': ' !#*,+%(5)$9*!> ,=)(-%$&$,=(!>!$&,(-(,+$!#,$9!(5()+$%#, 9!*5$)=(%>! &,*-*%> )=)*-% & %#*)+%*5) 9',\r\n  'I 41/a 2/c 2/d': ' !#*,+%(5)$9*!= ,>)(&%$-$,=(!>!$&,(-(,#$!+,$5!(9()+$%#, 9!*5$)>(%=! -,*&*%> )=)*-% & %+*)#%*9) 5',\r\n  'P 3': ' !#%?#@$#',\r\n  'P 31': ' !#%?A@$B',\r\n  'P 32': ' !#%?B@$A',\r\n  'H 3': ' !#%?#@$#CDAEFAGHAIJBKLBMNB',\r\n  'R 3': ' !## !!# ',\r\n  'P -3': ' !#%?#@$#$%&!@&? &',\r\n  'H -3': ' !#%?#@$#$%&!@&? &OPQRSQTUQVWXYZX[]X]Y^W[^ZV^UR_PT_SO_',\r\n  'R -3': ' !## !!# $%&&$%%&$',\r\n  'P 3 1 2': ' !#%?#@$#%$&@!& ?&',\r\n  'P 3 2 1': ' !#%?#@$#! &?%&$@&',\r\n  'P 31 1 2': ' !#%?Q@$^%$_@!X ?&',\r\n  'P 31 2 1': ' !#%?A@$B! &?%_$@X',\r\n  'P 32 1 2': ' !#%?^@$Q%$X@!_ ?&',\r\n  'P 32 2 1': ' !#%?B@$A! &?%X$@_',\r\n  'H 3 2': ' !#%?#@$#! &?%&$@&OPQRSQTUQY]X[WXVZX]Y^W[^ZV^PO_SR_UT_',\r\n  'R 3 2': ' !## !!# %$&$&%&%$',\r\n  'P 3 m 1': ' !#%?#@$#%$#@!# ?#',\r\n  'P 3 1 m': ' !#%?#@$#! #?%#$@#',\r\n  'P 3 c 1': ' !#%?#@$#%$+@!+ ?+',\r\n  'P 3 1 c': ' !#%?#@$#! +?%+$@+',\r\n  'H 3 m': ' !#%?#@$#%$#@!# ?#OPQRSQTUQRUQTPQOSQ]Y^W[^ZV^WV^ZY^][^',\r\n  'R 3 m': ' !## !!# ! # #!#! ',\r\n  'H 3 c': ' !#%?#@$#%$+@!+ ?+OPQRSQTUQRU`TP`OS`]Y^W[^ZV^WVaZYa][a',\r\n  'R 3 c': \" !## !!# '././'/'.\",\r\n  'P -3 1 2/m': ' !#%?#@$#%$&@!& ?&$%&!@&? &! #?%#$@#',\r\n  'P -3 1 2/c': ' !#%?#@$#%$-@!- ?-$%&!@&? &! +?%+$@+',\r\n  'P -3 2/m 1': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#',\r\n  'P -3 2/c 1': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+',\r\n  'H -3 2/m': ' !#%?#@$#! &?%&$@&$%&!@&? &%$#@!# ?#OPQRSQTUQY]X[WXVZXVWXYZX[]XRUQTPQOSQ]Y^W[^ZV^PO_SR_UT_UR_PT_SO_WV^ZY^][^',\r\n  'R -3 2/m': ' !## !!# %$&$&%&%$$%&&$%%&$! # #!#! ',\r\n  'H -3 2/c': ' !#%?#@$#! -?%-$@-$%&!@&? &%$+@!+ ?+OPQRSQTUQY]b[WbVZbVWXYZX[]XRU`TP`OS`]Y^W[^ZV^POcSRcUTcUR_PT_SO_WVaZYa][a',\r\n  'R -3 2/c': \" !## !!# 102021210$%&&$%%&$'././'/'.\",\r\n  'P 6': ' !#%?#@$#$%#!@#? #',\r\n  'P 61': ' !#%?A@$B$%/!@d? e',\r\n  'P 65': ' !#%?B@$A$%/!@e? d',\r\n  'P 62': ' !#%?^@$Q$%#!@^? Q',\r\n  'P 64': ' !#%?Q@$^$%#!@Q? ^',\r\n  'P 63': ' !#%?#@$#$%+!@+? +',\r\n  'P -6': ' !#%?#@$# !&%?&@$&',\r\n  'P 6/m': ' !#%?#@$#$%#!@#? #$%&!@&? & !&%?&@$&',\r\n  'P 63/m': ' !#%?#@$#$%+!@+? +$%&!@&? & !-%?-@$-',\r\n  'P 6 2 2': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&',\r\n  'P 61 2 2': ' !#%?Q@$^$%+!@`? a! X?%&$@_%$b@!- ?c',\r\n  'P 65 2 2': ' !#%?^@$Q$%+!@a? `! _?%&$@X%$c@!- ?b',\r\n  'P 62 2 2': ' !#%?^@$Q$%#!@^? Q! _?%&$@X%$_@!& ?X',\r\n  'P 64 2 2': ' !#%?Q@$^$%#!@Q? ^! X?%&$@_%$X@!& ?_',\r\n  'P 63 2 2': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-',\r\n  'P 6 m m': ' !#%?#@$#$%#!@#? #%$#@!# ?#! #?%#$@#',\r\n  'P 6 c c': ' !#%?#@$#$%#!@#? #%$+@!+ ?+! +?%+$@+',\r\n  'P 63 c m': ' !#%?#@$#$%+!@+? +%$+@!+ ?+! #?%#$@#',\r\n  'P 63 m c': ' !#%?#@$#$%+!@+? +%$#@!# ?#! +?%+$@+',\r\n  'P -6 m 2': ' !#%?#@$# !&%?&@$&%$#@!# ?#%$&@!& ?&',\r\n  'P -6 c 2': ' !#%?#@$# !-%?-@$-%$+@!+ ?+%$&@!& ?&',\r\n  'P -6 2 m': ' !#%?#@$# !&%?&@$&! &?%&$@&! #?%#$@#',\r\n  'P -6 2 c': ' !#%?#@$# !-%?-@$-! &?%&$@&! +?%+$@+',\r\n  'P 6/m 2/m 2/m': ' !#%?#@$#$%#!@#? #! &?%&$@&%$&@!& ?&$%&!@&? & !&@$&%?&%$#@!# ?#! #?%#$@#',\r\n  'P 6/m 2/c 2/c': ' !#%?#@$#$%#!@#? #! -?%-$@-%$-@!- ?-$%&!@&? & !&@$&%?&%$+@!+ ?+! +?%+$@+',\r\n  'P 63/m 2/c 2/m': ' !#%?#@$#$%+!@+? +! -?%-$@-%$&@!& ?&$%&!@&? & !-@$-%?-%$+@!+ ?+! #?%#$@#',\r\n  'P 63/m 2/m 2/c': ' !#%?#@$#$%+!@+? +! &?%&$@&%$-@!- ?-$%&!@&? & !-@$-%?-%$#@!# ?#! +?%+$@+',\r\n  'P 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ',\r\n  'F 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%&  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ',\r\n  'I 2 3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(',\r\n  'P 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(',\r\n  'I 21 3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- ',\r\n  'P 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$',\r\n  'P 2/n -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& *,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n  'F 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-($,- )- ,+$)+&*,&()#(,#*)%-*!-(%+(!+*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(*%-(!-(%+*!+-$,- )+ ,+$),&*)&(,#()#*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- *,&()&(,#*)#-*%-(!+(%+*!,-$)- ,+ )+$',\r\n  'F 2/d -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& 64=37=345675=64=375345674=67=3453756 )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(68>3:>3896:9=<8=;:5;85<:4><7>;49;79<(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(<4>;7>;49<79>68>3:93896:8=<:=;85;:5<()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- <8=;:=;8f<:f><4>;79;49<78>6:>3893:96',\r\n  'I 2/m -3': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& $%& !& %#$!#&$%& !# %#$!%&$!& %# !#$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-(*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*',\r\n  'P 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*',\r\n  'I 21/a -3': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&($%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*()+$,#*g& %-+()#$,&*!- %)+(,#$!&*%- *,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$',\r\n  'P 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$',\r\n  'P 42 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n  'F 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$ )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(-%*-!*+%(+ +,$+)$-, -)#)*#,(&)(&,*(!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() -,$-)$+, +(#,*#)*&,(&)+!*+%(-!(-%*()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(&,*&)*#,(#(+%*+!*-%(-!+)$+, -) -,$',\r\n  'F 41 3 2': ' !#$,+*)&(%-# !+$,&*)-(%!# ,+$)&*%-(:3>46=7<98;5;58<976=43>:97<58;>:3=46 )+$%#*!-(,&#()+*%&$!- ,!+(,#*)-$%& :;=4<>765839;94<5:6>83=79:6543>7;=8<(!+*,#$)- %&+ )#$%-*!&(,)#(%+*!&$,- 73=86>:<54;935469:<=8;>7576983=:;>4<()#*%+$!& ,-+(!#*,-$)& %)+ %#$!-*,&(7;>8<=:69435398657<>4;=:5:<94;=73>86',\r\n  'I 4 3 2': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*',\r\n  'P 43 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n  'P 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<',\r\n  'I 41 3 2': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46',\r\n  'P -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ',\r\n  'F -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&%  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(+%*+!*-%(- +)$+,$-) -,#)(#,*&)*&,((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() +,$+)$-, -(#)*#,*&)(&,+!(+%*-!*-%(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(#,*#)*&,(&(+!*+%*-!(-%+) +,$-)$-, ',\r\n  'I -4 3 m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! #%$#!$&% & #!$#%$&! &%#! #%$&!$&% ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n  'P -4 3 n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,(',\r\n  'F -4 3 c': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(+,*+)*-,(-(+)*+,*-)(-,+)(+,*-)*-,( )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-() #,$#)$&, &(#!*#%*&!(&%+! +%$-!$-% (!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&(!(#%*#!*&%(& +!$+%$-! -%#) #,$&)$&, ()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- ! +%$+!$-% - #)$#,$&) &,#!(#%*&!*&%(',\r\n  'I -4 3 d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(7354<9:6>8;=357<946>:;=857394<>:6=8;()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- :;98657<=43>;9:658<=73>49:;586=7<>43',\r\n  'P 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n  'P 4/n -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$*,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'P 42/m -3 2/n': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,*$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'P 42/n -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& )(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ',\r\n  'F 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#!  )+$,+$)- ,-#()#*,&*)&(,!+(%+*!-*%-(!(-%*-!*+%(+ +,$+)$-, -)#)*#,(&)(&,*$,- )- ,+$)+&*,&()#(,#*)%-*!-(%+(!+*%*+!(+%(-!*-$-) -, +)$+,&,(&)*#,*#)((!+*%+*!-(%-+ )+$,-$)- ,)#(,#*)&*,&() -,$-)$+, +(#,*#)*&,(&)+!*+%(-!(-%**%-(!-(%+*!+-$,- )+ ,+$),&*)&(,#()#*,$+) +, -)$-*&)(&,(#)*#,-%(-!*+%*+!(()#*,#*)&(,&+(!+*%-*!-(%)+ ,+$)-$,- )(&,*&)*#,(#(+%*+!*-%(-!+)$+, -) -,$*,&()&(,#*)#-*%-(!+(%+*!,-$)- ,+ )+$,*#)(#,(&)*&*-!(-%(+!*+%-, -)$+,$+) ',\r\n  'F 4/m -3 2/cr\n  'F 41/d -3 2/mr\n  'F 41/d -3 2/cr\n  'I 4/m -3 2/m': ' !#$%#$!& %&# !#$%&$!& %!# %#$!&$%& ! &%$&!$#% # #%$#!$&% &!#!$#% &! &%$$%& !& %#$!#&$%& !# %#$!%&$!& %# !#$%$#! #% &!$&$&! &% #!$#%&% &!$#%$#! ()+*,+*)-(,-+()+*,-*)-(,)+(,+*)-*,-()(-,*-)*+,(+(+,*+)*-,(-)+)*+,(-)(-,**,-()-(,+*)+-*,-()+(,+*),-*)-(,+()+*,*+)(+,(-)*-*-)(-,(+)*+,-,(-)*+,*+)(',\r\n  'I 41/a -3 2/d': ' !#*%+$)-(,&# !+*%-$)&(,!# %+*)-$,&(:3=8<>7694;5;54697<>83=:97654;=:3>8<$%&(!- ,+*)#&$%-(!+ ,#*)%&$!-(,+ )#*4<97358;=:6>6>:;=8357<94=8;>:694<573()+$,#*!& %-+()#$,&*!- %)+(,#$!&*%- 7;>46=:<5839398<5:6=4;>75:<983>7;=46*,- )&(%#$!+-*,& )#(%+$!,-*)& %#(!+$865:;943>7<=<=73>4;9:658>43=7<5869:;',\r\n  'P 1 1 2': ' !#$%#',\r\n  'P 1 1 21': ' !#$%+',\r\n  'B 1 1 2': ' !#$%#(g+*%+',\r\n  'A 1 2 1': ' !#$!& )+$)-',\r\n  'C 1 21 1': ' !#$)&()#*!&',\r\n  'I 1 2 1': \" !#$!&.'/0'2\",\r\n  'I 1 21 1': \" !#$)&.'/0!-\",\r\n  'P 1 1 m': ' !# !&',\r\n  'P 1 1 b': ' !# )&',\r\n  'B 1 1 m': ' !# !&(!+(!-',\r\n  'B 1 1 b': ' !# )&(!+()-',\r\n  'P 1 1 2/m': ' !# !&$%#$%&',\r\n  'P 1 1 21/m': ' !#$%+$%& !-',\r\n  'B 1 1 2/m': ' !# !&$%#$%&(!+(!-*%+*%-',\r\n  'P 1 1 2/b': ' !#$,#$%& )&',\r\n  'P 1 1 21/b': ' !#$%&$,+ )-',\r\n  'B 1 1 2/b': ' !#$,#$%& )&(!+*,+*%-()-',\r\n  'P 21 2 2': ' !#$!&(%&*%#',\r\n  'P 2 21 2': ' !# ,&$)&$%#',\r\n  'P 21 21 2 (a)': \" !#*,#.%&$'&\",\r\n  'P 21 2 21': ' !#$!&(%-*%+',\r\n  'P 2 21 21': ' !# %&$)-$,+',\r\n  'C 2 2 21a)': ' !#*%+(,&$)-()#$,+ %&*!-',\r\n  'C 2 2 2a': \" !#*,#.%&$'&()#$%# ,&*!&\",\r\n  'F 2 2 2a': \" !#*,#.%&$'& '/*%/.12$!2.!/$,/ %20'2.'#$%# 1&0!&\",\r\n  'I 2 2 2a': \" !#*,#.%&$'&()+$%+*!- ,-\",\r\n  'P 21/m 21/m 2/n a': \" !#*,#$)&(%&$%&.'& ,#*!#\",\r\n  'P 42 21 2a': \" !#*,#%.+'$+$'&.%&! -,*-\",\r\n  'I 2 3a': \" !#*,#.%&$'&!# ,- '&$%/$# !-*!/$%&.%()+$%+ ,-*!-)+(%&(!-*,#*+()&$)#*,- ,\"\r\n}\r\n\r\nexport {\r\n  SymOpCode,\r\n  EncodedSymOp\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/symmetry/symmetry-constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3732,
    "kind": "variable",
    "name": "SymOpCode",
    "memberof": "src/symmetry/symmetry-constants.js",
    "static": true,
    "longname": "src/symmetry/symmetry-constants.js~SymOpCode",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/symmetry/symmetry-constants.js",
    "importStyle": "{SymOpCode}",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Symmetry Constants"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 3733,
    "kind": "variable",
    "name": "EncodedSymOp",
    "memberof": "src/symmetry/symmetry-constants.js",
    "static": true,
    "longname": "src/symmetry/symmetry-constants.js~EncodedSymOp",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/symmetry/symmetry-constants.js",
    "importStyle": "{EncodedSymOp}",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 3734,
    "kind": "file",
    "name": "src/symmetry/symmetry-utils.js",
    "content": "/**\r\n * @file Symmetry Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { Log } from '../globals.js'\r\nimport { EncodedSymOp, SymOpCode } from './symmetry-constants.js'\r\n\r\nfunction getSymmetryOperations (spacegroup) {\r\n  var encodedSymopList = EncodedSymOp[ spacegroup ]\r\n  var matrixDict = {}\r\n\r\n  if (encodedSymopList === undefined) {\r\n    console.warn(\r\n      \"getSymmetryOperations: spacegroup '\" +\r\n      spacegroup + \"' not found in symop library\"\r\n    )\r\n    return matrixDict\r\n  }\r\n\r\n  var symopList = []\r\n\r\n  for (var i = 0, il = encodedSymopList.length; i < il; i += 3) {\r\n    var symop = []\r\n    for (var j = 0; j < 3; ++j) {\r\n      symop.push(SymOpCode[ encodedSymopList[ i + j ] ])\r\n    }\r\n    symopList.push(symop)\r\n  }\r\n\r\n  var reInteger = /^[1-9]$/\r\n\r\n  symopList.forEach(function (symop) {\r\n    // console.log( \"symop\", symop );\r\n\r\n    var row = 0\r\n    var matrix = new Matrix4().set(\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 0,\r\n      0, 0, 0, 1\r\n    )\r\n    var me = matrix.elements\r\n\r\n    matrixDict[ symop ] = matrix\r\n\r\n    symop.forEach(function (elm) {\r\n      // console.log( \"row\", row );\r\n\r\n      var negate = false\r\n      var denominator = false\r\n\r\n      for (var i = 0, n = elm.length; i < n; ++i) {\r\n        var c = elm[ i ]\r\n\r\n        if (c === '-') {\r\n          negate = true\r\n        } else if (c === '+') {\r\n          negate = false\r\n        } else if (c === '/') {\r\n          denominator = true\r\n        } else if (c === 'X') {\r\n          me[ 0 + row ] = negate ? -1 : 1\r\n        } else if (c === 'Y') {\r\n          me[ 4 + row ] = negate ? -1 : 1\r\n        } else if (c === 'Z') {\r\n          me[ 8 + row ] = negate ? -1 : 1\r\n        } else if (reInteger.test(c)) {\r\n          var integer = parseInt(c)\r\n          if (denominator) {\r\n            me[ 12 + row ] /= integer\r\n          } else {\r\n            me[ 12 + row ] = integer\r\n          }\r\n        } else {\r\n          Log.warn('getSymmetryOperations: unknown token \"' + c + '\"')\r\n        }\r\n        // console.log( \"token\", c )\r\n      }\r\n\r\n      row += 1\r\n    })\r\n\r\n    // console.log( \"matrix\", me )\r\n  })\r\n\r\n  return matrixDict\r\n}\r\n\r\nexport {\r\n    getSymmetryOperations\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/symmetry/symmetry-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3735,
    "kind": "function",
    "name": "getSymmetryOperations",
    "memberof": "src/symmetry/symmetry-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/symmetry/symmetry-utils.js~getSymmetryOperations",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/symmetry/symmetry-utils.js",
    "importStyle": "{getSymmetryOperations}",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3736,
    "kind": "file",
    "name": "src/symmetry/unitcell.js",
    "content": "/**\r\n * @file Unitcell\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Color, Vector3, Matrix4 } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport { degToRad } from '../math/math-utils.js'\r\nimport {\r\n  uniformArray, uniformArray3, centerArray3\r\n} from '../math/array-utils.js'\r\nimport { UnitcellPicker } from '../utils/picker.js'\r\n\r\n/**\r\n * Unitcell class\r\n */\r\nclass Unitcell {\r\n  /**\r\n   * @param  {Object} params - unitcell parameters\r\n   * @param  {Number} params.a - length a\r\n   * @param  {Number} params.b - length b\r\n   * @param  {Number} params.c - length c\r\n   * @param  {Number} params.alpha - angle alpha\r\n   * @param  {Number} params.beta - angle beta\r\n   * @param  {Number} params.gamma - angle gamma\r\n   * @param  {String} params.spacegroup - spacegroup\r\n   * @param  {Matrix4} [params.cartToFrac] - transformation matrix from\r\n   *                                         cartesian to fractional coordinates\r\n   * @param  {Matrix4} [params.scale] - alias for `params.cartToFrac`\r\n   */\r\n  constructor (params) {\r\n    const p = params || {}\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.a = p.a || 1\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.b = p.b || 1\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.c = p.c || 1\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.alpha = p.alpha || 90\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.beta = p.beta || 90\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.gamma = p.gamma || 90\r\n\r\n    /**\r\n     * @type {String}\r\n     */\r\n    this.spacegroup = p.spacegroup || 'P 1'\r\n    /**\r\n     * @type {Matrix4}\r\n     */\r\n    this.cartToFrac = p.cartToFrac || p.scale\r\n    /**\r\n     * @type {Matrix4}\r\n     */\r\n    this.fracToCart = new Matrix4()\r\n\r\n    //\r\n\r\n    const alphaRad = degToRad(this.alpha)\r\n    const betaRad = degToRad(this.beta)\r\n    const gammaRad = degToRad(this.gamma)\r\n    const cosAlpha = Math.cos(alphaRad)\r\n    const cosBeta = Math.cos(betaRad)\r\n    const cosGamma = Math.cos(gammaRad)\r\n    const sinBeta = Math.sin(betaRad)\r\n    const sinGamma = Math.sin(gammaRad)\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    this.volume = (\r\n      this.a * this.b * this.c *\r\n      Math.sqrt(\r\n        1 - cosAlpha * cosAlpha - cosBeta * cosBeta - cosGamma * cosGamma +\r\n        2.0 * cosAlpha * cosBeta * cosGamma\r\n      )\r\n    )\r\n\r\n    //\r\n\r\n    if (this.cartToFrac === undefined) {\r\n      // https://github.com/biojava/biojava/blob/master/biojava-structure/src/main/java/org/biojava/nbio/structure/xtal/CrystalCell.java\r\n\r\n      const cStar = (this.a * this.b * sinGamma) / this.volume\r\n      const cosAlphaStar = (\r\n        (cosBeta * cosGamma - cosAlpha) / (sinBeta * sinGamma)\r\n      )\r\n\r\n      this.fracToCart.set(\r\n        this.a, 0, 0, 0,\r\n        this.b * cosGamma, this.b * sinGamma, 0, 0,\r\n        this.c * cosBeta, -this.c * sinBeta * cosAlphaStar, 1.0 / cStar, 0,\r\n        0, 0, 0, 1\r\n      ).transpose()\r\n      this.cartToFrac = new Matrix4().getInverse(this.fracToCart)\r\n    } else {\r\n      this.fracToCart.getInverse(this.cartToFrac)\r\n    }\r\n  }\r\n\r\n  getPosition (structure) {\r\n    const vertexPosition = new Float32Array(3 * 8)\r\n\r\n    const uc = structure.unitcell\r\n    const centerFrac = structure.center.clone()\r\n            .applyMatrix4(uc.cartToFrac)\r\n            .floor().multiplyScalar(2).addScalar(1)\r\n    const v = new Vector3()\r\n\r\n    let cornerOffset = 0\r\n    function addCorner (x, y, z) {\r\n      v.set(x, y, z)\r\n        .multiply(centerFrac)\r\n        .applyMatrix4(uc.fracToCart)\r\n        .toArray(vertexPosition, cornerOffset)\r\n      cornerOffset += 3\r\n    }\r\n    addCorner(0, 0, 0)\r\n    addCorner(1, 0, 0)\r\n    addCorner(0, 1, 0)\r\n    addCorner(0, 0, 1)\r\n    addCorner(1, 1, 0)\r\n    addCorner(1, 0, 1)\r\n    addCorner(0, 1, 1)\r\n    addCorner(1, 1, 1)\r\n\r\n    return vertexPosition\r\n  }\r\n\r\n  getCenter (structure) {\r\n    return centerArray3(this.getPosition(structure))\r\n  }\r\n\r\n  getData (structure, params) {\r\n    const p = params || {}\r\n    const colorValue = defaults(p.colorValue, 'orange')\r\n    const radius = defaults(p.radius, Math.cbrt(this.volume) / 200)\r\n\r\n    const c = new Color(colorValue)\r\n    const v = new Vector3()\r\n\r\n    const vertexPosition = this.getPosition(structure)\r\n    const vertexColor = uniformArray3(8, c.r, c.g, c.b)\r\n    const vertexRadius = uniformArray(8, radius)\r\n\r\n    const edgePosition1 = new Float32Array(3 * 12)\r\n    const edgePosition2 = new Float32Array(3 * 12)\r\n    const edgeColor = uniformArray3(12, c.r, c.g, c.b)\r\n    const edgeRadius = uniformArray(12, radius)\r\n\r\n    let edgeOffset = 0\r\n    function addEdge (a, b) {\r\n      v.fromArray(vertexPosition, a * 3)\r\n        .toArray(edgePosition1, edgeOffset)\r\n      v.fromArray(vertexPosition, b * 3)\r\n        .toArray(edgePosition2, edgeOffset)\r\n      edgeOffset += 3\r\n    }\r\n    addEdge(0, 1)\r\n    addEdge(0, 2)\r\n    addEdge(0, 3)\r\n    addEdge(1, 4)\r\n    addEdge(1, 5)\r\n    addEdge(2, 6)\r\n    addEdge(3, 5)\r\n    addEdge(4, 7)\r\n    addEdge(5, 7)\r\n    addEdge(2, 4)\r\n    addEdge(7, 6)\r\n    addEdge(3, 6)\r\n\r\n    const picker = new UnitcellPicker(this, structure)\r\n\r\n    return {\r\n      vertex: {\r\n        position: vertexPosition,\r\n        color: vertexColor,\r\n        radius: vertexRadius,\r\n        picking: picker\r\n      },\r\n      edge: {\r\n        position1: edgePosition1,\r\n        position2: edgePosition2,\r\n        color: edgeColor,\r\n        color2: edgeColor,\r\n        radius: edgeRadius,\r\n        picking: picker\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default Unitcell\r\n",
    "static": true,
    "longname": "D:/nglLib/src/symmetry/unitcell.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3737,
    "kind": "class",
    "name": "Unitcell",
    "memberof": "src/symmetry/unitcell.js",
    "static": true,
    "longname": "src/symmetry/unitcell.js~Unitcell",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/symmetry/unitcell.js",
    "importStyle": "Unitcell",
    "description": "Unitcell class",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 3738,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "unitcell parameters"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.a",
        "description": "length a"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.b",
        "description": "length b"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.c",
        "description": "length c"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.alpha",
        "description": "angle alpha"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.beta",
        "description": "angle beta"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "params.gamma",
        "description": "angle gamma"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "params.spacegroup",
        "description": "spacegroup"
      },
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": true,
        "name": "params.cartToFrac",
        "description": "transformation matrix from\n                                        cartesian to fractional coordinates"
      },
      {
        "nullable": null,
        "types": [
          "Matrix4"
        ],
        "spread": false,
        "optional": true,
        "name": "params.scale",
        "description": "alias for `params.cartToFrac`"
      }
    ]
  },
  {
    "__docId__": 3739,
    "kind": "member",
    "name": "a",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#a",
    "access": "public",
    "description": "",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3740,
    "kind": "member",
    "name": "b",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#b",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3741,
    "kind": "member",
    "name": "c",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#c",
    "access": "public",
    "description": "",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3742,
    "kind": "member",
    "name": "alpha",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#alpha",
    "access": "public",
    "description": "",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3743,
    "kind": "member",
    "name": "beta",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#beta",
    "access": "public",
    "description": "",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3744,
    "kind": "member",
    "name": "gamma",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#gamma",
    "access": "public",
    "description": "",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3745,
    "kind": "member",
    "name": "spacegroup",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#spacegroup",
    "access": "public",
    "description": "",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3746,
    "kind": "member",
    "name": "cartToFrac",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#cartToFrac",
    "access": "public",
    "description": "",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3747,
    "kind": "member",
    "name": "fracToCart",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#fracToCart",
    "access": "public",
    "description": "",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Matrix4"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3748,
    "kind": "member",
    "name": "volume",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#volume",
    "access": "public",
    "description": "",
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3750,
    "kind": "method",
    "name": "getPosition",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#getPosition",
    "access": "public",
    "description": null,
    "lineNumber": 119,
    "undocument": true
  },
  {
    "__docId__": 3751,
    "kind": "method",
    "name": "getCenter",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#getCenter",
    "access": "public",
    "description": null,
    "lineNumber": 148,
    "undocument": true
  },
  {
    "__docId__": 3752,
    "kind": "method",
    "name": "getData",
    "memberof": "src/symmetry/unitcell.js~Unitcell",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/symmetry/unitcell.js~Unitcell#getData",
    "access": "public",
    "description": null,
    "lineNumber": 152,
    "undocument": true
  },
  {
    "__docId__": 3753,
    "kind": "file",
    "name": "src/trajectory/frames-trajectory.js",
    "content": "/**\r\n * @file Frames Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\nimport Trajectory from './trajectory.js'\r\n\r\n/**\r\n * Frames trajectory class. Gets data from a frames object.\r\n */\r\nclass FramesTrajectory extends Trajectory {\r\n  constructor (frames, structure, params) {\r\n    const p = params || {}\r\n    p.timeOffset = defaults(p.timeOffset, frames.timeOffset)\r\n    p.deltaTime = defaults(p.deltaTime, frames.deltaTime)\r\n\r\n    super('', structure, p)\r\n\r\n    this.name = frames.name\r\n    this.path = frames.path\r\n\r\n    this.frames = frames.coordinates\r\n    this.boxes = frames.boxes\r\n\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'frames' }\r\n\r\n  _makeAtomIndices () {\r\n    if (this.structure.type === 'StructureView') {\r\n      this.atomIndices = this.structure.getAtomIndices()\r\n    } else {\r\n      this.atomIndices = null\r\n    }\r\n  }\r\n\r\n  _loadFrame (i, callback) {\r\n    let coords\r\n    const frame = this.frames[ i ]\r\n\r\n    if (this.atomIndices) {\r\n      const indices = this.atomIndices\r\n      const m = indices.length\r\n\r\n      coords = new Float32Array(m * 3)\r\n\r\n      for (let j = 0; j < m; ++j) {\r\n        const j3 = j * 3\r\n        const idx3 = indices[ j ] * 3\r\n\r\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\r\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\r\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\r\n      }\r\n    } else {\r\n      coords = new Float32Array(frame)\r\n    }\r\n\r\n    const box = this.boxes[ i ]\r\n    const frameCount = this.frames.length\r\n\r\n    this._process(i, box, coords, frameCount)\r\n\r\n    if (typeof callback === 'function') {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    if (this.frames) {\r\n      this._setFrameCount(this.frames.length)\r\n    }\r\n  }\r\n\r\n  getPath (index, callback) {\r\n    const n = this.frameCount\r\n    const k = index * 3\r\n\r\n    const path = new Float32Array(n * 3)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const j = 3 * i\r\n      const f = this.frames[ i ]\r\n\r\n      path[ j + 0 ] = f[ k + 0 ]\r\n      path[ j + 1 ] = f[ k + 1 ]\r\n      path[ j + 2 ] = f[ k + 2 ]\r\n    }\r\n\r\n    callback(path)\r\n  }\r\n}\r\n\r\nexport default FramesTrajectory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/frames-trajectory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3754,
    "kind": "class",
    "name": "FramesTrajectory",
    "memberof": "src/trajectory/frames-trajectory.js",
    "static": true,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/frames-trajectory.js",
    "importStyle": "FramesTrajectory",
    "description": "Frames trajectory class. Gets data from a frames object.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/trajectory/trajectory.js~Trajectory"
    ]
  },
  {
    "__docId__": 3755,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3756,
    "kind": "member",
    "name": "name",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#name",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3757,
    "kind": "member",
    "name": "path",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#path",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3758,
    "kind": "member",
    "name": "frames",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#frames",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 3759,
    "kind": "member",
    "name": "boxes",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#boxes",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 3760,
    "kind": "get",
    "name": "type",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#type",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 3761,
    "kind": "method",
    "name": "_makeAtomIndices",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#_makeAtomIndices",
    "access": "private",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3762,
    "kind": "member",
    "name": "atomIndices",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#atomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 3764,
    "kind": "method",
    "name": "_loadFrame",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#_loadFrame",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 3765,
    "kind": "method",
    "name": "_loadFrameCount",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#_loadFrameCount",
    "access": "private",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 3766,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/trajectory/frames-trajectory.js~FramesTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames-trajectory.js~FramesTrajectory#getPath",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "undocument": true
  },
  {
    "__docId__": 3767,
    "kind": "file",
    "name": "src/trajectory/frames.js",
    "content": "/**\r\n * @file Frames\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nclass Frames {\r\n  constructor (name, path) {\r\n    this.name = name\r\n    this.path = path\r\n\r\n    this.coordinates = []\r\n    this.boxes = []\r\n    this.times = []\r\n\r\n    this.timeOffset = 0\r\n    this.deltaTime = 1\r\n  }\r\n\r\n  get type () { return 'Frames' }\r\n}\r\n\r\nexport default Frames\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/frames.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3768,
    "kind": "class",
    "name": "Frames",
    "memberof": "src/trajectory/frames.js",
    "static": true,
    "longname": "src/trajectory/frames.js~Frames",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/trajectory/frames.js",
    "importStyle": "Frames",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Frames"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 3769,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/frames.js~Frames",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true
  },
  {
    "__docId__": 3770,
    "kind": "member",
    "name": "name",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#name",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 3771,
    "kind": "member",
    "name": "path",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#path",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 3772,
    "kind": "member",
    "name": "coordinates",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#coordinates",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 3773,
    "kind": "member",
    "name": "boxes",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#boxes",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3774,
    "kind": "member",
    "name": "times",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#times",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3775,
    "kind": "member",
    "name": "timeOffset",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#timeOffset",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 3776,
    "kind": "member",
    "name": "deltaTime",
    "memberof": "src/trajectory/frames.js~Frames",
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#deltaTime",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 3777,
    "kind": "get",
    "name": "type",
    "memberof": "src/trajectory/frames.js~Frames",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/frames.js~Frames#type",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3778,
    "kind": "file",
    "name": "src/trajectory/remote-trajectory.js",
    "content": "/**\r\n * @file Remote Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, DatasourceRegistry } from '../globals.js'\r\nimport Trajectory from './trajectory.js'\r\n\r\n/**\r\n * Remote trajectory class. Gets data from an MDsrv instance.\r\n */\r\nclass RemoteTrajectory extends Trajectory {\r\n  constructor (trajPath, structure, params) {\r\n    super(trajPath, structure, params)\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'remote' }\r\n\r\n  _makeAtomIndices () {\r\n    const atomIndices = []\r\n\r\n    if (this.structure.type === 'StructureView') {\r\n      const indices = this.structure.getAtomIndices()\r\n      const n = indices.length\r\n\r\n      let p = indices[ 0 ]\r\n      let q = indices[ 0 ]\r\n\r\n      for (let i = 1; i < n; ++i) {\r\n        const r = indices[ i ]\r\n\r\n        if (q + 1 < r) {\r\n          atomIndices.push([ p, q + 1 ])\r\n          p = r\r\n        }\r\n\r\n        q = r\r\n      }\r\n\r\n      atomIndices.push([ p, q + 1 ])\r\n    } else {\r\n      atomIndices.push([ 0, this.atomCount ])\r\n    }\r\n\r\n    this.atomIndices = atomIndices\r\n  }\r\n\r\n  _loadFrame (i, callback) {\r\n    // TODO implement max frameCache size, re-use arrays\r\n\r\n    const request = new window.XMLHttpRequest()\r\n\r\n    const ds = DatasourceRegistry.trajectory\r\n    const url = ds.getFrameUrl(this.trajPath, i)\r\n    const params = ds.getFrameParams(this.trajPath, this.atomIndices)\r\n\r\n    request.open('POST', url, true)\r\n    request.responseType = 'arraybuffer'\r\n    request.setRequestHeader(\r\n      'Content-type', 'application/x-www-form-urlencoded'\r\n    )\r\n\r\n    request.addEventListener('load', () => {\r\n      const arrayBuffer = request.response\r\n      if (!arrayBuffer) {\r\n        Log.error(`empty arrayBuffer for '${url}'`)\r\n        return\r\n      }\r\n\r\n      const frameCount = new Int32Array(arrayBuffer, 0, 1)[ 0 ]\r\n      // const time = new Float32Array( arrayBuffer, 1 * 4, 1 )[ 0 ];\r\n      const box = new Float32Array(arrayBuffer, 2 * 4, 9)\r\n      const coords = new Float32Array(arrayBuffer, 11 * 4)\r\n\r\n      this._process(i, box, coords, frameCount)\r\n      if (typeof callback === 'function') {\r\n        callback()\r\n      }\r\n    }, false)\r\n\r\n    request.send(params)\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    const request = new window.XMLHttpRequest()\r\n\r\n    const ds = DatasourceRegistry.trajectory\r\n    const url = ds.getCountUrl(this.trajPath)\r\n\r\n    request.open('GET', url, true)\r\n    request.addEventListener('load', () => {\r\n      this._setFrameCount(parseInt(request.response))\r\n    }, false)\r\n    request.send(null)\r\n  }\r\n\r\n  getPath (index, callback) {\r\n    if (this.pathCache[ index ]) {\r\n      callback(this.pathCache[ index ])\r\n      return\r\n    }\r\n\r\n    Log.time('loadPath')\r\n\r\n    const request = new window.XMLHttpRequest()\r\n\r\n    const ds = DatasourceRegistry.trajectory\r\n    const url = ds.getPathUrl(this.trajPath, index)\r\n    const params = ''\r\n\r\n    request.open('POST', url, true)\r\n    request.responseType = 'arraybuffer'\r\n    request.setRequestHeader(\r\n      'Content-type', 'application/x-www-form-urlencoded'\r\n    )\r\n\r\n    request.addEventListener('load', () => {\r\n      Log.timeEnd('loadPath')\r\n\r\n      const arrayBuffer = request.response\r\n      if (!arrayBuffer) {\r\n        Log.error(\"empty arrayBuffer for '\" + url + \"'\")\r\n        return\r\n      }\r\n\r\n      const path = new Float32Array(arrayBuffer)\r\n      // Log.log( path )\r\n      this.pathCache[ index ] = path\r\n      callback(path)\r\n    }, false)\r\n\r\n    request.send(params)\r\n  }\r\n}\r\n\r\nexport default RemoteTrajectory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/remote-trajectory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3779,
    "kind": "class",
    "name": "RemoteTrajectory",
    "memberof": "src/trajectory/remote-trajectory.js",
    "static": true,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/remote-trajectory.js",
    "importStyle": "RemoteTrajectory",
    "description": "Remote trajectory class. Gets data from an MDsrv instance.",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "src/trajectory/trajectory.js~Trajectory"
    ]
  },
  {
    "__docId__": 3780,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 3781,
    "kind": "get",
    "name": "type",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#type",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 3782,
    "kind": "method",
    "name": "_makeAtomIndices",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#_makeAtomIndices",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 3783,
    "kind": "member",
    "name": "atomIndices",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#atomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 3784,
    "kind": "method",
    "name": "_loadFrame",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#_loadFrame",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 3785,
    "kind": "method",
    "name": "_loadFrameCount",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#_loadFrameCount",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 3786,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/trajectory/remote-trajectory.js~RemoteTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/remote-trajectory.js~RemoteTrajectory#getPath",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 3787,
    "kind": "file",
    "name": "src/trajectory/structure-trajectory.js",
    "content": "/**\r\n * @file Structure Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Trajectory from './trajectory.js'\r\n\r\n/**\r\n * Structure trajectory class. Gets data from a structure object.\r\n */\r\nclass StructureTrajectory extends Trajectory {\r\n  constructor (trajPath, structure, params) {\r\n    super('', structure, params)\r\n    this._init(structure)\r\n  }\r\n\r\n  get type () { return 'structure' }\r\n\r\n  _makeAtomIndices () {\r\n    if (this.structure.atomSet.getSize() < this.structure.atomStore.count) {\r\n      this.atomIndices = this.structure.getAtomIndices()\r\n    } else {\r\n      this.atomIndices = null\r\n    }\r\n  }\r\n\r\n  _loadFrame (i, callback) {\r\n    let coords\r\n    const structure = this.structure\r\n    const frame = structure.frames[ i ]\r\n\r\n    if (this.atomIndices) {\r\n      const indices = this.atomIndices\r\n      const m = indices.length\r\n\r\n      coords = new Float32Array(m * 3)\r\n\r\n      for (let j = 0; j < m; ++j) {\r\n        const j3 = j * 3\r\n        const idx3 = indices[ j ] * 3\r\n\r\n        coords[ j3 + 0 ] = frame[ idx3 + 0 ]\r\n        coords[ j3 + 1 ] = frame[ idx3 + 1 ]\r\n        coords[ j3 + 2 ] = frame[ idx3 + 2 ]\r\n      }\r\n    } else {\r\n      coords = new Float32Array(frame)\r\n    }\r\n\r\n    const box = structure.boxes[ i ]\r\n    const frameCount = structure.frames.length\r\n\r\n    this._process(i, box, coords, frameCount)\r\n\r\n    if (typeof callback === 'function') {\r\n      callback()\r\n    }\r\n  }\r\n\r\n  _loadFrameCount () {\r\n    this._setFrameCount(this.structure.frames.length)\r\n  }\r\n\r\n  getPath (index, callback) {\r\n    const n = this.frameCount\r\n    const k = index * 3\r\n\r\n    const path = new Float32Array(n * 3)\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      const j = 3 * i\r\n      const f = this.structure.frames[ i ]\r\n\r\n      path[ j + 0 ] = f[ k + 0 ]\r\n      path[ j + 1 ] = f[ k + 1 ]\r\n      path[ j + 2 ] = f[ k + 2 ]\r\n    }\r\n\r\n    callback(path)\r\n  }\r\n}\r\n\r\nexport default StructureTrajectory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/structure-trajectory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3788,
    "kind": "class",
    "name": "StructureTrajectory",
    "memberof": "src/trajectory/structure-trajectory.js",
    "static": true,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/structure-trajectory.js",
    "importStyle": "StructureTrajectory",
    "description": "Structure trajectory class. Gets data from a structure object.",
    "lineNumber": 12,
    "interface": false,
    "extends": [
      "src/trajectory/trajectory.js~Trajectory"
    ]
  },
  {
    "__docId__": 3789,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 3790,
    "kind": "get",
    "name": "type",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#type",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 3791,
    "kind": "method",
    "name": "_makeAtomIndices",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#_makeAtomIndices",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 3792,
    "kind": "member",
    "name": "atomIndices",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#atomIndices",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 3794,
    "kind": "method",
    "name": "_loadFrame",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#_loadFrame",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 3795,
    "kind": "method",
    "name": "_loadFrameCount",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#_loadFrameCount",
    "access": "private",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 3796,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/trajectory/structure-trajectory.js~StructureTrajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/structure-trajectory.js~StructureTrajectory#getPath",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 3797,
    "kind": "file",
    "name": "src/trajectory/trajectory-player.js",
    "content": "/**\r\n * @file Trajectory Player\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\n\r\n/**\r\n * Trajectory player parameter object.\r\n * @typedef {Object} TrajectoryPlayerParameters - parameters\r\n *\r\n * @property {Integer} step - how many frames to skip when playing\r\n * @property {Integer} timeout - how many milliseconds to wait between playing frames\r\n * @property {Integer} start - first frame to play\r\n * @property {Integer} end - last frame to play\r\n * @property {String} interpolateType - one of \"\" (empty string), \"linear\" or \"spline\"\r\n * @property {Integer} interpolateStep - window size used for interpolation\r\n * @property {String} mode - either \"loop\" or \"once\"\r\n * @property {String} direction - either \"forward\", \"backward\" or \"bounce\"\r\n */\r\n\r\n/**\r\n * Trajectory player for animating coordinate frames\r\n * @example\r\n * var player = new TrajectoryPlayer(trajectory, {step: 1, timeout: 50});\r\n * player.play();\r\n */\r\nclass TrajectoryPlayer {\r\n  /**\r\n   * make trajectory player\r\n   * @param {Trajectory} traj - the trajectory\r\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n   */\r\n  constructor (traj, params) {\r\n    this.signals = {\r\n      startedRunning: new Signal(),\r\n      haltedRunning: new Signal()\r\n    }\r\n\r\n    traj.signals.playerChanged.add(function (player) {\r\n      if (player !== this) {\r\n        this.pause()\r\n      }\r\n    }, this)\r\n\r\n    const p = Object.assign({}, params)\r\n    const n = defaults(traj.frameCount, 1)\r\n\r\n    this.traj = traj\r\n    this.start = defaults(p.start, 0)\r\n    this.end = Math.min(defaults(p.end, n - 1), n - 1)\r\n\r\n    this.step = defaults(p.step, Math.ceil((n + 1) / 100))\r\n    this.timeout = defaults(p.timeout, 50)\r\n    this.interpolateType = defaults(p.interpolateType, '')\r\n    this.interpolateStep = defaults(p.interpolateStep, 5)\r\n    this.mode = defaults(p.mode, 'loop')  // loop, once\r\n    this.direction = defaults(p.direction, 'forward')  // forward, backward, bounce\r\n\r\n    this._run = false\r\n    this._previousTime = 0\r\n    this._currentTime = 0\r\n    this._currentStep = 1\r\n    this._currentFrame = this.start\r\n    this._direction = this.direction === 'bounce' ? 'forward' : this.direction\r\n\r\n    traj.signals.countChanged.add(function (n) {\r\n      this.end = Math.min(defaults(this.end, n - 1), n - 1)\r\n    }, this)\r\n\r\n    this._animate = this._animate.bind(this)\r\n  }\r\n\r\n  get isRunning () { return this._run }\r\n\r\n  /**\r\n   * set player parameters\r\n   * @param {TrajectoryPlayerParameters} [params] - parameter object\r\n   */\r\n  setParameters (params) {\r\n    const p = Object.assign({}, params)\r\n\r\n    if (p.start !== undefined) this.start = p.start\r\n    if (p.end !== undefined) this.end = p.end\r\n\r\n    if (p.step !== undefined) this.step = p.step\r\n    if (p.timeout !== undefined) this.timeout = p.timeout\r\n    if (p.interpolateType !== undefined) this.interpolateType = p.interpolateType\r\n    if (p.interpolateStep !== undefined) this.interpolateStep = p.interpolateStep\r\n    if (p.mode !== undefined) this.mode = p.mode\r\n\r\n    if (p.direction !== undefined) {\r\n      this.direction = p.direction\r\n      if (this.direction !== 'bounce') {\r\n        this._direction = this.direction\r\n      }\r\n    }\r\n  }\r\n\r\n  _animate () {\r\n    if (!this._run) return\r\n\r\n    this._currentTime = window.performance.now()\r\n    const dt = this._currentTime - this._previousTime\r\n    const step = this.interpolateType ? this.interpolateStep : 1\r\n    const timeout = this.timeout / step\r\n    const traj = this.traj\r\n\r\n    if (traj && traj.frameCount && !traj.inProgress && dt >= timeout) {\r\n      if (this.interpolateType) {\r\n        if (this._currentStep > this.interpolateStep) {\r\n          this._currentStep = 1\r\n        }\r\n        if (this._currentStep === 1) {\r\n          this._currentFrame = this._nextInterpolated()\r\n        }\r\n        if (traj.hasFrame(this._currentFrame)) {\r\n          this._currentStep += 1\r\n          const t = this._currentStep / (this.interpolateStep + 1)\r\n          traj.setFrameInterpolated(\r\n            ...this._currentFrame, t, this.interpolateType\r\n          )\r\n          this._previousTime = this._currentTime\r\n        } else {\r\n          traj.loadFrame(this._currentFrame)\r\n        }\r\n      } else {\r\n        const i = this._next()\r\n        if (traj.hasFrame(i)) {\r\n          traj.setFrame(i)\r\n          this._previousTime = this._currentTime\r\n        } else {\r\n          traj.loadFrame(i)\r\n        }\r\n      }\r\n    }\r\n\r\n    window.requestAnimationFrame(this._animate)\r\n  }\r\n\r\n  _next () {\r\n    let i\r\n\r\n    if (this._direction === 'forward') {\r\n      i = this.traj.currentFrame + this.step\r\n    } else {\r\n      i = this.traj.currentFrame - this.step\r\n    }\r\n\r\n    if (i > this.end || i < this.start) {\r\n      if (this.direction === 'bounce') {\r\n        if (this._direction === 'forward') {\r\n          this._direction = 'backward'\r\n        } else {\r\n          this._direction = 'forward'\r\n        }\r\n      }\r\n\r\n      if (this.mode === 'once') {\r\n        this.pause()\r\n\r\n        if (this.direction === 'forward') {\r\n          i = this.end\r\n        } else if (this.direction === 'backward') {\r\n          i = this.start\r\n        } else {\r\n          if (this._direction === 'forward') {\r\n            i = this.start\r\n          } else {\r\n            i = this.end\r\n          }\r\n        }\r\n      } else {\r\n        if (this._direction === 'forward') {\r\n          i = this.start\r\n          if (this.interpolateType) {\r\n            i = Math.min(this.end, i + this.step)\r\n          }\r\n        } else {\r\n          i = this.end\r\n          if (this.interpolateType) {\r\n            i = Math.max(this.start, i - this.step)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return i\r\n  }\r\n\r\n  _nextInterpolated () {\r\n    const i = this._next()\r\n    let ip, ipp, ippp\r\n\r\n    if (this._direction === 'forward') {\r\n      ip = Math.max(this.start, i - this.step)\r\n      ipp = Math.max(this.start, i - 2 * this.step)\r\n      ippp = Math.max(this.start, i - 3 * this.step)\r\n    } else {\r\n      ip = Math.min(this.end, i + this.step)\r\n      ipp = Math.min(this.end, i + 2 * this.step)\r\n      ippp = Math.min(this.end, i + 3 * this.step)\r\n    }\r\n\r\n    return [i, ip, ipp, ippp]\r\n  }\r\n\r\n  /**\r\n   * toggle between playing and pausing the animation\r\n   * @return {undefined}\r\n   */\r\n  toggle () {\r\n    if (this._run) {\r\n      this.pause()\r\n    } else {\r\n      this.play()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * start the animation\r\n   * @return {undefined}\r\n   */\r\n  play () {\r\n    if (!this._run) {\r\n      if (this.traj.player !== this) {\r\n        this.traj.setPlayer(this)\r\n      }\r\n      this._currentStep = 1\r\n\r\n      const frame = this.traj.currentFrame\r\n\r\n      // snap to the grid implied by this.step division and multiplication\r\n      // thus minimizing cache misses\r\n      let i = Math.ceil(frame / this.step) * this.step\r\n      // wrap when restarting from the limit (i.e. end or start)\r\n      if (this.direction === 'forward' && frame >= this.end) {\r\n        i = this.start\r\n      } else if (this.direction === 'backward' && frame <= this.start) {\r\n        i = this.end\r\n      }\r\n\r\n      this.traj.setFrame(i)\r\n\r\n      this._run = true\r\n      this._animate()\r\n      this.signals.startedRunning.dispatch()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * pause the animation\r\n   * @return {undefined}\r\n   */\r\n  pause () {\r\n    this._run = false\r\n    this.signals.haltedRunning.dispatch()\r\n  }\r\n\r\n  /**\r\n   * stop the animation (pause and go to start-frame)\r\n   * @return {undefined}\r\n   */\r\n  stop () {\r\n    this.pause()\r\n    this.traj.setFrame(this.start)\r\n  }\r\n}\r\n\r\nexport default TrajectoryPlayer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/trajectory-player.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3798,
    "kind": "typedef",
    "name": "TrajectoryPlayerParameters",
    "memberof": "src/trajectory/trajectory-player.js",
    "static": true,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayerParameters",
    "access": "public",
    "description": "Trajectory player parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "step",
        "description": "how many frames to skip when playing"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "timeout",
        "description": "how many milliseconds to wait between playing frames"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "first frame to play"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "last frame to play"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "interpolateType",
        "description": "one of \"\" (empty string), \"linear\" or \"spline\""
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "interpolateStep",
        "description": "window size used for interpolation"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": "either \"loop\" or \"once\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "direction",
        "description": "either \"forward\", \"backward\" or \"bounce\""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectoryPlayerParameters"
    }
  },
  {
    "__docId__": 3799,
    "kind": "class",
    "name": "TrajectoryPlayer",
    "memberof": "src/trajectory/trajectory-player.js",
    "static": true,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/trajectory-player.js",
    "importStyle": "TrajectoryPlayer",
    "description": "Trajectory player for animating coordinate frames",
    "examples": [
      "var player = new TrajectoryPlayer(trajectory, {step: 1, timeout: 50});\nplayer.play();"
    ],
    "lineNumber": 31,
    "interface": false
  },
  {
    "__docId__": 3800,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#constructor",
    "access": "public",
    "description": "make trajectory player",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "Trajectory"
        ],
        "spread": false,
        "optional": false,
        "name": "traj",
        "description": "the trajectory"
      },
      {
        "nullable": null,
        "types": [
          "TrajectoryPlayerParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 3801,
    "kind": "member",
    "name": "signals",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#signals",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 3802,
    "kind": "member",
    "name": "traj",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#traj",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 3803,
    "kind": "member",
    "name": "start",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#start",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 3804,
    "kind": "member",
    "name": "end",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#end",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 3805,
    "kind": "member",
    "name": "step",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#step",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 3806,
    "kind": "member",
    "name": "timeout",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#timeout",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 3807,
    "kind": "member",
    "name": "interpolateType",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#interpolateType",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true
  },
  {
    "__docId__": 3808,
    "kind": "member",
    "name": "interpolateStep",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#interpolateStep",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 3809,
    "kind": "member",
    "name": "mode",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#mode",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 3810,
    "kind": "member",
    "name": "direction",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#direction",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "undocument": true
  },
  {
    "__docId__": 3811,
    "kind": "member",
    "name": "_run",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_run",
    "access": "private",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 3812,
    "kind": "member",
    "name": "_previousTime",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_previousTime",
    "access": "private",
    "description": null,
    "lineNumber": 64,
    "undocument": true
  },
  {
    "__docId__": 3813,
    "kind": "member",
    "name": "_currentTime",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_currentTime",
    "access": "private",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 3814,
    "kind": "member",
    "name": "_currentStep",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_currentStep",
    "access": "private",
    "description": null,
    "lineNumber": 66,
    "undocument": true
  },
  {
    "__docId__": 3815,
    "kind": "member",
    "name": "_currentFrame",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_currentFrame",
    "access": "private",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 3816,
    "kind": "member",
    "name": "_direction",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_direction",
    "access": "private",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 3819,
    "kind": "get",
    "name": "isRunning",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#isRunning",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 3820,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#setParameters",
    "access": "public",
    "description": "set player parameters",
    "lineNumber": 83,
    "params": [
      {
        "nullable": null,
        "types": [
          "TrajectoryPlayerParameters"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": "parameter object"
      }
    ]
  },
  {
    "__docId__": 3830,
    "kind": "method",
    "name": "_animate",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_animate",
    "access": "private",
    "description": null,
    "lineNumber": 103,
    "undocument": true
  },
  {
    "__docId__": 3837,
    "kind": "method",
    "name": "_next",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_next",
    "access": "private",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 3840,
    "kind": "method",
    "name": "_nextInterpolated",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#_nextInterpolated",
    "access": "private",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 3841,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#toggle",
    "access": "public",
    "description": "toggle between playing and pausing the animation",
    "lineNumber": 215,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3842,
    "kind": "method",
    "name": "play",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#play",
    "access": "public",
    "description": "start the animation",
    "lineNumber": 227,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3845,
    "kind": "method",
    "name": "pause",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#pause",
    "access": "public",
    "description": "pause the animation",
    "lineNumber": 258,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3847,
    "kind": "method",
    "name": "stop",
    "memberof": "src/trajectory/trajectory-player.js~TrajectoryPlayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory-player.js~TrajectoryPlayer#stop",
    "access": "public",
    "description": "stop the animation (pause and go to start-frame)",
    "lineNumber": 267,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3848,
    "kind": "file",
    "name": "src/trajectory/trajectory-utils.js",
    "content": "/**\r\n * @file Trajectory Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport FramesTrajectory from './frames-trajectory.js'\r\nimport StructureTrajectory from './structure-trajectory.js'\r\nimport RemoteTrajectory from './remote-trajectory.js'\r\n\r\nfunction makeTrajectory (trajSrc, structure, params) {\r\n  let traj\r\n\r\n  if (trajSrc && trajSrc.type === 'Frames') {\r\n    traj = new FramesTrajectory(trajSrc, structure, params)\r\n  } else if (!trajSrc && structure.frames) {\r\n    traj = new StructureTrajectory(trajSrc, structure, params)\r\n  } else {\r\n    traj = new RemoteTrajectory(trajSrc, structure, params)\r\n  }\r\n\r\n  return traj\r\n}\r\n\r\nexport {\r\n  makeTrajectory\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/trajectory-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3849,
    "kind": "function",
    "name": "makeTrajectory",
    "memberof": "src/trajectory/trajectory-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory-utils.js~makeTrajectory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/trajectory-utils.js",
    "importStyle": "{makeTrajectory}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 3850,
    "kind": "file",
    "name": "src/trajectory/trajectory.js",
    "content": "/**\r\n * @file Trajectory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nimport { Log } from '../globals.js'\r\nimport { defaults } from '../utils.js'\r\nimport { circularMean, arrayMean } from '../math/array-utils.js'\r\nimport { lerp, spline } from '../math/math-utils.js'\r\nimport Selection from '../selection/selection.js'\r\nimport Superposition from '../align/superposition.js'\r\nimport TrajectoryPlayer from './trajectory-player.js'\r\n\r\nfunction centerPbc (coords, mean, box) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  const n = coords.length\r\n\r\n  const bx = box[ 0 ]\r\n  const by = box[ 1 ]\r\n  const bz = box[ 2 ]\r\n  const mx = mean[ 0 ]\r\n  const my = mean[ 1 ]\r\n  const mz = mean[ 2 ]\r\n\r\n  const fx = -mx + bx + bx / 2\r\n  const fy = -my + by + by / 2\r\n  const fz = -mz + bz + bz / 2\r\n\r\n  for (let i = 0; i < n; i += 3) {\r\n    coords[ i + 0 ] = (coords[ i + 0 ] + fx) % bx\r\n    coords[ i + 1 ] = (coords[ i + 1 ] + fy) % by\r\n    coords[ i + 2 ] = (coords[ i + 2 ] + fz) % bz\r\n  }\r\n}\r\n\r\nfunction removePbc (x, box) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  // ported from GROMACS src/gmxlib/rmpbc.c:rm_gropbc()\r\n  // in-place\r\n\r\n  const n = x.length\r\n\r\n  for (let i = 3; i < n; i += 3) {\r\n    for (let j = 0; j < 3; ++j) {\r\n      const dist = x[ i + j ] - x[ i - 3 + j ]\r\n\r\n      if (Math.abs(dist) > 0.9 * box[ j * 3 + j ]) {\r\n        if (dist > 0) {\r\n          for (let d = 0; d < 3; ++d) {\r\n            x[ i + d ] -= box[ j * 3 + d ]\r\n          }\r\n        } else {\r\n          for (let d = 0; d < 3; ++d) {\r\n            x[ i + d ] += box[ j * 3 + d ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return x\r\n}\r\n\r\nfunction removePeriodicity (x, box, mean) {\r\n  if (box[ 0 ] === 0 || box[ 8 ] === 0 || box[ 4 ] === 0) {\r\n    return\r\n  }\r\n\r\n  const n = x.length\r\n  for (let i = 3; i < n; i += 3) {\r\n    for (let j = 0; j < 3; ++j) {\r\n      const f = (x[ i + j ] - mean[ j ]) / box[ j * 3 + j ]\r\n      if (Math.abs(f) > 0.5) {\r\n        x[ i + j ] -= box[ j * 3 + j ] * Math.round(f)\r\n      }\r\n    }\r\n  }\r\n\r\n  return x\r\n}\r\n\r\nfunction circularMean3 (indices, coords, box) {\r\n  return [\r\n    circularMean(coords, box[ 0 ], 3, 0, indices),\r\n    circularMean(coords, box[ 1 ], 3, 1, indices),\r\n    circularMean(coords, box[ 2 ], 3, 2, indices)\r\n  ]\r\n}\r\n\r\nfunction arrayMean3 (coords) {\r\n  return [\r\n    arrayMean(coords, 3, 0),\r\n    arrayMean(coords, 3, 1),\r\n    arrayMean(coords, 3, 2)\r\n  ]\r\n}\r\n\r\nfunction interpolateSpline (c, cp, cpp, cppp, t) {\r\n  const m = c.length\r\n  const coords = new Float32Array(m)\r\n\r\n  for (let j0 = 0; j0 < m; j0 += 3) {\r\n    const j1 = j0 + 1\r\n    const j2 = j0 + 2\r\n    coords[ j0 ] = spline(cppp[ j0 ], cpp[ j0 ], cp[ j0 ], c[ j0 ], t, 1)\r\n    coords[ j1 ] = spline(cppp[ j1 ], cpp[ j1 ], cp[ j1 ], c[ j1 ], t, 1)\r\n    coords[ j2 ] = spline(cppp[ j2 ], cpp[ j2 ], cp[ j2 ], c[ j2 ], t, 1)\r\n  }\r\n\r\n  return coords\r\n}\r\n\r\nfunction interpolateLerp (c, cp, t) {\r\n  const m = c.length\r\n  const coords = new Float32Array(m)\r\n\r\n  for (let j0 = 0; j0 < m; j0 += 3) {\r\n    const j1 = j0 + 1\r\n    const j2 = j0 + 2\r\n    coords[ j0 ] = lerp(cp[ j0 ], c[ j0 ], t)\r\n    coords[ j1 ] = lerp(cp[ j1 ], c[ j1 ], t)\r\n    coords[ j2 ] = lerp(cp[ j2 ], c[ j2 ], t)\r\n  }\r\n\r\n  return coords\r\n}\r\n\r\n/**\r\n * Trajectory parameter object.\r\n * @typedef {Object} TrajectoryParameters - parameters\r\n *\r\n * @property {Number} deltaTime - timestep between frames in picoseconds\r\n * @property {Number} timeOffset - starting time of frames in picoseconds\r\n * @property {String} sele - to restrict atoms used for superposition\r\n * @property {Boolean} centerPbc - center on initial frame\r\n * @property {Boolean} removePeriodicity - move atoms into the origin box\r\n * @property {Boolean} remo - try fixing periodic boundary discontinuities\r\n * @property {Boolean} superpose - superpose on initial frame\r\n */\r\n\r\n/**\r\n * @example\r\n * trajectory.signals.frameChanged.add( function(i){ ... } );\r\n *\r\n * @typedef {Object} TrajectorySignals\r\n * @property {Signal<Integer>} countChanged - when the frame count is changed\r\n * @property {Signal<Integer>} frameChanged - when the set frame is changed\r\n * @property {Signal<TrajectoryPlayer>} playerChanged - when the player is changed\r\n */\r\n\r\n/**\r\n * Base class for trajectories, tying structures and coordinates together\r\n * @interface\r\n */\r\nclass Trajectory {\r\n  /**\r\n   * @param {String|Frames} trajPath - trajectory source\r\n   * @param {Structure} structure - the structure object\r\n   * @param {TrajectoryParameters} params - trajectory parameters\r\n   */\r\n  constructor (trajPath, structure, params) {\r\n    /**\r\n     * Events emitted by the trajectory\r\n     * @type {TrajectorySignals}\r\n     */\r\n    this.signals = {\r\n      countChanged: new Signal(),\r\n      frameChanged: new Signal(),\r\n      playerChanged: new Signal()\r\n    }\r\n\r\n    const p = params || {}\r\n\r\n    this.deltaTime = defaults(p.deltaTime, 0)\r\n    this.timeOffset = defaults(p.timeOffset, 0)\r\n    this.centerPbc = defaults(p.centerPbc, false)\r\n    this.removePbc = defaults(p.removePbc, false)\r\n    this.removePeriodicity = defaults(p.removePeriodicity, false)\r\n    this.superpose = defaults(p.superpose, false)\r\n\r\n    this.name = trajPath.replace(/^.*[\\\\/]/, '')\r\n    this.trajPath = trajPath\r\n\r\n    this.initialCoords = null\r\n    this.structureCoords = null\r\n\r\n    /**\r\n     * selection to restrict atoms used for superposition\r\n     * @type {Selection}\r\n     */\r\n    this.selection = new Selection(\r\n      defaults(p.sele, 'backbone and not hydrogen')\r\n    )\r\n\r\n    this.selection.signals.stringChanged.add(function () {\r\n      this.selectionIndices = this.structure.getAtomIndices(this.selection)\r\n      this._resetCache()\r\n      this._saveInitialCoords()\r\n      this.setFrame(this._currentFrame)\r\n    }, this)\r\n\r\n    this._frameCount = 0\r\n    this._currentFrame = -1\r\n  }\r\n\r\n  /**\r\n   * Number of frames in the trajectory\r\n   * @return {Number} count\r\n   */\r\n  get frameCount () {\r\n    return this._frameCount\r\n  }\r\n\r\n  /**\r\n   * Currently set frame of the trajectory\r\n   * @return {Number} frame\r\n   */\r\n  get currentFrame () {\r\n    return this._currentFrame\r\n  }\r\n\r\n  _init (structure) {\r\n    this.setStructure(structure)\r\n    this._loadFrameCount()\r\n    this.setPlayer(new TrajectoryPlayer(this))\r\n  }\r\n\r\n  setStructure (structure) {\r\n    this.structure = structure\r\n    this.atomCount = structure.atomCount\r\n\r\n    this.backboneIndices = this._getIndices(\r\n      new Selection('backbone and not hydrogen')\r\n    )\r\n    this._makeAtomIndices()\r\n    this._saveStructureCoords()\r\n\r\n    this.selectionIndices = this._getIndices(this.selection)\r\n    this._resetCache()\r\n    this._saveInitialCoords()\r\n    this.setFrame(this._currentFrame)\r\n  }\r\n\r\n  _saveInitialCoords () {\r\n    if (this.structure.hasCoords()) {\r\n      this.initialCoords = new Float32Array(this.structureCoords)\r\n      this._makeSuperposeCoords()\r\n    } else if (this.frameCache[0]) {\r\n      this.initialCoords = new Float32Array(this.frameCache[0])\r\n      this._makeSuperposeCoords()\r\n    } else {\r\n      this.loadFrame(0, () => this._saveInitialCoords())\r\n    }\r\n  }\r\n\r\n  _saveStructureCoords () {\r\n    const p = { what: { position: true } }\r\n    this.structureCoords = this.structure.getAtomData(p).position\r\n  }\r\n\r\n  setSelection (string) {\r\n    this.selection.setString(string)\r\n    return this\r\n  }\r\n\r\n  _getIndices (selection) {\r\n    let i = 0\r\n    const test = selection.test\r\n    const indices = []\r\n\r\n    this.structure.eachAtom(function (ap) {\r\n      if (test(ap)) indices.push(i)\r\n      i += 1\r\n    })\r\n\r\n    return indices\r\n  }\r\n\r\n  _makeSuperposeCoords () {\r\n    const n = this.selectionIndices.length * 3\r\n\r\n    this.coords1 = new Float32Array(n)\r\n    this.coords2 = new Float32Array(n)\r\n\r\n    const y = this.initialCoords\r\n    const coords2 = this.coords2\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      const j = this.selectionIndices[ i / 3 ] * 3\r\n\r\n      coords2[ i + 0 ] = y[ j + 0 ]\r\n      coords2[ i + 1 ] = y[ j + 1 ]\r\n      coords2[ i + 2 ] = y[ j + 2 ]\r\n    }\r\n  }\r\n\r\n  _makeAtomIndices () {\r\n    Log.error('Trajectory._makeAtomIndices not implemented')\r\n  }\r\n\r\n  _resetCache () {\r\n    this.frameCache = {}\r\n    this.loadQueue = {}\r\n    this.boxCache = {}\r\n    this.pathCache = {}\r\n    this.frameCacheSize = 0\r\n    this.initialCoords = null\r\n  }\r\n\r\n  setParameters (params) {\r\n    const p = params || {}\r\n    let resetCache = false\r\n\r\n    if (p.centerPbc !== undefined && p.centerPbc !== this.centerPbc) {\r\n      this.centerPbc = p.centerPbc\r\n      resetCache = true\r\n    }\r\n\r\n    if (p.removePeriodicity !== undefined && p.removePeriodicity !== this.removePeriodicity) {\r\n      this.removePeriodicity = p.removePeriodicity\r\n      resetCache = true\r\n    }\r\n\r\n    if (p.removePbc !== undefined && p.removePbc !== this.removePbc) {\r\n      this.removePbc = p.removePbc\r\n      resetCache = true\r\n    }\r\n\r\n    if (p.superpose !== undefined && p.superpose !== this.superpose) {\r\n      this.superpose = p.superpose\r\n      resetCache = true\r\n    }\r\n\r\n    this.deltaTime = defaults(p.deltaTime, this.deltaTime)\r\n    this.timeOffset = defaults(p.timeOffset, this.timeOffset)\r\n\r\n    if (resetCache) {\r\n      this._resetCache()\r\n      this.setFrame(this._currentFrame)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a frame is available\r\n   * @param  {Integer|Integer[]} i - the frame index\r\n   * @return {Boolean} frame availability\r\n   */\r\n  hasFrame (i) {\r\n    if (Array.isArray(i)) {\r\n      return i.every(j => !!this.frameCache[j])\r\n    } else {\r\n      return !!this.frameCache[i]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set trajectory to a frame index\r\n   * @param {Integer} i - the frame index\r\n   * @param {Function} callback - fired when the frame has been set\r\n   */\r\n  setFrame (i, callback) {\r\n    if (i === undefined) return this\r\n\r\n    this.inProgress = true\r\n\r\n    i = parseInt(i)\r\n\r\n    if (i === -1 || this.frameCache[ i ]) {\r\n      this._updateStructure(i)\r\n      if (callback) callback()\r\n    } else {\r\n      this.loadFrame(i, () => {\r\n        this._updateStructure(i)\r\n        if (callback) callback()\r\n      })\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  _interpolate (i, ip, ipp, ippp, t, type) {\r\n    const fc = this.frameCache\r\n\r\n    let coords\r\n    if (type === 'spline') {\r\n      coords = interpolateSpline(fc[ i ], fc[ ip ], fc[ ipp ], fc[ ippp ], t)\r\n    } else {\r\n      coords = interpolateLerp(fc[ i ], fc[ ip ], t)\r\n    }\r\n\r\n    this.structure.updatePosition(coords)\r\n    this._currentFrame = i\r\n    this.signals.frameChanged.dispatch(i)\r\n  }\r\n\r\n  /**\r\n   * Interpolated and set trajectory to frame indices\r\n   * @param {Integer} i - the frame index\r\n   * @param {Integer} ip - one before frame index\r\n   * @param {Integer} ipp - two before frame index\r\n   * @param {Integer} ippp - three before frame index\r\n   * @param {Number} t - interpolation step [0,1]\r\n   * @param {String} type - interpolation type, '', 'spline' or 'linear'\r\n   * @param {Function} callback - fired when the frame has been set\r\n   */\r\n  setFrameInterpolated (i, ip, ipp, ippp, t, type, callback) {\r\n    if (i === undefined) return this\r\n\r\n    const fc = this.frameCache\r\n    const iList = []\r\n\r\n    if (!fc[ ippp ]) iList.push(ippp)\r\n    if (!fc[ ipp ]) iList.push(ipp)\r\n    if (!fc[ ip ]) iList.push(ip)\r\n    if (!fc[ i ]) iList.push(i)\r\n\r\n    if (iList.length) {\r\n      this.loadFrame(iList, () => {\r\n        this._interpolate(i, ip, ipp, ippp, t, type)\r\n        if (callback) callback()\r\n      })\r\n    } else {\r\n      this._interpolate(i, ip, ipp, ippp, t, type)\r\n      if (callback) callback()\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Load frame index\r\n   * @param {Integer|Integer[]} i - the frame index\r\n   * @param {Function} callback - fired when the frame has been loaded\r\n   */\r\n  loadFrame (i, callback) {\r\n    if (Array.isArray(i)) {\r\n      i.forEach(j => {\r\n        if (!this.loadQueue[j] && !this.frameCache[j]) {\r\n          this.loadQueue[j] = true\r\n          this._loadFrame(j, () => {\r\n            delete this.loadQueue[j]\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      if (!this.loadQueue[i] && !this.frameCache[i]) {\r\n        this.loadQueue[i] = true\r\n        this._loadFrame(i, () => {\r\n          delete this.loadQueue[i]\r\n          if (callback) callback()\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load frame index\r\n   * @abstract\r\n   * @param {Integer} i - the frame index\r\n   * @param {Function} callback - fired when the frame has been loaded\r\n   */\r\n  _loadFrame (i, callback) {\r\n    Log.error('Trajectory._loadFrame not implemented', i, callback)\r\n  }\r\n\r\n  _updateStructure (i) {\r\n    if (this._disposed) {\r\n      console.error('updateStructure: traj disposed')\r\n      return\r\n    }\r\n\r\n    if (i === -1) {\r\n      if (this.structureCoords) {\r\n        this.structure.updatePosition(this.structureCoords)\r\n      }\r\n    } else {\r\n      this.structure.updatePosition(this.frameCache[ i ])\r\n    }\r\n\r\n    this.structure.trajectory = {\r\n      name: this.trajPath,\r\n      frame: i\r\n    }\r\n\r\n    this._currentFrame = i\r\n    this.inProgress = false\r\n    this.signals.frameChanged.dispatch(i)\r\n  }\r\n\r\n  _doSuperpose (x) {\r\n    const n = this.selectionIndices.length * 3\r\n\r\n    const coords1 = this.coords1\r\n    const coords2 = this.coords2\r\n\r\n    for (let i = 0; i < n; i += 3) {\r\n      const j = this.selectionIndices[ i / 3 ] * 3\r\n\r\n      coords1[ i + 0 ] = x[ j + 0 ]\r\n      coords1[ i + 1 ] = x[ j + 1 ]\r\n      coords1[ i + 2 ] = x[ j + 2 ]\r\n    }\r\n\r\n    // TODO re-use superposition object\r\n    const sp = new Superposition(coords1, coords2)\r\n    sp.transform(x)\r\n  }\r\n\r\n  _process (i, box, coords, frameCount) {\r\n    this._setFrameCount(frameCount)\r\n\r\n    if (box) {\r\n      if (this.backboneIndices.length > 0 && this.centerPbc) {\r\n        const box2 = [ box[ 0 ], box[ 4 ], box[ 8 ] ]\r\n        const circMean = circularMean3(this.backboneIndices, coords, box2)\r\n        centerPbc(coords, circMean, box2)\r\n      }\r\n\r\n      if (this.removePeriodicity) {\r\n        const mean = arrayMean3(coords)\r\n        removePeriodicity(coords, box, mean)\r\n      }\r\n\r\n      if (this.removePbc) {\r\n        removePbc(coords, box)\r\n      }\r\n    }\r\n\r\n    if (this.selectionIndices.length > 0 && this.coords1 && this.superpose) {\r\n      this._doSuperpose(coords)\r\n    }\r\n\r\n    this.frameCache[ i ] = coords\r\n    this.boxCache[ i ] = box\r\n    this.frameCacheSize += 1\r\n  }\r\n\r\n  _setFrameCount (n) {\r\n    if (n !== this._frameCount) {\r\n      this._frameCount = n\r\n      this.signals.countChanged.dispatch(n)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the trajectory object\r\n   * @return {undefined}\r\n   */\r\n  dispose () {\r\n    this._resetCache()  // aid GC\r\n    this._disposed = true\r\n    if (this.player) this.player.stop()\r\n  }\r\n\r\n  /**\r\n   * Set player for this trajectory\r\n   * @param {TrajectoryPlayer} player - the player\r\n   */\r\n  setPlayer (player) {\r\n    this.player = player\r\n    this.signals.playerChanged.dispatch(player)\r\n  }\r\n\r\n  /**\r\n   * Get path of atom\r\n   * abstract\r\n   * @param  {Integer} index - atom index\r\n   * @param  {Function} callback - fired when the path is available\r\n   * @return {undefined}\r\n   */\r\n  getPath (index, callback) {\r\n    Log.error('Trajectory.getPath not implemented', index, callback)\r\n  }\r\n\r\n  /**\r\n   * Get time for frame\r\n   * @param  {Integer} i - frame index\r\n   * @return {Number} time in picoseconds\r\n   */\r\n  getFrameTime (i) {\r\n    return this.timeOffset + i * this.deltaTime\r\n  }\r\n}\r\n\r\nexport default Trajectory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/trajectory/trajectory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3851,
    "kind": "function",
    "name": "centerPbc",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~centerPbc",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3852,
    "kind": "function",
    "name": "removePbc",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~removePbc",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3853,
    "kind": "function",
    "name": "removePeriodicity",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~removePeriodicity",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3854,
    "kind": "function",
    "name": "circularMean3",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~circularMean3",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3855,
    "kind": "function",
    "name": "arrayMean3",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~arrayMean3",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3856,
    "kind": "function",
    "name": "interpolateSpline",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~interpolateSpline",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3857,
    "kind": "function",
    "name": "interpolateLerp",
    "memberof": "src/trajectory/trajectory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/trajectory/trajectory.js~interpolateLerp",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 122,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3858,
    "kind": "typedef",
    "name": "TrajectoryParameters",
    "memberof": "src/trajectory/trajectory.js",
    "static": true,
    "longname": "src/trajectory/trajectory.js~TrajectoryParameters",
    "access": "public",
    "description": "Trajectory parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "deltaTime",
        "description": "timestep between frames in picoseconds"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeOffset",
        "description": "starting time of frames in picoseconds"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sele",
        "description": "to restrict atoms used for superposition"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "centerPbc",
        "description": "center on initial frame"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "removePeriodicity",
        "description": "move atoms into the origin box"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "remo",
        "description": "try fixing periodic boundary discontinuities"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "superpose",
        "description": "superpose on initial frame"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectoryParameters"
    }
  },
  {
    "__docId__": 3859,
    "kind": "typedef",
    "name": "TrajectorySignals",
    "memberof": "src/trajectory/trajectory.js",
    "static": true,
    "longname": "src/trajectory/trajectory.js~TrajectorySignals",
    "access": "public",
    "description": "",
    "examples": [
      "trajectory.signals.frameChanged.add( function(i){ ... } );"
    ],
    "properties": [
      {
        "nullable": null,
        "types": [
          "Signal<Integer>"
        ],
        "spread": false,
        "optional": false,
        "name": "countChanged",
        "description": "when the frame count is changed"
      },
      {
        "nullable": null,
        "types": [
          "Signal<Integer>"
        ],
        "spread": false,
        "optional": false,
        "name": "frameChanged",
        "description": "when the set frame is changed"
      },
      {
        "nullable": null,
        "types": [
          "Signal<TrajectoryPlayer>"
        ],
        "spread": false,
        "optional": false,
        "name": "playerChanged",
        "description": "when the player is changed"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TrajectorySignals"
    }
  },
  {
    "__docId__": 3860,
    "kind": "class",
    "name": "Trajectory",
    "memberof": "src/trajectory/trajectory.js",
    "static": true,
    "longname": "src/trajectory/trajectory.js~Trajectory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/trajectory/trajectory.js",
    "importStyle": "Trajectory",
    "description": "Base class for trajectories, tying structures and coordinates together",
    "lineNumber": 164,
    "interface": true
  },
  {
    "__docId__": 3861,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Frames"
        ],
        "spread": false,
        "optional": false,
        "name": "trajPath",
        "description": "trajectory source"
      },
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "TrajectoryParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "trajectory parameters"
      }
    ]
  },
  {
    "__docId__": 3862,
    "kind": "member",
    "name": "signals",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#signals",
    "access": "public",
    "description": "Events emitted by the trajectory",
    "lineNumber": 175,
    "type": {
      "nullable": null,
      "types": [
        "TrajectorySignals"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3863,
    "kind": "member",
    "name": "deltaTime",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#deltaTime",
    "access": "public",
    "description": null,
    "lineNumber": 183,
    "undocument": true
  },
  {
    "__docId__": 3864,
    "kind": "member",
    "name": "timeOffset",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#timeOffset",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 3865,
    "kind": "member",
    "name": "centerPbc",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#centerPbc",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true
  },
  {
    "__docId__": 3866,
    "kind": "member",
    "name": "removePbc",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#removePbc",
    "access": "public",
    "description": null,
    "lineNumber": 186,
    "undocument": true
  },
  {
    "__docId__": 3867,
    "kind": "member",
    "name": "removePeriodicity",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#removePeriodicity",
    "access": "public",
    "description": null,
    "lineNumber": 187,
    "undocument": true
  },
  {
    "__docId__": 3868,
    "kind": "member",
    "name": "superpose",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#superpose",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 3869,
    "kind": "member",
    "name": "name",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#name",
    "access": "public",
    "description": null,
    "lineNumber": 190,
    "undocument": true
  },
  {
    "__docId__": 3870,
    "kind": "member",
    "name": "trajPath",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#trajPath",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 3871,
    "kind": "member",
    "name": "initialCoords",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#initialCoords",
    "access": "public",
    "description": null,
    "lineNumber": 193,
    "undocument": true
  },
  {
    "__docId__": 3872,
    "kind": "member",
    "name": "structureCoords",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#structureCoords",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 3873,
    "kind": "member",
    "name": "selection",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#selection",
    "access": "public",
    "description": "selection to restrict atoms used for superposition",
    "lineNumber": 200,
    "type": {
      "nullable": null,
      "types": [
        "Selection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3874,
    "kind": "member",
    "name": "selectionIndices",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#selectionIndices",
    "access": "public",
    "description": null,
    "lineNumber": 205,
    "undocument": true
  },
  {
    "__docId__": 3875,
    "kind": "member",
    "name": "_frameCount",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_frameCount",
    "access": "private",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 3876,
    "kind": "member",
    "name": "_currentFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_currentFrame",
    "access": "private",
    "description": null,
    "lineNumber": 212,
    "undocument": true
  },
  {
    "__docId__": 3877,
    "kind": "get",
    "name": "frameCount",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#frameCount",
    "access": "public",
    "description": "Number of frames in the trajectory",
    "lineNumber": 219,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "count"
    }
  },
  {
    "__docId__": 3878,
    "kind": "get",
    "name": "currentFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#currentFrame",
    "access": "public",
    "description": "Currently set frame of the trajectory",
    "lineNumber": 227,
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "frame"
    }
  },
  {
    "__docId__": 3879,
    "kind": "method",
    "name": "_init",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_init",
    "access": "private",
    "description": null,
    "lineNumber": 231,
    "undocument": true
  },
  {
    "__docId__": 3880,
    "kind": "method",
    "name": "setStructure",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setStructure",
    "access": "public",
    "description": null,
    "lineNumber": 237,
    "undocument": true
  },
  {
    "__docId__": 3881,
    "kind": "member",
    "name": "structure",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#structure",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true
  },
  {
    "__docId__": 3882,
    "kind": "member",
    "name": "atomCount",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#atomCount",
    "access": "public",
    "description": null,
    "lineNumber": 239,
    "undocument": true
  },
  {
    "__docId__": 3883,
    "kind": "member",
    "name": "backboneIndices",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#backboneIndices",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true
  },
  {
    "__docId__": 3885,
    "kind": "method",
    "name": "_saveInitialCoords",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_saveInitialCoords",
    "access": "private",
    "description": null,
    "lineNumber": 253,
    "undocument": true
  },
  {
    "__docId__": 3888,
    "kind": "method",
    "name": "_saveStructureCoords",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_saveStructureCoords",
    "access": "private",
    "description": null,
    "lineNumber": 265,
    "undocument": true
  },
  {
    "__docId__": 3890,
    "kind": "method",
    "name": "setSelection",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setSelection",
    "access": "public",
    "description": null,
    "lineNumber": 270,
    "undocument": true
  },
  {
    "__docId__": 3891,
    "kind": "method",
    "name": "_getIndices",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_getIndices",
    "access": "private",
    "description": null,
    "lineNumber": 275,
    "undocument": true
  },
  {
    "__docId__": 3892,
    "kind": "method",
    "name": "_makeSuperposeCoords",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_makeSuperposeCoords",
    "access": "private",
    "description": null,
    "lineNumber": 288,
    "undocument": true
  },
  {
    "__docId__": 3893,
    "kind": "member",
    "name": "coords1",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#coords1",
    "access": "public",
    "description": null,
    "lineNumber": 291,
    "undocument": true
  },
  {
    "__docId__": 3894,
    "kind": "member",
    "name": "coords2",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#coords2",
    "access": "public",
    "description": null,
    "lineNumber": 292,
    "undocument": true
  },
  {
    "__docId__": 3895,
    "kind": "method",
    "name": "_makeAtomIndices",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_makeAtomIndices",
    "access": "private",
    "description": null,
    "lineNumber": 306,
    "undocument": true
  },
  {
    "__docId__": 3896,
    "kind": "method",
    "name": "_resetCache",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_resetCache",
    "access": "private",
    "description": null,
    "lineNumber": 310,
    "undocument": true
  },
  {
    "__docId__": 3897,
    "kind": "member",
    "name": "frameCache",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#frameCache",
    "access": "public",
    "description": null,
    "lineNumber": 311,
    "undocument": true
  },
  {
    "__docId__": 3898,
    "kind": "member",
    "name": "loadQueue",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#loadQueue",
    "access": "public",
    "description": null,
    "lineNumber": 312,
    "undocument": true
  },
  {
    "__docId__": 3899,
    "kind": "member",
    "name": "boxCache",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#boxCache",
    "access": "public",
    "description": null,
    "lineNumber": 313,
    "undocument": true
  },
  {
    "__docId__": 3900,
    "kind": "member",
    "name": "pathCache",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#pathCache",
    "access": "public",
    "description": null,
    "lineNumber": 314,
    "undocument": true
  },
  {
    "__docId__": 3901,
    "kind": "member",
    "name": "frameCacheSize",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#frameCacheSize",
    "access": "public",
    "description": null,
    "lineNumber": 315,
    "undocument": true
  },
  {
    "__docId__": 3903,
    "kind": "method",
    "name": "setParameters",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setParameters",
    "access": "public",
    "description": null,
    "lineNumber": 319,
    "undocument": true
  },
  {
    "__docId__": 3910,
    "kind": "method",
    "name": "hasFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#hasFrame",
    "access": "public",
    "description": "Check if a frame is available",
    "lineNumber": 357,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer",
          "Integer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "the frame index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "frame availability"
    }
  },
  {
    "__docId__": 3911,
    "kind": "method",
    "name": "setFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setFrame",
    "access": "public",
    "description": "Set trajectory to a frame index",
    "lineNumber": 370,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "the frame index"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "fired when the frame has been set"
      }
    ]
  },
  {
    "__docId__": 3912,
    "kind": "member",
    "name": "inProgress",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#inProgress",
    "access": "public",
    "description": null,
    "lineNumber": 373,
    "undocument": true
  },
  {
    "__docId__": 3913,
    "kind": "method",
    "name": "_interpolate",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_interpolate",
    "access": "private",
    "description": null,
    "lineNumber": 390,
    "undocument": true
  },
  {
    "__docId__": 3915,
    "kind": "method",
    "name": "setFrameInterpolated",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setFrameInterpolated",
    "access": "public",
    "description": "Interpolated and set trajectory to frame indices",
    "lineNumber": 415,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "the frame index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "ip",
        "description": "one before frame index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "ipp",
        "description": "two before frame index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "ippp",
        "description": "three before frame index"
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "t",
        "description": "interpolation step [0,1]"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "interpolation type, '', 'spline' or 'linear'"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "fired when the frame has been set"
      }
    ]
  },
  {
    "__docId__": 3916,
    "kind": "method",
    "name": "loadFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#loadFrame",
    "access": "public",
    "description": "Load frame index",
    "lineNumber": 444,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer",
          "Integer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "the frame index"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "fired when the frame has been loaded"
      }
    ]
  },
  {
    "__docId__": 3917,
    "kind": "method",
    "name": "_loadFrame",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_loadFrame",
    "access": "private",
    "description": "Load frame index",
    "lineNumber": 471,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "the frame index"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "fired when the frame has been loaded"
      }
    ],
    "abstract": true
  },
  {
    "__docId__": 3918,
    "kind": "method",
    "name": "_updateStructure",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_updateStructure",
    "access": "private",
    "description": null,
    "lineNumber": 475,
    "undocument": true
  },
  {
    "__docId__": 3921,
    "kind": "method",
    "name": "_doSuperpose",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_doSuperpose",
    "access": "private",
    "description": null,
    "lineNumber": 499,
    "undocument": true
  },
  {
    "__docId__": 3922,
    "kind": "method",
    "name": "_process",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_process",
    "access": "private",
    "description": null,
    "lineNumber": 518,
    "undocument": true
  },
  {
    "__docId__": 3924,
    "kind": "method",
    "name": "_setFrameCount",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_setFrameCount",
    "access": "private",
    "description": null,
    "lineNumber": 547,
    "undocument": true
  },
  {
    "__docId__": 3926,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#dispose",
    "access": "public",
    "description": "Dispose of the trajectory object",
    "lineNumber": 558,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3927,
    "kind": "member",
    "name": "_disposed",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#_disposed",
    "access": "private",
    "description": null,
    "lineNumber": 560,
    "undocument": true
  },
  {
    "__docId__": 3928,
    "kind": "method",
    "name": "setPlayer",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#setPlayer",
    "access": "public",
    "description": "Set player for this trajectory",
    "lineNumber": 568,
    "params": [
      {
        "nullable": null,
        "types": [
          "TrajectoryPlayer"
        ],
        "spread": false,
        "optional": false,
        "name": "player",
        "description": "the player"
      }
    ]
  },
  {
    "__docId__": 3929,
    "kind": "member",
    "name": "player",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#player",
    "access": "public",
    "description": null,
    "lineNumber": 569,
    "undocument": true
  },
  {
    "__docId__": 3930,
    "kind": "method",
    "name": "getPath",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#getPath",
    "access": "public",
    "description": "Get path of atom\nabstract",
    "lineNumber": 580,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "atom index"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "fired when the path is available"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3931,
    "kind": "method",
    "name": "getFrameTime",
    "memberof": "src/trajectory/trajectory.js~Trajectory",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/trajectory/trajectory.js~Trajectory#getFrameTime",
    "access": "public",
    "description": "Get time for frame",
    "lineNumber": 589,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "frame index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "time in picoseconds"
    }
  },
  {
    "__docId__": 3932,
    "kind": "file",
    "name": "src/utils/binary-heap.js",
    "content": "/**\r\n * @file Binary Heap\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n/**\r\n * Binary heap implementation\r\n * @class\r\n * @author http://eloquentjavascript.net/appendix2.htm\r\n * @param {Function} scoreFunction - the heap scoring function\r\n */\r\nfunction BinaryHeap (scoreFunction) {\r\n  this.content = []\r\n  this.scoreFunction = scoreFunction\r\n}\r\n\r\nBinaryHeap.prototype = {\r\n\r\n  push: function (element) {\r\n        // Add the new element to the end of the array.\r\n    this.content.push(element)\r\n\r\n        // Allow it to bubble up.\r\n    this.bubbleUp(this.content.length - 1)\r\n  },\r\n\r\n  pop: function () {\r\n        // Store the first element so we can return it later.\r\n    var result = this.content[ 0 ]\r\n\r\n        // Get the element at the end of the array.\r\n    var end = this.content.pop()\r\n\r\n        // If there are any elements left, put the end element at the\r\n        // start, and let it sink down.\r\n    if (this.content.length > 0) {\r\n      this.content[ 0 ] = end\r\n      this.sinkDown(0)\r\n    }\r\n\r\n    return result\r\n  },\r\n\r\n  peek: function () {\r\n    return this.content[ 0 ]\r\n  },\r\n\r\n  remove: function (node) {\r\n    var len = this.content.length\r\n\r\n        // To remove a value, we must search through the array to find it.\r\n    for (var i = 0; i < len; i++) {\r\n      if (this.content[ i ] === node) {\r\n                // When it is found, the process seen in 'pop' is repeated\r\n                // to fill up the hole.\r\n        var end = this.content.pop()\r\n\r\n        if (i !== len - 1) {\r\n          this.content[ i ] = end\r\n\r\n          if (this.scoreFunction(end) < this.scoreFunction(node)) {\r\n            this.bubbleUp(i)\r\n          } else {\r\n            this.sinkDown(i)\r\n          }\r\n        }\r\n\r\n        return\r\n      }\r\n    }\r\n\r\n    throw new Error('Node not found.')\r\n  },\r\n\r\n  size: function () {\r\n    return this.content.length\r\n  },\r\n\r\n  bubbleUp: function (n) {\r\n        // Fetch the element that has to be moved.\r\n    var element = this.content[ n ]\r\n\r\n        // When at 0, an element can not go up any further.\r\n    while (n > 0) {\r\n            // Compute the parent element's index, and fetch it.\r\n      var parentN = Math.floor((n + 1) / 2) - 1\r\n      var parent = this.content[ parentN ]\r\n\r\n            // Swap the elements if the parent is greater.\r\n      if (this.scoreFunction(element) < this.scoreFunction(parent)) {\r\n        this.content[ parentN ] = element\r\n        this.content[ n ] = parent\r\n\r\n                // Update 'n' to continue at the new position.\r\n        n = parentN\r\n      } else {\r\n                // Found a parent that is less, no need to move it further.\r\n        break\r\n      }\r\n    }\r\n  },\r\n\r\n  sinkDown: function (n) {\r\n        // Look up the target element and its score.\r\n    var length = this.content.length\r\n    var element = this.content[ n ]\r\n    var elemScore = this.scoreFunction(element)\r\n\r\n    var child1Score, child2Score\r\n\r\n    while (true) {\r\n            // Compute the indices of the child elements.\r\n      var child2N = (n + 1) * 2\r\n      var child1N = child2N - 1\r\n\r\n            // This is used to store the new position of the element, if any.\r\n      var swap = null\r\n\r\n            // If the first child exists (is inside the array)...\r\n      if (child1N < length) {\r\n                // Look it up and compute its score.\r\n        var child1 = this.content[ child1N ]\r\n        child1Score = this.scoreFunction(child1)\r\n\r\n                // If the score is less than our element's, we need to swap.\r\n        if (child1Score < elemScore) swap = child1N\r\n      }\r\n\r\n            // Do the same checks for the other child.\r\n      if (child2N < length) {\r\n        var child2 = this.content[ child2N ]\r\n        child2Score = this.scoreFunction(child2)\r\n\r\n        if (child2Score < (swap === null ? elemScore : child1Score)) swap = child2N\r\n      }\r\n\r\n            // If the element needs to be moved, swap it, and continue.\r\n      if (swap !== null) {\r\n        this.content[ n ] = this.content[ swap ]\r\n        this.content[ swap ] = element\r\n        n = swap\r\n      } else {\r\n                // Otherwise, we are done.\r\n        break\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default BinaryHeap\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/binary-heap.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3933,
    "kind": "function",
    "name": "BinaryHeap",
    "memberof": "src/utils/binary-heap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/binary-heap.js~BinaryHeap",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/binary-heap.js",
    "importStyle": "BinaryHeap",
    "description": "Binary heap implementation",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "http://eloquentjavascript.net/appendix2.htm"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "scoreFunction",
        "description": "the heap scoring function"
      }
    ]
  },
  {
    "__docId__": 3934,
    "kind": "file",
    "name": "src/utils/bitarray.js",
    "content": "/**\r\n * @file Bit array\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @author Paul Pillot <paulpillot@gmail.com>\r\n * @private\r\n */\r\n\r\n/**\r\n * Compute the Hamming weight of a 32-bit unsigned integer\r\n * @param  {Integer} v - a 32-bit unsigned integer\r\n * @return {Integer} the Hamming weight\r\n */\r\nfunction hammingWeight (v) {\r\n    // works with signed or unsigned shifts\r\n  v -= ((v >>> 1) & 0x55555555)\r\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333)\r\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24\r\n}\r\n\r\n/**\r\n * Bit array\r\n *\r\n * Based heavily on https://github.com/lemire/FastBitSet.js\r\n * which is licensed under the Apache License, Version 2.0.\r\n */\r\nclass BitArray {\r\n    /**\r\n     * @param  {Integer} length - array length\r\n     * @param  {Boolean} [setAll] - initialize with true\r\n     */\r\n  constructor (length, setAll) {\r\n    this.length = length\r\n    this._words = new Uint32Array((length + 32) >>> 5)\r\n    if (setAll === true) {\r\n      this.setAll()\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Get value at index\r\n     * @param  {Integer} index - the index\r\n     * @return {Boolean} value\r\n     */\r\n  get (index) {\r\n    return (this._words[ index >>> 5 ] & (1 << index)) !== 0\r\n  }\r\n\r\n    /**\r\n     * Set value at index to true\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n  set (index) {\r\n    this._words[ index >>> 5 ] |= 1 << index\r\n  }\r\n\r\n    /**\r\n     * Set value at index to false\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n  clear (index) {\r\n    this._words[ index >>> 5 ] &= ~(1 << index)\r\n  }\r\n\r\n    /**\r\n     * Flip value at index\r\n     * @param  {Integer} index - the index\r\n     * @return {undefined}\r\n     */\r\n  flip (index) {\r\n    this._words[ index >>> 5 ] ^= 1 << index\r\n  }\r\n\r\n  _assignRange (start, end, value) {\r\n    const words = this._words\r\n    const wordValue = value === true ? 0xFFFFFFFF : 0\r\n    const wordStart = start >>> 5\r\n    const wordEnd = end >>> 5\r\n        // set complete words when applicable\r\n    for (let k = wordStart; k < wordEnd; ++k) {\r\n      words[ k ] = wordValue\r\n    }\r\n        // set parts of the range not spanning complete words\r\n    const startWord = wordStart << 5\r\n    const endWord = wordEnd << 5\r\n    if (value === true) {\r\n      if (end - start < 32) {\r\n        for (let i = start, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n      } else {\r\n        for (let i = start, n = startWord; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n        for (let i = endWord, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] |= 1 << i\r\n        }\r\n      }\r\n    } else {\r\n      if (end - start < 32) {\r\n        for (let i = start, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n      } else {\r\n        for (let i = start, n = startWord; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n        for (let i = endWord, n = end + 1; i < n; ++i) {\r\n          words[ i >>> 5 ] &= ~(1 << i)\r\n        }\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Set bits of the given range\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n  setRange (start, end) {\r\n    return this._assignRange(start, end, true)\r\n  }\r\n\r\n    /**\r\n     * Clear bits of the given range\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n  clearRange (start, end) {\r\n    return this._assignRange(start, end, false)\r\n  }\r\n\r\n    /**\r\n     * Set bits at all given indices\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} this object\r\n     */\r\n  setBits () {\r\n    const words = this._words\r\n    const n = arguments.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = arguments[ i ]\r\n      words[ index >>> 5 ] |= 1 << index\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Clear bits at all given indices\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} this object\r\n     */\r\n  clearBits () {\r\n    const words = this._words\r\n    const n = arguments.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = arguments[ i ]\r\n      words[ index >>> 5 ] &= ~(1 << index)\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Set all bits of the array\r\n     * @return {BitArray} this object\r\n     */\r\n  setAll () {\r\n    return this._assignRange(0, this.length - 1, true)\r\n  }\r\n\r\n    /**\r\n     * Clear all bits of the array\r\n     * @return {BitArray} this object\r\n     */\r\n  clearAll () {\r\n    return this._assignRange(0, this.length - 1, false)\r\n  }\r\n\r\n    /**\r\n     * Flip all the values in the array\r\n     * @return {BitArray} this object\r\n     */\r\n  flipAll () {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    const bs = 32 - this.length % 32\r\n    for (let k = 0; k < count - 1; ++k) {\r\n      words[k] = ~words[ k ]\r\n    }\r\n    words[ count - 1 ] = (~(words[ count - 1 ] << bs)) >>> bs\r\n    return this\r\n  }\r\n\r\n  _isRangeValue (start, end, value) {\r\n    const words = this._words\r\n    const wordValue = value === true ? 0xFFFFFFFF : 0\r\n    const wordStart = start >>> 5\r\n    const wordEnd = end >>> 5\r\n        // set complete words when applicable\r\n    for (let k = wordStart; k < wordEnd; ++k) {\r\n      if (words[ k ] !== wordValue) return false\r\n    }\r\n        // set parts of the range not spanning complete words\r\n    if (end - start < 32) {\r\n      for (let i = start, n = end + 1; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n    } else {\r\n      const startWord = wordStart << 5\r\n      const endWord = wordEnd << 5\r\n      for (let i = start, n = startWord << 5; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n      for (let i = endWord, n = end + 1; i < n; ++i) {\r\n        if (!!(words[ i >>> 5 ] & (1 << i)) !== value) return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n    /**\r\n     * Test if bits in given range are set\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n  isRangeSet (start, end) {\r\n    return this._isRangeValue(start, end, true)\r\n  }\r\n\r\n    /**\r\n     * Test if bits in given range are clear\r\n     * @param {Integer} start - start index\r\n     * @param {Integer} end - end index\r\n     * @return {BitArray} this object\r\n     */\r\n  isRangeClear (start, end) {\r\n    return this._isRangeValue(start, end, false)\r\n  }\r\n\r\n    /**\r\n     * Test if all bits in the array are set\r\n     * @return {Boolean} test result\r\n     */\r\n  isAllSet () {\r\n    return this._isRangeValue(0, this.length - 1, true)\r\n  }\r\n\r\n    /**\r\n     * Test if all bits in the array are clear\r\n     * @return {Boolean} test result\r\n     */\r\n  isAllClear () {\r\n    return this._isRangeValue(0, this.length - 1, false)\r\n  }\r\n\r\n    /**\r\n     * Test if bits at all given indices are set\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} test result\r\n     */\r\n  isSet () {\r\n    const words = this._words\r\n    const n = arguments.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = arguments[ i ]\r\n      if ((words[ index >>> 5 ] & (1 << index)) === 0) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n    /**\r\n     * Test if bits at all given indices are clear\r\n     * @param {...Integer} arguments - indices\r\n     * @return {Boolean} test result\r\n     */\r\n  isClear () {\r\n    const words = this._words\r\n    const n = arguments.length\r\n    for (let i = 0; i < n; ++i) {\r\n      const index = arguments[ i ]\r\n      if ((words[ index >>> 5 ] & (1 << index)) !== 0) return false\r\n    }\r\n    return true\r\n  }\r\n\r\n    /**\r\n     * Test if two BitArrays are identical in all their values\r\n     * @param {BitArray} otherBitarray - the other BitArray\r\n     * @return {Boolean} test result\r\n     */\r\n  isEqualTo (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      if (words1[ k ] !== words2[ k ]) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n    /**\r\n     * How many set bits?\r\n     * @return {Integer} number of set bits\r\n     */\r\n  getSize () {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    let size = 0\r\n    for (let i = 0; i < count; ++i) {\r\n      size += hammingWeight(words[ i ])\r\n    }\r\n    return size\r\n  }\r\n\r\n    /**\r\n     * Calculate difference betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n  difference (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] = words1[ k ] & ~words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Calculate union betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n  union (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] |= words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Calculate intersection betwen this and another bit array.\r\n     * Store result in this object.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} this object\r\n     */\r\n  intersection (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      words1[ k ] &= words2[ k ]\r\n    }\r\n    for (let k = words1.length; k < count; ++k) {\r\n      words1[ k ] = 0\r\n    }\r\n    return this\r\n  }\r\n\r\n    /**\r\n     * Test if there is any intersection betwen this and another bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {Boolean} test result\r\n     */\r\n  intersects (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      if ((words1[ k ] & words2[ k ]) !== 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n    /**\r\n     * Calculate the number of bits in common betwen this and another bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {Integer} size\r\n     */\r\n  getIntersectionSize (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    let size = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      size += hammingWeight(words1[ k ] & words2[ k ])\r\n    }\r\n    return size\r\n  }\r\n\r\n    /**\r\n     * Calculate intersection betwen this and another bit array.\r\n     * Store result in a new bit array.\r\n     * @param  {BitArray} otherBitarray - the other bit array\r\n     * @return {BitArray} the new bit array\r\n     */\r\n  makeIntersection (otherBitarray) {\r\n    const words1 = this._words\r\n    const words2 = otherBitarray._words\r\n    const count = Math.min(words1.length, words2.length)\r\n    const wordsA = new Uint32Array(count)\r\n    const intersection = Object.create(BitArray.prototype)\r\n    intersection._words = wordsA\r\n    intersection.length = Math.min(this.length, otherBitarray.length)\r\n    for (let k = 0; k < count; ++k) {\r\n      wordsA[ k ] = words1[ k ] & words2[ k ]\r\n    }\r\n    return intersection\r\n  }\r\n\r\n    /**\r\n     * Iterate over all set bits in the array\r\n     * @param  {function( index: Integer, i: Integer )} callback - the callback\r\n     * @return {undefined}\r\n     */\r\n  forEach (callback) {\r\n    const count = this._words.length\r\n    const words = this._words\r\n    let i = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      let w = words[ k ]\r\n      while (w !== 0) {\r\n        const t = w & -w\r\n        const index = (k << 5) + hammingWeight(t - 1)\r\n        callback(index, i)\r\n        w ^= t\r\n        ++i\r\n      }\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Get an array with the set bits\r\n     * @return {Array} bit indices\r\n     */\r\n  toArray () {\r\n    const words = this._words\r\n    const answer = new Array(this.getSize())\r\n    const count = this._words.length\r\n    let pos = 0\r\n    for (let k = 0; k < count; ++k) {\r\n      let w = words[ k ]\r\n      while (w !== 0) {\r\n        const t = w & -w\r\n        answer[ pos++ ] = (k << 5) + hammingWeight(t - 1)\r\n        w ^= t\r\n      }\r\n    }\r\n    return answer\r\n  }\r\n\r\n  toString () {\r\n    return '{' + this.toArray().join(',') + '}'\r\n  }\r\n\r\n  toSeleString () {\r\n    const sele = this.toArray().join(',')\r\n    return sele ? '@' + sele : 'NONE'\r\n  }\r\n\r\n    /**\r\n     * Clone this object\r\n     * @return {BitArray} the cloned object\r\n     */\r\n  clone () {\r\n    const clone = Object.create(BitArray.prototype)\r\n    clone.length = this.length\r\n    clone._words = new Uint32Array(this._words)\r\n    return clone\r\n  }\r\n}\r\n\r\nexport default BitArray\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/bitarray.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3935,
    "kind": "function",
    "name": "hammingWeight",
    "memberof": "src/utils/bitarray.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/bitarray.js~hammingWeight",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/bitarray.js",
    "importStyle": null,
    "description": "Compute the Hamming weight of a 32-bit unsigned integer",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "a 32-bit unsigned integer"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "the Hamming weight"
    },
    "ignore": true
  },
  {
    "__docId__": 3936,
    "kind": "class",
    "name": "BitArray",
    "memberof": "src/utils/bitarray.js",
    "static": true,
    "longname": "src/utils/bitarray.js~BitArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/bitarray.js",
    "importStyle": "BitArray",
    "description": "Bit array\n\nBased heavily on https://github.com/lemire/FastBitSet.js\nwhich is licensed under the Apache License, Version 2.0.",
    "lineNumber": 26,
    "interface": false
  },
  {
    "__docId__": 3937,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "length",
        "description": "array length"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "setAll",
        "description": "initialize with true"
      }
    ]
  },
  {
    "__docId__": 3938,
    "kind": "member",
    "name": "length",
    "memberof": "src/utils/bitarray.js~BitArray",
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#length",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 3939,
    "kind": "member",
    "name": "_words",
    "memberof": "src/utils/bitarray.js~BitArray",
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#_words",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 3940,
    "kind": "method",
    "name": "get",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#get",
    "access": "public",
    "description": "Get value at index",
    "lineNumber": 44,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "value"
    }
  },
  {
    "__docId__": 3941,
    "kind": "method",
    "name": "set",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#set",
    "access": "public",
    "description": "Set value at index to true",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3942,
    "kind": "method",
    "name": "clear",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#clear",
    "access": "public",
    "description": "Set value at index to false",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3943,
    "kind": "method",
    "name": "flip",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#flip",
    "access": "public",
    "description": "Flip value at index",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "the index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3944,
    "kind": "method",
    "name": "_assignRange",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#_assignRange",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "undocument": true
  },
  {
    "__docId__": 3945,
    "kind": "method",
    "name": "setRange",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#setRange",
    "access": "public",
    "description": "Set bits of the given range",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "end index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3946,
    "kind": "method",
    "name": "clearRange",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#clearRange",
    "access": "public",
    "description": "Clear bits of the given range",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "end index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3947,
    "kind": "method",
    "name": "setBits",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#setBits",
    "access": "public",
    "description": "Set bits at all given indices",
    "lineNumber": 142,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Integer"
        ],
        "spread": true,
        "optional": false,
        "name": "arguments",
        "description": "indices"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3948,
    "kind": "method",
    "name": "clearBits",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#clearBits",
    "access": "public",
    "description": "Clear bits at all given indices",
    "lineNumber": 157,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Integer"
        ],
        "spread": true,
        "optional": false,
        "name": "arguments",
        "description": "indices"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3949,
    "kind": "method",
    "name": "setAll",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#setAll",
    "access": "public",
    "description": "Set all bits of the array",
    "lineNumber": 171,
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3950,
    "kind": "method",
    "name": "clearAll",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#clearAll",
    "access": "public",
    "description": "Clear all bits of the array",
    "lineNumber": 179,
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3951,
    "kind": "method",
    "name": "flipAll",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#flipAll",
    "access": "public",
    "description": "Flip all the values in the array",
    "lineNumber": 187,
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3952,
    "kind": "method",
    "name": "_isRangeValue",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#_isRangeValue",
    "access": "private",
    "description": null,
    "lineNumber": 198,
    "undocument": true
  },
  {
    "__docId__": 3953,
    "kind": "method",
    "name": "isRangeSet",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isRangeSet",
    "access": "public",
    "description": "Test if bits in given range are set",
    "lineNumber": 231,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "end index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3954,
    "kind": "method",
    "name": "isRangeClear",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isRangeClear",
    "access": "public",
    "description": "Test if bits in given range are clear",
    "lineNumber": 241,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start index"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "end index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3955,
    "kind": "method",
    "name": "isAllSet",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isAllSet",
    "access": "public",
    "description": "Test if all bits in the array are set",
    "lineNumber": 249,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3956,
    "kind": "method",
    "name": "isAllClear",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isAllClear",
    "access": "public",
    "description": "Test if all bits in the array are clear",
    "lineNumber": 257,
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3957,
    "kind": "method",
    "name": "isSet",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isSet",
    "access": "public",
    "description": "Test if bits at all given indices are set",
    "lineNumber": 266,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Integer"
        ],
        "spread": true,
        "optional": false,
        "name": "arguments",
        "description": "indices"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3958,
    "kind": "method",
    "name": "isClear",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isClear",
    "access": "public",
    "description": "Test if bits at all given indices are clear",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Integer"
        ],
        "spread": true,
        "optional": false,
        "name": "arguments",
        "description": "indices"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3959,
    "kind": "method",
    "name": "isEqualTo",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#isEqualTo",
    "access": "public",
    "description": "Test if two BitArrays are identical in all their values",
    "lineNumber": 296,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other BitArray"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3960,
    "kind": "method",
    "name": "getSize",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#getSize",
    "access": "public",
    "description": "How many set bits?",
    "lineNumber": 312,
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "number of set bits"
    }
  },
  {
    "__docId__": 3961,
    "kind": "method",
    "name": "difference",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#difference",
    "access": "public",
    "description": "Calculate difference betwen this and another bit array.\nStore result in this object.",
    "lineNumber": 328,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3962,
    "kind": "method",
    "name": "union",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#union",
    "access": "public",
    "description": "Calculate union betwen this and another bit array.\nStore result in this object.",
    "lineNumber": 347,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3963,
    "kind": "method",
    "name": "intersection",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#intersection",
    "access": "public",
    "description": "Calculate intersection betwen this and another bit array.\nStore result in this object.",
    "lineNumber": 366,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "this object"
    }
  },
  {
    "__docId__": 3964,
    "kind": "method",
    "name": "intersects",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#intersects",
    "access": "public",
    "description": "Test if there is any intersection betwen this and another bit array.",
    "lineNumber": 384,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "test result"
    }
  },
  {
    "__docId__": 3965,
    "kind": "method",
    "name": "getIntersectionSize",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#getIntersectionSize",
    "access": "public",
    "description": "Calculate the number of bits in common betwen this and another bit array.",
    "lineNumber": 401,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "size"
    }
  },
  {
    "__docId__": 3966,
    "kind": "method",
    "name": "makeIntersection",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#makeIntersection",
    "access": "public",
    "description": "Calculate intersection betwen this and another bit array.\nStore result in a new bit array.",
    "lineNumber": 418,
    "params": [
      {
        "nullable": null,
        "types": [
          "BitArray"
        ],
        "spread": false,
        "optional": false,
        "name": "otherBitarray",
        "description": "the other bit array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "the new bit array"
    }
  },
  {
    "__docId__": 3967,
    "kind": "method",
    "name": "forEach",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#forEach",
    "access": "public",
    "description": "Iterate over all set bits in the array",
    "lineNumber": 437,
    "params": [
      {
        "nullable": null,
        "types": [
          "function( index: Integer, i: Integer )"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3968,
    "kind": "method",
    "name": "toArray",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#toArray",
    "access": "public",
    "description": "Get an array with the set bits",
    "lineNumber": 457,
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "bit indices"
    }
  },
  {
    "__docId__": 3969,
    "kind": "method",
    "name": "toString",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#toString",
    "access": "public",
    "description": null,
    "lineNumber": 473,
    "undocument": true
  },
  {
    "__docId__": 3970,
    "kind": "method",
    "name": "toSeleString",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#toSeleString",
    "access": "public",
    "description": null,
    "lineNumber": 477,
    "undocument": true
  },
  {
    "__docId__": 3971,
    "kind": "method",
    "name": "clone",
    "memberof": "src/utils/bitarray.js~BitArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/bitarray.js~BitArray#clone",
    "access": "public",
    "description": "Clone this object",
    "lineNumber": 486,
    "return": {
      "nullable": null,
      "types": [
        "BitArray"
      ],
      "spread": false,
      "description": "the cloned object"
    }
  },
  {
    "__docId__": 3972,
    "kind": "file",
    "name": "src/utils/counter.js",
    "content": "/**\r\n * @file Counter\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log } from '../globals.js'\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\n/**\r\n * {@link Signal}, dispatched when the `count` changes\r\n * @example\r\n * counter.signals.countChanged.add( function( delta ){ ... } );\r\n * @event Counter#countChanged\r\n * @type {Integer}\r\n */\r\n\r\n/**\r\n * Counter class for keeping track of counts\r\n */\r\nclass Counter {\r\n  constructor () {\r\n        /**\r\n         * The `count`\r\n         * @type {Integer}\r\n         */\r\n    this.count = 0\r\n\r\n    this.signals = {\r\n      countChanged: new Signal()\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Set the `count` to zero\r\n     * @return {undefined}\r\n     */\r\n  clear () {\r\n    this.change(-this.count)\r\n  }\r\n\r\n    /**\r\n     * Change the `count`\r\n     * @fires Counter#countChanged\r\n     * @param {Integer} delta - count change\r\n     * @return {undefined}\r\n     */\r\n  change (delta) {\r\n    this.count += delta\r\n    this.signals.countChanged.dispatch(delta, this.count)\r\n\r\n    if (this.count < 0) {\r\n      Log.warn('Counter.count below zero', this.count)\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Increments the `count` by one.\r\n     * @return {undefined}\r\n     */\r\n  increment () {\r\n    this.change(1)\r\n  }\r\n\r\n    /**\r\n     * Decrements the `count` by one.\r\n     * @return {undefined}\r\n     */\r\n  decrement () {\r\n    this.change(-1)\r\n  }\r\n\r\n    /**\r\n     * Listen to another counter object and change this `count` by the\r\n     * same amount\r\n     * @param  {Counter} counter - the counter object to listen to\r\n     * @return {undefined}\r\n     */\r\n  listen (counter) {\r\n    this.change(counter.count)\r\n    counter.signals.countChanged.add(this.change, this)\r\n  }\r\n\r\n    /**\r\n     * Stop listening to the other counter object\r\n     * @param  {Counter} counter - the counter object to stop listening to\r\n     * @return {undefined}\r\n     */\r\n  unlisten (counter) {\r\n    var countChanged = counter.signals.countChanged\r\n    if (countChanged.has(this.change, this)) {\r\n      countChanged.remove(this.change, this)\r\n    }\r\n  }\r\n\r\n    /**\r\n     * Invole the callback function once, when the `count` becomes zero\r\n     * @param  {Function} callback - the callback function\r\n     * @param  {Object}   context - the context for the callback function\r\n     * @return {undefined}\r\n     */\r\n  onZeroOnce (callback, context) {\r\n    if (this.count === 0) {\r\n      callback.call(context, 0, 0)\r\n    } else {\r\n      var fn = function () {\r\n        if (this.count === 0) {\r\n          this.signals.countChanged.remove(fn, this)\r\n          callback.apply(context, arguments)\r\n        }\r\n      }\r\n      this.signals.countChanged.add(fn, this)\r\n    }\r\n  }\r\n\r\n  dispose () {\r\n    this.clear()\r\n    this.signals.countChanged.dispose()\r\n  }\r\n}\r\n\r\nexport default Counter\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/counter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3973,
    "kind": "class",
    "name": "Counter",
    "memberof": "src/utils/counter.js",
    "static": true,
    "longname": "src/utils/counter.js~Counter",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/counter.js",
    "importStyle": "Counter",
    "description": "Counter class for keeping track of counts",
    "lineNumber": 22,
    "interface": false
  },
  {
    "__docId__": 3974,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 3975,
    "kind": "member",
    "name": "count",
    "memberof": "src/utils/counter.js~Counter",
    "static": false,
    "longname": "src/utils/counter.js~Counter#count",
    "access": "public",
    "description": "The `count`",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3976,
    "kind": "member",
    "name": "signals",
    "memberof": "src/utils/counter.js~Counter",
    "static": false,
    "longname": "src/utils/counter.js~Counter#signals",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 3977,
    "kind": "method",
    "name": "clear",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#clear",
    "access": "public",
    "description": "Set the `count` to zero",
    "lineNumber": 39,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3978,
    "kind": "method",
    "name": "change",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#change",
    "access": "public",
    "description": "Change the `count`",
    "lineNumber": 49,
    "unknown": [
      {
        "tagName": "@fires",
        "tagValue": "Counter#countChanged"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "delta",
        "description": "count change"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3980,
    "kind": "method",
    "name": "increment",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#increment",
    "access": "public",
    "description": "Increments the `count` by one.",
    "lineNumber": 62,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3981,
    "kind": "method",
    "name": "decrement",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#decrement",
    "access": "public",
    "description": "Decrements the `count` by one.",
    "lineNumber": 70,
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3982,
    "kind": "method",
    "name": "listen",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#listen",
    "access": "public",
    "description": "Listen to another counter object and change this `count` by the\nsame amount",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Counter"
        ],
        "spread": false,
        "optional": false,
        "name": "counter",
        "description": "the counter object to listen to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3983,
    "kind": "method",
    "name": "unlisten",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#unlisten",
    "access": "public",
    "description": "Stop listening to the other counter object",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "Counter"
        ],
        "spread": false,
        "optional": false,
        "name": "counter",
        "description": "the counter object to stop listening to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3984,
    "kind": "method",
    "name": "onZeroOnce",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#onZeroOnce",
    "access": "public",
    "description": "Invole the callback function once, when the `count` becomes zero",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "the callback function"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "context",
        "description": "the context for the callback function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 3985,
    "kind": "method",
    "name": "dispose",
    "memberof": "src/utils/counter.js~Counter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/counter.js~Counter#dispose",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 3986,
    "kind": "file",
    "name": "src/utils/gzip-decompressor.js",
    "content": "/**\r\n * @file Gzip Decompressor\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { ungzip } from '../../lib/pako_inflate.es6.js'\r\n\r\nimport { DecompressorRegistry } from '../globals.js'\r\n\r\nfunction gzipDecompress (data) {\r\n  var decompressedData\r\n\r\n  if (data instanceof ArrayBuffer) {\r\n    data = new Uint8Array(data)\r\n  }\r\n\r\n  try {\r\n    decompressedData = ungzip(data)\r\n  } catch (e) {\r\n    decompressedData = data  // assume it is already uncompressed\r\n  }\r\n\r\n  return decompressedData\r\n}\r\n\r\nDecompressorRegistry.add('gz', gzipDecompress)\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/gzip-decompressor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3987,
    "kind": "function",
    "name": "gzipDecompress",
    "memberof": "src/utils/gzip-decompressor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/gzip-decompressor.js~gzipDecompress",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/gzip-decompressor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3988,
    "kind": "file",
    "name": "src/utils/io-buffer.js",
    "content": "/**\r\n * @file IO Buffer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted from https://github.com/image-js/iobuffer\r\n * MIT License, Copyright (c) 2015 Michaël Zasso\r\n */\r\n\r\nconst defaultByteLength = 1024 * 8\r\nconst charArray = []\r\n\r\n/**\r\n * Class for writing and reading binary data\r\n */\r\nclass IOBuffer {\r\n  /**\r\n   * @param {undefined|number|ArrayBuffer|TypedArray|IOBuffer|Buffer} data - The data to construct the IOBuffer with.\r\n   *\r\n   * If it's a number, it will initialize the buffer with the number as\r\n   * the buffer's length. If it's undefined, it will initialize the buffer\r\n   * with a default length of 8 Kb. If its an ArrayBuffer, a TypedArray,\r\n   * an IOBuffer instance, or a Node.js Buffer, it will create a view over\r\n   * the underlying ArrayBuffer.\r\n   * @param {object} [params]\r\n   * @param {number} [params.offset=0] - Ignore the first n bytes of the ArrayBuffer\r\n   */\r\n  constructor (data, params) {\r\n    const p = params || {}\r\n    let dataIsGiven = false\r\n    if (data === undefined) {\r\n      data = defaultByteLength\r\n    }\r\n    if (typeof data === 'number') {\r\n      data = new ArrayBuffer(data)\r\n    } else {\r\n      dataIsGiven = true\r\n      this._lastWrittenByte = data.byteLength\r\n    }\r\n\r\n    const offset = p.offset ? p.offset >>> 0 : 0\r\n    let byteLength = data.byteLength - offset\r\n    let dvOffset = offset\r\n    if (data.buffer) {\r\n      if (data.byteLength !== data.buffer.byteLength) {\r\n        dvOffset = data.byteOffset + offset\r\n      }\r\n      data = data.buffer\r\n    }\r\n    if (dataIsGiven) {\r\n      this._lastWrittenByte = byteLength\r\n    } else {\r\n      this._lastWrittenByte = 0\r\n    }\r\n\r\n    /**\r\n     * Reference to the internal ArrayBuffer object\r\n     * @type {ArrayBuffer}\r\n     */\r\n    this.buffer = data\r\n    /**\r\n     * Byte length of the internal ArrayBuffer\r\n     * @type {Number}\r\n     */\r\n    this.length = byteLength\r\n    /**\r\n     * Byte length of the internal ArrayBuffer\r\n     * @type {Number}\r\n     */\r\n    this.byteLength = byteLength\r\n    /**\r\n     * Byte offset of the internal ArrayBuffer\r\n     * @type {Number}\r\n     */\r\n    this.byteOffset = dvOffset\r\n    /**\r\n     * The current offset of the buffer's pointer\r\n     * @type {Number}\r\n     */\r\n    this.offset = 0\r\n\r\n    this.littleEndian = true\r\n    this._data = new DataView(this.buffer, dvOffset, byteLength)\r\n    this._mark = 0\r\n    this._marks = []\r\n  }\r\n\r\n  /**\r\n   * Checks if the memory allocated to the buffer is sufficient to store more bytes after the offset\r\n   * @param {number} [byteLength=1] The needed memory in bytes\r\n   * @return {boolean} Returns true if there is sufficient space and false otherwise\r\n   */\r\n  available (byteLength) {\r\n    if (byteLength === undefined) byteLength = 1\r\n    return (this.offset + byteLength) <= this.length\r\n  }\r\n\r\n  /**\r\n   * Check if little-endian mode is used for reading and writing multi-byte values\r\n   * @return {boolean} Returns true if little-endian mode is used, false otherwise\r\n   */\r\n  isLittleEndian () {\r\n    return this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * Set little-endian mode for reading and writing multi-byte values\r\n   * @return {IOBuffer}\r\n   */\r\n  setLittleEndian () {\r\n    this.littleEndian = true\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Check if big-endian mode is used for reading and writing multi-byte values\r\n   * @return {boolean} Returns true if big-endian mode is used, false otherwise\r\n   */\r\n  isBigEndian () {\r\n    return !this.littleEndian\r\n  }\r\n\r\n  /**\r\n   * Switches to big-endian mode for reading and writing multi-byte values\r\n   * @return {IOBuffer}\r\n   */\r\n  setBigEndian () {\r\n    this.littleEndian = false\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer n bytes forward\r\n   * @param {number} n\r\n   * @return {IOBuffer}\r\n   */\r\n  skip (n) {\r\n    if (n === undefined) n = 1\r\n    this.offset += n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer to the given offset\r\n   * @param {number} offset\r\n   * @return {IOBuffer}\r\n   */\r\n  seek (offset) {\r\n    this.offset = offset\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Store the current pointer offset.\r\n   * @see {@link IOBuffer#reset}\r\n   * @return {IOBuffer}\r\n   */\r\n  mark () {\r\n    this._mark = this.offset\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer back to the last pointer offset set by mark\r\n   * @see {@link IOBuffer#mark}\r\n   * @return {IOBuffer}\r\n   */\r\n  reset () {\r\n    this.offset = this._mark\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Push the current pointer offset to the mark stack\r\n   * @see {@link IOBuffer#popMark}\r\n   * @return {IOBuffer}\r\n   */\r\n  pushMark () {\r\n    this._marks.push(this.offset)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Pop the last pointer offset from the mark stack, and set the current pointer offset to the popped value\r\n   * @see {@link IOBuffer#pushMark}\r\n   * @return {IOBuffer}\r\n   */\r\n  popMark () {\r\n    const offset = this._marks.pop()\r\n    if (offset === undefined) throw new Error('Mark stack empty')\r\n    this.seek(offset)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Move the pointer offset back to 0\r\n   * @return {IOBuffer}\r\n   */\r\n  rewind () {\r\n    this.offset = 0\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Make sure the buffer has sufficient memory to write a given byteLength at the current pointer offset\r\n   * If the buffer's memory is insufficient, this method will create a new buffer (a copy) with a length\r\n   * that is twice (byteLength + current offset)\r\n   * @param {number} [byteLength = 1]\r\n   * @return {IOBuffer}\r\n   */\r\n  ensureAvailable (byteLength) {\r\n    if (byteLength === undefined) byteLength = 1\r\n    if (!this.available(byteLength)) {\r\n      const lengthNeeded = this.offset + byteLength\r\n      const newLength = lengthNeeded * 2\r\n      const newArray = new Uint8Array(newLength)\r\n      newArray.set(new Uint8Array(this.buffer))\r\n      this.buffer = newArray.buffer\r\n      this.length = this.byteLength = newLength\r\n      this._data = new DataView(this.buffer)\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Read a byte and return false if the byte's value is 0, or true otherwise\r\n   * Moves pointer forward\r\n   * @return {boolean}\r\n   */\r\n  readBoolean () {\r\n    return this.readUint8() !== 0\r\n  }\r\n\r\n  /**\r\n   * Read a signed 8-bit integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt8 () {\r\n    return this._data.getInt8(this.offset++)\r\n  }\r\n\r\n  /**\r\n   * Read an unsigned 8-bit integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint8 () {\r\n    return this._data.getUint8(this.offset++)\r\n  }\r\n\r\n  /**\r\n   * Alias for {@link IOBuffer#readUint8}\r\n   * @return {number}\r\n   */\r\n  readByte () {\r\n    return this.readUint8()\r\n  }\r\n\r\n  /**\r\n   * Read n bytes and move pointer forward.\r\n   * @param {number} n\r\n   * @return {Uint8Array}\r\n   */\r\n  readBytes (n) {\r\n    if (n === undefined) n = 1\r\n    var bytes = new Uint8Array(n)\r\n    for (var i = 0; i < n; i++) {\r\n      bytes[i] = this.readByte()\r\n    }\r\n    return bytes\r\n  }\r\n\r\n  /**\r\n   * Read a 16-bit signed integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt16 () {\r\n    var value = this._data.getInt16(this.offset, this.littleEndian)\r\n    this.offset += 2\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 16-bit unsigned integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint16 () {\r\n    var value = this._data.getUint16(this.offset, this.littleEndian)\r\n    this.offset += 2\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit signed integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readInt32 () {\r\n    var value = this._data.getInt32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit unsigned integer and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readUint32 () {\r\n    var value = this._data.getUint32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 32-bit floating number and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readFloat32 () {\r\n    var value = this._data.getFloat32(this.offset, this.littleEndian)\r\n    this.offset += 4\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read a 64-bit floating number and move pointer forward\r\n   * @return {number}\r\n   */\r\n  readFloat64 () {\r\n    var value = this._data.getFloat64(this.offset, this.littleEndian)\r\n    this.offset += 8\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Read 1-byte ascii character and move pointer forward\r\n   * @return {string}\r\n   */\r\n  readChar () {\r\n    return String.fromCharCode(this.readInt8())\r\n  }\r\n\r\n  /**\r\n   * Read n 1-byte ascii characters and move pointer forward\r\n   * @param {number} n\r\n   * @return {string}\r\n   */\r\n  readChars (n) {\r\n    if (n === undefined) n = 1\r\n    charArray.length = n\r\n    for (var i = 0; i < n; i++) {\r\n      charArray[i] = this.readChar()\r\n    }\r\n    return charArray.join('')\r\n  }\r\n\r\n  /**\r\n   * Write 0xff if the passed value is truthy, 0x00 otherwise\r\n   * @param {any} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeBoolean (value) {\r\n    this.writeUint8(value ? 0xff : 0x00)\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as an 8-bit signed integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt8 (value) {\r\n    this.ensureAvailable(1)\r\n    this._data.setInt8(this.offset++, value)\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as a 8-bit unsigned integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint8 (value) {\r\n    this.ensureAvailable(1)\r\n    this._data.setUint8(this.offset++, value)\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * An alias for {@link IOBuffer#writeUint8}\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeByte (value) {\r\n    return this.writeUint8(value)\r\n  }\r\n\r\n  /**\r\n   * Write bytes\r\n   * @param {Array|Uint8Array} bytes\r\n   * @return {IOBuffer}\r\n   */\r\n  writeBytes (bytes) {\r\n    this.ensureAvailable(bytes.length)\r\n    for (var i = 0; i < bytes.length; i++) {\r\n      this._data.setUint8(this.offset++, bytes[i])\r\n    }\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as an 16-bit signed integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt16 (value) {\r\n    this.ensureAvailable(2)\r\n    this._data.setInt16(this.offset, value, this.littleEndian)\r\n    this.offset += 2\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write value as a 16-bit unsigned integer\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint16 (value) {\r\n    this.ensureAvailable(2)\r\n    this._data.setUint16(this.offset, value, this.littleEndian)\r\n    this.offset += 2\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit signed integer at the current pointer offset\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeInt32 (value) {\r\n    this.ensureAvailable(4)\r\n    this._data.setInt32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit unsigned integer at the current pointer offset\r\n   * @param {number} value - The value to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeUint32 (value) {\r\n    this.ensureAvailable(4)\r\n    this._data.setUint32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 32-bit floating number at the current pointer offset\r\n   * @param {number} value - The value to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeFloat32 (value) {\r\n    this.ensureAvailable(4)\r\n    this._data.setFloat32(this.offset, value, this.littleEndian)\r\n    this.offset += 4\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write a 64-bit floating number at the current pointer offset\r\n   * @param {number} value\r\n   * @return {IOBuffer}\r\n   */\r\n  writeFloat64 (value) {\r\n    this.ensureAvailable(8)\r\n    this._data.setFloat64(this.offset, value, this.littleEndian)\r\n    this.offset += 8\r\n    this._updateLastWrittenByte()\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Write the charCode of the passed string's first character to the current pointer offset\r\n   * @param {string} str - The character to set\r\n   * @return {IOBuffer}\r\n   */\r\n  writeChar (str) {\r\n    return this.writeUint8(str.charCodeAt(0))\r\n  }\r\n\r\n  /**\r\n   * Write the charCodes of the passed string's characters to the current pointer offset\r\n   * @param {string} str\r\n   * @return {IOBuffer}\r\n   */\r\n  writeChars (str) {\r\n    for (var i = 0; i < str.length; i++) {\r\n      this.writeUint8(str.charCodeAt(i))\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Export a Uint8Array view of the internal buffer.\r\n   * The view starts at the byte offset and its length\r\n   * is calculated to stop at the last written byte or the original length.\r\n   * @return {Uint8Array}\r\n   */\r\n  toArray () {\r\n    return new Uint8Array(this.buffer, this.byteOffset, this._lastWrittenByte)\r\n  }\r\n\r\n  /**\r\n   * Same as {@link IOBuffer#toArray} but returns a Buffer if possible. Otherwise returns a Uint8Array.\r\n   * @return {Buffer|Uint8Array}\r\n   */\r\n  getBuffer () {\r\n    if (typeof Buffer !== 'undefined') {\r\n      return Buffer.from(this.toArray())\r\n    } else {\r\n      return this.toArray()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the last written byte offset\r\n   * @private\r\n   */\r\n  _updateLastWrittenByte () {\r\n    if (this.offset > this._lastWrittenByte) {\r\n      this._lastWrittenByte = this.offset\r\n    }\r\n  }\r\n}\r\n\r\nexport default IOBuffer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/io-buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3989,
    "kind": "variable",
    "name": "defaultByteLength",
    "memberof": "src/utils/io-buffer.js",
    "static": true,
    "longname": "src/utils/io-buffer.js~defaultByteLength",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/utils/io-buffer.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "IO Buffer"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 3990,
    "kind": "variable",
    "name": "charArray",
    "memberof": "src/utils/io-buffer.js",
    "static": true,
    "longname": "src/utils/io-buffer.js~charArray",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/io-buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 3991,
    "kind": "class",
    "name": "IOBuffer",
    "memberof": "src/utils/io-buffer.js",
    "static": true,
    "longname": "src/utils/io-buffer.js~IOBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/io-buffer.js",
    "importStyle": "IOBuffer",
    "description": "Class for writing and reading binary data",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 3992,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "undefined",
          "number",
          "ArrayBuffer",
          "TypedArray",
          "IOBuffer",
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The data to construct the IOBuffer with.\n\nIf it's a number, it will initialize the buffer with the number as\nthe buffer's length. If it's undefined, it will initialize the buffer\nwith a default length of 8 Kb. If its an ArrayBuffer, a TypedArray,\nan IOBuffer instance, or a Node.js Buffer, it will create a view over\nthe underlying ArrayBuffer."
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "params",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "params.offset",
        "description": "Ignore the first n bytes of the ArrayBuffer"
      }
    ]
  },
  {
    "__docId__": 3993,
    "kind": "member",
    "name": "_lastWrittenByte",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#_lastWrittenByte",
    "access": "private",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 3996,
    "kind": "member",
    "name": "buffer",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#buffer",
    "access": "public",
    "description": "Reference to the internal ArrayBuffer object",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "ArrayBuffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3997,
    "kind": "member",
    "name": "length",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#length",
    "access": "public",
    "description": "Byte length of the internal ArrayBuffer",
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3998,
    "kind": "member",
    "name": "byteLength",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#byteLength",
    "access": "public",
    "description": "Byte length of the internal ArrayBuffer",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 3999,
    "kind": "member",
    "name": "byteOffset",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#byteOffset",
    "access": "public",
    "description": "Byte offset of the internal ArrayBuffer",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4000,
    "kind": "member",
    "name": "offset",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#offset",
    "access": "public",
    "description": "The current offset of the buffer's pointer",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4001,
    "kind": "member",
    "name": "littleEndian",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#littleEndian",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 4002,
    "kind": "member",
    "name": "_data",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#_data",
    "access": "private",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 4003,
    "kind": "member",
    "name": "_mark",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#_mark",
    "access": "private",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 4004,
    "kind": "member",
    "name": "_marks",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#_marks",
    "access": "private",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 4005,
    "kind": "method",
    "name": "available",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#available",
    "access": "public",
    "description": "Checks if the memory allocated to the buffer is sufficient to store more bytes after the offset",
    "lineNumber": 93,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "1",
        "defaultRaw": 1,
        "name": "byteLength",
        "description": "The needed memory in bytes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true if there is sufficient space and false otherwise"
    }
  },
  {
    "__docId__": 4006,
    "kind": "method",
    "name": "isLittleEndian",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#isLittleEndian",
    "access": "public",
    "description": "Check if little-endian mode is used for reading and writing multi-byte values",
    "lineNumber": 102,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true if little-endian mode is used, false otherwise"
    }
  },
  {
    "__docId__": 4007,
    "kind": "method",
    "name": "setLittleEndian",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#setLittleEndian",
    "access": "public",
    "description": "Set little-endian mode for reading and writing multi-byte values",
    "lineNumber": 110,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4009,
    "kind": "method",
    "name": "isBigEndian",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#isBigEndian",
    "access": "public",
    "description": "Check if big-endian mode is used for reading and writing multi-byte values",
    "lineNumber": 119,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true if big-endian mode is used, false otherwise"
    }
  },
  {
    "__docId__": 4010,
    "kind": "method",
    "name": "setBigEndian",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#setBigEndian",
    "access": "public",
    "description": "Switches to big-endian mode for reading and writing multi-byte values",
    "lineNumber": 127,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4012,
    "kind": "method",
    "name": "skip",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#skip",
    "access": "public",
    "description": "Move the pointer n bytes forward",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4014,
    "kind": "method",
    "name": "seek",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#seek",
    "access": "public",
    "description": "Move the pointer to the given offset",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "offset",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4016,
    "kind": "method",
    "name": "mark",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#mark",
    "access": "public",
    "description": "Store the current pointer offset.",
    "see": [
      "{@link IOBuffer#reset}"
    ],
    "lineNumber": 158,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4018,
    "kind": "method",
    "name": "reset",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#reset",
    "access": "public",
    "description": "Move the pointer back to the last pointer offset set by mark",
    "see": [
      "{@link IOBuffer#mark}"
    ],
    "lineNumber": 168,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4020,
    "kind": "method",
    "name": "pushMark",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#pushMark",
    "access": "public",
    "description": "Push the current pointer offset to the mark stack",
    "see": [
      "{@link IOBuffer#popMark}"
    ],
    "lineNumber": 178,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4021,
    "kind": "method",
    "name": "popMark",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#popMark",
    "access": "public",
    "description": "Pop the last pointer offset from the mark stack, and set the current pointer offset to the popped value",
    "see": [
      "{@link IOBuffer#pushMark}"
    ],
    "lineNumber": 188,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4022,
    "kind": "method",
    "name": "rewind",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#rewind",
    "access": "public",
    "description": "Move the pointer offset back to 0",
    "lineNumber": 199,
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4024,
    "kind": "method",
    "name": "ensureAvailable",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#ensureAvailable",
    "access": "public",
    "description": "Make sure the buffer has sufficient memory to write a given byteLength at the current pointer offset\nIf the buffer's memory is insufficient, this method will create a new buffer (a copy) with a length\nthat is twice (byteLength + current offset)",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": " 1",
        "defaultRaw": 1,
        "name": "byteLength",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4028,
    "kind": "method",
    "name": "readBoolean",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readBoolean",
    "access": "public",
    "description": "Read a byte and return false if the byte's value is 0, or true otherwise\nMoves pointer forward",
    "lineNumber": 230,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4029,
    "kind": "method",
    "name": "readInt8",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readInt8",
    "access": "public",
    "description": "Read a signed 8-bit integer and move pointer forward",
    "lineNumber": 238,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4030,
    "kind": "method",
    "name": "readUint8",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readUint8",
    "access": "public",
    "description": "Read an unsigned 8-bit integer and move pointer forward",
    "lineNumber": 246,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4031,
    "kind": "method",
    "name": "readByte",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readByte",
    "access": "public",
    "description": "Alias for {@link IOBuffer#readUint8}",
    "lineNumber": 254,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4032,
    "kind": "method",
    "name": "readBytes",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readBytes",
    "access": "public",
    "description": "Read n bytes and move pointer forward.",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Uint8Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4033,
    "kind": "method",
    "name": "readInt16",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readInt16",
    "access": "public",
    "description": "Read a 16-bit signed integer and move pointer forward",
    "lineNumber": 276,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4035,
    "kind": "method",
    "name": "readUint16",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readUint16",
    "access": "public",
    "description": "Read a 16-bit unsigned integer and move pointer forward",
    "lineNumber": 286,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4037,
    "kind": "method",
    "name": "readInt32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readInt32",
    "access": "public",
    "description": "Read a 32-bit signed integer and move pointer forward",
    "lineNumber": 296,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4039,
    "kind": "method",
    "name": "readUint32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readUint32",
    "access": "public",
    "description": "Read a 32-bit unsigned integer and move pointer forward",
    "lineNumber": 306,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4041,
    "kind": "method",
    "name": "readFloat32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readFloat32",
    "access": "public",
    "description": "Read a 32-bit floating number and move pointer forward",
    "lineNumber": 316,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4043,
    "kind": "method",
    "name": "readFloat64",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readFloat64",
    "access": "public",
    "description": "Read a 64-bit floating number and move pointer forward",
    "lineNumber": 326,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4045,
    "kind": "method",
    "name": "readChar",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readChar",
    "access": "public",
    "description": "Read 1-byte ascii character and move pointer forward",
    "lineNumber": 336,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4046,
    "kind": "method",
    "name": "readChars",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#readChars",
    "access": "public",
    "description": "Read n 1-byte ascii characters and move pointer forward",
    "lineNumber": 345,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4047,
    "kind": "method",
    "name": "writeBoolean",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeBoolean",
    "access": "public",
    "description": "Write 0xff if the passed value is truthy, 0x00 otherwise",
    "lineNumber": 359,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4048,
    "kind": "method",
    "name": "writeInt8",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeInt8",
    "access": "public",
    "description": "Write value as an 8-bit signed integer",
    "lineNumber": 369,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4049,
    "kind": "method",
    "name": "writeUint8",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeUint8",
    "access": "public",
    "description": "Write value as a 8-bit unsigned integer",
    "lineNumber": 381,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4050,
    "kind": "method",
    "name": "writeByte",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeByte",
    "access": "public",
    "description": "An alias for {@link IOBuffer#writeUint8}",
    "lineNumber": 393,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4051,
    "kind": "method",
    "name": "writeBytes",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeBytes",
    "access": "public",
    "description": "Write bytes",
    "lineNumber": 402,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "Uint8Array"
        ],
        "spread": false,
        "optional": false,
        "name": "bytes",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4052,
    "kind": "method",
    "name": "writeInt16",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeInt16",
    "access": "public",
    "description": "Write value as an 16-bit signed integer",
    "lineNumber": 416,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4054,
    "kind": "method",
    "name": "writeUint16",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeUint16",
    "access": "public",
    "description": "Write value as a 16-bit unsigned integer",
    "lineNumber": 429,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4056,
    "kind": "method",
    "name": "writeInt32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeInt32",
    "access": "public",
    "description": "Write a 32-bit signed integer at the current pointer offset",
    "lineNumber": 442,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4058,
    "kind": "method",
    "name": "writeUint32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeUint32",
    "access": "public",
    "description": "Write a 32-bit unsigned integer at the current pointer offset",
    "lineNumber": 455,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4060,
    "kind": "method",
    "name": "writeFloat32",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeFloat32",
    "access": "public",
    "description": "Write a 32-bit floating number at the current pointer offset",
    "lineNumber": 468,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4062,
    "kind": "method",
    "name": "writeFloat64",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeFloat64",
    "access": "public",
    "description": "Write a 64-bit floating number at the current pointer offset",
    "lineNumber": 481,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4064,
    "kind": "method",
    "name": "writeChar",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeChar",
    "access": "public",
    "description": "Write the charCode of the passed string's first character to the current pointer offset",
    "lineNumber": 494,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "The character to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4065,
    "kind": "method",
    "name": "writeChars",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#writeChars",
    "access": "public",
    "description": "Write the charCodes of the passed string's characters to the current pointer offset",
    "lineNumber": 503,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "IOBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4066,
    "kind": "method",
    "name": "toArray",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#toArray",
    "access": "public",
    "description": "Export a Uint8Array view of the internal buffer.\nThe view starts at the byte offset and its length\nis calculated to stop at the last written byte or the original length.",
    "lineNumber": 516,
    "return": {
      "nullable": null,
      "types": [
        "Uint8Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4067,
    "kind": "method",
    "name": "getBuffer",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#getBuffer",
    "access": "public",
    "description": "Same as {@link IOBuffer#toArray} but returns a Buffer if possible. Otherwise returns a Uint8Array.",
    "lineNumber": 524,
    "return": {
      "nullable": null,
      "types": [
        "Buffer",
        "Uint8Array"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4068,
    "kind": "method",
    "name": "_updateLastWrittenByte",
    "memberof": "src/utils/io-buffer.js~IOBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/io-buffer.js~IOBuffer#_updateLastWrittenByte",
    "access": "private",
    "description": "Update the last written byte offset",
    "lineNumber": 536
  },
  {
    "__docId__": 4070,
    "kind": "file",
    "name": "src/utils/kdtree.js",
    "content": "/**\r\n * @file Kdtree\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport BinaryHeap from './binary-heap.js'\r\n\r\n/**\r\n * Kdtree\r\n * @class\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>, 2016\r\n * @author Roman Bolzern <roman.bolzern@fhnw.ch>, 2013\r\n * @author I4DS http://www.fhnw.ch/i4ds, 2013\r\n * @license MIT License <http://www.opensource.org/licenses/mit-license.php>\r\n * @description\r\n * k-d Tree for typed arrays of 3d points (e.g. for Float32Array), in-place\r\n * provides fast nearest neighbour search\r\n *\r\n * Based on https://github.com/ubilabs/kd-tree-javascript by Ubilabs\r\n *\r\n * Further information (including mathematical properties)\r\n * http://en.wikipedia.org/wiki/Binary_tree\r\n * http://en.wikipedia.org/wiki/K-d_tree\r\n *\r\n * @example\r\n * points: [x, y, z, x, y, z, x, y, z, ...]\r\n * metric: function(a, b){\r\n *    return Math.pow(a[0]-b[0], 2) + Math.pow(a[1]-b[1], 2) + Math.pow(a[2]-b[2], 2);\r\n * }\r\n *\r\n * @param {Float32Array} points - points\r\n * @param {Function} metric - metric\r\n */\r\nfunction Kdtree (points, metric) {\r\n  var n = points.length / 3\r\n  var maxDepth = 0\r\n\r\n  var indices = new Uint32Array(n)\r\n  for (var i = 0; i < n; ++i) {\r\n    indices[ i ] = i\r\n  }\r\n  var nodes = new Int32Array(n * 4)\r\n  // pos, left, right, parent\r\n\r\n  var currentNode = 0\r\n  var currentDim = 0\r\n\r\n  function buildTree (depth, parent, arrBegin, arrEnd) {\r\n    if (depth > maxDepth) maxDepth = depth\r\n\r\n    var plength = arrEnd - arrBegin\r\n    if (plength === 0) {\r\n      return -1\r\n    }\r\n    var nodeIndex = currentNode * 4\r\n    currentNode += 1\r\n    if (plength === 1) {\r\n      nodes[ nodeIndex ] = arrBegin\r\n      nodes[ nodeIndex + 1 ] = -1\r\n      nodes[ nodeIndex + 2 ] = -1\r\n      nodes[ nodeIndex + 3 ] = parent\r\n      return nodeIndex\r\n    }\r\n    // if( plength <= 32 ){\r\n    //     return nodeIndex;\r\n    // }\r\n\r\n    var arrMedian = arrBegin + Math.floor(plength / 2)\r\n    currentDim = depth % 3\r\n\r\n    // inlined quickselect function\r\n    var j, tmp, pivotIndex, pivotValue, storeIndex\r\n    var left = arrBegin\r\n    var right = arrEnd - 1\r\n    while (right > left) {\r\n      pivotIndex = (left + right) >> 1\r\n      pivotValue = points[ indices[ pivotIndex ] * 3 + currentDim ]\r\n      // swap( pivotIndex, right );\r\n      tmp = indices[ pivotIndex ]\r\n      indices[ pivotIndex ] = indices[ right ]\r\n      indices[ right ] = tmp\r\n      storeIndex = left\r\n      for (j = left; j < right; ++j) {\r\n        if (points[ indices[ j ] * 3 + currentDim ] < pivotValue) {\r\n          // swap( storeIndex, j );\r\n          tmp = indices[ storeIndex ]\r\n          indices[ storeIndex ] = indices[ j ]\r\n          indices[ j ] = tmp\r\n          ++storeIndex\r\n        }\r\n      }\r\n      // swap( right, storeIndex );\r\n      tmp = indices[ right ]\r\n      indices[ right ] = indices[ storeIndex ]\r\n      indices[ storeIndex ] = tmp\r\n      pivotIndex = storeIndex\r\n      if (arrMedian === pivotIndex) {\r\n        break\r\n      } else if (arrMedian < pivotIndex) {\r\n        right = pivotIndex - 1\r\n      } else {\r\n        left = pivotIndex + 1\r\n      }\r\n    }\r\n\r\n    nodes[ nodeIndex ] = arrMedian\r\n    nodes[ nodeIndex + 1 ] = buildTree(depth + 1, nodeIndex, arrBegin, arrMedian)\r\n    nodes[ nodeIndex + 2 ] = buildTree(depth + 1, nodeIndex, arrMedian + 1, arrEnd)\r\n    nodes[ nodeIndex + 3 ] = parent\r\n    return nodeIndex\r\n  }\r\n\r\n  function getNodeDepth (nodeIndex) {\r\n    var parentIndex = nodes[ nodeIndex + 3 ]\r\n    if (parentIndex === -1) {\r\n      return 0\r\n    } else {\r\n      return getNodeDepth(parentIndex) + 1\r\n    }\r\n  }\r\n\r\n  // TODO\r\n  // function getNodePos( node ){}\r\n\r\n  var rootIndex = buildTree(0, -1, 0, n)\r\n\r\n  /**\r\n   * find nearest points\r\n   * @param {Array} point - array of size 3\r\n   * @param {Integer} maxNodes - max amount of nodes to return\r\n   * @param {Float} maxDistance - maximum distance of point to result nodes\r\n   * @return {Array} array of point, distance pairs\r\n   */\r\n  function nearest (point, maxNodes, maxDistance) {\r\n    var bestNodes = new BinaryHeap(\r\n      function (e) { return -e[ 1 ] }\r\n    )\r\n\r\n    function nearestSearch (nodeIndex) {\r\n      var bestChild, otherChild\r\n      var dimension = getNodeDepth(nodeIndex) % 3\r\n      var pointIndex = indices[ nodes[ nodeIndex ] ] * 3\r\n      var ownPoint = [\r\n        points[ pointIndex + 0 ],\r\n        points[ pointIndex + 1 ],\r\n        points[ pointIndex + 2 ]\r\n      ]\r\n      var ownDistance = metric(point, ownPoint)\r\n\r\n      function saveNode (nodeIndex, distance) {\r\n        bestNodes.push([ nodeIndex, distance ])\r\n        if (bestNodes.size() > maxNodes) {\r\n          bestNodes.pop()\r\n        }\r\n      }\r\n\r\n      var leftIndex = nodes[ nodeIndex + 1 ]\r\n      var rightIndex = nodes[ nodeIndex + 2 ]\r\n\r\n            // if it's a leaf\r\n      if (rightIndex === -1 && leftIndex === -1) {\r\n        if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\r\n          ownDistance <= maxDistance\r\n        ) {\r\n          saveNode(nodeIndex, ownDistance)\r\n        }\r\n        return\r\n      }\r\n\r\n      if (rightIndex === -1) {\r\n        bestChild = leftIndex\r\n      } else if (leftIndex === -1) {\r\n        bestChild = rightIndex\r\n      } else {\r\n        if (point[ dimension ] <= points[ pointIndex + dimension ]) {\r\n          bestChild = leftIndex\r\n        } else {\r\n          bestChild = rightIndex\r\n        }\r\n      }\r\n\r\n      // recursive search\r\n      nearestSearch(bestChild)\r\n\r\n      if ((bestNodes.size() < maxNodes || ownDistance < bestNodes.peek()[ 1 ]) &&\r\n        ownDistance <= maxDistance\r\n      ) {\r\n        saveNode(nodeIndex, ownDistance)\r\n      }\r\n\r\n      // if there's still room or the current distance is nearer than the best distance\r\n\r\n      var linearPoint = []\r\n      for (var i = 0; i < 3; i += 1) {\r\n        if (i === dimension) {\r\n          linearPoint[ i ] = point[ i ]\r\n        } else {\r\n          linearPoint[ i ] = points[ pointIndex + i ]\r\n        }\r\n      }\r\n      var linearDistance = metric(linearPoint, ownPoint)\r\n\r\n      if ((bestNodes.size() < maxNodes || Math.abs(linearDistance) < bestNodes.peek()[ 1 ]) &&\r\n        Math.abs(linearDistance) <= maxDistance\r\n      ) {\r\n        if (bestChild === leftIndex) {\r\n          otherChild = rightIndex\r\n        } else {\r\n          otherChild = leftIndex\r\n        }\r\n        if (otherChild !== -1) {\r\n          nearestSearch(otherChild)\r\n        }\r\n      }\r\n    }\r\n\r\n    nearestSearch(rootIndex)\r\n\r\n    var result = []\r\n    for (var i = 0, il = Math.min(bestNodes.size(), maxNodes); i < il; i += 1) {\r\n      result.push(bestNodes.content[ i ])\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  function verify (nodeIndex, depth) {\r\n    var count = 1\r\n\r\n    if (nodeIndex === undefined) {\r\n      nodeIndex = rootIndex\r\n      depth = 0\r\n    }\r\n\r\n    if (nodeIndex === -1) {\r\n      throw new Error('node is null')\r\n    }\r\n\r\n    var dim = depth % 3\r\n\r\n    var leftIndex = nodes[ nodeIndex + 1 ]\r\n    var rightIndex = nodes[ nodeIndex + 2 ]\r\n\r\n    if (leftIndex !== -1) {\r\n      if (points[ indices[ nodes[ leftIndex ] ] * 3 + dim ] >\r\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\r\n      ) {\r\n        throw new Error('left child is > parent!')\r\n      }\r\n      count += verify(leftIndex, depth + 1)\r\n    }\r\n\r\n    if (rightIndex !== -1) {\r\n      if (points[ indices[ nodes[ rightIndex ] ] * 3 + dim ] <\r\n        points[ indices[ nodes[ nodeIndex ] ] * 3 + dim ]\r\n      ) {\r\n        throw new Error('right child is < parent!')\r\n      }\r\n      count += verify(rightIndex, depth + 1)\r\n    }\r\n\r\n    return count\r\n  }\r\n\r\n  // API\r\n\r\n  this.rootIndex = rootIndex\r\n  this.maxDepth = maxDepth\r\n  this.nearest = nearest\r\n  this.indices = indices\r\n  this.nodes = nodes\r\n  this.verify = verify\r\n}\r\n\r\nexport default Kdtree\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/kdtree.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4071,
    "kind": "function",
    "name": "Kdtree",
    "memberof": "src/utils/kdtree.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/kdtree.js~Kdtree",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/kdtree.js",
    "importStyle": "Kdtree",
    "description": "Kdtree",
    "examples": [
      "points: [x, y, z, x, y, z, x, y, z, ...]\nmetric: function(a, b){\n   return Math.pow(a[0]-b[0], 2) + Math.pow(a[1]-b[1], 2) + Math.pow(a[2]-b[2], 2);\n}"
    ],
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>, 2016"
      },
      {
        "tagName": "@author",
        "tagValue": "Roman Bolzern <roman.bolzern@fhnw.ch>, 2013"
      },
      {
        "tagName": "@author",
        "tagValue": "I4DS http://www.fhnw.ch/i4ds, 2013"
      },
      {
        "tagName": "@license",
        "tagValue": "MIT License <http://www.opensource.org/licenses/mit-license.php>"
      },
      {
        "tagName": "@description",
        "tagValue": "k-d Tree for typed arrays of 3d points (e.g. for Float32Array), in-place\nprovides fast nearest neighbour search\n\nBased on https://github.com/ubilabs/kd-tree-javascript by Ubilabs\n\nFurther information (including mathematical properties)\nhttp://en.wikipedia.org/wiki/Binary_tree\nhttp://en.wikipedia.org/wiki/K-d_tree"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Float32Array"
        ],
        "spread": false,
        "optional": false,
        "name": "points",
        "description": "points"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "metric",
        "description": "metric"
      }
    ]
  },
  {
    "__docId__": 4072,
    "kind": "file",
    "name": "src/utils/label-factory.js",
    "content": "/**\r\n * @file Label Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { AA1 } from '../structure/structure-constants.js'\r\n\r\nfunction LabelFactory (type, text) {\r\n  this.type = type\r\n  this.text = text || {}\r\n}\r\n\r\nLabelFactory.prototype = {\r\n\r\n  constructor: LabelFactory,\r\n\r\n  atomLabel: function (a) {\r\n    var type = this.type\r\n\r\n    var l\r\n\r\n    switch (type) {\r\n      case 'atomname':\r\n        l = a.atomname\r\n        break\r\n\r\n      case 'atomindex':\r\n        l = '' + a.index\r\n        break\r\n\r\n      case 'occupancy':\r\n        l = a.occupancy.toFixed(2)\r\n        break\r\n\r\n      case 'bfactor':\r\n        l = a.bfactor.toFixed(2)\r\n        break\r\n\r\n      case 'serial':\r\n        l = '' + a.serial\r\n        break\r\n\r\n      case 'element':\r\n        l = a.element\r\n        break\r\n\r\n      case 'atom':\r\n        l = a.atomname + '|' + a.index\r\n        break\r\n\r\n      case 'resname':\r\n        l = a.resname\r\n        break\r\n\r\n      case 'resno':\r\n        l = '' + a.resno\r\n        break\r\n\r\n      case 'res':\r\n        var resname = a.resname.toUpperCase()\r\n        l = (AA1[ resname ] || resname) + a.resno\r\n        break\r\n\r\n      case 'text':\r\n        l = this.text[ a.index ]\r\n        break\r\n\r\n            // case \"qualified\":\r\n      default:\r\n        l = a.qualifiedName()\r\n        break\r\n    }\r\n\r\n    return l === undefined ? '' : l\r\n  }\r\n\r\n}\r\n\r\nLabelFactory.types = {\r\n\r\n  '': '',\r\n  'atomname': 'atom name',\r\n  'atomindex': 'atom index',\r\n  'occupancy': 'occupancy',\r\n  'bfactor': 'b-factor',\r\n  'serial': 'serial',\r\n  'element': 'element',\r\n  'atom': 'atom name + index',\r\n  'resname': 'residue name',\r\n  'resno': 'residue no',\r\n  'res': 'residue name + no',\r\n  'text': 'text',\r\n  'qualified': 'qualified name'\r\n\r\n}\r\n\r\nexport default LabelFactory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/label-factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4073,
    "kind": "function",
    "name": "LabelFactory",
    "memberof": "src/utils/label-factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/label-factory.js~LabelFactory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/label-factory.js",
    "importStyle": "LabelFactory",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 4074,
    "kind": "file",
    "name": "src/utils/netcdf-reader.js",
    "content": "/**\r\n * @file Netcdf Reader\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n *\r\n * Adapted from https://github.com/cheminfo-js/netcdfjs\r\n * MIT License, Copyright (c) 2016 cheminfo\r\n */\r\n\r\nimport IOBuffer from './io-buffer.js'\r\n\r\n/**\r\n * Throws a non-valid NetCDF exception if the statement it's true\r\n * @ignore\r\n * @param {boolean} statement - Throws if true\r\n * @param {string} reason - Reason to throw\r\n */\r\nfunction notNetcdf (statement, reason) {\r\n  if (statement) {\r\n    throw new TypeError('Not a valid NetCDF v3.x file: ' + reason)\r\n  }\r\n}\r\n\r\n/**\r\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n */\r\nfunction padding (buffer) {\r\n  if ((buffer.offset % 4) !== 0) {\r\n    buffer.skip(4 - (buffer.offset % 4))\r\n  }\r\n}\r\n\r\n/**\r\n * Reads the name\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {string} - Name\r\n */\r\nfunction readName (buffer) {\r\n  // Read name\r\n  const nameLength = buffer.readUint32()\r\n  const name = buffer.readChars(nameLength)\r\n\r\n  // validate name\r\n  // TODO\r\n\r\n  // Apply padding\r\n  padding(buffer)\r\n  return name\r\n}\r\n\r\nconst types = {\r\n  BYTE: 1,\r\n  CHAR: 2,\r\n  SHORT: 3,\r\n  INT: 4,\r\n  FLOAT: 5,\r\n  DOUBLE: 6\r\n}\r\n\r\n/**\r\n * Parse a number into their respective type\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {string} - parsed value of the type\r\n */\r\nfunction num2str (type) {\r\n  switch (Number(type)) {\r\n    case types.BYTE:\r\n      return 'byte'\r\n    case types.CHAR:\r\n      return 'char'\r\n    case types.SHORT:\r\n      return 'short'\r\n    case types.INT:\r\n      return 'int'\r\n    case types.FLOAT:\r\n      return 'float'\r\n    case types.DOUBLE:\r\n      return 'double'\r\n    default:\r\n      return 'undefined'\r\n  }\r\n}\r\n\r\n/**\r\n * Parse a number type identifier to his size in bytes\r\n * @ignore\r\n * @param {number} type - integer that represents the type\r\n * @return {number} -size of the type\r\n */\r\nfunction num2bytes (type) {\r\n  switch (Number(type)) {\r\n    case types.BYTE:\r\n      return 1\r\n    case types.CHAR:\r\n      return 1\r\n    case types.SHORT:\r\n      return 2\r\n    case types.INT:\r\n      return 4\r\n    case types.FLOAT:\r\n      return 4\r\n    case types.DOUBLE:\r\n      return 8\r\n    default:\r\n      return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Reverse search of num2str\r\n * @ignore\r\n * @param {string} type - string that represents the type\r\n * @return {number} - parsed value of the type\r\n */\r\nfunction str2num (type) {\r\n  switch (String(type)) {\r\n    case 'byte':\r\n      return types.BYTE\r\n    case 'char':\r\n      return types.CHAR\r\n    case 'short':\r\n      return types.SHORT\r\n    case 'int':\r\n      return types.INT\r\n    case 'float':\r\n      return types.FLOAT\r\n    case 'double':\r\n      return types.DOUBLE\r\n    default:\r\n      return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Auxiliary function to read numeric data\r\n * @ignore\r\n * @param {number} size - Size of the element to read\r\n * @param {function} bufferReader - Function to read next value\r\n * @return {Array<number>|number}\r\n */\r\nfunction readNumber (size, bufferReader) {\r\n  if (size !== 1) {\r\n    const numbers = new Array(size)\r\n    for (let i = 0; i < size; i++) {\r\n      numbers[i] = bufferReader()\r\n    }\r\n    return numbers\r\n  } else {\r\n    return bufferReader()\r\n  }\r\n}\r\n\r\n/**\r\n * Given a type and a size reads the next element\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} type - Type of the data to read\r\n * @param {number} size - Size of the element to read\r\n * @return {string|Array<number>|number}\r\n */\r\nfunction readType (buffer, type, size) {\r\n  switch (type) {\r\n    case types.BYTE:\r\n      return buffer.readBytes(size)\r\n    case types.CHAR:\r\n      return trimNull(buffer.readChars(size))\r\n    case types.SHORT:\r\n      return readNumber(size, buffer.readInt16.bind(buffer))\r\n    case types.INT:\r\n      return readNumber(size, buffer.readInt32.bind(buffer))\r\n    case types.FLOAT:\r\n      return readNumber(size, buffer.readFloat32.bind(buffer))\r\n    case types.DOUBLE:\r\n      return readNumber(size, buffer.readFloat64.bind(buffer))\r\n    default:\r\n      notNetcdf(true, 'non valid type ' + type)\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Removes null terminate value\r\n * @ignore\r\n * @param {string} value - String to trim\r\n * @return {string} - Trimmed string\r\n */\r\nfunction trimNull (value) {\r\n  if (value.charCodeAt(value.length - 1) === 0) {\r\n    return value.substring(0, value.length - 1)\r\n  }\r\n  return value\r\n}\r\n\r\n// const STREAMING = 4294967295;\r\n\r\n/**\r\n * Read data for the given non-record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction nonRecord (buffer, variable) {\r\n  // variable type\r\n  const type = str2num(variable.type)\r\n\r\n  // size of the data\r\n  const size = variable.size / num2bytes(type)\r\n\r\n  // iterates over the data\r\n  const data = new Array(size)\r\n  for (let i = 0; i < size; i++) {\r\n    data[i] = readType(buffer, type, 1)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n/**\r\n * Read data for the given record variable\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {object} variable - Variable metadata\r\n * @param {object} recordDimension - Record dimension metadata\r\n * @return {Array} - Data of the element\r\n */\r\nfunction record (buffer, variable, recordDimension) {\r\n  // variable type\r\n  const type = str2num(variable.type)\r\n  const width = variable.size ? variable.size / num2bytes(type) : 1\r\n\r\n  // size of the data\r\n  // TODO streaming data\r\n  const size = recordDimension.length\r\n\r\n  // iterates over the data\r\n  const data = new Array(size)\r\n  const step = recordDimension.recordStep\r\n\r\n  for (let i = 0; i < size; i++) {\r\n    const currentOffset = buffer.offset\r\n    data[i] = readType(buffer, type, width)\r\n    buffer.seek(currentOffset + step)\r\n  }\r\n\r\n  return data\r\n}\r\n\r\n// Grammar constants\r\nconst ZERO = 0\r\nconst NC_DIMENSION = 10\r\nconst NC_VARIABLE = 11\r\nconst NC_ATTRIBUTE = 12\r\n\r\n/**\r\n * Read the header of the file\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} version - Version of the file\r\n * @return {object} - Object with the fields:\r\n *  * `recordDimension`: Number with the length of record dimension\r\n *  * `dimensions`: List of dimensions\r\n *  * `globalAttributes`: List of global attributes\r\n *  * `variables`: List of variables\r\n */\r\nfunction header (buffer, version) {\r\n  // Length of record dimension\r\n  // sum of the varSize's of all the record variables.\r\n  const header = {recordDimension: {length: buffer.readUint32()}}\r\n\r\n  // Version\r\n  header.version = version\r\n\r\n  // List of dimensions\r\n  const dimList = dimensionsList(buffer)\r\n  header.recordDimension.id = dimList.recordId\r\n  header.recordDimension.name = dimList.recordName\r\n  header.dimensions = dimList.dimensions\r\n\r\n  // List of global attributes\r\n  header.globalAttributes = attributesList(buffer)\r\n\r\n  // List of variables\r\n  const variables = variablesList(buffer, dimList.recordId, version)\r\n  header.variables = variables.variables\r\n  header.recordDimension.recordStep = variables.recordStep\r\n\r\n  return header\r\n}\r\n\r\n/**\r\n * List of dimensions\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {object} - List of dimensions and record dimension with:\r\n *  * `name`: String with the name of the dimension\r\n *  * `size`: Number with the size of the dimension\r\n */\r\nfunction dimensionsList (buffer) {\r\n  let dimensions, recordId, recordName\r\n  const dimList = buffer.readUint32()\r\n  if (dimList === ZERO) {\r\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of dimensions')\r\n    return []\r\n  } else {\r\n    notNetcdf((dimList !== NC_DIMENSION), 'wrong tag for list of dimensions')\r\n\r\n    // Length of dimensions\r\n    const dimensionSize = buffer.readUint32()\r\n    dimensions = new Array(dimensionSize)\r\n    for (let dim = 0; dim < dimensionSize; dim++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read dimension size\r\n      const size = buffer.readUint32()\r\n      if (size === 0) {\r\n        recordId = dim\r\n        recordName = name\r\n      }\r\n\r\n      dimensions[dim] = {\r\n        name: name,\r\n        size: size\r\n      }\r\n    }\r\n  }\r\n  return {\r\n    dimensions: dimensions,\r\n    recordId: recordId,\r\n    recordName: recordName\r\n  }\r\n}\r\n\r\n/**\r\n * List of attributes\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @return {Array<object>} - List of attributes with:\r\n *  * `name`: String with the name of the attribute\r\n *  * `type`: String with the type of the attribute\r\n *  * `value`: A number or string with the value of the attribute\r\n */\r\nfunction attributesList (buffer) {\r\n  let attributes\r\n  const gAttList = buffer.readUint32()\r\n  if (gAttList === ZERO) {\r\n    notNetcdf((buffer.readUint32() !== ZERO), 'wrong empty tag for list of attributes')\r\n    return []\r\n  } else {\r\n    notNetcdf((gAttList !== NC_ATTRIBUTE), 'wrong tag for list of attributes')\r\n\r\n    // Length of attributes\r\n    const attributeSize = buffer.readUint32()\r\n    attributes = new Array(attributeSize)\r\n    for (let gAtt = 0; gAtt < attributeSize; gAtt++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read type\r\n      const type = buffer.readUint32()\r\n      notNetcdf(((type < 1) || (type > 6)), 'non valid type ' + type)\r\n\r\n      // Read attribute\r\n      const size = buffer.readUint32()\r\n      const value = readType(buffer, type, size)\r\n\r\n      // Apply padding\r\n      padding(buffer)\r\n\r\n      attributes[gAtt] = {\r\n        name: name,\r\n        type: num2str(type),\r\n        value: value\r\n      }\r\n    }\r\n  }\r\n  return attributes\r\n}\r\n\r\n/**\r\n * List of variables\r\n * @ignore\r\n * @param {IOBuffer} buffer - Buffer for the file data\r\n * @param {number} recordId - Id if the record dimension\r\n * @param {number} version - Version of the file\r\n * @return {object} - Number of recordStep and list of variables with:\r\n *  * `name`: String with the name of the variable\r\n *  * `dimensions`: Array with the dimension IDs of the variable\r\n *  * `attributes`: Array with the attributes of the variable\r\n *  * `type`: String with the type of the variable\r\n *  * `size`: Number with the size of the variable\r\n *  * `offset`: Number with the offset where of the variable begins\r\n *  * `record`: True if is a record variable, false otherwise\r\n */\r\nfunction variablesList (buffer, recordId, version) {\r\n  const varList = buffer.readUint32()\r\n  let recordStep = 0\r\n  let variables\r\n  if (varList === ZERO) {\r\n    notNetcdf(\r\n      (buffer.readUint32() !== ZERO),\r\n      'wrong empty tag for list of variables'\r\n    )\r\n    return []\r\n  } else {\r\n    notNetcdf((varList !== NC_VARIABLE), 'wrong tag for list of variables')\r\n\r\n    // Length of variables\r\n    const variableSize = buffer.readUint32()\r\n    variables = new Array(variableSize)\r\n    for (let v = 0; v < variableSize; v++) {\r\n      // Read name\r\n      const name = readName(buffer)\r\n\r\n      // Read dimensionality of the variable\r\n      const dimensionality = buffer.readUint32()\r\n\r\n      // Index into the list of dimensions\r\n      const dimensionsIds = new Array(dimensionality)\r\n      for (let dim = 0; dim < dimensionality; dim++) {\r\n        dimensionsIds[dim] = buffer.readUint32()\r\n      }\r\n\r\n      // Read variables size\r\n      const attributes = attributesList(buffer)\r\n\r\n      // Read type\r\n      const type = buffer.readUint32()\r\n      notNetcdf(((type < 1) && (type > 6)), 'non valid type ' + type)\r\n\r\n      // Read variable size\r\n      // The 32-bit varSize field is not large enough to contain the\r\n      // size of variables that require more than 2^32 - 4 bytes,\r\n      // so 2^32 - 1 is used in the varSize field for such variables.\r\n      const varSize = buffer.readUint32()\r\n\r\n      // Read offset\r\n      let offset = buffer.readUint32()\r\n      if (version === 2) {\r\n        notNetcdf((offset > 0), 'offsets larger than 4GB not supported')\r\n        offset = buffer.readUint32()\r\n      }\r\n\r\n      // Count amount of record variables\r\n      if (dimensionsIds[0] === recordId) {\r\n        recordStep += varSize\r\n      }\r\n\r\n      variables[v] = {\r\n        name: name,\r\n        dimensions: dimensionsIds,\r\n        attributes: attributes,\r\n        type: num2str(type),\r\n        size: varSize,\r\n        offset: offset,\r\n        record: (dimensionsIds[0] === recordId)\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    variables: variables,\r\n    recordStep: recordStep\r\n  }\r\n}\r\n\r\n/**\r\n * Reads a NetCDF v3.x file\r\n * https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html\r\n */\r\nclass NetcdfReader {\r\n  /**\r\n   * @param {ArrayBuffer} data - ArrayBuffer or any Typed Array with the data\r\n   */\r\n  constructor (data) {\r\n    const buffer = new IOBuffer(data)\r\n    buffer.setBigEndian()\r\n\r\n    // Validate that it's a NetCDF file\r\n    notNetcdf((buffer.readChars(3) !== 'CDF'), 'should start with CDF')\r\n\r\n    // Check the NetCDF format\r\n    const version = buffer.readByte()\r\n    notNetcdf((version > 2), 'unknown version')\r\n\r\n    // Read the header\r\n    this.header = header(buffer, version)\r\n    this.buffer = buffer\r\n  }\r\n\r\n  /**\r\n   * @return {string} - Version for the NetCDF format\r\n   */\r\n  get version () {\r\n    if (this.header.version === 1) {\r\n      return 'classic format'\r\n    } else {\r\n      return '64-bit offset format'\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @return {object} - Metadata for the record dimension\r\n   *  * `length`: Number of elements in the record dimension\r\n   *  * `id`: Id number in the list of dimensions for the record dimension\r\n   *  * `name`: String with the name of the record dimension\r\n   *  * `recordStep`: Number with the record variables step size\r\n   */\r\n  get recordDimension () {\r\n    return this.header.recordDimension\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of dimensions with:\r\n   *  * `name`: String with the name of the dimension\r\n   *  * `size`: Number with the size of the dimension\r\n   */\r\n  get dimensions () {\r\n    return this.header.dimensions\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of global attributes with:\r\n   *  * `name`: String with the name of the attribute\r\n   *  * `type`: String with the type of the attribute\r\n   *  * `value`: A number or string with the value of the attribute\r\n   */\r\n  get globalAttributes () {\r\n    return this.header.globalAttributes\r\n  }\r\n\r\n  /**\r\n   * @return {Array<object>} - List of variables with:\r\n   *  * `name`: String with the name of the variable\r\n   *  * `dimensions`: Array with the dimension IDs of the variable\r\n   *  * `attributes`: Array with the attributes of the variable\r\n   *  * `type`: String with the type of the variable\r\n   *  * `size`: Number with the size of the variable\r\n   *  * `offset`: Number with the offset where of the variable begins\r\n   *  * `record`: True if is a record variable, false otherwise\r\n   */\r\n  get variables () {\r\n    return this.header.variables\r\n  }\r\n\r\n  /**\r\n   * Checks if a variable is available\r\n   * @param {string|object} variableName - Name of the variable to check\r\n   * @return {Boolean} - Variable existence\r\n   */\r\n  hasDataVariable (variableName) {\r\n    return this.header.variables.findIndex(function (val) {\r\n      return val.name === variableName\r\n    }) !== -1\r\n  }\r\n\r\n  /**\r\n   * Retrieves the data for a given variable\r\n   * @param {string|object} variableName - Name of the variable to search or variable object\r\n   * @return {Array} - List with the variable values\r\n   */\r\n  getDataVariable (variableName) {\r\n    let variable\r\n    if (typeof variableName === 'string') {\r\n            // search the variable\r\n      variable = this.header.variables.find(function (val) {\r\n        return val.name === variableName\r\n      })\r\n    } else {\r\n      variable = variableName\r\n    }\r\n\r\n    // throws if variable not found\r\n    notNetcdf((variable === undefined), 'variable not found')\r\n\r\n    // go to the offset position\r\n    this.buffer.seek(variable.offset)\r\n\r\n    if (variable.record) {\r\n      // record variable case\r\n      return record(this.buffer, variable, this.header.recordDimension)\r\n    } else {\r\n      // non-record variable case\r\n      return nonRecord(this.buffer, variable)\r\n    }\r\n  }\r\n}\r\n\r\nexport default NetcdfReader\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/netcdf-reader.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4075,
    "kind": "function",
    "name": "notNetcdf",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~notNetcdf",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Throws a non-valid NetCDF exception if the statement it's true",
    "lineNumber": 18,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "statement",
        "description": "Throws if true"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reason",
        "description": "Reason to throw"
      }
    ]
  },
  {
    "__docId__": 4076,
    "kind": "function",
    "name": "padding",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~padding",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Moves 1, 2, or 3 bytes to next 4-byte boundary",
    "lineNumber": 29,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      }
    ]
  },
  {
    "__docId__": 4077,
    "kind": "function",
    "name": "readName",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~readName",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Reads the name",
    "lineNumber": 41,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Name"
    }
  },
  {
    "__docId__": 4078,
    "kind": "variable",
    "name": "types",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~types",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4079,
    "kind": "function",
    "name": "num2str",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~num2str",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4080,
    "kind": "function",
    "name": "num2bytes",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~num2bytes",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Parse a number type identifier to his size in bytes",
    "lineNumber": 94,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "integer that represents the type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "size of the type"
    }
  },
  {
    "__docId__": 4081,
    "kind": "function",
    "name": "str2num",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~str2num",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Reverse search of num2str",
    "lineNumber": 119,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "string that represents the type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "parsed value of the type"
    }
  },
  {
    "__docId__": 4082,
    "kind": "function",
    "name": "readNumber",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~readNumber",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Auxiliary function to read numeric data",
    "lineNumber": 145,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Size of the element to read"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferReader",
        "description": "Function to read next value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<number>",
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4083,
    "kind": "function",
    "name": "readType",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~readType",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Given a type and a size reads the next element",
    "lineNumber": 165,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Type of the data to read"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "Size of the element to read"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string",
        "Array<number>",
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 4084,
    "kind": "function",
    "name": "trimNull",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~trimNull",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Removes null terminate value",
    "lineNumber": 191,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "String to trim"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Trimmed string"
    }
  },
  {
    "__docId__": 4085,
    "kind": "function",
    "name": "nonRecord",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~nonRecord",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Read data for the given non-record variable",
    "lineNumber": 207,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "variable",
        "description": "Variable metadata"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Data of the element"
    }
  },
  {
    "__docId__": 4086,
    "kind": "function",
    "name": "record",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~record",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Read data for the given record variable",
    "lineNumber": 231,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "variable",
        "description": "Variable metadata"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "recordDimension",
        "description": "Record dimension metadata"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Data of the element"
    }
  },
  {
    "__docId__": 4087,
    "kind": "variable",
    "name": "ZERO",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~ZERO",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 254,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4088,
    "kind": "variable",
    "name": "NC_DIMENSION",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~NC_DIMENSION",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 255,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4089,
    "kind": "variable",
    "name": "NC_VARIABLE",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~NC_VARIABLE",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4090,
    "kind": "variable",
    "name": "NC_ATTRIBUTE",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~NC_ATTRIBUTE",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 257,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4091,
    "kind": "function",
    "name": "header",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~header",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "Read the header of the file",
    "lineNumber": 270,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "Version of the file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Object with the fields:\n * `recordDimension`: Number with the length of record dimension\n * `dimensions`: List of dimensions\n * `globalAttributes`: List of global attributes\n * `variables`: List of variables"
    }
  },
  {
    "__docId__": 4092,
    "kind": "function",
    "name": "dimensionsList",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~dimensionsList",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "List of dimensions",
    "lineNumber": 303,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "List of dimensions and record dimension with:\n * `name`: String with the name of the dimension\n * `size`: Number with the size of the dimension"
    }
  },
  {
    "__docId__": 4093,
    "kind": "function",
    "name": "attributesList",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~attributesList",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "List of attributes",
    "lineNumber": 348,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "List of attributes with:\n * `name`: String with the name of the attribute\n * `type`: String with the type of the attribute\n * `value`: A number or string with the value of the attribute"
    }
  },
  {
    "__docId__": 4094,
    "kind": "function",
    "name": "variablesList",
    "memberof": "src/utils/netcdf-reader.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/netcdf-reader.js~variablesList",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": null,
    "description": "List of variables",
    "lineNumber": 400,
    "ignore": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "IOBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer for the file data"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "recordId",
        "description": "Id if the record dimension"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "Version of the file"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Number of recordStep and list of variables with:\n * `name`: String with the name of the variable\n * `dimensions`: Array with the dimension IDs of the variable\n * `attributes`: Array with the attributes of the variable\n * `type`: String with the type of the variable\n * `size`: Number with the size of the variable\n * `offset`: Number with the offset where of the variable begins\n * `record`: True if is a record variable, false otherwise"
    }
  },
  {
    "__docId__": 4095,
    "kind": "class",
    "name": "NetcdfReader",
    "memberof": "src/utils/netcdf-reader.js",
    "static": true,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/netcdf-reader.js",
    "importStyle": "NetcdfReader",
    "description": "Reads a NetCDF v3.x file\nhttps://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html",
    "lineNumber": 476,
    "interface": false
  },
  {
    "__docId__": 4096,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 480,
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "ArrayBuffer or any Typed Array with the data"
      }
    ]
  },
  {
    "__docId__": 4097,
    "kind": "member",
    "name": "header",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#header",
    "access": "public",
    "description": null,
    "lineNumber": 492,
    "undocument": true
  },
  {
    "__docId__": 4098,
    "kind": "member",
    "name": "buffer",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#buffer",
    "access": "public",
    "description": null,
    "lineNumber": 493,
    "undocument": true
  },
  {
    "__docId__": 4099,
    "kind": "get",
    "name": "version",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#version",
    "access": "public",
    "description": "",
    "lineNumber": 499,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Version for the NetCDF format"
    }
  },
  {
    "__docId__": 4100,
    "kind": "get",
    "name": "recordDimension",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#recordDimension",
    "access": "public",
    "description": "",
    "lineNumber": 514,
    "return": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": "Metadata for the record dimension\n * `length`: Number of elements in the record dimension\n * `id`: Id number in the list of dimensions for the record dimension\n * `name`: String with the name of the record dimension\n * `recordStep`: Number with the record variables step size"
    }
  },
  {
    "__docId__": 4101,
    "kind": "get",
    "name": "dimensions",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#dimensions",
    "access": "public",
    "description": "",
    "lineNumber": 523,
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "List of dimensions with:\n * `name`: String with the name of the dimension\n * `size`: Number with the size of the dimension"
    }
  },
  {
    "__docId__": 4102,
    "kind": "get",
    "name": "globalAttributes",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#globalAttributes",
    "access": "public",
    "description": "",
    "lineNumber": 533,
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "List of global attributes with:\n * `name`: String with the name of the attribute\n * `type`: String with the type of the attribute\n * `value`: A number or string with the value of the attribute"
    }
  },
  {
    "__docId__": 4103,
    "kind": "get",
    "name": "variables",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#variables",
    "access": "public",
    "description": "",
    "lineNumber": 547,
    "return": {
      "nullable": null,
      "types": [
        "Array<object>"
      ],
      "spread": false,
      "description": "List of variables with:\n * `name`: String with the name of the variable\n * `dimensions`: Array with the dimension IDs of the variable\n * `attributes`: Array with the attributes of the variable\n * `type`: String with the type of the variable\n * `size`: Number with the size of the variable\n * `offset`: Number with the offset where of the variable begins\n * `record`: True if is a record variable, false otherwise"
    }
  },
  {
    "__docId__": 4104,
    "kind": "method",
    "name": "hasDataVariable",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#hasDataVariable",
    "access": "public",
    "description": "Checks if a variable is available",
    "lineNumber": 556,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "variableName",
        "description": "Name of the variable to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": "Variable existence"
    }
  },
  {
    "__docId__": 4105,
    "kind": "method",
    "name": "getDataVariable",
    "memberof": "src/utils/netcdf-reader.js~NetcdfReader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/netcdf-reader.js~NetcdfReader#getDataVariable",
    "access": "public",
    "description": "Retrieves the data for a given variable",
    "lineNumber": 567,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "variableName",
        "description": "Name of the variable to search or variable object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "List with the variable values"
    }
  },
  {
    "__docId__": 4106,
    "kind": "file",
    "name": "src/utils/parse-xml.js",
    "content": "/**\r\n * @file Parse Xml\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\n// https://github.com/segmentio/xml-parser\r\n// MIT license\r\n\r\nconst reStrip = /^['\"]|['\"]$/g\r\nconst reTag = /^<([\\w-:.]+)\\s*/\r\nconst reContent = /^([^<]*)/\r\nconst reAttr = /([\\w:-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|\\w+)\\s*/\r\n\r\nfunction strip (val) {\r\n  return val.replace(reStrip, '')\r\n}\r\n\r\nfunction parseXml (xml) {\r\n    // trim and strip comments\r\n  xml = xml.trim().replace(/<!--[\\s\\S]*?-->/g, '')\r\n\r\n  return document()\r\n\r\n  function document () {\r\n    return {\r\n      declaration: declaration(),\r\n      root: tag()\r\n    }\r\n  }\r\n\r\n  function declaration () {\r\n    const m = match(/^<\\?xml\\s*/)\r\n    if (!m) return\r\n        // tag\r\n    const node = {\r\n      attributes: {}\r\n    }\r\n        // attributes\r\n    while (!(eos() || is('?>'))) {\r\n      const attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n    match(/\\?>\\s*/)\r\n    return node\r\n  }\r\n\r\n  function tag () {\r\n    const m = match(reTag)\r\n    if (!m) return\r\n        // name\r\n    const node = {\r\n      name: m[1],\r\n      attributes: {},\r\n      children: []\r\n    }\r\n        // attributes\r\n    while (!(eos() || is('>') || is('?>') || is('/>'))) {\r\n      var attr = attribute()\r\n      if (!attr) return node\r\n      node.attributes[attr.name] = attr.value\r\n    }\r\n        // self closing tag\r\n    if (match(/^\\s*\\/>\\s*/)) {\r\n      return node\r\n    }\r\n    match(/\\??>\\s*/)\r\n        // content\r\n    node.content = content()\r\n        // children\r\n    let child\r\n    while ((child = tag())) {\r\n      node.children.push(child)\r\n    }\r\n        // closing\r\n    match(/^<\\/[\\w-:.]+>\\s*/)\r\n    return node\r\n  }\r\n\r\n  function content () {\r\n    const m = match(reContent)\r\n    if (m) return m[1]\r\n    return ''\r\n  }\r\n\r\n  function attribute () {\r\n    const m = match(reAttr)\r\n    if (!m) return\r\n    return { name: m[1], value: strip(m[2]) }\r\n  }\r\n\r\n  function match (re) {\r\n    const m = xml.match(re)\r\n    if (!m) return\r\n    xml = xml.slice(m[0].length)\r\n    return m\r\n  }\r\n\r\n  function eos () {\r\n    return xml.length === 0\r\n  }\r\n\r\n  function is (prefix) {\r\n    return xml.indexOf(prefix) === 0\r\n  }\r\n}\r\n\r\nexport {\r\n    parseXml\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/parse-xml.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4107,
    "kind": "variable",
    "name": "reStrip",
    "memberof": "src/utils/parse-xml.js",
    "static": true,
    "longname": "src/utils/parse-xml.js~reStrip",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Parse Xml"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ],
    "ignore": true
  },
  {
    "__docId__": 4108,
    "kind": "variable",
    "name": "reTag",
    "memberof": "src/utils/parse-xml.js",
    "static": true,
    "longname": "src/utils/parse-xml.js~reTag",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4109,
    "kind": "variable",
    "name": "reContent",
    "memberof": "src/utils/parse-xml.js",
    "static": true,
    "longname": "src/utils/parse-xml.js~reContent",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4110,
    "kind": "variable",
    "name": "reAttr",
    "memberof": "src/utils/parse-xml.js",
    "static": true,
    "longname": "src/utils/parse-xml.js~reAttr",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4111,
    "kind": "function",
    "name": "strip",
    "memberof": "src/utils/parse-xml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/parse-xml.js~strip",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4112,
    "kind": "function",
    "name": "parseXml",
    "memberof": "src/utils/parse-xml.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/parse-xml.js~parseXml",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/parse-xml.js",
    "importStyle": "{parseXml}",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 4113,
    "kind": "file",
    "name": "src/utils/picker.js",
    "content": "/**\r\n * @file Picker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport { PickerRegistry } from '../globals.js'\r\nimport { calculateMeanVector3 } from '../math/vector-utils.js'\r\nimport Selection from '../selection/selection.js'\r\nimport {\r\n  ArrowPrimitive, BoxPrimitive, ConePrimitive, CylinderPrimitive,\r\n  EllipsoidPrimitive, OctahedronPrimitive, SpherePrimitive,\r\n  TetrahedronPrimitive, TorusPrimitive\r\n} from '../geometry/primitive.js'\r\n\r\n/**\r\n * Picker class\r\n * @interface\r\n */\r\nclass Picker {\r\n  /**\r\n   * @param  {Array|TypedArray} [array] - mapping\r\n   */\r\n  constructor (array) {\r\n    this.array = array\r\n  }\r\n\r\n  /**\r\n   * Get the index for the given picking id\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Integer} the index\r\n   */\r\n  getIndex (pid) {\r\n    return this.array ? this.array[ pid ] : pid\r\n  }\r\n\r\n  /**\r\n   * Get object data\r\n   * @abstract\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Object} the object data\r\n   */\r\n  getObject (/* pid */) {\r\n    return {}\r\n  }\r\n\r\n  _applyTransformations (vector, instance, component) {\r\n    if (instance) {\r\n      vector.applyMatrix4(instance.matrix)\r\n    }\r\n    if (component) {\r\n      vector.applyMatrix4(component.matrix)\r\n    }\r\n    return vector\r\n  }\r\n\r\n  /**\r\n   * Get object position\r\n   * @abstract\r\n   * @param  {Integer} pid - the picking id\r\n   * @return {Vector3} the object position\r\n   */\r\n  _getPosition (/* pid */) {\r\n    return new Vector3()\r\n  }\r\n\r\n  /**\r\n   * Get position for the given picking id\r\n   * @param  {Integer} pid - the picking id\r\n   * @param  {Object} instance - the instance that should be applied\r\n   * @param  {Component} component - the component of the picked object\r\n   * @return {Vector3} the position\r\n   */\r\n  getPosition (pid, instance, component) {\r\n    return this._applyTransformations(\r\n      this._getPosition(pid), instance, component\r\n    )\r\n  }\r\n}\r\n\r\n/**\r\n * Shape picker class\r\n * @interface\r\n */\r\nclass ShapePicker extends Picker {\r\n  /**\r\n   * @param  {Shape} shape - shape object\r\n   */\r\n  constructor (shape) {\r\n    super()\r\n    this.shape = shape\r\n  }\r\n\r\n  get primitive () {}\r\n\r\n  get data () { return this.shape }\r\n  get type () { return this.primitive.type }\r\n\r\n  getObject (pid) {\r\n    return this.primitive.objectFromShape(this.shape, pid)\r\n  }\r\n\r\n  _getPosition (pid) {\r\n    return this.primitive.positionFromShape(this.shape, pid)\r\n  }\r\n}\r\n\r\n//\r\n\r\nclass CylinderPicker extends ShapePicker {\r\n  get primitive () { return CylinderPrimitive }\r\n}\r\n\r\nclass ArrowPicker extends ShapePicker {\r\n  get primitive () { return ArrowPrimitive }\r\n}\r\n\r\nclass AtomPicker extends Picker {\r\n  constructor (array, structure) {\r\n    super(array)\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'atom' }\r\n  get data () { return this.structure }\r\n\r\n  getObject (pid) {\r\n    return this.structure.getAtomProxy(this.getIndex(pid))\r\n  }\r\n\r\n  _getPosition (pid) {\r\n    return new Vector3().copy(this.getObject(pid))\r\n  }\r\n}\r\n\r\nclass AxesPicker extends Picker {\r\n  constructor (axes) {\r\n    super()\r\n    this.axes = axes\r\n  }\r\n\r\n  get type () { return 'axes' }\r\n  get data () { return this.axes }\r\n\r\n  getObject (/* pid */) {\r\n    return {\r\n      axes: this.axes\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.axes.center.clone()\r\n  }\r\n}\r\n\r\nclass BondPicker extends Picker {\r\n  constructor (array, structure, bondStore) {\r\n    super(array)\r\n    this.structure = structure\r\n    this.bondStore = bondStore || structure.bondStore\r\n  }\r\n\r\n  get type () { return 'bond' }\r\n  get data () { return this.structure }\r\n\r\n  getObject (pid) {\r\n    var bp = this.structure.getBondProxy(this.getIndex(pid))\r\n    bp.bondStore = this.bondStore\r\n    return bp\r\n  }\r\n\r\n  _getPosition (pid) {\r\n    const b = this.getObject(pid)\r\n    return new Vector3()\r\n            .copy(b.atom1)\r\n            .add(b.atom2)\r\n            .multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nclass ContactPicker extends BondPicker {\r\n  get type () { return 'contact' }\r\n}\r\n\r\nclass ConePicker extends ShapePicker {\r\n  get primitive () { return ConePrimitive }\r\n}\r\n\r\nclass ClashPicker extends Picker {\r\n  constructor (array, validation, structure) {\r\n    super(array)\r\n    this.validation = validation\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'clash' }\r\n  get data () { return this.validation }\r\n\r\n  getObject (pid) {\r\n    const val = this.validation\r\n    const idx = this.getIndex(pid)\r\n    return {\r\n      validation: val,\r\n      index: idx,\r\n      clash: val.clashArray[ idx ]\r\n    }\r\n  }\r\n\r\n  _getAtomProxyFromSele (sele) {\r\n    const selection = new Selection(sele)\r\n    const idx = this.structure.getAtomIndices(selection)[ 0 ]\r\n    return this.structure.getAtomProxy(idx)\r\n  }\r\n\r\n  _getPosition (pid) {\r\n    const clash = this.getObject(pid).clash\r\n    const ap1 = this._getAtomProxyFromSele(clash.sele1)\r\n    const ap2 = this._getAtomProxyFromSele(clash.sele2)\r\n    return new Vector3().copy(ap1).add(ap2).multiplyScalar(0.5)\r\n  }\r\n}\r\n\r\nclass DistancePicker extends BondPicker {\r\n  get type () { return 'distance' }\r\n}\r\n\r\nclass EllipsoidPicker extends ShapePicker {\r\n  get primitive () { return EllipsoidPrimitive }\r\n}\r\n\r\nclass OctahedronPicker extends ShapePicker {\r\n  get primitive () { return OctahedronPrimitive }\r\n}\r\n\r\nclass BoxPicker extends ShapePicker {\r\n  get primitive () { return BoxPrimitive }\r\n}\r\n\r\nclass IgnorePicker extends Picker {\r\n  get type () { return 'ignore' }\r\n}\r\n\r\nclass MeshPicker extends ShapePicker {\r\n  constructor (shape, mesh) {\r\n    super(shape)\r\n    this.mesh = mesh\r\n  }\r\n\r\n  get type () { return 'mesh' }\r\n\r\n  getObject (/* pid */) {\r\n    const m = this.mesh\r\n    return {\r\n      shape: this.shape,\r\n      name: m.name,\r\n      serial: m.serial\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    if (!this.__position) {\r\n      this.__position = calculateMeanVector3(this.mesh.position)\r\n    }\r\n    return this.__position\r\n  }\r\n}\r\n\r\nclass SpherePicker extends ShapePicker {\r\n  get primitive () { return SpherePrimitive }\r\n}\r\n\r\nclass SurfacePicker extends Picker {\r\n  constructor (array, surface) {\r\n    super(array)\r\n    this.surface = surface\r\n  }\r\n\r\n  get type () { return 'surface' }\r\n  get data () { return this.surface }\r\n\r\n  getObject (pid) {\r\n    return {\r\n      surface: this.surface,\r\n      index: this.getIndex(pid)\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.surface.center.clone()\r\n  }\r\n}\r\n\r\nclass TetrahedronPicker extends ShapePicker {\r\n  get primitive () { return TetrahedronPrimitive }\r\n}\r\n\r\nclass TorusPicker extends ShapePicker {\r\n  get primitive () { return TorusPrimitive }\r\n}\r\n\r\nclass UnitcellPicker extends Picker {\r\n  constructor (unitcell, structure) {\r\n    super()\r\n    this.unitcell = unitcell\r\n    this.structure = structure\r\n  }\r\n\r\n  get type () { return 'unitcell' }\r\n  get data () { return this.unitcell }\r\n\r\n  getObject (/* pid */) {\r\n    return {\r\n      unitcell: this.unitcell,\r\n      structure: this.structure\r\n    }\r\n  }\r\n\r\n  _getPosition (/* pid */) {\r\n    return this.unitcell.getCenter(this.structure)\r\n  }\r\n}\r\n\r\nclass UnknownPicker extends Picker {\r\n  get type () { return 'unknown' }\r\n}\r\n\r\nclass VolumePicker extends Picker {\r\n  constructor (array, volume) {\r\n    super(array)\r\n    this.volume = volume\r\n  }\r\n\r\n  get type () { return 'volume' }\r\n  get data () { return this.volume }\r\n\r\n  getObject (pid) {\r\n    const vol = this.volume\r\n    const idx = this.getIndex(pid)\r\n    return {\r\n      volume: vol,\r\n      index: idx,\r\n      value: vol.data[ idx ]\r\n    }\r\n  }\r\n\r\n  _getPosition (pid) {\r\n    const dp = this.volume.position\r\n    const idx = this.getIndex(pid)\r\n    return new Vector3(\r\n      dp[ idx * 3 ],\r\n      dp[ idx * 3 + 1 ],\r\n      dp[ idx * 3 + 2 ]\r\n    )\r\n  }\r\n}\r\n\r\nclass SlicePicker extends VolumePicker {\r\n  get type () { return 'slice' }\r\n}\r\n\r\nPickerRegistry.add('arrow', ArrowPicker)\r\nPickerRegistry.add('box', BoxPicker)\r\nPickerRegistry.add('cone', ConePicker)\r\nPickerRegistry.add('cylinder', CylinderPicker)\r\nPickerRegistry.add('ellipsoid', EllipsoidPicker)\r\nPickerRegistry.add('octahedron', OctahedronPicker)\r\nPickerRegistry.add('sphere', SpherePicker)\r\nPickerRegistry.add('tetrahedron', TetrahedronPicker)\r\nPickerRegistry.add('torus', TorusPicker)\r\n\r\nexport {\r\n  Picker,\r\n  ShapePicker,\r\n  ArrowPicker,\r\n  AtomPicker,\r\n  AxesPicker,\r\n  BondPicker,\r\n  BoxPicker,\r\n  ConePicker,\r\n  ContactPicker,\r\n  CylinderPicker,\r\n  ClashPicker,\r\n  DistancePicker,\r\n  EllipsoidPicker,\r\n  IgnorePicker,\r\n  OctahedronPicker,\r\n  MeshPicker,\r\n  SlicePicker,\r\n  SpherePicker,\r\n  SurfacePicker,\r\n  TetrahedronPicker,\r\n  TorusPicker,\r\n  UnitcellPicker,\r\n  UnknownPicker,\r\n  VolumePicker\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/picker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4114,
    "kind": "class",
    "name": "Picker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~Picker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{Picker}",
    "description": "Picker class",
    "lineNumber": 22,
    "interface": true
  },
  {
    "__docId__": 4115,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array",
          "TypedArray"
        ],
        "spread": false,
        "optional": true,
        "name": "array",
        "description": "mapping"
      }
    ]
  },
  {
    "__docId__": 4116,
    "kind": "member",
    "name": "array",
    "memberof": "src/utils/picker.js~Picker",
    "static": false,
    "longname": "src/utils/picker.js~Picker#array",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 4117,
    "kind": "method",
    "name": "getIndex",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#getIndex",
    "access": "public",
    "description": "Get the index for the given picking id",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "the picking id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Integer"
      ],
      "spread": false,
      "description": "the index"
    }
  },
  {
    "__docId__": 4118,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#getObject",
    "access": "public",
    "description": "Get object data",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "the picking id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "the object data"
    },
    "abstract": true
  },
  {
    "__docId__": 4119,
    "kind": "method",
    "name": "_applyTransformations",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#_applyTransformations",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 4120,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#_getPosition",
    "access": "private",
    "description": "Get object position",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "the picking id"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the object position"
    },
    "abstract": true
  },
  {
    "__docId__": 4121,
    "kind": "method",
    "name": "getPosition",
    "memberof": "src/utils/picker.js~Picker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~Picker#getPosition",
    "access": "public",
    "description": "Get position for the given picking id",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "pid",
        "description": "the picking id"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "instance",
        "description": "the instance that should be applied"
      },
      {
        "nullable": null,
        "types": [
          "Component"
        ],
        "spread": false,
        "optional": false,
        "name": "component",
        "description": "the component of the picked object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Vector3"
      ],
      "spread": false,
      "description": "the position"
    }
  },
  {
    "__docId__": 4122,
    "kind": "class",
    "name": "ShapePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~ShapePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{ShapePicker}",
    "description": "Shape picker class",
    "lineNumber": 87,
    "interface": true,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4123,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "Shape"
        ],
        "spread": false,
        "optional": false,
        "name": "shape",
        "description": "shape object"
      }
    ]
  },
  {
    "__docId__": 4124,
    "kind": "member",
    "name": "shape",
    "memberof": "src/utils/picker.js~ShapePicker",
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#shape",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true
  },
  {
    "__docId__": 4125,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 4126,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true
  },
  {
    "__docId__": 4127,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "undocument": true
  },
  {
    "__docId__": 4128,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 4129,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~ShapePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ShapePicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 4130,
    "kind": "class",
    "name": "ArrowPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~ArrowPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{ArrowPicker}",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4131,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~ArrowPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ArrowPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 4132,
    "kind": "class",
    "name": "AtomPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~AtomPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{AtomPicker}",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4133,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~AtomPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 121,
    "undocument": true
  },
  {
    "__docId__": 4134,
    "kind": "member",
    "name": "structure",
    "memberof": "src/utils/picker.js~AtomPicker",
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#structure",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "undocument": true
  },
  {
    "__docId__": 4135,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~AtomPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 4136,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~AtomPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "undocument": true
  },
  {
    "__docId__": 4137,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~AtomPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "__docId__": 4138,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~AtomPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AtomPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 133,
    "undocument": true
  },
  {
    "__docId__": 4139,
    "kind": "class",
    "name": "AxesPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~AxesPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{AxesPicker}",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4140,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~AxesPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 139,
    "undocument": true
  },
  {
    "__docId__": 4141,
    "kind": "member",
    "name": "axes",
    "memberof": "src/utils/picker.js~AxesPicker",
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#axes",
    "access": "public",
    "description": null,
    "lineNumber": 141,
    "undocument": true
  },
  {
    "__docId__": 4142,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~AxesPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 144,
    "undocument": true
  },
  {
    "__docId__": 4143,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~AxesPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "undocument": true
  },
  {
    "__docId__": 4144,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~AxesPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 147,
    "undocument": true
  },
  {
    "__docId__": 4145,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~AxesPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~AxesPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 153,
    "undocument": true
  },
  {
    "__docId__": 4146,
    "kind": "class",
    "name": "BondPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~BondPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{BondPicker}",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4147,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~BondPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true
  },
  {
    "__docId__": 4148,
    "kind": "member",
    "name": "structure",
    "memberof": "src/utils/picker.js~BondPicker",
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#structure",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true
  },
  {
    "__docId__": 4149,
    "kind": "member",
    "name": "bondStore",
    "memberof": "src/utils/picker.js~BondPicker",
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#bondStore",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "undocument": true
  },
  {
    "__docId__": 4150,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~BondPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true
  },
  {
    "__docId__": 4151,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~BondPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 166,
    "undocument": true
  },
  {
    "__docId__": 4152,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~BondPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "undocument": true
  },
  {
    "__docId__": 4153,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~BondPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BondPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 174,
    "undocument": true
  },
  {
    "__docId__": 4154,
    "kind": "class",
    "name": "BoxPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~BoxPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{BoxPicker}",
    "description": null,
    "lineNumber": 237,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4155,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~BoxPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~BoxPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 238,
    "undocument": true
  },
  {
    "__docId__": 4156,
    "kind": "class",
    "name": "ConePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~ConePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{ConePicker}",
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4157,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~ConePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ConePicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true
  },
  {
    "__docId__": 4158,
    "kind": "class",
    "name": "ContactPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~ContactPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{ContactPicker}",
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "interface": false,
    "extends": [
      "BondPicker"
    ]
  },
  {
    "__docId__": 4159,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~ContactPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ContactPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "undocument": true
  },
  {
    "__docId__": 4160,
    "kind": "class",
    "name": "CylinderPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~CylinderPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{CylinderPicker}",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4161,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~CylinderPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~CylinderPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "undocument": true
  },
  {
    "__docId__": 4162,
    "kind": "class",
    "name": "ClashPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~ClashPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{ClashPicker}",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4163,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 4164,
    "kind": "member",
    "name": "validation",
    "memberof": "src/utils/picker.js~ClashPicker",
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#validation",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true
  },
  {
    "__docId__": 4165,
    "kind": "member",
    "name": "structure",
    "memberof": "src/utils/picker.js~ClashPicker",
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#structure",
    "access": "public",
    "description": null,
    "lineNumber": 195,
    "undocument": true
  },
  {
    "__docId__": 4166,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 198,
    "undocument": true
  },
  {
    "__docId__": 4167,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 199,
    "undocument": true
  },
  {
    "__docId__": 4168,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 201,
    "undocument": true
  },
  {
    "__docId__": 4169,
    "kind": "method",
    "name": "_getAtomProxyFromSele",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#_getAtomProxyFromSele",
    "access": "private",
    "description": null,
    "lineNumber": 211,
    "undocument": true
  },
  {
    "__docId__": 4170,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~ClashPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~ClashPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 217,
    "undocument": true
  },
  {
    "__docId__": 4171,
    "kind": "class",
    "name": "DistancePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~DistancePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{DistancePicker}",
    "description": null,
    "lineNumber": 225,
    "undocument": true,
    "interface": false,
    "extends": [
      "BondPicker"
    ]
  },
  {
    "__docId__": 4172,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~DistancePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~DistancePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 226,
    "undocument": true
  },
  {
    "__docId__": 4173,
    "kind": "class",
    "name": "EllipsoidPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~EllipsoidPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{EllipsoidPicker}",
    "description": null,
    "lineNumber": 229,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4174,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~EllipsoidPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~EllipsoidPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 230,
    "undocument": true
  },
  {
    "__docId__": 4175,
    "kind": "class",
    "name": "IgnorePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~IgnorePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{IgnorePicker}",
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4176,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~IgnorePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~IgnorePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "undocument": true
  },
  {
    "__docId__": 4177,
    "kind": "class",
    "name": "OctahedronPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~OctahedronPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{OctahedronPicker}",
    "description": null,
    "lineNumber": 233,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4178,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~OctahedronPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~OctahedronPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 234,
    "undocument": true
  },
  {
    "__docId__": 4179,
    "kind": "class",
    "name": "MeshPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~MeshPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{MeshPicker}",
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4180,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~MeshPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 246,
    "undocument": true
  },
  {
    "__docId__": 4181,
    "kind": "member",
    "name": "mesh",
    "memberof": "src/utils/picker.js~MeshPicker",
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#mesh",
    "access": "public",
    "description": null,
    "lineNumber": 248,
    "undocument": true
  },
  {
    "__docId__": 4182,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~MeshPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 251,
    "undocument": true
  },
  {
    "__docId__": 4183,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~MeshPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 253,
    "undocument": true
  },
  {
    "__docId__": 4184,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~MeshPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 262,
    "undocument": true
  },
  {
    "__docId__": 4185,
    "kind": "member",
    "name": "__position",
    "memberof": "src/utils/picker.js~MeshPicker",
    "static": false,
    "longname": "src/utils/picker.js~MeshPicker#__position",
    "access": "private",
    "description": null,
    "lineNumber": 264,
    "undocument": true
  },
  {
    "__docId__": 4186,
    "kind": "class",
    "name": "SlicePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~SlicePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{SlicePicker}",
    "description": null,
    "lineNumber": 359,
    "undocument": true,
    "interface": false,
    "extends": [
      "VolumePicker"
    ]
  },
  {
    "__docId__": 4187,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~SlicePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SlicePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 360,
    "undocument": true
  },
  {
    "__docId__": 4188,
    "kind": "class",
    "name": "SpherePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~SpherePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{SpherePicker}",
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4189,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~SpherePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SpherePicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 271,
    "undocument": true
  },
  {
    "__docId__": 4190,
    "kind": "class",
    "name": "SurfacePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~SurfacePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{SurfacePicker}",
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4191,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 275,
    "undocument": true
  },
  {
    "__docId__": 4192,
    "kind": "member",
    "name": "surface",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#surface",
    "access": "public",
    "description": null,
    "lineNumber": 277,
    "undocument": true
  },
  {
    "__docId__": 4193,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 280,
    "undocument": true
  },
  {
    "__docId__": 4194,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 281,
    "undocument": true
  },
  {
    "__docId__": 4195,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 283,
    "undocument": true
  },
  {
    "__docId__": 4196,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~SurfacePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~SurfacePicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 290,
    "undocument": true
  },
  {
    "__docId__": 4197,
    "kind": "class",
    "name": "TetrahedronPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~TetrahedronPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{TetrahedronPicker}",
    "description": null,
    "lineNumber": 295,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4198,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~TetrahedronPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~TetrahedronPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 296,
    "undocument": true
  },
  {
    "__docId__": 4199,
    "kind": "class",
    "name": "TorusPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~TorusPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{TorusPicker}",
    "description": null,
    "lineNumber": 299,
    "undocument": true,
    "interface": false,
    "extends": [
      "ShapePicker"
    ]
  },
  {
    "__docId__": 4200,
    "kind": "get",
    "name": "primitive",
    "memberof": "src/utils/picker.js~TorusPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~TorusPicker#primitive",
    "access": "public",
    "description": null,
    "lineNumber": 300,
    "undocument": true
  },
  {
    "__docId__": 4201,
    "kind": "class",
    "name": "UnitcellPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~UnitcellPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{UnitcellPicker}",
    "description": null,
    "lineNumber": 303,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4202,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 304,
    "undocument": true
  },
  {
    "__docId__": 4203,
    "kind": "member",
    "name": "unitcell",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#unitcell",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true
  },
  {
    "__docId__": 4204,
    "kind": "member",
    "name": "structure",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#structure",
    "access": "public",
    "description": null,
    "lineNumber": 307,
    "undocument": true
  },
  {
    "__docId__": 4205,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 310,
    "undocument": true
  },
  {
    "__docId__": 4206,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 311,
    "undocument": true
  },
  {
    "__docId__": 4207,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 313,
    "undocument": true
  },
  {
    "__docId__": 4208,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~UnitcellPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnitcellPicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 320,
    "undocument": true
  },
  {
    "__docId__": 4209,
    "kind": "class",
    "name": "UnknownPicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~UnknownPicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{UnknownPicker}",
    "description": null,
    "lineNumber": 325,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4210,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~UnknownPicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~UnknownPicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 326,
    "undocument": true
  },
  {
    "__docId__": 4211,
    "kind": "class",
    "name": "VolumePicker",
    "memberof": "src/utils/picker.js",
    "static": true,
    "longname": "src/utils/picker.js~VolumePicker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/picker.js",
    "importStyle": "{VolumePicker}",
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "interface": false,
    "extends": [
      "Picker"
    ]
  },
  {
    "__docId__": 4212,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/picker.js~VolumePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true
  },
  {
    "__docId__": 4213,
    "kind": "member",
    "name": "volume",
    "memberof": "src/utils/picker.js~VolumePicker",
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#volume",
    "access": "public",
    "description": null,
    "lineNumber": 332,
    "undocument": true
  },
  {
    "__docId__": 4214,
    "kind": "get",
    "name": "type",
    "memberof": "src/utils/picker.js~VolumePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#type",
    "access": "public",
    "description": null,
    "lineNumber": 335,
    "undocument": true
  },
  {
    "__docId__": 4215,
    "kind": "get",
    "name": "data",
    "memberof": "src/utils/picker.js~VolumePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#data",
    "access": "public",
    "description": null,
    "lineNumber": 336,
    "undocument": true
  },
  {
    "__docId__": 4216,
    "kind": "method",
    "name": "getObject",
    "memberof": "src/utils/picker.js~VolumePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#getObject",
    "access": "public",
    "description": null,
    "lineNumber": 338,
    "undocument": true
  },
  {
    "__docId__": 4217,
    "kind": "method",
    "name": "_getPosition",
    "memberof": "src/utils/picker.js~VolumePicker",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/picker.js~VolumePicker#_getPosition",
    "access": "private",
    "description": null,
    "lineNumber": 348,
    "undocument": true
  },
  {
    "__docId__": 4218,
    "kind": "file",
    "name": "src/utils/queue.js",
    "content": "/**\r\n * @file Queue\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction Queue (fn, argList) {\r\n  var queue = []\r\n  var pending = false\r\n\r\n  if (argList) {\r\n    for (var i = 0, il = argList.length; i < il; ++i) {\r\n      queue.push(argList[ i ])\r\n    }\r\n    next()\r\n  }\r\n\r\n  function run (arg) {\r\n    fn(arg, next)\r\n  }\r\n\r\n  function next () {\r\n    var arg = queue.shift()\r\n    if (arg !== undefined) {\r\n      pending = true\r\n      setTimeout(function () { run(arg) })\r\n    } else {\r\n      pending = false\r\n    }\r\n  }\r\n\r\n    // API\r\n\r\n  this.push = function (arg) {\r\n    queue.push(arg)\r\n    if (!pending) next()\r\n  }\r\n\r\n  this.kill = function () {\r\n    queue.length = 0\r\n  }\r\n\r\n  this.length = function () {\r\n    return queue.length\r\n  }\r\n}\r\n\r\nexport default Queue\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/queue.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4219,
    "kind": "function",
    "name": "Queue",
    "memberof": "src/utils/queue.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/queue.js~Queue",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/utils/queue.js",
    "importStyle": "Queue",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Queue"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 4220,
    "kind": "file",
    "name": "src/utils/radius-factory.js",
    "content": "/**\r\n * @file Radius Factory\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n    VdwRadii, DefaultVdwRadius, CovalentRadii, DefaultCovalentRadius,\r\n    NucleicBackboneAtoms\r\n} from '../structure/structure-constants'\r\n\r\nfunction RadiusFactory (type, scale) {\r\n  this.type = type\r\n  this.scale = scale || 1.0\r\n\r\n  this.max = 10\r\n}\r\n\r\nRadiusFactory.prototype = {\r\n\r\n  constructor: RadiusFactory,\r\n\r\n  atomRadius: function (a) {\r\n    var type = this.type\r\n    var scale = this.scale\r\n\r\n    var r\r\n\r\n    switch (type) {\r\n      case 'vdw':\r\n\r\n        r = VdwRadii[ a.element ] || DefaultVdwRadius\r\n        break\r\n\r\n      case 'covalent':\r\n\r\n        r = CovalentRadii[ a.element ] || DefaultCovalentRadius\r\n        break\r\n\r\n      case 'bfactor':\r\n\r\n        r = a.bfactor || 1.0\r\n        break\r\n\r\n      case 'sstruc':\r\n\r\n        var sstruc = a.sstruc\r\n        if (sstruc === 'h') {\r\n          r = 0.25\r\n        } else if (sstruc === 'g') {\r\n          r = 0.25\r\n        } else if (sstruc === 'i') {\r\n          r = 0.25\r\n        } else if (sstruc === 'e') {\r\n          r = 0.25\r\n        } else if (sstruc === 'b') {\r\n          r = 0.25\r\n        } else if (NucleicBackboneAtoms.includes(a.atomname)) {\r\n          r = 0.4\r\n        } else {\r\n          r = 0.1\r\n        }\r\n        break\r\n\r\n      default:\r\n\r\n        r = type || 1.0\r\n        break\r\n    }\r\n\r\n    return Math.min(r * scale, this.max)\r\n  }\r\n\r\n}\r\n\r\nRadiusFactory.types = {\r\n\r\n  '': '',\r\n  'vdw': 'by vdW radius',\r\n  'covalent': 'by covalent radius',\r\n  'sstruc': 'by secondary structure',\r\n  'bfactor': 'by bfactor',\r\n  'size': 'size'\r\n\r\n}\r\n\r\nexport default RadiusFactory\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/radius-factory.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4221,
    "kind": "function",
    "name": "RadiusFactory",
    "memberof": "src/utils/radius-factory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/radius-factory.js~RadiusFactory",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/radius-factory.js",
    "importStyle": "RadiusFactory",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 4222,
    "kind": "file",
    "name": "src/utils/registry.js",
    "content": "/**\r\n * @file Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults } from '../utils.js'\r\n\r\nfunction toLowerCaseString (value) {\r\n  return defaults(value, '').toString().toLowerCase()\r\n}\r\n\r\nclass Registry {\r\n  constructor (name) {\r\n    this.name = name\r\n    this._dict = {}\r\n  }\r\n\r\n  add (key, value) {\r\n    this._dict[ toLowerCaseString(key) ] = value\r\n  }\r\n\r\n  get (key) {\r\n    return this._dict[ toLowerCaseString(key) ]\r\n  }\r\n\r\n  get names () {\r\n    return Object.keys(this._dict)\r\n  }\r\n}\r\n\r\nexport default Registry\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils/registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4223,
    "kind": "function",
    "name": "toLowerCaseString",
    "memberof": "src/utils/registry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/registry.js~toLowerCaseString",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils/registry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4224,
    "kind": "class",
    "name": "Registry",
    "memberof": "src/utils/registry.js",
    "static": true,
    "longname": "src/utils/registry.js~Registry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils/registry.js",
    "importStyle": "Registry",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 4225,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/utils/registry.js~Registry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/registry.js~Registry#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 4226,
    "kind": "member",
    "name": "name",
    "memberof": "src/utils/registry.js~Registry",
    "static": false,
    "longname": "src/utils/registry.js~Registry#name",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 4227,
    "kind": "member",
    "name": "_dict",
    "memberof": "src/utils/registry.js~Registry",
    "static": false,
    "longname": "src/utils/registry.js~Registry#_dict",
    "access": "private",
    "description": null,
    "lineNumber": 16,
    "undocument": true
  },
  {
    "__docId__": 4228,
    "kind": "method",
    "name": "add",
    "memberof": "src/utils/registry.js~Registry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/registry.js~Registry#add",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 4229,
    "kind": "method",
    "name": "get",
    "memberof": "src/utils/registry.js~Registry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/registry.js~Registry#get",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 4230,
    "kind": "get",
    "name": "names",
    "memberof": "src/utils/registry.js~Registry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/utils/registry.js~Registry#names",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 4231,
    "kind": "file",
    "name": "src/utils.js",
    "content": "/**\r\n * @file Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Vector3, Matrix4, Quaternion } from '../lib/three.es6.js'\r\n\r\nimport { DecompressorRegistry } from './globals.js'\r\n\r\nfunction getQuery (id) {\r\n  if (typeof window === 'undefined') return undefined\r\n\r\n  var a = new RegExp(`${id}=([^&#=]*)`)\r\n  var m = a.exec(window.location.search)\r\n\r\n  if (m) {\r\n    return decodeURIComponent(m[1])\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nfunction boolean (value) {\r\n  if (!value) {\r\n    return false\r\n  }\r\n\r\n  if (typeof value === 'string') {\r\n    return /^1|true|t|yes|y$/i.test(value)\r\n  }\r\n\r\n  return true\r\n}\r\n\r\nfunction defaults (value, defaultValue) {\r\n  return value !== undefined ? value : defaultValue\r\n}\r\n\r\nfunction pick (object) {\r\n  var properties = [].slice.call(arguments, 1)\r\n  return properties.reduce((a, e) => {\r\n    a[ e ] = object[ e ]\r\n    return a\r\n  }, {})\r\n}\r\n\r\nfunction flatten (array, ret) {\r\n  ret = defaults(ret, [])\r\n  for (let i = 0; i < array.length; i++) {\r\n    if (Array.isArray(array[i])) {\r\n      flatten(array[i], ret)\r\n    } else {\r\n      ret.push(array[i])\r\n    }\r\n  }\r\n  return ret\r\n}\r\n\r\nfunction getProtocol () {\r\n  var protocol = window.location.protocol\r\n  return protocol.match(/http(s)?:/gi) === null ? 'http:' : protocol\r\n}\r\n\r\nfunction getBrowser () {\r\n  if (typeof window === 'undefined') return false\r\n\r\n  var ua = window.navigator.userAgent\r\n\r\n  if (/Opera|OPR/.test(ua)) {\r\n    return 'Opera'\r\n  } else if (/Chrome/i.test(ua)) {\r\n    return 'Chrome'\r\n  } else if (/Firefox/i.test(ua)) {\r\n    return 'Firefox'\r\n  } else if (/Mobile(\\/.*)? Safari/i.test(ua)) {\r\n    return 'Mobile Safari'\r\n  } else if (/MSIE/i.test(ua)) {\r\n    return 'Internet Explorer'\r\n  } else if (/Safari/i.test(ua)) {\r\n    return 'Safari'\r\n  }\r\n\r\n  return false\r\n}\r\n\r\nfunction getAbsolutePath (relativePath) {\r\n  var loc = window.location\r\n  var pn = loc.pathname\r\n  var basePath = pn.substring(0, pn.lastIndexOf('/') + 1)\r\n\r\n  return loc.origin + basePath + relativePath\r\n}\r\n\r\nfunction deepCopy (src) {\r\n  if (typeof src !== 'object') {\r\n    return src\r\n  }\r\n\r\n  var dst = Array.isArray(src) ? [] : {}\r\n\r\n  for (var key in src) {\r\n    dst[ key ] = deepCopy(src[ key ])\r\n  }\r\n\r\n  return dst\r\n}\r\n\r\nfunction download (data, downloadName) {\r\n  // using ideas from https://github.com/eligrey/FileSaver.js/blob/master/FileSaver.js\r\n\r\n  if (!data) return\r\n\r\n  downloadName = downloadName || 'download'\r\n\r\n  var isSafari = getBrowser() === 'Safari'\r\n  var isChromeIos = /CriOS\\/[\\d]+/.test(window.navigator.userAgent)\r\n\r\n  var a = document.createElement('a')\r\n\r\n  function openUrl (url) {\r\n    var opened = window.open(url, '_blank')\r\n    if (!opened) {\r\n      window.location.href = url\r\n    }\r\n  }\r\n\r\n  function open (str) {\r\n    openUrl(isChromeIos ? str : str.replace(/^data:[^;]*;/, 'data:attachment/file;'))\r\n  }\r\n\r\n  if (typeof navigator !== 'undefined' && navigator.msSaveOrOpenBlob) {\r\n    // native saveAs in IE 10+\r\n    navigator.msSaveOrOpenBlob(data, downloadName)\r\n  } else if ((isSafari || isChromeIos) && window.FileReader) {\r\n    if (data instanceof window.Blob) {\r\n      // no downloading of blob urls in Safari\r\n      var reader = new window.FileReader()\r\n      reader.onloadend = function () {\r\n        open(reader.result)\r\n      }\r\n      reader.readAsDataURL(data)\r\n    } else {\r\n      open(data)\r\n    }\r\n  } else {\r\n    if (data instanceof window.Blob) {\r\n      data = window.URL.createObjectURL(data)\r\n    }\r\n\r\n    if ('download' in a) {\r\n      // download link available\r\n      a.style.display = 'hidden'\r\n      document.body.appendChild(a)\r\n      a.href = data\r\n      a.download = downloadName\r\n      a.target = '_blank'\r\n      a.click()\r\n      document.body.removeChild(a)\r\n    } else {\r\n      openUrl(data)\r\n    }\r\n\r\n    if (data instanceof window.Blob) {\r\n      window.URL.revokeObjectURL(data)\r\n    }\r\n  }\r\n}\r\n\r\nfunction submit (url, data, callback, onerror) {\r\n  if (data instanceof window.FormData) {\r\n    var xhr = new window.XMLHttpRequest()\r\n    xhr.open('POST', url)\r\n\r\n    xhr.addEventListener('load', function () {\r\n      if (xhr.status === 200 || xhr.status === 304) {\r\n        callback(xhr.response)\r\n      } else {\r\n        if (typeof onerror === 'function') {\r\n          onerror(xhr.status)\r\n        }\r\n      }\r\n    }, false)\r\n\r\n    xhr.send(data)\r\n  } else {\r\n    throw new Error('submit: data must be a FormData instance.')\r\n  }\r\n}\r\n\r\nfunction open (callback, extensionList) {\r\n  extensionList = extensionList || [ '*' ]\r\n\r\n  var fileInput = document.createElement('input')\r\n  fileInput.type = 'file'\r\n  fileInput.multiple = true\r\n  fileInput.style.display = 'hidden'\r\n  document.body.appendChild(fileInput)\r\n  fileInput.accept = '.' + extensionList.join(',.')\r\n  fileInput.addEventListener('change', function (e) {\r\n    callback(e.target.files)\r\n  }, false)\r\n\r\n  fileInput.click()\r\n}\r\n\r\nfunction getFileInfo (file) {\r\n  var compressedExtList = DecompressorRegistry.names\r\n\r\n  var path, compressed, protocol\r\n\r\n  if ((typeof window !== 'undefined' && file instanceof window.File) ||\r\n      (typeof window !== 'undefined' && file instanceof window.Blob)\r\n  ) {\r\n    path = file.name || ''\r\n  } else {\r\n    path = file\r\n  }\r\n  var queryIndex = path.lastIndexOf('?')\r\n  var query = queryIndex !== -1 ? path.substring(queryIndex) : ''\r\n  path = path.substring(0, queryIndex === -1 ? path.length : queryIndex)\r\n\r\n  var name = path.replace(/^.*[\\\\/]/, '')\r\n  var base = name.substring(0, name.lastIndexOf('.'))\r\n\r\n  var nameSplit = name.split('.')\r\n  var ext = nameSplit.length > 1 ? nameSplit.pop().toLowerCase() : ''\r\n\r\n  var protocolMatch = path.match(/^(.+):\\/\\/(.+)$/)\r\n  if (protocolMatch) {\r\n    protocol = protocolMatch[ 1 ].toLowerCase()\r\n    path = protocolMatch[ 2 ]\r\n  }\r\n\r\n  var dir = path.substring(0, path.lastIndexOf('/') + 1)\r\n\r\n  if (compressedExtList.includes(ext)) {\r\n    compressed = ext\r\n    var n = path.length - ext.length - 1\r\n    ext = path.substr(0, n).split('.').pop().toLowerCase()\r\n    var m = base.length - ext.length - 1\r\n    base = base.substr(0, m)\r\n  } else {\r\n    compressed = false\r\n  }\r\n\r\n  return {\r\n    'path': path,\r\n    'name': name,\r\n    'ext': ext,\r\n    'base': base,\r\n    'dir': dir,\r\n    'compressed': compressed,\r\n    'protocol': protocol,\r\n    'src': file,\r\n    'query': query\r\n  }\r\n}\r\n\r\nfunction throttle (func, wait, options) {\r\n  // from http://underscorejs.org/docs/underscore.html\r\n\r\n  var context, args, result\r\n  var timeout = null\r\n  var previous = 0\r\n\r\n  if (!options) options = {}\r\n\r\n  var later = function () {\r\n    previous = options.leading === false ? 0 : Date.now()\r\n    timeout = null\r\n    result = func.apply(context, args)\r\n    if (!timeout) context = args = null\r\n  }\r\n\r\n  return function throttle () {\r\n    var now = Date.now()\r\n    if (!previous && options.leading === false) previous = now\r\n    var remaining = wait - (now - previous)\r\n    context = this\r\n    args = arguments\r\n    if (remaining <= 0 || remaining > wait) {\r\n      if (timeout) {\r\n        clearTimeout(timeout)\r\n        timeout = null\r\n      }\r\n      previous = now\r\n      result = func.apply(context, args)\r\n      if (!timeout) context = args = null\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining)\r\n    }\r\n\r\n    return result\r\n  }\r\n}\r\n\r\nfunction lexicographicCompare (elm1, elm2) {\r\n  if (elm1 < elm2) return -1\r\n  if (elm1 > elm2) return 1\r\n  return 0\r\n}\r\n\r\n/**\r\n * Does a binary search to get the index of an element in the input array\r\n * @function\r\n * @example\r\n * var array = [ 1, 2, 3, 4, 5, 6 ];\r\n * var element = 4;\r\n * binarySearchIndexOf( array, element );  // returns 3\r\n *\r\n * @param {Array} array - sorted array\r\n * @param {Anything} element - element to search for in the array\r\n * @param {Function} [compareFunction] - compare function\r\n * @return {Number} the index of the element or -1 if not in the array\r\n */\r\nfunction binarySearchIndexOf (array, element, compareFunction = lexicographicCompare) {\r\n  let low = 0\r\n  let high = array.length - 1\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    const cmp = compareFunction(element, array[ mid ])\r\n    if (cmp > 0) {\r\n      low = mid + 1\r\n    } else if (cmp < 0) {\r\n      high = mid - 1\r\n    } else {\r\n      return mid\r\n    }\r\n  }\r\n  return -low - 1\r\n}\r\n\r\nfunction binarySearchForLeftRange (array, leftRange) {\r\n  let high = array.length - 1\r\n  if (array[ high ] < leftRange) return -1\r\n  let low = 0\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    if (array[ mid ] >= leftRange) {\r\n      high = mid - 1\r\n    } else {\r\n      low = mid + 1\r\n    }\r\n  }\r\n  return high + 1\r\n}\r\n\r\nfunction binarySearchForRightRange (array, rightRange) {\r\n  if (array[ 0 ] > rightRange) return -1\r\n  let low = 0\r\n  let high = array.length - 1\r\n  while (low <= high) {\r\n    const mid = (low + high) >> 1\r\n    if (array[ mid ] > rightRange) {\r\n      high = mid - 1\r\n    } else {\r\n      low = mid + 1\r\n    }\r\n  }\r\n  return low - 1\r\n}\r\n\r\nfunction rangeInSortedArray (array, min, max) {\r\n  const indexLeft = binarySearchForLeftRange(array, min)\r\n  const indexRight = binarySearchForRightRange(array, max)\r\n  if (indexLeft === -1 || indexRight === -1 || indexLeft > indexRight) {\r\n    return 0\r\n  } else {\r\n    return indexRight - indexLeft + 1\r\n  }\r\n}\r\n\r\nfunction dataURItoImage (dataURI) {\r\n  if (typeof importScripts !== 'function') {\r\n    var img = document.createElement('img')\r\n    img.src = dataURI\r\n    return img\r\n  }\r\n}\r\n\r\nfunction uniqueArray (array) {\r\n  return array.sort().filter(function (value, index, sorted) {\r\n    return (index === 0) || (value !== sorted[ index - 1 ])\r\n  })\r\n}\r\n\r\n// String/arraybuffer conversion\r\n\r\nfunction uint8ToString (u8a) {\r\n  var chunkSize = 0x7000\r\n\r\n  if (u8a.length > chunkSize) {\r\n    var c = []\r\n\r\n    for (var i = 0; i < u8a.length; i += chunkSize) {\r\n      c.push(String.fromCharCode.apply(\r\n        null, u8a.subarray(i, i + chunkSize)\r\n      ))\r\n    }\r\n\r\n    return c.join('')\r\n  } else {\r\n    return String.fromCharCode.apply(null, u8a)\r\n  }\r\n}\r\n\r\nfunction uint8ToLines (u8a, chunkSize, newline) {\r\n  chunkSize = chunkSize !== undefined ? chunkSize : 1024 * 1024 * 10\r\n  newline = newline !== undefined ? newline : '\\n'\r\n\r\n  var partialLine = ''\r\n  var lines = []\r\n\r\n  for (var i = 0; i < u8a.length; i += chunkSize) {\r\n    var str = uint8ToString(u8a.subarray(i, i + chunkSize))\r\n    var idx = str.lastIndexOf(newline)\r\n\r\n    if (idx === -1) {\r\n      partialLine += str\r\n    } else {\r\n      var str2 = partialLine + str.substr(0, idx)\r\n      lines = lines.concat(str2.split(newline))\r\n\r\n      if (idx === str.length - newline.length) {\r\n        partialLine = ''\r\n      } else {\r\n        partialLine = str.substr(idx + newline.length)\r\n      }\r\n    }\r\n  }\r\n\r\n  if (partialLine !== '') {\r\n    lines.push(partialLine)\r\n  }\r\n\r\n  return lines\r\n}\r\n\r\nfunction getTypedArray (arrayType, arraySize) {\r\n  switch (arrayType) {\r\n    case 'int8':\r\n      return new Int8Array(arraySize)\r\n    case 'int16':\r\n      return new Int16Array(arraySize)\r\n    case 'int32':\r\n      return new Int32Array(arraySize)\r\n    case 'uint8':\r\n      return new Uint8Array(arraySize)\r\n    case 'uint16':\r\n      return new Uint16Array(arraySize)\r\n    case 'uint32':\r\n      return new Uint32Array(arraySize)\r\n    case 'float32':\r\n      return new Float32Array(arraySize)\r\n    default:\r\n      throw new Error('arrayType unknown: ' + arrayType)\r\n  }\r\n}\r\n\r\nfunction getUintArray (sizeOrArray, maxUnit) {\r\n  const TypedArray = maxUnit > 65535 ? Uint32Array : Uint16Array\r\n  return new TypedArray(sizeOrArray)\r\n}\r\n\r\nfunction ensureArray (value) {\r\n  return Array.isArray(value) ? value : [value]\r\n}\r\n\r\nfunction ensureBuffer (a) {\r\n  return (a.buffer && a.buffer instanceof ArrayBuffer) ? a.buffer : a\r\n}\r\n\r\nfunction _ensureClassFromArg (arg, constructor) {\r\n  return arg instanceof constructor ? arg : new constructor(arg)\r\n}\r\n\r\nfunction _ensureClassFromArray (array, constructor) {\r\n  if (array === undefined) {\r\n    array = new constructor()\r\n  } else if (Array.isArray(array)) {\r\n    array = new constructor().fromArray(array)\r\n  }\r\n  return array\r\n}\r\n\r\nfunction ensureVector2 (v) {\r\n  return _ensureClassFromArray(v, Vector2)\r\n}\r\n\r\nfunction ensureVector3 (v) {\r\n  return _ensureClassFromArray(v, Vector3)\r\n}\r\n\r\nfunction ensureMatrix4 (m) {\r\n  return _ensureClassFromArray(m, Matrix4)\r\n}\r\n\r\nfunction ensureQuaternion (q) {\r\n  return _ensureClassFromArray(q, Quaternion)\r\n}\r\n\r\nfunction ensureFloat32Array (a) {\r\n  return _ensureClassFromArg(a, Float32Array)\r\n}\r\n\r\nexport {\r\n  getQuery,\r\n  boolean,\r\n  defaults,\r\n  pick,\r\n  flatten,\r\n  getProtocol,\r\n  getBrowser,\r\n  getAbsolutePath,\r\n  deepCopy,\r\n  download,\r\n  submit,\r\n  open,\r\n  getFileInfo,\r\n  throttle,\r\n  binarySearchIndexOf,\r\n  rangeInSortedArray,\r\n  dataURItoImage,\r\n  uniqueArray,\r\n  uint8ToString,\r\n  uint8ToLines,\r\n  getTypedArray,\r\n  getUintArray,\r\n  ensureArray,\r\n  ensureBuffer,\r\n  ensureVector2,\r\n  ensureVector3,\r\n  ensureMatrix4,\r\n  ensureQuaternion,\r\n  ensureFloat32Array\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4232,
    "kind": "function",
    "name": "lexicographicCompare",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~lexicographicCompare",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 298,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4233,
    "kind": "function",
    "name": "binarySearchForLeftRange",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~binarySearchForLeftRange",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4234,
    "kind": "function",
    "name": "binarySearchForRightRange",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~binarySearchForRightRange",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 349,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4235,
    "kind": "function",
    "name": "_ensureClassFromArg",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~_ensureClassFromArg",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 474,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4236,
    "kind": "function",
    "name": "_ensureClassFromArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~_ensureClassFromArray",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 478,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4237,
    "kind": "function",
    "name": "getQuery",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getQuery",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getQuery}",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 4238,
    "kind": "function",
    "name": "boolean",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~boolean",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{boolean}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 4239,
    "kind": "function",
    "name": "defaults",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~defaults",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{defaults}",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 4240,
    "kind": "function",
    "name": "pick",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~pick",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{pick}",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 4241,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~flatten",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{flatten}",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 4242,
    "kind": "function",
    "name": "getProtocol",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getProtocol",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getProtocol}",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 4243,
    "kind": "function",
    "name": "getBrowser",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getBrowser",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getBrowser}",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 4244,
    "kind": "function",
    "name": "getAbsolutePath",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getAbsolutePath",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getAbsolutePath}",
    "description": null,
    "lineNumber": 87,
    "undocument": true
  },
  {
    "__docId__": 4245,
    "kind": "function",
    "name": "deepCopy",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~deepCopy",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{deepCopy}",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 4246,
    "kind": "function",
    "name": "download",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~download",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{download}",
    "description": null,
    "lineNumber": 109,
    "undocument": true
  },
  {
    "__docId__": 4247,
    "kind": "function",
    "name": "submit",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~submit",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{submit}",
    "description": null,
    "lineNumber": 170,
    "undocument": true
  },
  {
    "__docId__": 4248,
    "kind": "function",
    "name": "open",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~open",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{open}",
    "description": null,
    "lineNumber": 191,
    "undocument": true
  },
  {
    "__docId__": 4249,
    "kind": "function",
    "name": "getFileInfo",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getFileInfo",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getFileInfo}",
    "description": null,
    "lineNumber": 207,
    "undocument": true
  },
  {
    "__docId__": 4250,
    "kind": "function",
    "name": "throttle",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~throttle",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{throttle}",
    "description": null,
    "lineNumber": 260,
    "undocument": true
  },
  {
    "__docId__": 4251,
    "kind": "function",
    "name": "binarySearchIndexOf",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~binarySearchIndexOf",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{binarySearchIndexOf}",
    "description": "Does a binary search to get the index of an element in the input array",
    "examples": [
      "var array = [ 1, 2, 3, 4, 5, 6 ];\nvar element = 4;\nbinarySearchIndexOf( array, element );  // returns 3"
    ],
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@function",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "sorted array"
      },
      {
        "nullable": null,
        "types": [
          "Anything"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "element to search for in the array"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "compareFunction",
        "description": "compare function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "the index of the element or -1 if not in the array"
    }
  },
  {
    "__docId__": 4252,
    "kind": "function",
    "name": "rangeInSortedArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~rangeInSortedArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{rangeInSortedArray}",
    "description": null,
    "lineNumber": 364,
    "undocument": true
  },
  {
    "__docId__": 4253,
    "kind": "function",
    "name": "dataURItoImage",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~dataURItoImage",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{dataURItoImage}",
    "description": null,
    "lineNumber": 374,
    "undocument": true
  },
  {
    "__docId__": 4254,
    "kind": "function",
    "name": "uniqueArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~uniqueArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{uniqueArray}",
    "description": null,
    "lineNumber": 382,
    "undocument": true
  },
  {
    "__docId__": 4255,
    "kind": "function",
    "name": "uint8ToString",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~uint8ToString",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{uint8ToString}",
    "description": null,
    "lineNumber": 390,
    "undocument": true
  },
  {
    "__docId__": 4256,
    "kind": "function",
    "name": "uint8ToLines",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~uint8ToLines",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{uint8ToLines}",
    "description": null,
    "lineNumber": 408,
    "undocument": true
  },
  {
    "__docId__": 4257,
    "kind": "function",
    "name": "getTypedArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getTypedArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getTypedArray}",
    "description": null,
    "lineNumber": 440,
    "undocument": true
  },
  {
    "__docId__": 4258,
    "kind": "function",
    "name": "getUintArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~getUintArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{getUintArray}",
    "description": null,
    "lineNumber": 461,
    "undocument": true
  },
  {
    "__docId__": 4259,
    "kind": "function",
    "name": "ensureArray",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureArray",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureArray}",
    "description": null,
    "lineNumber": 466,
    "undocument": true
  },
  {
    "__docId__": 4260,
    "kind": "function",
    "name": "ensureBuffer",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureBuffer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureBuffer}",
    "description": null,
    "lineNumber": 470,
    "undocument": true
  },
  {
    "__docId__": 4261,
    "kind": "function",
    "name": "ensureVector2",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureVector2",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureVector2}",
    "description": null,
    "lineNumber": 487,
    "undocument": true
  },
  {
    "__docId__": 4262,
    "kind": "function",
    "name": "ensureVector3",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureVector3",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureVector3}",
    "description": null,
    "lineNumber": 491,
    "undocument": true
  },
  {
    "__docId__": 4263,
    "kind": "function",
    "name": "ensureMatrix4",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureMatrix4",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureMatrix4}",
    "description": null,
    "lineNumber": 495,
    "undocument": true
  },
  {
    "__docId__": 4264,
    "kind": "function",
    "name": "ensureQuaternion",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureQuaternion",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureQuaternion}",
    "description": null,
    "lineNumber": 499,
    "undocument": true
  },
  {
    "__docId__": 4265,
    "kind": "function",
    "name": "ensureFloat32Array",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~ensureFloat32Array",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/utils.js",
    "importStyle": "{ensureFloat32Array}",
    "description": null,
    "lineNumber": 503,
    "undocument": true
  },
  {
    "__docId__": 4266,
    "kind": "file",
    "name": "src/version.js",
    "content": "/**\r\n * @file Version\r\n * @private\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n */\r\n\r\nimport { version } from '../package.json'\r\n\r\n/**\r\n * Version name\r\n * @type {String}\r\n */\r\nconst Version = version\r\n\r\nexport default Version\r\n",
    "static": true,
    "longname": "D:/nglLib/src/version.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4267,
    "kind": "variable",
    "name": "Version",
    "memberof": "src/version.js",
    "static": true,
    "longname": "src/version.js~Version",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/version.js",
    "importStyle": "Version",
    "description": "Version name",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 4268,
    "kind": "file",
    "name": "src/viewer/geometry-group.js",
    "content": "/**\r\n * @file Geometry Group\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Box3 } from '../../lib/three.es6.js'\r\n\r\nclass GeometryGroup {\r\n  constructor (geometryList) {\r\n    this.geometryList = geometryList\r\n    this.boundingBox = null\r\n  }\r\n\r\n  computeBoundingBox () {\r\n    if (!this.boundingBox) {\r\n      this.boundingBox = new Box3()\r\n    } else {\r\n      this.boundingBox.empty()\r\n    }\r\n\r\n    this.geometryList.forEach(geo => {\r\n      if (!geo.boundingBox) geo.computeBoundingBox()\r\n      this.boundingBox.union(geo.boundingBox)\r\n    })\r\n  }\r\n}\r\n\r\nexport default GeometryGroup\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/geometry-group.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4269,
    "kind": "class",
    "name": "GeometryGroup",
    "memberof": "src/viewer/geometry-group.js",
    "static": true,
    "longname": "src/viewer/geometry-group.js~GeometryGroup",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/geometry-group.js",
    "importStyle": "GeometryGroup",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 4270,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/viewer/geometry-group.js~GeometryGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/viewer/geometry-group.js~GeometryGroup#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 4271,
    "kind": "member",
    "name": "geometryList",
    "memberof": "src/viewer/geometry-group.js~GeometryGroup",
    "static": false,
    "longname": "src/viewer/geometry-group.js~GeometryGroup#geometryList",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 4272,
    "kind": "member",
    "name": "boundingBox",
    "memberof": "src/viewer/geometry-group.js~GeometryGroup",
    "static": false,
    "longname": "src/viewer/geometry-group.js~GeometryGroup#boundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true
  },
  {
    "__docId__": 4273,
    "kind": "method",
    "name": "computeBoundingBox",
    "memberof": "src/viewer/geometry-group.js~GeometryGroup",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/viewer/geometry-group.js~GeometryGroup#computeBoundingBox",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 4275,
    "kind": "file",
    "name": "src/viewer/stats.js",
    "content": "/**\r\n * @file Stats\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nfunction Stats () {\r\n  this.signals = {\r\n    updated: new Signal()\r\n  }\r\n\r\n  this.begin()\r\n\r\n  this.maxDuration = -Infinity\r\n  this.minDuration = Infinity\r\n  this.avgDuration = 14\r\n  this.lastDuration = Infinity\r\n\r\n  this.prevFpsTime = 0\r\n  this.lastFps = Infinity\r\n  this.lastFrames = 1\r\n  this.frames = 0\r\n  this.count = 0\r\n}\r\n\r\nStats.prototype = {\r\n\r\n  update: function () {\r\n    this.startTime = this.end()\r\n    this.currentTime = this.startTime\r\n    this.signals.updated.dispatch()\r\n  },\r\n\r\n  begin: function () {\r\n    this.startTime = window.performance.now()\r\n    this.lastFrames = this.frames\r\n  },\r\n\r\n  end: function () {\r\n    var time = window.performance.now()\r\n\r\n    this.count += 1\r\n    this.frames += 1\r\n\r\n    this.lastDuration = time - this.startTime\r\n    this.minDuration = Math.min(this.minDuration, this.lastDuration)\r\n    this.maxDuration = Math.max(this.maxDuration, this.lastDuration)\r\n    this.avgDuration -= this.avgDuration / 30\r\n    this.avgDuration += this.lastDuration / 30\r\n\r\n    if (time > this.prevFpsTime + 1000) {\r\n      this.lastFps = this.frames\r\n      this.prevFpsTime = time\r\n      this.frames = 0\r\n    }\r\n\r\n    return time\r\n  }\r\n\r\n}\r\n\r\nexport default Stats\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/stats.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4276,
    "kind": "function",
    "name": "Stats",
    "memberof": "src/viewer/stats.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/stats.js~Stats",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/stats.js",
    "importStyle": "Stats",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 4277,
    "kind": "file",
    "name": "src/viewer/tiled-renderer.js",
    "content": "/**\r\n * @file Tiled Renderer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nfunction TiledRenderer (renderer, camera, viewer, params) {\r\n  const p = params || {}\r\n\r\n  let factor = p.factor !== undefined ? p.factor : 2\r\n  const antialias = p.antialias !== undefined ? p.antialias : false\r\n\r\n  const onProgress = p.onProgress\r\n  const onFinish = p.onFinish\r\n\r\n  //\r\n\r\n  if (antialias) factor *= 2\r\n  const n = factor * factor\r\n\r\n  // canvas\r\n\r\n  const canvas = document.createElement('canvas')\r\n  const width = viewer.width\r\n  const height = viewer.height\r\n\r\n  if (antialias) {\r\n    canvas.width = width * factor / 2\r\n    canvas.height = height * factor / 2\r\n  } else {\r\n    canvas.width = width * factor\r\n    canvas.height = height * factor\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  const viewerSampleLevel = viewer.sampleLevel\r\n  viewer.setSampling(-1)\r\n\r\n  function renderTile (i) {\r\n    const x = i % factor\r\n    const y = Math.floor(i / factor)\r\n\r\n    const offsetX = x * width\r\n    const offsetY = y * height\r\n\r\n    viewer.camera.setViewOffset(\r\n      width * factor,\r\n      height * factor,\r\n      offsetX,\r\n      offsetY,\r\n      width,\r\n      height\r\n    )\r\n\r\n    viewer.render()\r\n\r\n    if (antialias) {\r\n      ctx.drawImage(\r\n        renderer.domElement,\r\n        Math.floor(offsetX / 2),\r\n        Math.floor(offsetY / 2),\r\n        Math.ceil(width / 2),\r\n        Math.ceil(height / 2)\r\n      )\r\n    } else {\r\n      ctx.drawImage(\r\n        renderer.domElement,\r\n        Math.floor(offsetX),\r\n        Math.floor(offsetY),\r\n        Math.ceil(width),\r\n        Math.ceil(height)\r\n      )\r\n    }\r\n\r\n    if (typeof onProgress === 'function') {\r\n      onProgress(i + 1, n, false)\r\n    }\r\n  }\r\n\r\n  function finalize () {\r\n    viewer.setSampling(viewerSampleLevel)\r\n    viewer.camera.view = null\r\n\r\n    if (typeof onFinish === 'function') {\r\n      onFinish(n + 1, n, false)\r\n    }\r\n  }\r\n\r\n  function render () {\r\n    for (let i = 0; i <= n; ++i) {\r\n      if (i === n) {\r\n        finalize()\r\n      } else {\r\n        renderTile(i)\r\n      }\r\n    }\r\n  }\r\n\r\n  function renderAsync () {\r\n    let count = 0\r\n\r\n    function fn () {\r\n      if (count === n) {\r\n        finalize()\r\n      } else {\r\n        renderTile(count)\r\n      }\r\n      count += 1\r\n    }\r\n\r\n    for (let i = 0; i <= n; ++i) {\r\n      setTimeout(fn, 0)\r\n    }\r\n  }\r\n\r\n  // API\r\n\r\n  this.render = render\r\n  this.renderAsync = renderAsync\r\n\r\n  this.canvas = canvas\r\n}\r\n\r\nTiledRenderer.prototype.constructor = TiledRenderer\r\n\r\nexport default TiledRenderer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/tiled-renderer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4278,
    "kind": "function",
    "name": "TiledRenderer",
    "memberof": "src/viewer/tiled-renderer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/tiled-renderer.js~TiledRenderer",
    "access": "private",
    "export": true,
    "importPath": "ngl/src/viewer/tiled-renderer.js",
    "importStyle": "TiledRenderer",
    "description": "",
    "lineNumber": 7,
    "unknown": [
      {
        "tagName": "@file",
        "tagValue": "Tiled Renderer"
      },
      {
        "tagName": "@author",
        "tagValue": "Alexander Rose <alexander.rose@weirdbyte.de>"
      }
    ]
  },
  {
    "__docId__": 4279,
    "kind": "file",
    "name": "src/viewer/viewer-constants.js",
    "content": "/**\r\n * @file Viewer Constants\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Debug } from '../globals.js'\r\n\r\nif (typeof window !== 'undefined' && window.WebGLRenderingContext) {\r\n  const wrcp = window.WebGLRenderingContext.prototype\r\n\r\n  // wrap WebGL debug function used by three.js and\r\n  // ignore calls to them when the debug flag is not set\r\n\r\n  const _getShaderParameter = wrcp.getShaderParameter\r\n  wrcp.getShaderParameter = function getShaderParameter () {\r\n    if (Debug) {\r\n      return _getShaderParameter.apply(this, arguments)\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const _getShaderInfoLog = wrcp.getShaderInfoLog\r\n  wrcp.getShaderInfoLog = function getShaderInfoLog () {\r\n    if (Debug) {\r\n      return _getShaderInfoLog.apply(this, arguments)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n\r\n  const _getProgramParameter = wrcp.getProgramParameter\r\n  wrcp.getProgramParameter = function getProgramParameter (program, pname) {\r\n    if (Debug || pname !== wrcp.LINK_STATUS) {\r\n      return _getProgramParameter.apply(this, arguments)\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const _getProgramInfoLog = wrcp.getProgramInfoLog\r\n  wrcp.getProgramInfoLog = function getProgramInfoLog () {\r\n    if (Debug) {\r\n      return _getProgramInfoLog.apply(this, arguments)\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n}\r\n\r\nconst JitterVectors = [\r\n  [\r\n    [ 0, 0 ]\r\n  ],\r\n  [\r\n    [ 4, 4 ], [ -4, -4 ]\r\n  ],\r\n  [\r\n    [ -2, -6 ], [ 6, -2 ], [ -6, 2 ], [ 2, 6 ]\r\n  ],\r\n  [\r\n    [ 1, -3 ], [ -1, 3 ], [ 5, 1 ], [ -3, -5 ],\r\n    [ -5, 5 ], [ -7, -1 ], [ 3, 7 ], [ 7, -7 ]\r\n  ],\r\n  [\r\n    [ 1, 1 ], [ -1, -3 ], [ -3, 2 ], [ 4, -1 ],\r\n    [ -5, -2 ], [ 2, 5 ], [ 5, 3 ], [ 3, -5 ],\r\n    [ -2, 6 ], [ 0, -7 ], [ -4, -6 ], [ -6, 4 ],\r\n    [ -8, 0 ], [ 7, -4 ], [ 6, 7 ], [ -7, -8 ]\r\n  ],\r\n  [\r\n    [ -4, -7 ], [ -7, -5 ], [ -3, -5 ], [ -5, -4 ],\r\n    [ -1, -4 ], [ -2, -2 ], [ -6, -1 ], [ -4, 0 ],\r\n    [ -7, 1 ], [ -1, 2 ], [ -6, 3 ], [ -3, 3 ],\r\n    [ -7, 6 ], [ -3, 6 ], [ -5, 7 ], [ -1, 7 ],\r\n    [ 5, -7 ], [ 1, -6 ], [ 6, -5 ], [ 4, -4 ],\r\n    [ 2, -3 ], [ 7, -2 ], [ 1, -1 ], [ 4, -1 ],\r\n    [ 2, 1 ], [ 6, 2 ], [ 0, 4 ], [ 4, 4 ],\r\n    [ 2, 5 ], [ 7, 5 ], [ 5, 6 ], [ 3, 7 ]\r\n  ]\r\n]\r\n\r\nJitterVectors.forEach(offsetList => {\r\n  offsetList.forEach(offset => {\r\n    // 0.0625 = 1 / 16\r\n    offset[ 0 ] *= 0.0625\r\n    offset[ 1 ] *= 0.0625\r\n  })\r\n})\r\n\r\nexport {\r\n  JitterVectors\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/viewer-constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4280,
    "kind": "variable",
    "name": "JitterVectors",
    "memberof": "src/viewer/viewer-constants.js",
    "static": true,
    "longname": "src/viewer/viewer-constants.js~JitterVectors",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer-constants.js",
    "importStyle": "{JitterVectors}",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 4281,
    "kind": "file",
    "name": "src/viewer/viewer-utils.js",
    "content": "/**\r\n * @file Viewer Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Vector2, Vector3, Matrix4, Points } from '../../lib/three.es6.js'\r\n\r\nimport { defaults } from '../utils.js'\r\nimport TiledRenderer from './tiled-renderer.js'\r\nimport { quicksortCmp } from '../math/array-utils.js'\r\n\r\nfunction _trimCanvas (canvas, r, g, b, a) {\r\n  const canvasHeight = canvas.height\r\n  const canvasWidth = canvas.width\r\n\r\n  const ctx = canvas.getContext('2d')\r\n  const pixels = ctx.getImageData(0, 0, canvasWidth, canvasHeight).data\r\n\r\n  let x, y, doBreak, off\r\n\r\n  doBreak = false\r\n  for (y = 0; y < canvasHeight; y++) {\r\n    for (x = 0; x < canvasWidth; x++) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const topY = y\r\n\r\n  doBreak = false\r\n  for (x = 0; x < canvasWidth; x++) {\r\n    for (y = 0; y < canvasHeight; y++) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const topX = x\r\n\r\n  doBreak = false\r\n  for (y = canvasHeight - 1; y >= 0; y--) {\r\n    for (x = canvasWidth - 1; x >= 0; x--) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const bottomY = y\r\n\r\n  doBreak = false\r\n  for (x = canvasWidth - 1; x >= 0; x--) {\r\n    for (y = canvasHeight - 1; y >= 0; y--) {\r\n      off = (y * canvasWidth + x) * 4\r\n      if (pixels[ off ] !== r || pixels[ off + 1 ] !== g ||\r\n          pixels[ off + 2 ] !== b || pixels[ off + 3 ] !== a\r\n      ) {\r\n        doBreak = true\r\n        break\r\n      }\r\n    }\r\n    if (doBreak) {\r\n      break\r\n    }\r\n  }\r\n  const bottomX = x\r\n\r\n  const trimedCanvas = document.createElement('canvas')\r\n  trimedCanvas.width = bottomX - topX\r\n  trimedCanvas.height = bottomY - topY\r\n\r\n  const trimedCtx = trimedCanvas.getContext('2d')\r\n  trimedCtx.drawImage(\r\n    canvas,\r\n    topX, topY,\r\n    trimedCanvas.width, trimedCanvas.height,\r\n    0, 0,\r\n    trimedCanvas.width, trimedCanvas.height\r\n  )\r\n\r\n  return trimedCanvas\r\n}\r\n\r\n/**\r\n * Image parameter object.\r\n * @typedef {Object} ImageParameters - image generation parameters\r\n * @property {Boolean} trim - trim the image\r\n * @property {Integer} factor - scaling factor to apply to the viewer canvas\r\n * @property {Boolean} antialias - antialias the image\r\n * @property {Boolean} transparent - transparent image background\r\n */\r\n\r\n/**\r\n * Make image from what is shown in a viewer canvas\r\n * @param  {Viewer} viewer - the viewer\r\n * @param  {ImageParameters} params - parameters object\r\n * @return {Promise} A Promise object that resolves to an image {@link Blob}.\r\n */\r\nfunction makeImage (viewer, params) {\r\n  const p = params || {}\r\n\r\n  const trim = defaults(p.trim, false)\r\n  const factor = defaults(p.factor, 1)\r\n  const antialias = defaults(p.antialias, false)\r\n  const transparent = defaults(p.transparent, false)\r\n\r\n  const renderer = viewer.renderer\r\n  const camera = viewer.camera\r\n\r\n  const originalClearAlpha = renderer.getClearAlpha()\r\n  const backgroundColor = renderer.getClearColor()\r\n\r\n  function setLineWidthAndPixelSize (invert) {\r\n    let _factor = factor\r\n    if (antialias) _factor *= 2\r\n    if (invert) _factor = 1 / _factor\r\n    viewer.scene.traverse(function (o) {\r\n      const m = o.material\r\n      if (m && m.linewidth) {\r\n        m.linewidth *= _factor\r\n      }\r\n      if (m && m.uniforms && m.uniforms.size) {\r\n        if (m.uniforms.size.__seen === undefined) {\r\n          m.uniforms.size.value *= _factor\r\n          m.uniforms.size.__seen = true\r\n        }\r\n      }\r\n      if (m && m.uniforms && m.uniforms.linewidth) {\r\n        if (m.uniforms.linewidth.__seen === undefined) {\r\n          m.uniforms.linewidth.value *= _factor\r\n          m.uniforms.linewidth.__seen = true\r\n        }\r\n      }\r\n    })\r\n    viewer.scene.traverse(function (o) {\r\n      const m = o.material\r\n      if (m && m.uniforms && m.uniforms.size) {\r\n        delete m.uniforms.size.__seen\r\n      }\r\n      if (m && m.uniforms && m.uniforms.linewidth) {\r\n        delete m.uniforms.linewidth.__seen\r\n      }\r\n    })\r\n  }\r\n\r\n  function trimCanvas (canvas) {\r\n    if (trim) {\r\n      const bg = backgroundColor\r\n      const r = transparent ? 0 : bg.r * 255\r\n      const g = transparent ? 0 : bg.g * 255\r\n      const b = transparent ? 0 : bg.b * 255\r\n      const a = transparent ? 0 : 255\r\n      return _trimCanvas(canvas, r, g, b, a)\r\n    } else {\r\n      return canvas\r\n    }\r\n  }\r\n\r\n  function onProgress (i, n, finished) {\r\n    if (typeof p.onProgress === 'function') {\r\n      p.onProgress(i, n, finished)\r\n    }\r\n  }\r\n\r\n  return new Promise(function (resolve) {\r\n    const tiledRenderer = new TiledRenderer(\r\n      renderer, camera, viewer,\r\n      {\r\n        factor: factor,\r\n        antialias: antialias,\r\n        onProgress: onProgress,\r\n        onFinish: onFinish\r\n      }\r\n    )\r\n\r\n    renderer.setClearAlpha(transparent ? 0 : 1)\r\n    setLineWidthAndPixelSize()\r\n    tiledRenderer.renderAsync()\r\n\r\n    function onFinish (i, n) {\r\n      const canvas = trimCanvas(tiledRenderer.canvas)\r\n      canvas.toBlob(\r\n        function (blob) {\r\n          renderer.setClearAlpha(originalClearAlpha)\r\n          setLineWidthAndPixelSize(true)\r\n          viewer.requestRender()\r\n          onProgress(n, n, true)\r\n          resolve(blob)\r\n        },\r\n        'image/png'\r\n      )\r\n    }\r\n  })\r\n}\r\n\r\nconst vertex = new Vector3()\r\nconst matrix = new Matrix4()\r\nconst modelViewProjectionMatrix = new Matrix4()\r\n\r\nfunction sortProjectedPosition (scene, camera) {\r\n  // console.time( \"sort\" );\r\n\r\n  scene.traverseVisible(function (o) {\r\n    if (!(o instanceof Points) || !o.sortParticles) {\r\n      return\r\n    }\r\n\r\n    const attributes = o.geometry.attributes\r\n    const n = attributes.position.count\r\n\r\n    if (n === 0) return\r\n\r\n    matrix.multiplyMatrices(\r\n      camera.matrixWorldInverse, o.matrixWorld\r\n    )\r\n    modelViewProjectionMatrix.multiplyMatrices(\r\n      camera.projectionMatrix, matrix\r\n    )\r\n\r\n    let sortData, sortArray, zArray, cmpFn\r\n\r\n    if (!o.userData.sortData) {\r\n      zArray = new Float32Array(n)\r\n      sortArray = new Uint32Array(n)\r\n      cmpFn = function (ai, bi) {\r\n        var a = zArray[ ai ]\r\n        var b = zArray[ bi ]\r\n        if (a > b) return 1\r\n        if (a < b) return -1\r\n        return 0\r\n      }\r\n\r\n      sortData = {\r\n        __zArray: zArray,\r\n        __sortArray: sortArray,\r\n        __cmpFn: cmpFn\r\n      }\r\n\r\n      o.userData.sortData = sortData\r\n    } else {\r\n      sortData = o.userData.sortData\r\n      zArray = sortData.__zArray\r\n      sortArray = sortData.__sortArray\r\n      cmpFn = sortData.__cmpFn\r\n    }\r\n\r\n    for (let i = 0; i < n; ++i) {\r\n      vertex.fromArray(attributes.position.array, i * 3)\r\n      vertex.applyMatrix4(modelViewProjectionMatrix)\r\n\r\n      // negate, so that sorting order is reversed\r\n      zArray[ i ] = -vertex.z\r\n      sortArray[ i ] = i\r\n    }\r\n\r\n    quicksortCmp(sortArray, cmpFn)\r\n\r\n    let index, indexSrc, indexDst, tmpTab\r\n\r\n    for (let name in attributes) {\r\n      const attr = attributes[ name ]\r\n      const array = attr.array\r\n      const itemSize = attr.itemSize\r\n\r\n      if (!sortData[ name ]) {\r\n        sortData[ name ] = new Float32Array(itemSize * n)\r\n      }\r\n\r\n      tmpTab = sortData[ name ]\r\n      sortData[ name ] = array\r\n\r\n      for (let i = 0; i < n; ++i) {\r\n        index = sortArray[ i ]\r\n\r\n        for (let j = 0; j < itemSize; ++j) {\r\n          indexSrc = index * itemSize + j\r\n          indexDst = i * itemSize + j\r\n          tmpTab[ indexDst ] = array[ indexSrc ]\r\n        }\r\n      }\r\n\r\n      attributes[ name ].array = tmpTab\r\n      attributes[ name ].needsUpdate = true\r\n    }\r\n  })\r\n\r\n    // console.timeEnd( \"sort\" );\r\n}\r\n\r\nconst resolution = new Vector2()\r\nconst projectionMatrixInverse = new Matrix4()\r\nconst projectionMatrixTranspose = new Matrix4()\r\n\r\nfunction updateMaterialUniforms (group, camera, renderer, cDist, bRadius) {\r\n  const {width, height} = renderer.getSize()\r\n  const canvasHeight = height\r\n  const pixelRatio = renderer.getPixelRatio()\r\n  const ortho = camera.type === 'OrthographicCamera'\r\n\r\n  resolution.set(width, height)\r\n  projectionMatrixInverse.getInverse(camera.projectionMatrix)\r\n  projectionMatrixTranspose.copy(camera.projectionMatrix).transpose()\r\n\r\n  group.traverse(function (o) {\r\n    const m = o.material\r\n    if (!m) return\r\n\r\n    const u = o.material.uniforms\r\n    if (!u) return\r\n\r\n    if (m.clipNear) {\r\n      const nearFactor = (50 - m.clipNear) / 50\r\n      const nearClip = cDist - (bRadius * nearFactor)\r\n      u.nearClip.value = nearClip\r\n    }\r\n\r\n    if (u.canvasHeight) {\r\n      u.canvasHeight.value = canvasHeight\r\n    }\r\n\r\n    if (u.resolution) {\r\n      u.resolution.value.copy(resolution)\r\n    }\r\n\r\n    if (u.pixelRatio) {\r\n      u.pixelRatio.value = pixelRatio\r\n    }\r\n\r\n    if (u.projectionMatrixInverse) {\r\n      u.projectionMatrixInverse.value.copy(projectionMatrixInverse)\r\n    }\r\n\r\n    if (u.projectionMatrixTranspose) {\r\n      u.projectionMatrixTranspose.value.copy(projectionMatrixTranspose)\r\n    }\r\n\r\n    if (u.ortho) {\r\n      u.ortho.value = ortho\r\n    }\r\n  })\r\n}\r\n\r\nfunction testTextureSupport (gl, type) {\r\n  // https://stackoverflow.com/questions/28827511/webgl-ios-render-to-floating-point-texture\r\n  const tex = gl.createTexture()\r\n  gl.bindTexture(gl.TEXTURE_2D, tex)\r\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, type, null)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\r\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\r\n\r\n  const fb = gl.createFramebuffer()\r\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fb)\r\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, tex, 0)\r\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\r\n  return status === gl.FRAMEBUFFER_COMPLETE\r\n}\r\n\r\nexport {\r\n  makeImage,\r\n  sortProjectedPosition,\r\n  updateMaterialUniforms,\r\n  testTextureSupport\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/viewer-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4282,
    "kind": "function",
    "name": "_trimCanvas",
    "memberof": "src/viewer/viewer-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer-utils.js~_trimCanvas",
    "access": "private",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4283,
    "kind": "variable",
    "name": "vertex",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~vertex",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4284,
    "kind": "variable",
    "name": "matrix",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~matrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4285,
    "kind": "variable",
    "name": "modelViewProjectionMatrix",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~modelViewProjectionMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4286,
    "kind": "variable",
    "name": "resolution",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~resolution",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4287,
    "kind": "variable",
    "name": "projectionMatrixInverse",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~projectionMatrixInverse",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 313,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4288,
    "kind": "variable",
    "name": "projectionMatrixTranspose",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~projectionMatrixTranspose",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 314,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4289,
    "kind": "typedef",
    "name": "ImageParameters",
    "memberof": "src/viewer/viewer-utils.js",
    "static": true,
    "longname": "src/viewer/viewer-utils.js~ImageParameters",
    "access": "public",
    "description": "Image parameter object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "trim",
        "description": "trim the image"
      },
      {
        "nullable": null,
        "types": [
          "Integer"
        ],
        "spread": false,
        "optional": false,
        "name": "factor",
        "description": "scaling factor to apply to the viewer canvas"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "antialias",
        "description": "antialias the image"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "transparent",
        "description": "transparent image background"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "ImageParameters"
    }
  },
  {
    "__docId__": 4290,
    "kind": "function",
    "name": "makeImage",
    "memberof": "src/viewer/viewer-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer-utils.js~makeImage",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": "{makeImage}",
    "description": "Make image from what is shown in a viewer canvas",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Viewer"
        ],
        "spread": false,
        "optional": false,
        "name": "viewer",
        "description": "the viewer"
      },
      {
        "nullable": null,
        "types": [
          "ImageParameters"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A Promise object that resolves to an image {@link Blob}."
    }
  },
  {
    "__docId__": 4291,
    "kind": "function",
    "name": "sortProjectedPosition",
    "memberof": "src/viewer/viewer-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer-utils.js~sortProjectedPosition",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": "{sortProjectedPosition}",
    "description": null,
    "lineNumber": 222,
    "undocument": true
  },
  {
    "__docId__": 4292,
    "kind": "function",
    "name": "updateMaterialUniforms",
    "memberof": "src/viewer/viewer-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer-utils.js~updateMaterialUniforms",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": "{updateMaterialUniforms}",
    "description": null,
    "lineNumber": 316,
    "undocument": true
  },
  {
    "__docId__": 4293,
    "kind": "function",
    "name": "testTextureSupport",
    "memberof": "src/viewer/viewer-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer-utils.js~testTextureSupport",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer-utils.js",
    "importStyle": "{testTextureSupport}",
    "description": null,
    "lineNumber": 365,
    "undocument": true
  },
  {
    "__docId__": 4294,
    "kind": "file",
    "name": "src/viewer/viewer.js",
    "content": "/**\r\n * @file Viewer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport {\r\n  PerspectiveCamera, OrthographicCamera,\r\n  Box3, Vector3, Matrix4, Color,\r\n  WebGLRenderer, WebGLRenderTarget,\r\n  NearestFilter, LinearFilter, AdditiveBlending,\r\n  RGBAFormat, FloatType,\r\n  // HalfFloatType,\r\n  UnsignedByteType,\r\n  ShaderMaterial,\r\n  PlaneGeometry,\r\n  Scene, Mesh, Group,\r\n  Fog, SpotLight, AmbientLight,\r\n  BufferGeometry, BufferAttribute,\r\n  LineSegments\r\n} from '../../lib/three.es6.js'\r\n\r\nimport '../shader/BasicLine.vert'\r\nimport '../shader/BasicLine.frag'\r\nimport '../shader/Quad.vert'\r\nimport '../shader/Quad.frag'\r\n\r\nimport {\r\n  Debug, Log, WebglErrorMessage, Browser,\r\n  setExtensionFragDepth, SupportsReadPixelsFloat, setSupportsReadPixelsFloat\r\n} from '../globals.js'\r\nimport { degToRad } from '../math/math-utils.js'\r\nimport Stats from './stats.js'\r\nimport { getShader } from '../shader/shader-utils.js'\r\nimport { JitterVectors } from './viewer-constants.js'\r\nimport {\r\n  makeImage as _makeImage, testTextureSupport,\r\n  sortProjectedPosition, updateMaterialUniforms\r\n} from './viewer-utils'\r\n\r\nimport Signal from '../../lib/signals.es6.js'\r\n\r\nconst pixelBufferFloat = new Float32Array(4)\r\nconst pixelBufferUint = new Uint8Array(4)\r\n\r\nvar tmpMatrix = new Matrix4()\r\n\r\nfunction onBeforeRender (renderer, scene, camera, geometry, material/*, group */) {\r\n  var u = material.uniforms\r\n  var updateList = []\r\n\r\n  if (u.objectId) {\r\n    u.objectId.value = SupportsReadPixelsFloat ? this.id : this.id / 255\r\n    updateList.push('objectId')\r\n  }\r\n\r\n  if (u.modelViewMatrixInverse || u.modelViewMatrixInverseTranspose ||\r\n      u.modelViewProjectionMatrix || u.modelViewProjectionMatrixInverse\r\n  ) {\r\n    this.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, this.matrixWorld)\r\n  }\r\n\r\n  if (u.modelViewMatrixInverse) {\r\n    u.modelViewMatrixInverse.value.getInverse(this.modelViewMatrix)\r\n    updateList.push('modelViewMatrixInverse')\r\n  }\r\n\r\n  if (u.modelViewMatrixInverseTranspose) {\r\n    if (u.modelViewMatrixInverse) {\r\n      u.modelViewMatrixInverseTranspose.value.copy(\r\n        u.modelViewMatrixInverse.value\r\n      ).transpose()\r\n    } else {\r\n      u.modelViewMatrixInverseTranspose.value\r\n        .getInverse(this.modelViewMatrix)\r\n        .transpose()\r\n    }\r\n    updateList.push('modelViewMatrixInverseTranspose')\r\n  }\r\n\r\n  if (u.modelViewProjectionMatrix) {\r\n    camera.updateProjectionMatrix()\r\n    u.modelViewProjectionMatrix.value.multiplyMatrices(\r\n      camera.projectionMatrix, this.modelViewMatrix\r\n    )\r\n    updateList.push('modelViewProjectionMatrix')\r\n  }\r\n\r\n  if (u.modelViewProjectionMatrixInverse) {\r\n    if (u.modelViewProjectionMatrix) {\r\n      tmpMatrix.copy(\r\n        u.modelViewProjectionMatrix.value\r\n      )\r\n      u.modelViewProjectionMatrixInverse.value.getInverse(\r\n        tmpMatrix\r\n      )\r\n    } else {\r\n      camera.updateProjectionMatrix()\r\n      tmpMatrix.multiplyMatrices(\r\n        camera.projectionMatrix, this.modelViewMatrix\r\n      )\r\n      u.modelViewProjectionMatrixInverse.value.getInverse(\r\n        tmpMatrix\r\n      )\r\n    }\r\n    updateList.push('modelViewProjectionMatrixInverse')\r\n  }\r\n\r\n  if (updateList.length) {\r\n    var materialProperties = renderer.properties.get(material)\r\n\r\n    if (materialProperties.program) {\r\n      var gl = renderer.getContext()\r\n      var p = materialProperties.program\r\n      gl.useProgram(p.program)\r\n      var pu = p.getUniforms()\r\n\r\n      updateList.forEach(function (name) {\r\n        pu.setValue(gl, name, u[ name ].value)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Viewer class\r\n * @class\r\n * @param {String|Element} [idOrElement] - dom id or element\r\n */\r\nfunction Viewer (idOrElement) {\r\n  const signals = {\r\n    ticked: new Signal()\r\n  }\r\n\r\n  let container\r\n  if (typeof idOrElement === 'string') {\r\n    container = document.getElementById(idOrElement)\r\n  } else if (idOrElement instanceof window.Element) {\r\n    container = idOrElement\r\n  } else {\r\n    container = document.createElement('div')\r\n  }\r\n\r\n  let width, height\r\n  if (container === document.body) {\r\n    width = window.innerWidth || 1\r\n    height = window.innerHeight || 1\r\n  } else {\r\n    var box = container.getBoundingClientRect()\r\n    width = box.width || 1\r\n    height = box.height || 1\r\n  }\r\n\r\n  let rendering, renderPending, lastRenderedPicking, isStill\r\n  let sampleLevel, cDist, bRadius\r\n\r\n  let parameters\r\n  initParams()\r\n\r\n  let stats\r\n  initStats()\r\n\r\n  let perspectiveCamera, orthographicCamera, camera\r\n  initCamera()\r\n\r\n  let scene, pointLight, ambientLight\r\n  let rotationGroup, translationGroup, modelGroup, pickingGroup, backgroundGroup, helperGroup\r\n  initScene()\r\n\r\n  let renderer  // , supportsHalfFloat\r\n  let pickingTarget, sampleTarget, holdTarget\r\n  let compositeUniforms, compositeMaterial, compositeCamera, compositeScene\r\n  if (initRenderer() === false) {\r\n    this.container = container\r\n    Log.error('Viewer: could not initialize renderer')\r\n    return\r\n  }\r\n\r\n  let boundingBoxMesh\r\n  const boundingBox = new Box3()\r\n  const boundingBoxSize = new Vector3()\r\n  let boundingBoxLength = 0\r\n  initHelper()\r\n\r\n    // fog & background\r\n  setBackground()\r\n  setFog()\r\n\r\n  const distVector = new Vector3()\r\n\r\n  const info = {\r\n    memory: {\r\n      programs: 0,\r\n      geometries: 0,\r\n      textures: 0\r\n    },\r\n    render: {\r\n      calls: 0,\r\n      vertices: 0,\r\n      faces: 0,\r\n      points: 0\r\n    }\r\n  }\r\n\r\n  function initParams () {\r\n    parameters = {\r\n\r\n      fogColor: new Color(0x000000),\r\n      fogNear: 50,\r\n      fogFar: 100,\r\n\r\n      backgroundColor: new Color(0x000000),\r\n\r\n      cameraType: 'perspective',\r\n      cameraFov: 40,\r\n      cameraZ: -80, // FIXME initial value should be automatically determined\r\n\r\n      clipNear: 0,\r\n      clipFar: 100,\r\n      clipDist: 10,\r\n\r\n      lightColor: new Color(0xdddddd),\r\n      lightIntensity: 1.0,\r\n      ambientColor: new Color(0xdddddd),\r\n      ambientIntensity: 0.2,\r\n\r\n      sampleLevel: 0\r\n\r\n    }\r\n  }\r\n\r\n  function initCamera () {\r\n    var lookAt = new Vector3(0, 0, 0)\r\n\r\n    perspectiveCamera = new PerspectiveCamera(\r\n      parameters.cameraFov, width / height\r\n    )\r\n    perspectiveCamera.position.z = parameters.cameraZ\r\n    perspectiveCamera.lookAt(lookAt)\r\n\r\n    orthographicCamera = new OrthographicCamera(\r\n      width / -2, width / 2, height / 2, height / -2\r\n    )\r\n    orthographicCamera.position.z = parameters.cameraZ\r\n    orthographicCamera.lookAt(lookAt)\r\n\r\n    if (parameters.cameraType === 'orthographic') {\r\n      camera = orthographicCamera\r\n    } else {  // parameters.cameraType === \"perspective\"\r\n      camera = perspectiveCamera\r\n    }\r\n    camera.updateProjectionMatrix()\r\n  }\r\n\r\n  function initRenderer () {\r\n    const dpr = window.devicePixelRatio\r\n\r\n    try {\r\n      renderer = new WebGLRenderer({\r\n        preserveDrawingBuffer: true,\r\n        alpha: true,\r\n        antialias: true\r\n      })\r\n    } catch (e) {\r\n      container.innerHTML = WebglErrorMessage\r\n      return false\r\n    }\r\n    renderer.setPixelRatio(dpr)\r\n    renderer.setSize(width, height)\r\n    renderer.autoClear = false\r\n    renderer.sortObjects = true\r\n\r\n    const gl = renderer.getContext()\r\n    // console.log(gl.getContextAttributes().antialias)\r\n    // console.log(gl.getParameter(gl.SAMPLES))\r\n\r\n    setExtensionFragDepth(renderer.extensions.get('EXT_frag_depth'))\r\n    renderer.extensions.get('OES_element_index_uint')\r\n\r\n    setSupportsReadPixelsFloat(\r\n      Browser !== 'Safari' && (\r\n        (renderer.extensions.get('OES_texture_float') &&\r\n          renderer.extensions.get('WEBGL_color_buffer_float')) ||\r\n        (renderer.extensions.get('OES_texture_float') &&\r\n          testTextureSupport(gl, gl.FLOAT))\r\n      )\r\n    )\r\n\r\n    container.appendChild(renderer.domElement)\r\n\r\n    const dprWidth = width * dpr\r\n    const dprHeight = height * dpr\r\n\r\n    // picking texture\r\n\r\n    renderer.extensions.get('OES_texture_float')\r\n    // supportsHalfFloat = (\r\n    //   renderer.extensions.get('OES_texture_half_float') &&\r\n    //   testTextureSupport(gl, 0x8D61)\r\n    // )\r\n    renderer.extensions.get('WEBGL_color_buffer_float')\r\n\r\n    pickingTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: NearestFilter,\r\n        magFilter: NearestFilter,\r\n        stencilBuffer: false,\r\n        format: RGBAFormat,\r\n        type: SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n      }\r\n    )\r\n    pickingTarget.texture.generateMipmaps = false\r\n\r\n    // workaround to reset the gl state after using testTextureSupport\r\n    // fixes some bug where nothing is rendered to the canvas\r\n    // when animations are started on page load\r\n    renderer.clearTarget(pickingTarget)\r\n    renderer.setRenderTarget(null)\r\n\r\n    // ssaa textures\r\n\r\n    sampleTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: LinearFilter,\r\n        magFilter: LinearFilter,\r\n        format: RGBAFormat\r\n      }\r\n    )\r\n\r\n    holdTarget = new WebGLRenderTarget(\r\n      dprWidth, dprHeight,\r\n      {\r\n        minFilter: NearestFilter,\r\n        magFilter: NearestFilter,\r\n        format: RGBAFormat,\r\n        type: UnsignedByteType\r\n        // using HalfFloatType or FloatType does not work on some Chrome 61 installations\r\n        // type: supportsHalfFloat ? HalfFloatType : (\r\n        //   SupportsReadPixelsFloat ? FloatType : UnsignedByteType\r\n        // )\r\n      }\r\n    )\r\n\r\n    compositeUniforms = {\r\n      'tForeground': { type: 't', value: null },\r\n      'scale': { type: 'f', value: 1.0 }\r\n    }\r\n\r\n    compositeMaterial = new ShaderMaterial({\r\n      uniforms: compositeUniforms,\r\n      vertexShader: getShader('Quad.vert'),\r\n      fragmentShader: getShader('Quad.frag'),\r\n      premultipliedAlpha: true,\r\n      transparent: true,\r\n      blending: AdditiveBlending,\r\n      depthTest: false,\r\n      depthWrite: false\r\n    })\r\n\r\n    compositeCamera = new OrthographicCamera(-1, 1, 1, -1, 0, 1)\r\n    compositeScene = new Scene().add(new Mesh(\r\n      new PlaneGeometry(2, 2), compositeMaterial\r\n    ))\r\n  }\r\n\r\n  function initScene () {\r\n    if (!scene) {\r\n      scene = new Scene()\r\n    }\r\n\r\n    rotationGroup = new Group()\r\n    rotationGroup.name = 'rotationGroup'\r\n    scene.add(rotationGroup)\r\n\r\n    translationGroup = new Group()\r\n    translationGroup.name = 'translationGroup'\r\n    rotationGroup.add(translationGroup)\r\n\r\n    modelGroup = new Group()\r\n    modelGroup.name = 'modelGroup'\r\n    translationGroup.add(modelGroup)\r\n\r\n    pickingGroup = new Group()\r\n    pickingGroup.name = 'pickingGroup'\r\n    translationGroup.add(pickingGroup)\r\n\r\n    backgroundGroup = new Group()\r\n    backgroundGroup.name = 'backgroundGroup'\r\n    translationGroup.add(backgroundGroup)\r\n\r\n    helperGroup = new Group()\r\n    helperGroup.name = 'helperGroup'\r\n    translationGroup.add(helperGroup)\r\n\r\n        // fog\r\n\r\n    scene.fog = new Fog()\r\n\r\n        // light\r\n\r\n    pointLight = new SpotLight(\r\n      parameters.lightColor, parameters.lightIntensity\r\n    )\r\n    scene.add(pointLight)\r\n\r\n    ambientLight = new AmbientLight(\r\n      parameters.ambientLight, parameters.ambientIntensity\r\n    )\r\n    scene.add(ambientLight)\r\n  }\r\n\r\n  function initHelper () {\r\n    var indices = new Uint16Array([\r\n      0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6,\r\n      6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7\r\n    ])\r\n    var positions = new Float32Array(8 * 3)\r\n\r\n    var bbGeometry = new BufferGeometry()\r\n    bbGeometry.setIndex(new BufferAttribute(indices, 1))\r\n    bbGeometry.addAttribute('position', new BufferAttribute(positions, 3))\r\n    var bbMaterial = new ShaderMaterial({\r\n      uniforms: { 'uColor': { value: new Color('skyblue') } },\r\n      vertexShader: getShader('BasicLine.vert'),\r\n      fragmentShader: getShader('BasicLine.frag'),\r\n      linewidth: 2\r\n    })\r\n\r\n    boundingBoxMesh = new LineSegments(bbGeometry, bbMaterial)\r\n    helperGroup.add(boundingBoxMesh)\r\n  }\r\n\r\n  function updateHelper () {\r\n    var position = boundingBoxMesh.geometry.attributes.position\r\n    var array = position.array\r\n\r\n    var min = boundingBox.min\r\n    var max = boundingBox.max\r\n\r\n    array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z\r\n    array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z\r\n    array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z\r\n    array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z\r\n    array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z\r\n    array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z\r\n    array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z\r\n    array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z\r\n\r\n    position.needsUpdate = true\r\n\r\n    if (!boundingBox.isEmpty()) {\r\n      boundingBoxMesh.geometry.computeBoundingSphere()\r\n    }\r\n  }\r\n\r\n  function initStats () {\r\n    stats = new Stats()\r\n  }\r\n\r\n  function add (buffer, instanceList) {\r\n    // Log.time( \"Viewer.add\" );\r\n\r\n    if (instanceList) {\r\n      instanceList.forEach(function (instance) {\r\n        addBuffer(buffer, instance)\r\n      })\r\n    } else {\r\n      addBuffer(buffer)\r\n    }\r\n\r\n    if (buffer.background) {\r\n      backgroundGroup.add(buffer.group)\r\n      backgroundGroup.add(buffer.wireframeGroup)\r\n    } else {\r\n      modelGroup.add(buffer.group)\r\n      modelGroup.add(buffer.wireframeGroup)\r\n    }\r\n\r\n    if (buffer.pickable) {\r\n      pickingGroup.add(buffer.pickingGroup)\r\n    }\r\n\r\n    if (Debug) updateHelper()\r\n\r\n    // Log.timeEnd( \"Viewer.add\" );\r\n  }\r\n\r\n  function addBuffer (buffer, instance) {\r\n    // Log.time( \"Viewer.addBuffer\" );\r\n\r\n    function setUserData (object) {\r\n      if (object instanceof Group) {\r\n        object.children.forEach(setUserData)\r\n      } else {\r\n        object.userData.buffer = buffer\r\n        object.userData.instance = instance\r\n        object.onBeforeRender = onBeforeRender\r\n      }\r\n    }\r\n\r\n    var mesh = buffer.getMesh()\r\n    if (instance) {\r\n      mesh.applyMatrix(instance.matrix)\r\n    }\r\n    setUserData(mesh)\r\n    buffer.group.add(mesh)\r\n\r\n    var wireframeMesh = buffer.getWireframeMesh()\r\n    if (instance) {\r\n      // wireframeMesh.applyMatrix( instance.matrix );\r\n      wireframeMesh.matrix.copy(mesh.matrix)\r\n      wireframeMesh.position.copy(mesh.position)\r\n      wireframeMesh.quaternion.copy(mesh.quaternion)\r\n      wireframeMesh.scale.copy(mesh.scale)\r\n    }\r\n    setUserData(wireframeMesh)\r\n    buffer.wireframeGroup.add(wireframeMesh)\r\n\r\n    if (buffer.pickable) {\r\n      var pickingMesh = buffer.getPickingMesh()\r\n      if (instance) {\r\n        // pickingMesh.applyMatrix( instance.matrix );\r\n        pickingMesh.matrix.copy(mesh.matrix)\r\n        pickingMesh.position.copy(mesh.position)\r\n        pickingMesh.quaternion.copy(mesh.quaternion)\r\n        pickingMesh.scale.copy(mesh.scale)\r\n      }\r\n      setUserData(pickingMesh)\r\n      buffer.pickingGroup.add(pickingMesh)\r\n    }\r\n\r\n    if (instance) {\r\n      updateBoundingBox(buffer.geometry, buffer.matrix, instance.matrix)\r\n    } else {\r\n      updateBoundingBox(buffer.geometry, buffer.matrix)\r\n    }\r\n\r\n    // Log.timeEnd( \"Viewer.addBuffer\" );\r\n  }\r\n\r\n  function remove (buffer) {\r\n    translationGroup.children.forEach(function (group) {\r\n      group.remove(buffer.group)\r\n      group.remove(buffer.wireframeGroup)\r\n    })\r\n\r\n    if (buffer.pickable) {\r\n      pickingGroup.remove(buffer.pickingGroup)\r\n    }\r\n\r\n    updateBoundingBox()\r\n    if (Debug) updateHelper()\r\n\r\n    // requestRender();\r\n  }\r\n\r\n  function updateBoundingBox (geometry, matrix, instanceMatrix) {\r\n    function updateGeometry (geometry, matrix, instanceMatrix) {\r\n      if (!geometry.boundingBox) {\r\n        geometry.computeBoundingBox()\r\n      }\r\n\r\n      var geoBoundingBox = geometry.boundingBox.clone()\r\n\r\n      if (matrix) {\r\n        geoBoundingBox.applyMatrix4(matrix)\r\n      }\r\n      if (instanceMatrix) {\r\n        geoBoundingBox.applyMatrix4(instanceMatrix)\r\n      }\r\n\r\n      if (geoBoundingBox.min.equals(geoBoundingBox.max)) {\r\n        // mainly to give a single impostor geometry some volume\r\n        // as it is only expanded in the shader on the GPU\r\n        geoBoundingBox.expandByScalar(5)\r\n      }\r\n\r\n      boundingBox.union(geoBoundingBox)\r\n    }\r\n\r\n    function updateNode (node) {\r\n      if (node.geometry !== undefined) {\r\n        var matrix, instanceMatrix\r\n        if (node.userData.buffer) {\r\n          matrix = node.userData.buffer.matrix\r\n        }\r\n        if (node.userData.instance) {\r\n          instanceMatrix = node.userData.instance.matrix\r\n        }\r\n        updateGeometry(node.geometry, matrix, instanceMatrix)\r\n      }\r\n    }\r\n\r\n    if (geometry) {\r\n      updateGeometry(geometry, matrix, instanceMatrix)\r\n    } else {\r\n      boundingBox.makeEmpty()\r\n      modelGroup.traverse(updateNode)\r\n      backgroundGroup.traverse(updateNode)\r\n    }\r\n\r\n    boundingBox.getSize(boundingBoxSize)\r\n    boundingBoxLength = boundingBoxSize.length()\r\n  }\r\n\r\n  function getPickingPixels () {\r\n    const n = width * height * 4\r\n    const imgBuffer = SupportsReadPixelsFloat ? new Float32Array(n) : new Uint8Array(n)\r\n\r\n    render(true)\r\n    renderer.readRenderTargetPixels(\r\n      pickingTarget, 0, 0, width, height, imgBuffer\r\n    )\r\n\r\n    return imgBuffer\r\n  }\r\n\r\n  function getImage (picking) {\r\n    return new Promise(function (resolve) {\r\n      if (picking) {\r\n        const n = width * height * 4\r\n        let imgBuffer = getPickingPixels()\r\n\r\n        if (SupportsReadPixelsFloat) {\r\n          const imgBuffer2 = new Uint8Array(n)\r\n          for (let i = 0; i < n; ++i) {\r\n            imgBuffer2[ i ] = Math.round(imgBuffer[ i ] * 255)\r\n          }\r\n          imgBuffer = imgBuffer2\r\n        }\r\n\r\n        const canvas = document.createElement('canvas')\r\n        canvas.width = width\r\n        canvas.height = height\r\n        const ctx = canvas.getContext('2d')\r\n        const imgData = ctx.getImageData(0, 0, width, height)\r\n        imgData.data.set(imgBuffer)\r\n        ctx.putImageData(imgData, 0, 0)\r\n        canvas.toBlob(resolve, 'image/png')\r\n      } else {\r\n        renderer.domElement.toBlob(resolve, 'image/png')\r\n      }\r\n    })\r\n  }\r\n\r\n  function makeImage (params) {\r\n    return _makeImage(this, params)\r\n  }\r\n\r\n  function setLight (color, intensity, ambientColor, ambientIntensity) {\r\n    var p = parameters\r\n\r\n    if (color !== undefined) p.lightColor.set(color)\r\n    if (intensity !== undefined) p.lightIntensity = intensity\r\n    if (ambientColor !== undefined) p.ambientColor.set(ambientColor)\r\n    if (ambientIntensity !== undefined) p.ambientIntensity = ambientIntensity\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setFog (color, near, far) {\r\n    var p = parameters\r\n\r\n    if (color !== undefined) p.fogColor.set(color)\r\n    if (near !== undefined) p.fogNear = near\r\n    if (far !== undefined) p.fogFar = far\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setBackground (color) {\r\n    var p = parameters\r\n\r\n    if (color) p.backgroundColor.set(color)\r\n\r\n    setFog(p.backgroundColor)\r\n    renderer.setClearColor(p.backgroundColor, 0)\r\n    renderer.domElement.style.backgroundColor = p.backgroundColor.getStyle()\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setSampling (level) {\r\n    if (level !== undefined) {\r\n      parameters.sampleLevel = level\r\n      sampleLevel = level\r\n    }\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setCamera (type, fov) {\r\n    var p = parameters\r\n\r\n    if (type) p.cameraType = type\r\n    if (fov) p.cameraFov = fov\r\n\r\n    if (p.cameraType === 'orthographic') {\r\n      if (camera !== orthographicCamera) {\r\n        camera = orthographicCamera\r\n        camera.position.copy(perspectiveCamera.position)\r\n        camera.up.copy(perspectiveCamera.up)\r\n        updateZoom()\r\n      }\r\n    } else {  // p.cameraType === \"perspective\"\r\n      if (camera !== perspectiveCamera) {\r\n        camera = perspectiveCamera\r\n        camera.position.copy(orthographicCamera.position)\r\n        camera.up.copy(orthographicCamera.up)\r\n      }\r\n    }\r\n\r\n    perspectiveCamera.fov = p.cameraFov\r\n    camera.updateProjectionMatrix()\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setClip (near, far, dist) {\r\n    var p = parameters\r\n\r\n    if (near !== undefined) p.clipNear = near\r\n    if (far !== undefined) p.clipFar = far\r\n    if (dist !== undefined) p.clipDist = dist\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function setSize (_width, _height) {\r\n    width = _width || 1\r\n    height = _height || 1\r\n\r\n    perspectiveCamera.aspect = width / height\r\n    orthographicCamera.left = -width / 2\r\n    orthographicCamera.right = width / 2\r\n    orthographicCamera.top = height / 2\r\n    orthographicCamera.bottom = -height / 2\r\n    camera.updateProjectionMatrix()\r\n\r\n    var dpr = window.devicePixelRatio\r\n\r\n    renderer.setPixelRatio(dpr)\r\n    renderer.setSize(width, height)\r\n\r\n    var dprWidth = width * dpr\r\n    var dprHeight = height * dpr\r\n\r\n    pickingTarget.setSize(dprWidth, dprHeight)\r\n    sampleTarget.setSize(dprWidth, dprHeight)\r\n    holdTarget.setSize(dprWidth, dprHeight)\r\n\r\n    requestRender()\r\n  }\r\n\r\n  function handleResize () {\r\n    if (container === document.body) {\r\n      setSize(window.innerWidth, window.innerHeight)\r\n    } else {\r\n      var box = container.getBoundingClientRect()\r\n      setSize(box.width, box.height)\r\n    }\r\n  }\r\n\r\n  function updateInfo (reset) {\r\n    var memory = info.memory\r\n    var render = info.render\r\n\r\n    if (reset) {\r\n      memory.programs = 0\r\n      memory.geometries = 0\r\n      memory.textures = 0\r\n\r\n      render.calls = 0\r\n      render.vertices = 0\r\n      render.faces = 0\r\n      render.points = 0\r\n    } else {\r\n      var rInfo = renderer.info\r\n      var rMemory = rInfo.memory\r\n      var rRender = rInfo.render\r\n\r\n      memory.programs = rMemory.programs\r\n      memory.geometries = rMemory.geometries\r\n      memory.textures = rMemory.textures\r\n\r\n      render.calls += rRender.calls\r\n      render.vertices += rRender.vertices\r\n      render.faces += rRender.faces\r\n      render.points += rRender.points\r\n    }\r\n  }\r\n\r\n  function animate () {\r\n    signals.ticked.dispatch(stats)\r\n    var delta = window.performance.now() - stats.startTime\r\n\r\n    if (delta > 500 && !isStill && sampleLevel < 3 && sampleLevel !== -1) {\r\n      var currentSampleLevel = sampleLevel\r\n      sampleLevel = 3\r\n      renderPending = true\r\n      render()\r\n      isStill = true\r\n      sampleLevel = currentSampleLevel\r\n      if (Debug) Log.log('rendered still frame')\r\n    }\r\n\r\n    window.requestAnimationFrame(animate)\r\n  }\r\n\r\n  function pick (x, y) {\r\n    x *= window.devicePixelRatio\r\n    y *= window.devicePixelRatio\r\n\r\n    let pid, instance, picker\r\n    const pixelBuffer = SupportsReadPixelsFloat ? pixelBufferFloat : pixelBufferUint\r\n\r\n    render(true)\r\n    renderer.readRenderTargetPixels(\r\n      pickingTarget, x, y, 1, 1, pixelBuffer\r\n    )\r\n\r\n    if (SupportsReadPixelsFloat) {\r\n      pid =\r\n        ((Math.round(pixelBuffer[0] * 255) << 16) & 0xFF0000) |\r\n        ((Math.round(pixelBuffer[1] * 255) << 8) & 0x00FF00) |\r\n        ((Math.round(pixelBuffer[2] * 255)) & 0x0000FF)\r\n    } else {\r\n      pid =\r\n        (pixelBuffer[0] << 16) |\r\n        (pixelBuffer[1] << 8) |\r\n        (pixelBuffer[2])\r\n    }\r\n\r\n    const oid = Math.round(pixelBuffer[ 3 ])\r\n    const object = pickingGroup.getObjectById(oid)\r\n    if (object) {\r\n      instance = object.userData.instance\r\n      picker = object.userData.buffer.picking\r\n    }\r\n\r\n    // if( Debug ){\r\n    //   const rgba = Array.apply( [], pixelBuffer );\r\n    //   Log.log( pixelBuffer );\r\n    //   Log.log(\r\n    //     \"picked color\",\r\n    //     rgba.map( c => { return c.toPrecision( 2 ) } )\r\n    //   );\r\n    //   Log.log( \"picked pid\", pid );\r\n    //   Log.log( \"picked oid\", oid );\r\n    //   Log.log( \"picked object\", object );\r\n    //   Log.log( \"picked instance\", instance );\r\n    //   Log.log( \"picked position\", x, y );\r\n    //   Log.log( \"devicePixelRatio\", window.devicePixelRatio );\r\n    // }\r\n\r\n    return {\r\n      'pid': pid,\r\n      'instance': instance,\r\n      'picker': picker\r\n    }\r\n  }\r\n\r\n  function requestRender () {\r\n    if (renderPending) {\r\n      // Log.info(\"there is still a 'render' call pending\")\r\n      return\r\n    }\r\n\r\n    // start gathering stats anew after inactivity\r\n    if (window.performance.now() - stats.startTime > 22) {\r\n      stats.begin()\r\n      isStill = false\r\n    }\r\n\r\n    renderPending = true\r\n\r\n    window.requestAnimationFrame(function requestRenderAnimation () {\r\n      render()\r\n      stats.update()\r\n    })\r\n  }\r\n\r\n  function updateZoom () {\r\n    var fov = degToRad(perspectiveCamera.fov)\r\n    var _height = 2 * Math.tan(fov / 2) * -camera.position.z\r\n    orthographicCamera.zoom = height / _height\r\n  }\r\n\r\n  function __updateClipping () {\r\n    var p = parameters\r\n\r\n    // clipping\r\n\r\n    // cDist = distVector.copy( camera.position )\r\n    //           .sub( controls.target ).length();\r\n    cDist = distVector.copy(camera.position).length()\r\n    // console.log( \"cDist\", cDist )\r\n    if (!cDist) {\r\n      // recover from a broken (NaN) camera position\r\n      camera.position.set(0, 0, p.cameraZ)\r\n      cDist = Math.abs(p.cameraZ)\r\n    }\r\n\r\n    bRadius = Math.max(10, boundingBoxLength * 0.5)\r\n    bRadius += boundingBox.getCenter(distVector).length()\r\n    // console.log( \"bRadius\", bRadius )\r\n    if (bRadius === Infinity || bRadius === -Infinity || isNaN(bRadius)) {\r\n      // console.warn( \"something wrong with bRadius\" );\r\n      bRadius = 50\r\n    }\r\n\r\n    var nearFactor = (50 - p.clipNear) / 50\r\n    var farFactor = -(50 - p.clipFar) / 50\r\n    camera.near = cDist - (bRadius * nearFactor)\r\n    camera.far = cDist + (bRadius * farFactor)\r\n\r\n    // fog\r\n\r\n    var fogNearFactor = (50 - p.fogNear) / 50\r\n    var fogFarFactor = -(50 - p.fogFar) / 50\r\n    var fog = scene.fog\r\n    fog.color.set(p.fogColor)\r\n    fog.near = cDist - (bRadius * fogNearFactor)\r\n    fog.far = cDist + (bRadius * fogFarFactor)\r\n\r\n    if (camera.type === 'PerspectiveCamera') {\r\n      camera.near = Math.max(0.1, p.clipDist, camera.near)\r\n      camera.far = Math.max(1, camera.far)\r\n      fog.near = Math.max(0.1, fog.near)\r\n      fog.far = Math.max(1, fog.far)\r\n    } else if (camera.type === 'OrthographicCamera') {\r\n      if (p.clipNear === 0 && p.clipDist > 0 && cDist + camera.zoom > 2 * -p.clipDist) {\r\n        camera.near += camera.zoom + p.clipDist\r\n      }\r\n    }\r\n  }\r\n\r\n  function __updateCamera () {\r\n    camera.updateMatrix()\r\n    camera.updateMatrixWorld(true)\r\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld)\r\n    camera.updateProjectionMatrix()\r\n\r\n    updateMaterialUniforms(scene, camera, renderer, cDist, bRadius)\r\n    sortProjectedPosition(scene, camera)\r\n  }\r\n\r\n  function __setVisibility (model, picking, background, helper) {\r\n    modelGroup.visible = model\r\n    pickingGroup.visible = picking\r\n    backgroundGroup.visible = background\r\n    helperGroup.visible = helper\r\n  }\r\n\r\n  function __updateLights () {\r\n    // distVector.copy( camera.position ).sub( controls.target )\r\n    //   .setLength( boundingBoxLength * 100 );\r\n    distVector.copy(camera.position).setLength(boundingBoxLength * 100)\r\n\r\n    pointLight.position.copy(camera.position).add(distVector)\r\n    pointLight.color.set(parameters.lightColor)\r\n    pointLight.intensity = parameters.lightIntensity\r\n\r\n    ambientLight.color.set(parameters.ambientColor)\r\n    ambientLight.intensity = parameters.ambientIntensity\r\n  }\r\n\r\n  function __renderPickingGroup () {\r\n    renderer.clearTarget(pickingTarget)\r\n    __setVisibility(false, true, false, false)\r\n    renderer.render(scene, camera, pickingTarget)\r\n    updateInfo()\r\n    renderer.setRenderTarget(null)  // back to standard render target\r\n\r\n    // if( Debug ){\r\n    //   __setVisibility( false, true, false, true );\r\n\r\n    //   renderer.clear();\r\n    //   renderer.render( scene, camera );\r\n    // }\r\n  }\r\n\r\n  function __renderModelGroup (renderTarget) {\r\n    if (renderTarget) {\r\n      renderer.clearTarget(renderTarget)\r\n    } else {\r\n      renderer.clear()\r\n    }\r\n\r\n    __setVisibility(false, false, true, false)\r\n    renderer.render(scene, camera, renderTarget)\r\n    if (renderTarget) {\r\n      renderer.clearTarget(renderTarget, false, true, false)\r\n    } else {\r\n      renderer.clearDepth()\r\n    }\r\n    updateInfo()\r\n\r\n    __setVisibility(true, false, false, Debug)\r\n    renderer.render(scene, camera, renderTarget)\r\n    updateInfo()\r\n  }\r\n\r\n  function __renderSuperSample () {\r\n    // based on the Supersample Anti-Aliasing Render Pass\r\n    // contributed to three.js by bhouston / http://clara.io/\r\n    //\r\n    // This manual approach to SSAA re-renders the scene ones for\r\n    // each sample with camera jitter and accumulates the results.\r\n    // References: https://en.wikipedia.org/wiki/Supersampling\r\n\r\n    var offsetList = JitterVectors[ Math.max(0, Math.min(sampleLevel, 5)) ]\r\n\r\n    var baseSampleWeight = 1.0 / offsetList.length\r\n    var roundingRange = 1 / 32\r\n\r\n    compositeUniforms.tForeground.value = sampleTarget.texture\r\n\r\n    var _width = sampleTarget.width\r\n    var _height = sampleTarget.height\r\n\r\n    // render the scene multiple times, each slightly jitter offset\r\n    // from the last and accumulate the results.\r\n    for (var i = 0; i < offsetList.length; ++i) {\r\n      var offset = offsetList[ i ]\r\n      camera.setViewOffset(\r\n        _width, _height, offset[ 0 ], offset[ 1 ], _width, _height\r\n      )\r\n      __updateCamera()\r\n\r\n      var sampleWeight = baseSampleWeight\r\n      // the theory is that equal weights for each sample lead to an\r\n      // accumulation of rounding errors.\r\n      // The following equation varies the sampleWeight per sample\r\n      // so that it is uniformly distributed across a range of values\r\n      // whose rounding errors cancel each other out.\r\n      var uniformCenteredDistribution = (-0.5 + (i + 0.5) / offsetList.length)\r\n      sampleWeight += roundingRange * uniformCenteredDistribution\r\n      compositeUniforms.scale.value = sampleWeight\r\n\r\n      __renderModelGroup(sampleTarget)\r\n      renderer.render(\r\n        compositeScene, compositeCamera, holdTarget, (i === 0)\r\n      )\r\n    }\r\n\r\n    compositeUniforms.scale.value = 1.0\r\n    compositeUniforms.tForeground.value = holdTarget.texture\r\n\r\n    renderer.render(compositeScene, compositeCamera, null, true)\r\n\r\n    camera.view = null\r\n  }\r\n\r\n  function render (picking) {\r\n    if (rendering) {\r\n      Log.warn(\"'tried to call 'render' from within 'render'\")\r\n      return\r\n    }\r\n\r\n    // Log.time('Viewer.render')\r\n\r\n    rendering = true\r\n\r\n    __updateClipping()\r\n    __updateCamera()\r\n    __updateLights()\r\n\r\n    // render\r\n\r\n    updateInfo(true)\r\n\r\n    if (picking) {\r\n      if (!lastRenderedPicking) __renderPickingGroup()\r\n    } else if (sampleLevel > 0) {\r\n      __renderSuperSample()\r\n    } else {\r\n      __renderModelGroup()\r\n    }\r\n    lastRenderedPicking = picking\r\n\r\n    rendering = false\r\n    renderPending = false\r\n\r\n    // Log.timeEnd('Viewer.render')\r\n    // Log.log(info.memory, info.render)\r\n  }\r\n\r\n  function clear () {\r\n    Log.log('scene cleared')\r\n    scene.remove(rotationGroup)\r\n    initScene()\r\n    renderer.clear()\r\n  }\r\n\r\n  // API\r\n\r\n  this.container = container\r\n  this.stats = stats\r\n  this.signals = signals\r\n\r\n  this.rotationGroup = rotationGroup\r\n  this.translationGroup = translationGroup\r\n\r\n  this.add = add\r\n  this.remove = remove\r\n  this.clear = clear\r\n\r\n  this.getPickingPixels = getPickingPixels\r\n  this.getImage = getImage\r\n  this.makeImage = makeImage\r\n\r\n  this.setLight = setLight\r\n  this.setFog = setFog\r\n  this.setBackground = setBackground\r\n  this.setSampling = setSampling\r\n  this.setCamera = setCamera\r\n  this.setClip = setClip\r\n  this.setSize = setSize\r\n  this.handleResize = handleResize\r\n\r\n  this.pick = pick\r\n  this.requestRender = requestRender\r\n  this.render = render\r\n  this.animate = animate\r\n  this.updateZoom = updateZoom\r\n  this.updateHelper = updateHelper\r\n\r\n  this.renderer = renderer\r\n  this.scene = scene\r\n  this.perspectiveCamera = perspectiveCamera\r\n  this.boundingBox = boundingBox\r\n  this.updateBoundingBox = function () {\r\n    updateBoundingBox()\r\n    if (Debug) updateHelper()\r\n  }\r\n\r\n  Object.defineProperties(this, {\r\n    camera: { get: function () { return camera } },\r\n    width: { get: function () { return width } },\r\n    height: { get: function () { return height } },\r\n    sampleLevel: { get: function () { return sampleLevel } }\r\n  })\r\n}\r\n\r\nViewer.prototype.constructor = Viewer\r\n\r\nexport default Viewer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/viewer/viewer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4295,
    "kind": "variable",
    "name": "pixelBufferFloat",
    "memberof": "src/viewer/viewer.js",
    "static": true,
    "longname": "src/viewer/viewer.js~pixelBufferFloat",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4296,
    "kind": "variable",
    "name": "pixelBufferUint",
    "memberof": "src/viewer/viewer.js",
    "static": true,
    "longname": "src/viewer/viewer.js~pixelBufferUint",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4297,
    "kind": "variable",
    "name": "tmpMatrix",
    "memberof": "src/viewer/viewer.js",
    "static": true,
    "longname": "src/viewer/viewer.js~tmpMatrix",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4298,
    "kind": "function",
    "name": "onBeforeRender",
    "memberof": "src/viewer/viewer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer.js~onBeforeRender",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/viewer/viewer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4299,
    "kind": "function",
    "name": "Viewer",
    "memberof": "src/viewer/viewer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/viewer/viewer.js~Viewer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/viewer/viewer.js",
    "importStyle": "Viewer",
    "description": "Viewer class",
    "lineNumber": 130,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String",
          "Element"
        ],
        "spread": false,
        "optional": true,
        "name": "idOrElement",
        "description": "dom id or element"
      }
    ]
  },
  {
    "__docId__": 4300,
    "kind": "file",
    "name": "src/worker/worker-pool.js",
    "content": "/**\r\n * @file Worker Pool\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport Worker from './worker.js'\r\n\r\nfunction WorkerPool (name, maxCount) {\r\n  maxCount = Math.min(8, maxCount || 2)\r\n\r\n  var pool = []\r\n  var count = 0\r\n\r\n    // API\r\n\r\n  this.name = name\r\n\r\n  this.maxCount = maxCount\r\n\r\n  this.post = function (aMessage, transferList, onmessage, onerror) {\r\n    var worker = this.getNextWorker()\r\n    worker.post(aMessage, transferList, onmessage, onerror)\r\n\r\n    return this\r\n  }\r\n\r\n  this.terminate = function () {\r\n    pool.forEach(function (worker) {\r\n      worker.terminate()\r\n    })\r\n  }\r\n\r\n  this.getNextWorker = function () {\r\n    var nextWorker\r\n    var minPending = Infinity\r\n\r\n    for (var i = 0; i < maxCount; ++i) {\r\n      if (i >= count) {\r\n        nextWorker = new Worker(name)\r\n        pool.push(nextWorker)\r\n        count += 1\r\n        break\r\n      }\r\n\r\n      var worker = pool[ i ]\r\n\r\n      if (worker.pending === 0) {\r\n        nextWorker = worker\r\n        break\r\n      } else if (worker.pending < minPending) {\r\n        minPending = worker.pending\r\n        nextWorker = worker\r\n      }\r\n    }\r\n\r\n    return nextWorker\r\n  }\r\n\r\n  Object.defineProperties(this, {\r\n    count: {\r\n      get: function () { return count }\r\n    }\r\n  })\r\n}\r\n\r\nWorkerPool.prototype.constructor = WorkerPool\r\n\r\nexport default WorkerPool\r\n",
    "static": true,
    "longname": "D:/nglLib/src/worker/worker-pool.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4301,
    "kind": "function",
    "name": "WorkerPool",
    "memberof": "src/worker/worker-pool.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker-pool.js~WorkerPool",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/worker/worker-pool.js",
    "importStyle": "WorkerPool",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 4302,
    "kind": "file",
    "name": "src/worker/worker-registry.js",
    "content": "/**\r\n * @file Worker Registry\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { makeWorkerBlob } from './worker-utils.js'\r\n\r\nclass WorkerRegistry {\r\n  constructor () {\r\n    this.activeWorkerCount = 0\r\n\r\n    this._funcDict = {}\r\n    this._depsDict = {}\r\n    this._blobDict = {}\r\n  }\r\n\r\n  add (name, func, deps) {\r\n    this._funcDict[ name ] = func\r\n    this._depsDict[ name ] = deps\r\n  }\r\n\r\n  get (name) {\r\n    if (!this._blobDict[ name ]) {\r\n      this._blobDict[ name ] = makeWorkerBlob(\r\n                this._funcDict[ name ], this._depsDict[ name ]\r\n            )\r\n    }\r\n    return this._blobDict[ name ]\r\n  }\r\n}\r\n\r\nexport default WorkerRegistry\r\n",
    "static": true,
    "longname": "D:/nglLib/src/worker/worker-registry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4303,
    "kind": "class",
    "name": "WorkerRegistry",
    "memberof": "src/worker/worker-registry.js",
    "static": true,
    "longname": "src/worker/worker-registry.js~WorkerRegistry",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/worker/worker-registry.js",
    "importStyle": "WorkerRegistry",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 4304,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 4305,
    "kind": "member",
    "name": "activeWorkerCount",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#activeWorkerCount",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 4306,
    "kind": "member",
    "name": "_funcDict",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#_funcDict",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 4307,
    "kind": "member",
    "name": "_depsDict",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#_depsDict",
    "access": "private",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 4308,
    "kind": "member",
    "name": "_blobDict",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#_blobDict",
    "access": "private",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 4309,
    "kind": "method",
    "name": "add",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#add",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 4310,
    "kind": "method",
    "name": "get",
    "memberof": "src/worker/worker-registry.js~WorkerRegistry",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/worker/worker-registry.js~WorkerRegistry#get",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 4311,
    "kind": "file",
    "name": "src/worker/worker-utils.js",
    "content": "/**\r\n * @file Worker Utils\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { uniqueArray } from '../utils.js'\r\n\r\nfunction getWorkerDeps (vars) {\r\n  var deps = vars\r\n  vars.forEach(function (sym) {\r\n    if (sym.__deps) {\r\n      Array.prototype.push.apply(deps, getWorkerDeps(sym.__deps))\r\n    }\r\n  })\r\n  return deps\r\n}\r\n\r\nfunction makeWorkerString (vars) {\r\n  var deps = uniqueArray(getWorkerDeps(vars))\r\n  return deps.map(function (sym) {\r\n    return sym.toString()\r\n  }).join('\\n\\n\\n')\r\n}\r\n\r\nfunction onmessage (e) {\r\n  var name = e.data.__name\r\n  var postId = e.data.__postId\r\n\r\n  /* global self */\r\n  if (name === undefined) {\r\n    console.error('message __name undefined')\r\n  } else if (self.func === undefined) {\r\n    console.error('worker func undefined', name)\r\n  } else {\r\n    var callback = function (aMessage, transferList) {\r\n      aMessage = aMessage || {}\r\n      if (postId !== undefined) aMessage.__postId = postId\r\n\r\n      try {\r\n        self.postMessage(aMessage, transferList)\r\n      } catch (error) {\r\n        console.error('self.postMessage:', error)\r\n        self.postMessage(aMessage)\r\n      }\r\n    }\r\n\r\n    self.func(e, callback)\r\n  }\r\n}\r\n\r\nfunction makeWorkerBlob (func, deps) {\r\n  var str = \"'use strict';\\n\\n\" + makeWorkerString(deps)\r\n  str += '\\n\\n\\nself.func = ' + func.toString() + ';'\r\n  str += '\\n\\n\\nself.onmessage = ' + onmessage.toString() + ';'\r\n    // console.log( str );\r\n  return new window.Blob([ str ], { type: 'application/javascript' })\r\n}\r\n\r\nexport {\r\n    makeWorkerBlob\r\n}\r\n",
    "static": true,
    "longname": "D:/nglLib/src/worker/worker-utils.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4312,
    "kind": "function",
    "name": "getWorkerDeps",
    "memberof": "src/worker/worker-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker-utils.js~getWorkerDeps",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/worker/worker-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4313,
    "kind": "function",
    "name": "makeWorkerString",
    "memberof": "src/worker/worker-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker-utils.js~makeWorkerString",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/worker/worker-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4314,
    "kind": "function",
    "name": "onmessage",
    "memberof": "src/worker/worker-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker-utils.js~onmessage",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/worker/worker-utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4315,
    "kind": "function",
    "name": "makeWorkerBlob",
    "memberof": "src/worker/worker-utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker-utils.js~makeWorkerBlob",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/worker/worker-utils.js",
    "importStyle": "{makeWorkerBlob}",
    "description": null,
    "lineNumber": 52,
    "undocument": true
  },
  {
    "__docId__": 4316,
    "kind": "file",
    "name": "src/worker/worker.js",
    "content": "/**\r\n * @file Worker\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { Log, Debug, WorkerRegistry } from '../globals.js'\r\n\r\nfunction Worker (name) {\r\n  var pending = 0\r\n  var postCount = 0\r\n  var onmessageDict = {}\r\n  var onerrorDict = {}\r\n\r\n  var blobUrl = window.URL.createObjectURL(WorkerRegistry.get(name))\r\n  var worker = new window.Worker(blobUrl)\r\n\r\n  WorkerRegistry.activeWorkerCount += 1\r\n\r\n  worker.onmessage = function (event) {\r\n    pending -= 1\r\n    var postId = event.data.__postId\r\n\r\n    if (Debug) Log.timeEnd('Worker.postMessage ' + name + ' #' + postId)\r\n\r\n    if (onmessageDict[ postId ]) {\r\n      onmessageDict[ postId ].call(worker, event)\r\n    } else {\r\n            // Log.debug( \"No onmessage\", postId, name );\r\n    }\r\n\r\n    delete onmessageDict[ postId ]\r\n    delete onerrorDict[ postId ]\r\n  }\r\n\r\n  worker.onerror = function (event) {\r\n    pending -= 1\r\n    if (event.data) {\r\n      var postId = event.data.__postId\r\n      if (onerrorDict[ postId ]) {\r\n        onerrorDict[ postId ].call(worker, event)\r\n      } else {\r\n        Log.error('Worker.onerror', postId, name, event)\r\n      }\r\n      delete onmessageDict[ postId ]\r\n      delete onerrorDict[ postId ]\r\n    } else {\r\n      Log.error('Worker.onerror', name, event)\r\n    }\r\n  }\r\n\r\n    // API\r\n\r\n  this.name = name\r\n\r\n  this.post = function (aMessage, transferList, onmessage, onerror) {\r\n    onmessageDict[ postCount ] = onmessage\r\n    onerrorDict[ postCount ] = onerror\r\n\r\n    aMessage = aMessage || {}\r\n    aMessage.__name = name\r\n    aMessage.__postId = postCount\r\n    aMessage.__debug = Debug\r\n\r\n    if (Debug) Log.time('Worker.postMessage ' + name + ' #' + postCount)\r\n\r\n    try {\r\n      worker.postMessage(aMessage, transferList)\r\n    } catch (error) {\r\n      Log.error('worker.post:', error)\r\n      worker.postMessage(aMessage)\r\n    }\r\n\r\n    pending += 1\r\n    postCount += 1\r\n\r\n    return this\r\n  }\r\n\r\n  this.terminate = function () {\r\n    if (worker) {\r\n      worker.terminate()\r\n      window.URL.revokeObjectURL(blobUrl)\r\n      WorkerRegistry.activeWorkerCount -= 1\r\n    } else {\r\n      Log.log('no worker to terminate')\r\n    }\r\n  }\r\n\r\n  Object.defineProperties(this, {\r\n    postCount: {\r\n      get: function () { return postCount }\r\n    },\r\n    pending: {\r\n      get: function () { return pending }\r\n    }\r\n  })\r\n}\r\n\r\nWorker.prototype.constructor = Worker\r\n\r\nexport default Worker\r\n",
    "static": true,
    "longname": "D:/nglLib/src/worker/worker.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4317,
    "kind": "function",
    "name": "Worker",
    "memberof": "src/worker/worker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/worker/worker.js~Worker",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/worker/worker.js",
    "importStyle": "Worker",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 4318,
    "kind": "file",
    "name": "src/writer/pdb-writer.js",
    "content": "/**\r\n * @file Pdb Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults, ensureArray } from '../utils.js'\r\nimport Writer from './writer.js'\r\n\r\nimport { sprintf } from '../../lib/sprintf.es6.js'\r\n\r\n// http://www.wwpdb.org/documentation/file-format\r\n\r\n// Sample PDB line, the coords X,Y,Z are fields 5,6,7 on each line.\r\n// ATOM      1  N   ARG     1      29.292  13.212 -12.751  1.00 33.78      1BPT 108\r\n\r\nconst AtomFormat =\r\n  'ATOM  %5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s'\r\n\r\nconst HetatmFormat =\r\n  'HETATM%5d %-4s %3s %1s%4d    %8.3f%8.3f%8.3f%6.2f%6.2f      %4s%2s'\r\n\r\n/**\r\n * Create a PDB file from a Structure object\r\n */\r\nclass PdbWriter extends Writer {\r\n  /**\r\n   * @param  {Structure} structure - the structure object\r\n   * @param  {Object} params - parameters]\r\n   */\r\n  constructor (structure, params) {\r\n    const p = Object.assign({}, params)\r\n\r\n    super()\r\n\r\n    this.renumberSerial = defaults(p.renumberSerial, true)\r\n    this.remarks = ensureArray(defaults(p.remarks, []))\r\n\r\n    this.structure = structure\r\n    this._records = []\r\n  }\r\n\r\n  get mimeType () { return 'text/plain' }\r\n  get defaultName () { return 'structure' }\r\n  get defaultExt () { return 'pdb' }\r\n\r\n  _writeRecords () {\r\n    this._records.length = 0\r\n\r\n    this._writeTitle()\r\n    this._writeRemarks()\r\n    this._writeAtoms()\r\n  }\r\n\r\n  _writeTitle () {\r\n    // FIXME multiline if title line longer than 80 chars\r\n    this._records.push(sprintf('TITLE %-74s', this.structure.name))\r\n  }\r\n\r\n  _writeRemarks () {\r\n    this.remarks.forEach(str => {\r\n      this._records.push(sprintf('REMARK %-73s', str))\r\n    })\r\n\r\n    if (this.structure.trajectory) {\r\n      this._records.push(sprintf(\r\n        'REMARK %-73s',\r\n        \"Trajectory '\" + this.structure.trajectory.name + \"'\"\r\n      ))\r\n      this._records.push(sprintf(\r\n        'REMARK %-73s',\r\n        'Frame ' + this.structure.trajectory.frame + ''\r\n      ))\r\n    }\r\n  }\r\n\r\n  _writeAtoms () {\r\n    let ia = 1\r\n    let im = 1\r\n\r\n    this.structure.eachModel(m => {\r\n      this._records.push(sprintf('MODEL %-74d', im++))\r\n\r\n      m.eachAtom(a => {\r\n        const formatString = a.hetero ? HetatmFormat : AtomFormat\r\n        const serial = this.renumberSerial ? ia : a.serial\r\n\r\n        // Alignment of one-letter atom name such as C starts at column 14,\r\n        // while two-letter atom name such as FE starts at column 13.\r\n        let atomname = a.atomname\r\n        if (atomname.length === 1) atomname = ' ' + atomname\r\n\r\n        this._records.push(sprintf(\r\n          formatString,\r\n\r\n          serial,\r\n          atomname,\r\n          a.resname,\r\n          defaults(a.chainname, ' '),\r\n          a.resno,\r\n          a.x, a.y, a.z,\r\n          defaults(a.occurence, 1.0),\r\n          defaults(a.bfactor, 0.0),\r\n          defaults(a.segid, ''),\r\n          defaults(a.element, '')\r\n        ))\r\n        ia += 1\r\n      })\r\n\r\n      this._records.push(sprintf('%-80s', 'ENDMDL'))\r\n      im += 1\r\n    })\r\n\r\n    this._records.push(sprintf('%-80s', 'END'))\r\n  }\r\n\r\n  getString () {\r\n    console.warn('PdbWriter.getString() is deprecated, use .getData instead')\r\n    return this.getData()\r\n  }\r\n\r\n  /**\r\n   * Get string containing the PDB file data\r\n   * @return {String} PDB file\r\n   */\r\n  getData () {\r\n    this._writeRecords()\r\n    return this._records.join('\\n')\r\n  }\r\n}\r\n\r\nexport default PdbWriter\r\n",
    "static": true,
    "longname": "D:/nglLib/src/writer/pdb-writer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4319,
    "kind": "variable",
    "name": "AtomFormat",
    "memberof": "src/writer/pdb-writer.js",
    "static": true,
    "longname": "src/writer/pdb-writer.js~AtomFormat",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/writer/pdb-writer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4320,
    "kind": "variable",
    "name": "HetatmFormat",
    "memberof": "src/writer/pdb-writer.js",
    "static": true,
    "longname": "src/writer/pdb-writer.js~HetatmFormat",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/writer/pdb-writer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4321,
    "kind": "class",
    "name": "PdbWriter",
    "memberof": "src/writer/pdb-writer.js",
    "static": true,
    "longname": "src/writer/pdb-writer.js~PdbWriter",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/writer/pdb-writer.js",
    "importStyle": "PdbWriter",
    "description": "Create a PDB file from a Structure object",
    "lineNumber": 26,
    "interface": false,
    "extends": [
      "src/writer/writer.js~Writer"
    ]
  },
  {
    "__docId__": 4322,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "the structure object"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters]"
      }
    ]
  },
  {
    "__docId__": 4323,
    "kind": "member",
    "name": "renumberSerial",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#renumberSerial",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 4324,
    "kind": "member",
    "name": "remarks",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#remarks",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 4325,
    "kind": "member",
    "name": "structure",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#structure",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 4326,
    "kind": "member",
    "name": "_records",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#_records",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 4327,
    "kind": "get",
    "name": "mimeType",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#mimeType",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 4328,
    "kind": "get",
    "name": "defaultName",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#defaultName",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 4329,
    "kind": "get",
    "name": "defaultExt",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#defaultExt",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 4330,
    "kind": "method",
    "name": "_writeRecords",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#_writeRecords",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 4331,
    "kind": "method",
    "name": "_writeTitle",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#_writeTitle",
    "access": "private",
    "description": null,
    "lineNumber": 55,
    "undocument": true
  },
  {
    "__docId__": 4332,
    "kind": "method",
    "name": "_writeRemarks",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#_writeRemarks",
    "access": "private",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 4333,
    "kind": "method",
    "name": "_writeAtoms",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#_writeAtoms",
    "access": "private",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 4334,
    "kind": "method",
    "name": "getString",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#getString",
    "access": "public",
    "description": null,
    "lineNumber": 117,
    "undocument": true
  },
  {
    "__docId__": 4335,
    "kind": "method",
    "name": "getData",
    "memberof": "src/writer/pdb-writer.js~PdbWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/pdb-writer.js~PdbWriter#getData",
    "access": "public",
    "description": "Get string containing the PDB file data",
    "lineNumber": 126,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "PDB file"
    }
  },
  {
    "__docId__": 4336,
    "kind": "file",
    "name": "src/writer/sdf-writer.js",
    "content": "/**\r\n * Writer class for sdf/mol files.\r\n */\r\n\r\nimport Writer from './writer.js'\r\n\r\nimport { sprintf } from '../../lib/sprintf.es6.js'\r\n\r\nconst CountFormat =\r\n  '%3i%3i  0  0  0  0  0  0  0  0999 V2000'\r\n  // Hard-coded chiral as false as we don't specify it any atoms\r\n\r\nconst AtomLine =\r\n  '%10.4f%10.4f%10.4f %-3s 0%3i  0  0  0'\r\n  //\r\n\r\nconst BondFormat =\r\n  '%3i%3i%3i  0  0  0'\r\n\r\nclass SdfWriter extends Writer {\r\n  /**\r\n   * @param {Structure} structure - structure to write\r\n   * @param {Object} params - parameters\r\n   */\r\n  constructor (structure) {\r\n    super()\r\n\r\n    this.structure = structure\r\n    // Follow the pdb-writer example:\r\n    this._records = []\r\n  }\r\n\r\n  get idString () {\r\n    return this.structure.id\r\n  }\r\n\r\n  get titleString () {\r\n    return '  ' + this.structure.title\r\n  }\r\n\r\n  get countsString () {\r\n    return sprintf(\r\n      CountFormat,\r\n      this.structure.atomCount,\r\n      this.structure.bondCount\r\n      )\r\n  }\r\n\r\n  get chargeLines () {\r\n    const pairs = []\r\n    this.structure.eachAtom(ap => {\r\n      if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n        pairs.push([ap.index, ap.formalCharge])\r\n      }\r\n    })\r\n    const lines = []\r\n    for (let i = 0; i < pairs.length; i += 8) {\r\n      const nCharges = Math.min(8, pairs.length - i)\r\n      let s = sprintf('M  CHG%3i', nCharges)\r\n      for (let j = i; j < i + nCharges; j++) {\r\n        s += sprintf(' %3i %3i', pairs[j][0] + 1, pairs[j][1])\r\n      }\r\n      lines.push(s)\r\n    }\r\n    return lines\r\n  }\r\n\r\n  formatAtom (ap) {\r\n    let charge = 0\r\n    if (ap.formalCharge != null && ap.formalCharge !== 0) {\r\n      charge = 4 - ap.formalCharge\r\n    }\r\n    const line = sprintf(\r\n      AtomLine, ap.x, ap.y, ap.z, ap.element, charge\r\n    )\r\n    if (line.length !== 48) { throw new Error('Incompatible atom for sdf format') }\r\n\r\n    return line\r\n  }\r\n\r\n  formatBond (bp) {\r\n    return sprintf(\r\n      BondFormat,\r\n      bp.atomIndex1 + 1,\r\n      bp.atomIndex2 + 1,\r\n      bp.bondOrder)\r\n  }\r\n\r\n  _writeRecords () {\r\n    this._records.length = 0\r\n    this._writeHeader()\r\n    this._writeCTab()\r\n    this._writeFooter()\r\n  }\r\n\r\n  _writeHeader () {\r\n    this._records.push(this.idString, this.titleString, '')\r\n  }\r\n\r\n  _writeCTab () {\r\n    this._records.push(this.countsString)\r\n    this.structure.eachAtom(ap => {\r\n      this._records.push(this.formatAtom(ap))\r\n    })\r\n    this.structure.eachBond(bp => {\r\n      this._records.push(this.formatBond(bp))\r\n    })\r\n    this.chargeLines.forEach(line => {\r\n      this._records.push(line)\r\n    })\r\n    this._records.push('M  END')\r\n  }\r\n\r\n  _writeFooter () {\r\n    this._records.push('$$$$')\r\n  }\r\n\r\n  getData () {\r\n    this._writeRecords()\r\n    return this._records.join('\\n')\r\n  }\r\n}\r\n\r\nexport default SdfWriter\r\n",
    "static": true,
    "longname": "D:/nglLib/src/writer/sdf-writer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4337,
    "kind": "variable",
    "name": "CountFormat",
    "memberof": "src/writer/sdf-writer.js",
    "static": true,
    "longname": "src/writer/sdf-writer.js~CountFormat",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/writer/sdf-writer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4338,
    "kind": "variable",
    "name": "AtomLine",
    "memberof": "src/writer/sdf-writer.js",
    "static": true,
    "longname": "src/writer/sdf-writer.js~AtomLine",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/writer/sdf-writer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4339,
    "kind": "variable",
    "name": "BondFormat",
    "memberof": "src/writer/sdf-writer.js",
    "static": true,
    "longname": "src/writer/sdf-writer.js~BondFormat",
    "access": "public",
    "export": false,
    "importPath": "ngl/src/writer/sdf-writer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 4340,
    "kind": "class",
    "name": "SdfWriter",
    "memberof": "src/writer/sdf-writer.js",
    "static": true,
    "longname": "src/writer/sdf-writer.js~SdfWriter",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/writer/sdf-writer.js",
    "importStyle": "SdfWriter",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "src/writer/writer.js~Writer"
    ]
  },
  {
    "__docId__": 4341,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Structure"
        ],
        "spread": false,
        "optional": false,
        "name": "structure",
        "description": "structure to write"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "parameters"
      }
    ]
  },
  {
    "__docId__": 4342,
    "kind": "member",
    "name": "structure",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#structure",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 4343,
    "kind": "member",
    "name": "_records",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#_records",
    "access": "private",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 4344,
    "kind": "get",
    "name": "idString",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#idString",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 4345,
    "kind": "get",
    "name": "titleString",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#titleString",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 4346,
    "kind": "get",
    "name": "countsString",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#countsString",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 4347,
    "kind": "get",
    "name": "chargeLines",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#chargeLines",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 4348,
    "kind": "method",
    "name": "formatAtom",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#formatAtom",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 4349,
    "kind": "method",
    "name": "formatBond",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#formatBond",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 4350,
    "kind": "method",
    "name": "_writeRecords",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#_writeRecords",
    "access": "private",
    "description": null,
    "lineNumber": 89,
    "undocument": true
  },
  {
    "__docId__": 4351,
    "kind": "method",
    "name": "_writeHeader",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#_writeHeader",
    "access": "private",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 4352,
    "kind": "method",
    "name": "_writeCTab",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#_writeCTab",
    "access": "private",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 4353,
    "kind": "method",
    "name": "_writeFooter",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#_writeFooter",
    "access": "private",
    "description": null,
    "lineNumber": 114,
    "undocument": true
  },
  {
    "__docId__": 4354,
    "kind": "method",
    "name": "getData",
    "memberof": "src/writer/sdf-writer.js~SdfWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/sdf-writer.js~SdfWriter#getData",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "undocument": true
  },
  {
    "__docId__": 4355,
    "kind": "file",
    "name": "src/writer/stl-writer.js",
    "content": "/**\r\n * @file STL Writer\r\n * @author Paul Pillot <paul.pillot@cimf.ca>\r\n * @private\r\n */\r\n\r\nimport { Vector3 } from '../../lib/three.es6.js'\r\n\r\nimport Writer from './writer.js'\r\nimport IOBuffer from '../utils/io-buffer.js'\r\n\r\n// https://en.wikipedia.org/wiki/STL_(file_format)#ASCII_STL\r\n\r\n/**\r\n * Create an STL File from a surface Object (e.g. for 3D printing)\r\n *\r\n * @example\r\n * molsurf = new MolecularSurface(structure)\r\n * surf = molsurf.getSurface({type: 'av', probeRadius: 1.4})\r\n * stl = new StlWriter(surf)\r\n * stl.download('myFileName')\r\n */\r\nclass StlWriter extends Writer {\r\n  /**\r\n   * @param {Surface} surface - the surface to write out\r\n   */\r\n  constructor (surface) {\r\n    super()\r\n\r\n    this.surface = surface\r\n    this._records = []\r\n  }\r\n\r\n  get mimeType () { return 'application/vnd.ms-pki.stl' }\r\n  get defaultName () { return 'surface' }\r\n  get defaultExt () { return 'stl' }\r\n\r\n  /*\r\n   * Get STL Binary data\r\n   *\r\n   * Adapted from: https://github.com/mrdoob/three.js/blob/master/examples/js/exporters/STLBinaryExporter.js\r\n   * see https://en.wikipedia.org/wiki/STL_(file_format)#Binary_STL for the file format description\r\n   *\r\n   * @return {DataView} the data\r\n   */\r\n  getData () {\r\n    const triangles = this.surface.index.length / 3\r\n    const bufferLength = triangles * 2 + triangles * 3 * 4 * 4 + 80 + 4\r\n    const output = new IOBuffer(bufferLength)\r\n\r\n    output.skip(80)  // skip header\r\n    output.writeUint32(triangles)\r\n\r\n    const vector = new Vector3()\r\n    const vectorNorm1 = new Vector3()\r\n    const vectorNorm2 = new Vector3()\r\n    const vectorNorm3 = new Vector3()\r\n\r\n    // traversing vertices\r\n    for (let i = 0; i < triangles; i++) {\r\n      const indices = [\r\n        this.surface.index[i * 3],\r\n        this.surface.index[i * 3 + 1],\r\n        this.surface.index[i * 3 + 2]\r\n      ]\r\n\r\n      vectorNorm1.fromArray(this.surface.normal, indices[0] * 3)\r\n      vectorNorm2.fromArray(this.surface.normal, indices[1] * 3)\r\n      vectorNorm3.fromArray(this.surface.normal, indices[2] * 3)\r\n\r\n      vector.addVectors(vectorNorm1, vectorNorm2).add(vectorNorm3).normalize()\r\n\r\n      output.writeFloat32(vector.x)\r\n      output.writeFloat32(vector.y)\r\n      output.writeFloat32(vector.z)\r\n\r\n      for (let j = 0; j < 3; j++) {\r\n        vector.fromArray(this.surface.position, indices[j] * 3)\r\n\r\n        output.writeFloat32(vector.x)  // vertices\r\n        output.writeFloat32(vector.y)\r\n        output.writeFloat32(vector.z)\r\n      }\r\n\r\n      output.writeUint16(0)  // attribute byte count\r\n    }\r\n\r\n    return new DataView(output.buffer)\r\n  }\r\n}\r\n\r\nexport default StlWriter\r\n",
    "static": true,
    "longname": "D:/nglLib/src/writer/stl-writer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4356,
    "kind": "class",
    "name": "StlWriter",
    "memberof": "src/writer/stl-writer.js",
    "static": true,
    "longname": "src/writer/stl-writer.js~StlWriter",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/writer/stl-writer.js",
    "importStyle": "StlWriter",
    "description": "Create an STL File from a surface Object (e.g. for 3D printing)",
    "examples": [
      "molsurf = new MolecularSurface(structure)\nsurf = molsurf.getSurface({type: 'av', probeRadius: 1.4})\nstl = new StlWriter(surf)\nstl.download('myFileName')"
    ],
    "lineNumber": 23,
    "interface": false,
    "extends": [
      "src/writer/writer.js~Writer"
    ]
  },
  {
    "__docId__": 4357,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Surface"
        ],
        "spread": false,
        "optional": false,
        "name": "surface",
        "description": "the surface to write out"
      }
    ]
  },
  {
    "__docId__": 4358,
    "kind": "member",
    "name": "surface",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#surface",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 4359,
    "kind": "member",
    "name": "_records",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#_records",
    "access": "private",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 4360,
    "kind": "get",
    "name": "mimeType",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#mimeType",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 4361,
    "kind": "get",
    "name": "defaultName",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#defaultName",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 4362,
    "kind": "get",
    "name": "defaultExt",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#defaultExt",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 4363,
    "kind": "method",
    "name": "getData",
    "memberof": "src/writer/stl-writer.js~StlWriter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/stl-writer.js~StlWriter#getData",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true
  },
  {
    "__docId__": 4364,
    "kind": "file",
    "name": "src/writer/writer.js",
    "content": "/**\r\n * @file Writer\r\n * @author Alexander Rose <alexander.rose@weirdbyte.de>\r\n * @private\r\n */\r\n\r\nimport { defaults, download } from '../utils.js'\r\n\r\n/**\r\n * Base class for writers\r\n * @interface\r\n */\r\nclass Writer {\r\n  /**\r\n   * @abstract\r\n   * @return {String} the default mime type\r\n   */\r\n  get mimeType () {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {String} the default file name\r\n   */\r\n  get defaultName () {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {String} the default file extension\r\n   */\r\n  get defaultExt () {}\r\n\r\n  /**\r\n   * @abstract\r\n   * @return {Anything} the data to be written\r\n   */\r\n  getData () {}\r\n\r\n  /**\r\n   * Get a blob with the written data\r\n   * @return {Blob} the blob\r\n   */\r\n  getBlob () {\r\n    return new window.Blob([ this.getData() ], { type: this.mimeType })\r\n  }\r\n\r\n  /**\r\n   * Trigger a download of the\r\n   * @param  {[type]} name [description]\r\n   * @param  {[type]} ext  [description]\r\n   * @return {[type]}      [description]\r\n   */\r\n  download (name, ext) {\r\n    name = defaults(name, this.defaultName)\r\n    ext = defaults(ext, this.defaultExt)\r\n\r\n    download(this.getBlob(), `${name}.${ext}`)\r\n  }\r\n}\r\n\r\nexport default Writer\r\n",
    "static": true,
    "longname": "D:/nglLib/src/writer/writer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4365,
    "kind": "class",
    "name": "Writer",
    "memberof": "src/writer/writer.js",
    "static": true,
    "longname": "src/writer/writer.js~Writer",
    "access": "public",
    "export": true,
    "importPath": "ngl/src/writer/writer.js",
    "importStyle": "Writer",
    "description": "Base class for writers",
    "lineNumber": 13,
    "interface": true
  },
  {
    "__docId__": 4366,
    "kind": "get",
    "name": "mimeType",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#mimeType",
    "access": "public",
    "description": "",
    "lineNumber": 18,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the default mime type"
    },
    "abstract": true
  },
  {
    "__docId__": 4367,
    "kind": "get",
    "name": "defaultName",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#defaultName",
    "access": "public",
    "description": "",
    "lineNumber": 24,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the default file name"
    },
    "abstract": true
  },
  {
    "__docId__": 4368,
    "kind": "get",
    "name": "defaultExt",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#defaultExt",
    "access": "public",
    "description": "",
    "lineNumber": 30,
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "the default file extension"
    },
    "abstract": true
  },
  {
    "__docId__": 4369,
    "kind": "method",
    "name": "getData",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#getData",
    "access": "public",
    "description": "",
    "lineNumber": 36,
    "return": {
      "nullable": null,
      "types": [
        "Anything"
      ],
      "spread": false,
      "description": "the data to be written"
    },
    "abstract": true
  },
  {
    "__docId__": 4370,
    "kind": "method",
    "name": "getBlob",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#getBlob",
    "access": "public",
    "description": "Get a blob with the written data",
    "lineNumber": 42,
    "return": {
      "nullable": null,
      "types": [
        "Blob"
      ],
      "spread": false,
      "description": "the blob"
    }
  },
  {
    "__docId__": 4371,
    "kind": "method",
    "name": "download",
    "memberof": "src/writer/writer.js~Writer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/writer/writer.js~Writer#download",
    "access": "public",
    "description": "Trigger a download of the",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "ext",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "kind": "index",
    "content": "\r\n[![License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/arose/ngl/blob/master/LICENSE)\r\n[![Changelog](https://img.shields.io/badge/changelog--lightgrey.svg?style=flat)](https://github.com/arose/ngl/blob/master/CHANGELOG.md)\r\n[![npm version](https://badge.fury.io/js/ngl.svg)](https://badge.fury.io/js/ngl)\r\n[![Build Status](https://travis-ci.org/arose/ngl.svg?branch=master)](https://travis-ci.org/arose/ngl)\r\n[![Standard](https://img.shields.io/badge/code_style-standard-brightgreen.svg?style=flat)](https://standardjs.com)\r\n[![Gitter](https://badges.gitter.im/nglviewer/Lobby.svg)](https://gitter.im/nglviewer/Lobby)\r\n\r\n\r\nNGL Viewer is a web application for molecular visualization. [WebGL](https://get.webgl.org/) is employed to display molecules like proteins and DNA/RNA with a variety of representations.\r\n\r\nSee it in action:\r\n\r\n* [Web application](https://arose.github.io/ngl/?script=showcase/ferredoxin)\r\n* [X-ray viewer](https://codepen.io/arose/full/oWOQMg/)\r\n* [Gallery](http://arose.github.io/ngl/gallery/index.html)\r\n* [CodePen template](https://codepen.io/pen?template=JNLMXb)\r\n* [Pens tagged _ngl_](https://codepen.io/tag/ngl/)\r\n\r\n\r\nDocumentation:\r\n\r\n* [Reference](http://arose.github.io/ngl/api/identifiers.html)\r\n* [Manual](http://arose.github.io/ngl/api/manual/index.html)\r\n\r\n\r\nFeatures\r\n--------\r\n\r\n* Molecular structures (mmCIF, PDB, PQR, GRO, SDF, MOL2, MMTF)\r\n* Density volumes (MRC/MAP/CCP4, DX/DXBIN, CUBE, BRIX/DSN6, XPLOR/CNS)\r\n* User interaction (mouse picking, selection language, animation, image export)\r\n* Coordinate trajectories (DCD & PSF, NCTRAJ & PRMTOP, TRR/XTC & TOP, remote access via [MDSrv](https://github.com/arose/mdsrv/))\r\n* Embeddable (single file, API)\r\n\r\n\r\nUsage\r\n-----\r\n\r\nSince the NGL Viewer is a set of static files to be viewed in a web-browser there is not much of an installation needed. For development purposes it will be helpful to clone this repository and serve it locally (see below). When embedding the NGL Viewer as a library it is sufficient to include the self contained build [dist/ngl.js](dist/ngl.js). A full web application including a GUI can be found in the [examples](examples/) directory.\r\n\r\n\r\nAcknowledgments\r\n---------------\r\n\r\nThis project would not be possible without many fine open-source projects. Especially the [three.js](http://threejs.org/) project provides a great foundation.\r\n\r\n* [three.js](http://threejs.org/)\r\n    * NGL relies on the three.js library to interface WebGL\r\n    * NGL's GUI is based on the three.js editor UI\r\n* [sprintf.js](https://github.com/alexei/sprintf.js) - for formatting text\r\n* [jsfeat](http://inspirit.github.io/jsfeat/) - the SVD code for the superposition method is from jsfeat\r\n* [ESDoc](https://esdoc.org/) - for documentation\r\n* [Mocha](https://mochajs.org/) and [Chai](http://chaijs.com/) - for unit testing\r\n* [Chroma.js](https://github.com/gka/chroma.js) - for color handling\r\n* [FlexiColorPicker](https://github.com/DavidDurman/FlexiColorPicker) - for color picking\r\n* [Virtual DOM List](https://github.com/sergi/virtual-list)\r\n* [Font Awesome](http://fontawesome.io) - for icons\r\n* [JS Signals](http://millermedeiros.github.com/js-signals)\r\n* [tether.js](http://github.hubspot.com/tether/)\r\n* [Lightweight promise polyfill](https://github.com/taylorhakes/promise-polyfill)\r\n* [pako - zlib port](https://github.com/nodeca/pako)\r\n* [Open Source PyMOL](http://sourceforge.net/projects/pymol/) - screen aligned cylinder shader\r\n* [VTK](http://www.vtk.org/) Quadric shader code from the PointSprite Plugin - quadric surface center calculation\r\n* [HyperBalls](http://sourceforge.net/projects/hyperballs/) - hyperball stick shader - Chavent, M., Vanel, A., Tek, A., Levy, B., Robert, S., Raffin, B., &amp; Baaden, M. (2011). GPU-accelerated atom and dynamic bond visualization using hyperballs: a unified algorithm for balls, sticks, and hyperboloids. Journal of Computational Chemistry, 32(13), 2924–35. [doi:10.1002/jcc.21861](https://dx.doi.org/10.1002/jcc.21861)\r\n\r\n\r\nFunding sources:\r\n\r\n* NCI/NIH award number U01 CA198942\r\n* DFG Projekt HI 1502\r\n\r\n\r\nCite\r\n----\r\n\r\nWhen using NGL please cite:\r\n\r\n* AS Rose, AR Bradley, Y Valasatava, JM Duarte, A Prlić and PW Rose. _Web-based molecular graphics for large complexes._ ACM Proceedings of the 21st International Conference on Web3D Technology (Web3D '16): 185-186, 2016. [doi:10.1145/2945292.2945324](http://dx.doi.org/10.1145/2945292.2945324)\r\n* AS Rose and PW Hildebrand. _NGL Viewer: a web application for molecular visualization._ Nucl Acids Res (1 July 2015) 43 (W1): W576-W579 first published online April 29, 2015. [doi:10.1093/nar/gkv402](https://doi.org/10.1093/nar/gkv402)\r\n",
    "longname": "D:\\nglLib\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\r\n  \"name\": \"ngl\",\r\n  \"version\": \"1.0.0-beta.7\",\r\n  \"description\": \"Scalable molecular graphics for the web\",\r\n  \"main\": \"dist/ngl.js\",\r\n  \"module\": \"dist/ngl.esm.js\",\r\n  \"scripts\": {\r\n    \"lint\": \"npm run-script lint-src && npm run-script lint-test && npm run-script lint-script\",\r\n    \"lint-src\": \"standard \\\"src/**/*.js\\\"\",\r\n    \"lint-test\": \"standard --env mocha \\\"test/**/*.js\\\"\",\r\n    \"lint-script\": \"standard --global stage --global NGL \\\"examples/scripts/**/*.js\\\"\",\r\n    \"prebuild\": \"npm run-script lint\",\r\n    \"build\": \"rollup -c\",\r\n    \"postbuild\": \"node ./scripts/makeScriptsList.js\",\r\n    \"pretest\": \"npm run build\",\r\n    \"test\": \"mocha\",\r\n    \"preversion\": \"npm test\",\r\n    \"version\": \"npm run-script build-min && git add -A dist\",\r\n    \"postversion\": \"git push && git push --tags\",\r\n    \"prepublish\": \"npm test\",\r\n    \"devpublish\": \"npm publish --tag next\",\r\n    \"doc\": \"esdoc\",\r\n    \"watch\": \"rollup -c -w\",\r\n    \"deploy\": \"./scripts/deploy.sh prerelease\",\r\n    \"gallery\": \"./scripts/gallery.sh\",\r\n    \"prerelease\": \"./scripts/release.sh prerelease\",\r\n    \"build-min\": \"rollup -c && uglifyjs build/js/ngl.dev.js -cm > dist/ngl.js && cp build/js/ngl.esm.js dist/ngl.esm.js\"\r\n  },\r\n  \"homepage\": \"https://github.com/arose/ngl#readme\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/arose/ngl.git\"\r\n  },\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/arose/ngl/issues\"\r\n  },\r\n  \"files\": [\r\n    \"dist\"\r\n  ],\r\n  \"author\": \"Alexander Rose <alexander.rose@weirdbyte.de>\",\r\n  \"contributors\": [],\r\n  \"license\": \"MIT\",\r\n  \"keywords\": [\r\n    \"molecular graphics\",\r\n    \"molecular structure\",\r\n    \"chemical structure\",\r\n    \"science\"\r\n  ],\r\n  \"devDependencies\": {\r\n    \"babel-plugin-array-includes\": \"^2.0.3\",\r\n    \"babel-plugin-external-helpers\": \"^6.22.0\",\r\n    \"babel-preset-es2015\": \"^6.13.2\",\r\n    \"babel-register\": \"^6.26.0\",\r\n    \"babelrc-rollup\": \"^3.0.0\",\r\n    \"chai\": \"^4.1.1\",\r\n    \"cheerio\": \"^1.0.0-rc.1\",\r\n    \"esdoc\": \"^1.0.3\",\r\n    \"esdoc-standard-plugin\": \"^1.0.0\",\r\n    \"mocha\": \"^4.0.1\",\r\n    \"rollup\": \"^0.50.0\",\r\n    \"rollup-plugin-babel\": \"^3.0.2\",\r\n    \"rollup-plugin-buble\": \"^0.16.0\",\r\n    \"rollup-plugin-commonjs\": \"^8.2.0\",\r\n    \"rollup-plugin-json\": \"^2.3.0\",\r\n    \"rollup-plugin-node-resolve\": \"^3.0.0\",\r\n    \"rollup-watch\": \"^4.3.1\",\r\n    \"slimerjs\": \"^0.10.3\",\r\n    \"standard\": \"^10.0.3\",\r\n    \"uglify-js\": \"^3.1.1\"\r\n  },\r\n  \"dependencies\": {}\r\n}\r\n",
    "longname": "D:\\nglLib\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": "\r\nNGL is an on-line viewer for proteins and other molecular structures. It is intended for users of the web application including a graphical interface and for developers who want to use NGL in their own projects.\r\n\r\n## Users\r\n\r\nNGL provides a web application with an efficient graphical user interface (GUI) for performing common visualization tasks. A comprehensive set of molecular representations is available to create complex molecular views. Based on the WebGL technology, NGL requires only a modern web-browser.\r\n\r\n## Developers\r\n\r\nThe NGL viewer can be [embedded](./manual/usage/embedding.html) within other web-pages and controlled via a JavaScript API.\r\n",
    "longname": "D:\\nglLib\\doc\\overview.md",
    "name": "./doc/overview.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "D:\\nglLib\\doc\\images",
    "name": "./doc/images",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\coloring.md",
    "name": "./doc/usage/coloring.md",
    "content": "\r\n# Coloring\r\n\r\n## Representations\r\n\r\n```\r\nstage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n  o.addRepresentation(\"ball+stick\", {colorScheme: \"bfactor\"});\r\n  o.autoView();\r\n});\r\n```\r\n\r\n\r\n## Available schemes\r\n\r\n- [atomindex](../class/src/color/atomindex-colormaker.js~AtomindexColormaker.html)\r\n- [bfactor](../class/src/color/bfactor-colormaker.js~BfactorColormaker.html)\r\n- [chainid](../class/src/color/chainid-colormaker.js~ChainidColormaker.html)\r\n- [chainindex](../class/src/color/chainindex-colormaker.js~ChainindexColormaker.html)\r\n- [chainname](../class/src/color/chainname-colormaker.js~ChainnameColormaker.html)\r\n- [densityfit](../class/src/color/densityfit-colormaker.js~DensityfitColormaker.html)\r\n- [electrostatic](../class/src/color/electrostatic-colormaker.js~ElectrostaticColormaker.html)\r\n- [element](../class/src/color/element-colormaker.js~ElementColormaker.html)\r\n- [entityindex](../class/src/color/entityindex-colormaker.js~EntityindexColormaker.html)\r\n- [entitytype](../class/src/color/entitytype-colormaker.js~EntitytypeColormaker.html)\r\n- [geoquality](../class/src/color/geoquality-colormaker.js~GeoqualityColormaker.html)\r\n- [hydrophobicity](../class/src/color/hydrophobicity-colormaker.js~HydrophobicityColormaker.html)\r\n- [modelindex](../class/src/color/modelindex-colormaker.js~ModelindexColormaker.html)\r\n- [moleculetype](../class/src/color/moleculetype-colormaker.js~MoleculetypeColormaker.html)\r\n- [occupancy](../class/src/color/occupancy-colormaker.js~OccupancyColormaker.html)\r\n- [random](../class/src/color/random-colormaker.js~RandomColormaker.html)\r\n- [residueindex](../class/src/color/residueindex-colormaker.js~ResidueindexColormaker.html)\r\n- [resname](../class/src/color/resname-colormaker.js~ResnameColormaker.html)\r\n- [sstruc](../class/src/color/sstruc-colormaker.js~SstrucColormaker.html)\r\n- [uniform](../class/src/color/uniform-colormaker.js~UniformColormaker.html)\r\n- [value](../class/src/color/value-colormaker.js~ValueColormaker.html)\r\n- [volume](../class/src/color/volume-colormaker.js~VolumeColormaker.html)\r\n\r\n\r\n## Selection-based coloring\r\n\r\nCreate and a selection-based coloring scheme. Supply a list with pairs\r\nof colorname and selection for coloring by selections. Use the last\r\nentry as a default (catch all) coloring definition.\r\n\r\n```\r\nvar schemeId = NGL.ColormakerRegistry.addSelectionScheme([\r\n  [\"red\", \"64-74 or 134-154 or 222-254 or 310-310 or 322-326\"],\r\n  [\"green\", \"311-322\"],\r\n  [\"yellow\", \"40-63 or 75-95 or 112-133 or 155-173 or 202-221 or 255-277 or 289-309\"],\r\n  [\"blue\", \"1-39 or 96-112 or 174-201 or 278-288\"],\r\n  [\"white\", \"*\"]\r\n], \"Transmembrane 3dqb\");\r\n\r\nstage.loadFile(\"rcsb://3dqb.pdb\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\", {color: schemeId });  // pass schemeId here\r\n  o.autoView();\r\n});\r\n```\r\n\r\n\r\n## Custom coloring\r\n\r\nCreate a class with a `atomColor` method that returns a hex color:\r\n\r\n```\r\nvar schemeId = NGL.ColormakerRegistry.addScheme(function (params) {\r\n  this.atomColor = function (atom) {\r\n    if (atom.serial < 1000) {\r\n      return 0x0000FF;  // blue\r\n    } else if (atom.serial > 2000) {\r\n      return 0xFF0000;  // red\r\n    } else {\r\n      return 0x00FF00;  // green\r\n    }\r\n  };\r\n});\r\n\r\nstage.loadFile(\"rcsb://3dqb.pdb\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\", {color: schemeId});  // pass schemeId  here\r\n  o.autoView();\r\n});\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\custom-geometries.md",
    "name": "./doc/usage/custom-geometries.md",
    "content": "\r\n# Custom geometries\r\n\r\n## Shape\r\n\r\nConvenience API\r\n- [Shape](../class/src/geometry/shape.js~Shape.html) class\r\n- [ShapeComponent](../class/src/component/shape-component.js~ShapeComponent.html) class\r\n\r\nRender a variety of geometry primitives using a Shape object:\r\n```\r\nvar shape = new NGL.Shape( \"shape\" );\r\nshape.addMesh(\r\n    [ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1 ],\r\n    [ 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0 ],\r\n    undefined, undefined, \"My mesh\"\r\n);\r\nshape.addSphere( [ 0, 0, 9 ], [ 1, 0, 0 ], 1.5 );\r\nshape.addSphere( [ 12, 5, 15 ], [ 1, 0.5, 0 ], 1 );\r\nshape.addEllipsoid( [ 6, 0, 0 ], [ 1, 0, 0 ], 1.5, [ 3, 0, 0 ], [ 0, 2, 0 ] );\r\nshape.addCylinder( [ 0, 2, 7 ], [ 0, 0, 9 ], [ 1, 1, 0 ], 0.5 );\r\nshape.addCone( [ 0, 2, 7 ], [ 0, 3, 3 ], [ 1, 1, 0 ], 1.5 );\r\nshape.addArrow( [ 1, 2, 7 ], [ 30, 3, 3 ], [ 1, 0, 1 ], 1.0 );\r\nshape.addArrow( [ 2, 2, 7 ], [ 30, -3, -3 ], [ 1, 0.5, 1 ], 1.0 );\r\nshape.addLabel( [ 15, -4, 4 ], [ 0.2, 0.5, 0.8 ], 2.5, \"Hello\" );\r\n\r\nvar shapeComp = stage.addComponentFromObject( shape );\r\nshapeComp.addRepresentation( \"buffer\" );\r\nshapeComp.autoView();\r\n```\r\n\r\n\r\n## Buffer\r\n\r\nLow level approach, more scalable\r\n- [Buffer](../class/src/representation/buffer-representation.js~BufferRepresentation.html) class\r\n- [BufferRepresentation](../class/src/representation/buffer-representation.js~BufferRepresentation.html) class\r\n\r\nRender two spheres (sscales to many more) a SphereBuffer object:\r\n```\r\nvar shape = new NGL.Shape( \"shape\" );\r\nvar sphereBuffer = new NGL.SphereBuffer( {\r\n    position: new Float32Array( [ 0, 0, 0, 4, 0, 0 ] ),\r\n    color: new Float32Array( [ 1, 0, 0, 1, 1, 0 ] ),\r\n    radius: new Float32Array( [ 1, 1.2 ] )\r\n} );\r\nshape.addBuffer( sphereBuffer );\r\nvar shapeComp = stage.addComponentFromObject( shape );\r\nshapeComp.addRepresentation( \"buffer\" );\r\nshapeComp.autoView();\r\n```",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\embedding.md",
    "name": "./doc/usage/embedding.md",
    "content": "\r\n# Embedding\r\n\r\n\r\nFor embedding the viewer into other websites a single JavaScript file is available `ngl.js`. See below for CDNs to provide this file.\r\n\r\n\r\n## Example\r\n\r\nThe following code creates a viewer and loads the structure of PDB entry *1CRN* from the [RCSB PDB](http://www.rcsb.org/). The result can be seen and edited online [here](https://codepen.io/pen?template=JNLMXb). For more information on how to control the viewer see the API reference, starting with the [Stage](../class/src/stage/stage.js~Stage.html) class.\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n</head>\r\n<body>\r\n  <script src=\"path/to/ngl.js\"></script>\r\n  <script>\r\n    document.addEventListener(\"DOMContentLoaded\", function () {\r\n      var stage = new NGL.Stage(\"viewport\");\r\n      stage.loadFile(\"rcsb://1crn\", {defaultRepresentation: true});\r\n    });\r\n  </script>\r\n  <div id=\"viewport\" style=\"width:400px; height:300px;\"></div>\r\n</body>\r\n</html>\r\n```\r\n\r\n\r\n## Concept\r\n\r\nThe main object in NGL is the [`stage`](../class/src/stage/stage.js~Stage.html). By using the `stage.loadFile` method, [`component`](../class/src/component/component.js~Component.html) objects, containing structur or volume data, can be added to the `stage`. Finally [`representation`](../class/src/representation/representation.js~Representation.html) objects, like \"cartoon\" or \"surface\", are added to the `component` for showing the data.\r\n\r\n```\r\n// create a `stage` object\r\nvar stage = new NGL.Stage(\"viewport\");\r\n// load a PDB structure and consume the returned `Promise`\r\nstage.loadFile(\"rcsb://1CRN\").then(function (component) {\r\n  // add a \"cartoon\" representation to the structure component\r\n  component.addRepresentation(\"cartoon\");\r\n  // provide a \"good\" view of the structure\r\n  component.autoView();\r\n});\r\n```\r\n\r\n\r\n## Element\r\n\r\nIf the size of your DOM element (here \"viewport\") is not know upon calling the `Stage` constructor make sure that you call `stage.handleResize()` when the size is known or has changed.\r\n\r\n\r\n## CDN\r\n\r\nInstead of hosting the `ngl.js` file yourself you can point to the [Unpkg](https://unpkg.com/) or [RawGit](https://rawgit.com/) CDN.\r\n\r\nLatest stable/untagged version released on NPM:\r\n\r\n* https://unpkg.com/ngl\r\n\r\nLatest development version released on NPM:\r\n\r\n* https://unpkg.com/ngl@next\r\n\r\nSpecific Version\r\n\r\n* https://unpkg.com/ngl@0.10.4-1  // v0.10.4-1 from Unpkg\r\n* https://cdn.rawgit.com/arose/ngl/v0.10.4-1/dist/ngl.js  // v0.10.4-1 from RawGit\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\file-formats.md",
    "name": "./doc/usage/file-formats.md",
    "content": "\r\n# File Formats\r\n\r\nThe following file formats are supported. Files can be compressed with gzip. Format detection is based on the file extension.\r\n\r\n\r\n## Structures\r\n\r\nStructure data is saved into [Structure](../class/src/structure/structure.js~Structure.html) instances.\r\n\r\nLoading flags (in the GUI available from the *File* menu):\r\n* *asTrajectory*: load the topology from first model and add the coordinates from it and the remaining models as trajectory frames. Note that this assumes that all models share the same topology.\r\n* *firstModelOnly*: load only the first model.\r\n* *cAlphaOnly*: load only C-alpha atoms.\r\n\r\nAtom data added to all structures:\r\n* *index*: running atom index that is unique within the structure\r\n* *modelindex*: running model index that is unique within the structure\r\n* *globalindex*: globally unique running atom index\r\n\r\n\r\n### mmCIF\r\n\r\nExtension: **.mmcif**, **.cif**, **.mcif**\r\n\r\nSpecification: [http://mmcif.wwpdb.org/](http://mmcif.wwpdb.org/)\r\n\r\nSupported features:\r\n* Title: read from \"_struct.title\" item\r\n* Box coordinates: read from \"_cell\" item\r\n* Space group: read from \"_symmetry.space_group_name_H-M\" item\r\n* Secondary structure: read from \"_struct_conf\" and \"_struct_sheet_range\" items\r\n* Assemblies\r\n\t* Biological assemblies: read from \"_pdbx_struct_oper_list\" and \"_pdbx_struct_assembly_gen\" items\r\n\t* Non-crystallographic symmetry: read from \"_struct_ncs_oper\" item\r\n\t* Crystallographic symmetry: determined from space group\r\n* Atom data: read from the \"_atom_site\" items\r\n\t* *resname*: read from \"label_comp_id\" field\r\n\t* *x*, *y*, *z*: read from \"Cartn_x\", \"Cartn_y\", \"Cartn_z\" fields\r\n\t* *resno*: read from \"auth_seq_id\" field\r\n\t* *serial*: read from \"id\" field\r\n\t* *atomname*: read from \"label_atom_id\" field\r\n\t* *chainname*: read from \"auth_asym_id\" field\r\n\t* *element*: read from \"type_symbol\" field or deduced from *atomname* if not available\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *bfactor*: read from \"B_iso_or_equiv\" field\r\n\t* *altloc*: read from \"label_alt_id\" field\r\n\t* *inscode*: read from \"pdbx_PDB_ins_code\" field\r\n\t* *hetero*: determined from \"group_PDB\" field, which is \"ATOM\" or \"HETATM\"\r\n\t* *occupancy*: read from \"occupancy\" field\r\n* Connectivity: read from the \"_struct_conn\" item, which generally contains data on hetero atom connectivity. Entries with \"_conn_type_id\" equal to \"hydrog\" are currently ignored. Connectivity for non-hetero atoms is calculated during post-processing.\r\n* The cif dictionary is added to the `structure.extraData` property, with key `cif`, excluding \"_atom_site\" items\r\n\r\n\r\n### PDB/PQR\r\n\r\nExtension: **.pdb**, **.ent**, **.pqr**\r\n\r\nSpecification: [http://www.wwpdb.org/documentation/file-format.php](http://www.wwpdb.org/documentation/file-format.php)\r\n\r\nSupported features:\r\n* Title: read from \"TITLE\" record\r\n* Box coordinates: read from \"CRYST1\" record\r\n* Space group: read from \"CRYST1\" record\r\n* Secondary structure: read from \"HELIX\" and \"SHEET\" records\r\n* Assemblies\r\n\t* Biological assemblies: read from \"REMARK 350\" record\r\n\t* Non-crystallographic symmetry: read from \"MTRIX\" record\r\n\t* Crystallographic symmetry: determined from space group\r\n* Atom data: read from the \"ATOM\" and \"HETATM\" records\r\n\t* *resname*: read from \"resName\" field\r\n\t* *x*, *y*, *z*: read from \"x\", \"y\", \"z\" fields\r\n\t* *resno*: read from \"resSeq\" field\r\n\t* *serial*: read from \"serial\" field\r\n\t* *atomname*: read from \"name\" field\r\n\t* *chainname*: read from \"chainID\" field\r\n\t* *element*: read from \"element\" field or deduced from *atomname* if not available\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *bfactor*: read from \"tempFactor\" field\r\n\t* *altloc*: read from \"altLoc\" field\r\n\t* *inscode*: read from \"insCode\" field\r\n\t* *hetero*: determined from record type, which is \"ATOM\" or \"HETATM\"\r\n\t* *occupancy*: read from \"occupancy\" field\r\n* Connectivity: read from the \"CONNECT\" record, which generally contains data on hetero atom connectivity. Connectivity for non-hetero atoms is calculated during post-processing.\r\n\r\n\r\n### GRO\r\n\r\nExtension: **.gro**\r\n\r\nSpecification: [http://manual.gromacs.org/current/online/gro.html](http://manual.gromacs.org/current/online/gro.html)\r\n\r\nSupported features:\r\n* Title: read from \"title string\" field\r\n* Box coordinates: read from \"box vectors\" field\r\n* Secondary structure: not available in the format, automatically calculated during post-processing\r\n* Atom data:\r\n\t* *resname*: read from \"residue name\" field\r\n\t* *x*, *y*, *z*: read from \"position\" fields\r\n\t* *resno*: read from \"residue number\" field\r\n\t* *serial*: read from \"atom number\" field\r\n\t* *atomname*: read from \"atom name\" field\r\n\t* *chainname*: not available, automatically assigned during post-processing\r\n\t* *element*: deduced from *atomname*\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *altloc*: not available, left empty\r\n\t* *inscode*: not available, left empty\r\n* Connectivity: not available in the format, automatically calculated during post-processing\r\n\r\nTODO:\r\n* Read velocity data from *GRO* files that includes it (and create a new *Representation* to display it).\r\n\r\n\r\n### SDF\r\n\r\nExtension: **.sdf**, **.sd**\r\n\r\nSpecification: [http://download.accelrys.com/freeware/ctfile-formats/](http://download.accelrys.com/freeware/ctfile-formats/)\r\n\r\nSupported features:\r\n* Title: read from the second line of the header block\r\n* Box coordinates: not available in the format\r\n* Secondary structure: not available in the format, automatically calculated during post-processing\r\n* Atom data:\r\n\t* *resname*: not available, set as \"HET\"\r\n\t* *x*, *y*, *z*: read from \"position\" fields\r\n\t* *resno*: read from \"residue number\" field\r\n\t* *serial*: not available, set from running index\r\n\t* *atomname*: not available set as \"element + index\"\r\n\t* *chainname*: not available, automatically assigned during post-processing\r\n\t* *element*: read from \"element\" field\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *altloc*: not available, left empty\r\n\t* *inscode*: not available, left empty\r\n* Connectivity: read from bond block, includes bond order\r\n* Associated data items are added to the `structure.extraData` property with key `sdf`\r\n\r\n\r\n### MOL2\r\n\r\nExtension: **.mol2**\r\n\r\nSpecification: [http://www.tripos.com/data/support/mol2.pdf](http://www.tripos.com/data/support/mol2.pdf)\r\n\r\nSupported features:\r\n* Title: read from the first line of the molecule record\r\n* Box coordinates: not available in the format\r\n* Secondary structure: not available in the format, automatically calculated during post-processing\r\n* Atom data:\r\n\t* *resname*: read from \"residue name\" field\r\n\t* *x*, *y*, *z*: read from \"coordinate\" fields\r\n\t* *resno*: read from \"residue number\" field\r\n\t* *serial*: read from \"atom number\" field\r\n\t* *atomname*: read from \"atom name\" field\r\n\t* *chainname*: not available, automatically assigned during post-processing\r\n\t* *element*: read from \"atom type\" field\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *altloc*: not available, left empty\r\n\t* *inscode*: not available, left empty\r\n\t* *bfactor*: read from the \"partial charge\" field (i.e. not a bfactor)\r\n* Connectivity: read from bond record, includes bond order\r\n\r\n\r\n### MMTF\r\n\r\nExtension: **.mmtf**\r\n\r\nSpecification: [https://github.com/rcsb/mmtf](https://github.com/rcsb/mmtf)\r\n\r\nSupported features:\r\n* Title: read from \"title\"\r\n* Box coordinates: read from \"unitCell\" field\r\n* Secondary structure: read from \"secStructList\" field\r\n* Atom data:\r\n\t* *resname*: read from \"groupTypeList[].groupName\" field\r\n\t* *x*, *y*, *z*: read from \"x/y/zCoordList\" fields\r\n\t* *resno*: read from \"groupIdList\" field\r\n\t* *serial*: read from \"atomIdList\" field\r\n\t* *atomname*: read from \"groupTypeList[].atomNameList\" field\r\n\t* *chainname*: read from \"chainNameList\" field\r\n\t* *element*: read from \"groupTypeList[].elementList\" field\r\n\t* *vdw*: deduced from *element*\r\n\t* *covalent*: deduced from *element*\r\n\t* *altloc*: read from \"altLocList\" field\r\n\t* *inscode*: read from \"insCodeList\" field\r\n\t* *bfactor*: read from \"bFactorList\" field\r\n\t* *occupancy*: read from \"occupancyList\" field\r\n* Connectivity: read from \"bondAtomList\", \"bondOrderList\" fields and their \"groupTypeList[]\" counterparts\r\n\r\n\r\n## Topologies\r\n\r\nTopology are different from structure files as they not contain coordinate data.\r\n\r\n\r\n### PRMTOP\r\n\r\nTopology format used by Amber.\r\n\r\nExtensions: **.prmtop**, **.parm7**\r\n\r\n\r\n### PSF\r\n\r\nTopology format used by Charmm.\r\n\r\nExtension: **.psf**\r\n\r\n\r\n### TOP\r\n\r\nTopology format used by Gromacs.\r\n\r\nExtension: **.top**\r\n\r\n\r\n## Trajectories\r\n\r\nStructure files in *mmCIF*, *PDB*, *GRO*, *SDF*, *MOL2* or *MMTF* format can also be loaded as trajectories by setting the *asTrajectory* flag. Trajectory files in *DCD*, *NCTRAJ*, *TRR* or *XTC* format are added to a *Structure*.\r\n\r\n\r\n### DCD\r\n\r\nUncompressed, binary trajectory format used by Charmm.\r\n\r\nExtension: **.dcd**\r\n\r\n\r\n### TRR\r\n\r\nUncompressed, binary trajectory format used by Gromacs.\r\n\r\nExtension: **.trr**\r\n\r\n\r\n### NCTRAJ\r\n\r\nUncompressed, binary trajectory format used by Amber.\r\n\r\nExtensions: **.nctraj**, **.ncdf**, **.nc**\r\n\r\n\r\n### XTC\r\n\r\nCompressed, binary trajectory format used by Gromacs.\r\n\r\nExtension: **.xtc**\r\n\r\n\r\n## Densities\r\n\r\nDensity data is saved into [Volume](../class/src/volume/volume.js~Volume.html) instances.\r\n\r\n\r\n### MRC/MAP/CCP4\r\n\r\nExtensions: **.mrc**, **.map**, **.ccp4**\r\n\r\nSpecification: [http://www.ccp4.ac.uk/html/maplib.html](http://www.ccp4.ac.uk/html/maplib.html), [http://ami.scripps.edu/software/mrctools/mrc_specification.php](http://ami.scripps.edu/software/mrctools/mrc_specification.php)\r\n\r\nSupported features:\r\n* Header data\r\n* Density data\r\n\r\n\r\n### CUBE\r\n\r\nExtensions: **.cube**, **.cub**\r\n\r\nSpecification: [http://paulbourke.net/dataformats/cube/](http://paulbourke.net/dataformats/cube/)\r\n\r\nSupported features:\r\n* Header data\r\n* Density data\r\n\r\nTODO:\r\n* Read structure embedded in the header.\r\n\r\n\r\n### DSN6/BRIX\r\n\r\nExtensions: **.dsn6**, **.brix**\r\n\r\nSupported features:\r\n* Header data\r\n* Density data\r\n\r\n\r\n### DX/DXBIN\r\n\r\nExtensions: **.dx**, **.dxbin**\r\n\r\nSpecification: [http://www.poissonboltzmann.org/docs/file-format-info/](http://www.poissonboltzmann.org/docs/file-format-info/)\r\n\r\nSupported features:\r\n* Header data\r\n* Density data\r\n\r\n\r\n### XPLOR/CNS\r\n\r\nExtensions: **.xplor**, **.cns**\r\n\r\nSupported features:\r\n* Header data\r\n* Density data\r\n\r\n\r\n## Surfaces\r\n\r\nThe surface geometry is saved into [Surface](../class/src/surface/surface.js~Surface.html) instances.\r\n\r\n\r\n### OBJ\r\n\r\nExtension: **.obj**\r\n\r\nThe [PyMOL](http://pymol.org/) molecular visualization system can export surfaces in the *OBJ* format.\r\n\r\n\r\n### PLY\r\n\r\nExtension: **.ply**\r\n\r\nThe [EDTsurf](http://zhanglab.ccmb.med.umich.edu/EDTSurf/) program outputs surfaces in the *PLY* format.\r\n\r\n\r\n## Annotation\r\n\r\n### wwPDB Validation Report\r\n\r\nExtension: **.xml**\r\n\r\nLoad PDB entry *3PQR* and its validation report. Add the validation object to the structure object. Then show clashes and color by geometry quality using the [ValidationRepresentation](../class/src/representation/validation-representation.js~ValidationRepresentation.html) to show the clash data. There are two validation dta-based colorschemes available: [densityfit](../class/src/color/densityfit-colormaker.js~DensityfitColormaker.html) and [geoquality](../class/src/color/geoquality-colormaker.js~GeoqualityColormaker.html).\r\n```\r\nPromise.all( [\r\n    stage.loadFile( \"rcsb://3PQR\" ),\r\n    NGL.autoLoad( \"http://ftp.wwpdb.org/pub/pdb/validation_reports/pq/3pqr/3pqr_validation.xml.gz\", { ext: \"validation\" } )\r\n] ).then( function( ol ){\r\n    ol[ 0 ].structure.validation = ol[ 1 ];\r\n    ol[ 0 ].addRepresentation( \"cartoon\", { color: \"geoquality\" } );\r\n    ol[ 0 ].addRepresentation( \"validation\" );\r\n    ol[ 0 ].addRepresentation( \"ball+stick\", {\r\n        sele: ol[ 1 ].clashSele,\r\n        color: \"geoquality\"\r\n    } );\r\n    ol[ 0 ].addRepresentation( \"licorice\", {\r\n        sele: \"hetero\",\r\n        color: \"geoquality\"\r\n    } );\r\n    stage.autoView();\r\n} );\r\n```\r\n\r\n\r\n## General\r\n\r\n### JSON\r\n\r\nExtension: **.json**\r\n\r\n\r\n### CSV\r\n\r\nExtension: **.csv**\r\n\r\n\r\n### MSGPACK\r\n\r\nExtension: **.msgpack**\r\n\r\n\r\n### NETCDF\r\n\r\nExtension: **.netcdf**\r\n\r\n\r\n### TXT\r\n\r\nExtensions: **.txt**, **.text**\r\n\r\n\r\n### XML\r\n\r\nExtension: **.xml**\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\interaction-controls.md",
    "name": "./doc/usage/interaction-controls.md",
    "content": "\r\n# Interaction controls\r\n\r\n## Camera\r\n\r\n### Viewer\r\n\r\nThe translation, zoom and rotation of the scene can be set via the [ViewerControls](../class/src/controls/viewer-controls.js~ViewerControls.html) class which is available as a property of the stage: [Stage.viewerControls](../class/src/stage/stage.js~Stage.html#instance-member-viewerControls).\r\n\r\nGetting and setting the orientation for the whole scene:\r\n```\r\nvar orientationMatrix = stage.viewerControls.getOrientation();\r\nstage.viewerControls.orient(orientationMatrix);\r\n```\r\n\r\n\r\n### Animation\r\n\r\nThe scene can be smoothly rotated, moved and zoomed via the [AnimationControls](../class/src/controls/animation-controls.js~AnimationControls.html) class which is available as a property of the stage: [Stage.animationControls](../class/src/stage/stage.js~Stage.html#instance-member-animationControls).\r\n\r\n\r\n### Automatic view\r\n\r\nFor the whole stage (see [Stage.autoView](../class/src/stage/stage.js~Stage.html#instance-method-autoView)):\r\n```\r\nstage.loadFile(\"rcsb://3pqr\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  stage.autoView();  // focus on all representations in all components\r\n});\r\n```\r\n\r\nFor individual components (see [Component.autoView](../class/src/component/component.js~Component.html#instance-method-autoView)):\r\n```\r\nstage.loadFile(\"rcsb://3pqr\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  var duration = 1000;  // optional duration for animation, defaults to zero\r\n  o.autoView(duration);  // focus on the whole structure\r\n});\r\n```\r\n\r\nFor structure components using a [selection string](./usage/selection-language.html) (see [StructureComponent.autoView](../class/src/component/structure-component.js~StructureComponent.html#instance-method-autoView)):\r\n```\r\nstage.loadFile(\"rcsb://3pqr\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  o.autoView(\"RET\");  // focus on retinal\r\n});\r\n```\r\n\r\n\r\n### Principal axes\r\n\r\nAnimate structure to align with principal axes:\r\n```\r\nstage.loadFile(\"rcsb://3pqr\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  var pa = o.structure.getPrincipalAxes();\r\n  stage.animationControls.rotate(pa.getRotationQuaternion(), 1500);\r\n});\r\n```\r\n\r\n\r\n### Spin\r\n\r\nSpin the whole scene around the y-axis (see [Stage.setSpin](../class/src/stage/stage.js~Stage.html#instance-method-setSpin)):\r\n\r\n```\r\nstage.setSpin(true);\r\n```\r\n\r\n\r\n## Picking\r\n\r\nWhenever the user clicks or hovers over the viewer canvas the appropriate [StageSignal](../typedef/index.html#static-typedef-StageSignals) is dispatched from [Stage.signals](../class/src/stage/stage.js~Stage.html#instance-member-signals). Any function added to those those signals is then called with a [PickingProxy](../class/src/controls/picking-proxy.js~PickingProxy.html) instance that provides access to what was picked.\r\n\r\nNote that the [MouseControls](../class/src/controls/mouse-controls.js~MouseControls.html) class (see [below](#controls)) provides more convenient means to bind picking events to custom actions.\r\n\r\n\r\n### Clicked\r\n\r\n```\r\nstage.signals.clicked.add(function (pickingProxy) {...});\r\n```\r\n\r\n\r\n### Hovered\r\n\r\nBasis usage:\r\n\r\n```\r\nstage.signals.hovered.add(function (pickingProxy) {...});\r\n```\r\n\r\nExample for showing a tooltip when hovering over atoms or bonds:\r\n\r\n```\r\n// create tooltip element and add to the viewer canvas\r\nvar tooltip = document.createElement(\"div\");\r\nObject.assign(tooltip.style, {\r\n  display: \"none\",\r\n  position: \"absolute\",\r\n  zIndex: 10,\r\n  pointerEvents: \"none\",\r\n  backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n  color: \"lightgrey\",\r\n  padding: \"0.5em\",\r\n  fontFamily: \"sans-serif\"\r\n});\r\nstage.viewer.container.appendChild(tooltip);\r\n\r\n// load a structure file\r\nstage.loadFile( \"rcsb://1blu\", { defaultRepresentation: true } );\r\n\r\n// listen to `hovered` signal to move tooltip around and change its text\r\nstage.signals.hovered.add(function (pickingProxy) {\r\n  if (pickingProxy && (pickingProxy.atom || pickingProxy.bond)){\r\n    var atom = pickingProxy.atom || pickingProxy.closestBondAtom;\r\n    var cp = pickingProxy.canvasPosition;\r\n    tooltip.innerText = \"ATOM: \" + atom.qualifiedName();\r\n    tooltip.style.bottom = cp.y + 3 + \"px\";\r\n    tooltip.style.left = cp.x + 3 + \"px\";\r\n    tooltip.style.display = \"block\";\r\n  }else{\r\n    tooltip.style.display = \"none\";\r\n  }\r\n});\r\n```\r\n\r\n\r\n## Mouse\r\n\r\n### Controls\r\n\r\nFor convenience, there is a [MouseControls](../class/src/controls/mouse-controls.js~MouseControls.html) class which is available as a property of the stage: [Stage.mouseControls](../class/src/stage/stage.js~Stage.html#instance-member-mouseControls) and can be used to bind actions (any user-defined function or predefined methods from the [MouseActions](../class/src/controls/mouse-actions.js~MouseActions.html) class) to mouse events with keyboard modifiers.\r\n\r\n```\r\nstage.mouseControls.add(\"drag-left+right\", NGL.MouseActions.zoomDrag);\r\n```\r\n\r\nThe default controls are as follows:\r\n\r\n- `scroll` zoom scene\r\n- `scroll-ctrl` move near clipping plane\r\n- `scroll-shift` move near clipping plane and far fog\r\n- `scroll-alt` change isolevel of isosurfaces\r\n- `drag-right` pan/translate scene\r\n- `drag-left` rotate scene\r\n- `drag-middle` zoom scene\r\n- `drag-shift-right` zoom scene\r\n- `drag-left+right` zoom scene\r\n- `drag-ctrl-right` pan/translate hovered component\r\n- `drag-ctrl-left` rotate hovered component\r\n- `clickPick-middle` auto view picked component element\r\n- `hoverPick` show tooltip for hovered component element\r\n\r\n\r\n### Observer\r\n\r\nFor low-level control, there is a [MouseObserver](../class/src/stage/mouse-observer.js~MouseObserver.html) class which is available as a property of the stage: [Stage.mouseObserver](../class/src/stage/stage.js~Stage.html#instance-member-mouseObserver) and dispatches [MouseSignals](../typedef/index.html#static-typedef-MouseSignals) originating from the viewer canvas.\r\n\r\n```\r\nstage.mouseObserver.signals.scroll.add(function (delta) {...});\r\n```\r\n\r\n\r\n## Keyboard\r\n\r\n### Controls\r\n\r\nFor convenience, there is a [KeyControls](../class/src/controls/key-controls.js~KeyControls.html) class which is available as a property of the stage: [Stage.keyControls](../class/src/stage/stage.js~Stage.html#instance-member-keyControls) and can be used to bind actions (any user-defined function or predefined methods from the [KeyActions](../class/src/controls/key-actions.js~KeyActions.html) class) to key events.\r\n\r\n```\r\nstage.keyControls.add(\"r\", NGL.KeyActions.autoView);\r\n```\r\n\r\nThe default controls are as follows:\r\n\r\n- `i` toggle stage spinning\r\n- `k` toggle stage rocking\r\n- `p` pause all stage animations\r\n- `r` reset stage auto view\r\n\r\n\r\n## Component\r\n\r\nEach [Component](../class/src/component/component.js~Component.html) (wrapping a `Structure`, `Surface`, `Volume` or `Shape` object) can be moved independently from the camera using the `.setPosition`, `.setRotation`, `.setScale` methods.\r\n\r\n```\r\n// Load a protein\r\nstage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  stage.autoView();\r\n});\r\n\r\n// Load the same protein and move it\r\nstage.loadFile(\"rcsb://1crn\").then(function (o) {\r\n  o.setPosition([20, 0, 0]);\r\n  o.setRotation([ 2, 0, 0 ]);\r\n  o.setScale(0.5);\r\n  o.addRepresentation(\"cartoon\", {color: \"orange\"});\r\n  stage.autoView();\r\n});\r\n```\r\n\r\n\r\nIn addition, a transformation matrix can be set with `.setTransform` which is applied before the set position, rotation and scale. Such a matrix can be supplied by external superposition tools to align two structures.\r\n\r\n```\r\nPromise.all([\r\n\r\n  stage.loadFile(\"rcsb://1u19\"),\r\n  stage.loadFile(\"rcsb://3pqr\")\r\n\r\n]).then(function(ol) {\r\n\r\n  ol[0].addRepresentation(\"cartoon\", {color: \"skyblue\", sele: \":A\"});\r\n  ol[1].addRepresentation(\"cartoon\", {color: \"tomato\"});\r\n\r\n  var m = new NGL.Matrix4().fromArray([\r\n    -0.674, 0.131, -0.727, -7.528,\r\n    0.283, 0.955, -0.090, -30.266,\r\n    0.682, -0.267, -0.681, 24.816,\r\n    0, 0, 0, 1\r\n  ]).transpose();\r\n\r\n  ol[0].setTransform(m);\r\n\r\n  stage.autoView();\r\n\r\n});\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\molecular-representations.md",
    "name": "./doc/usage/molecular-representations.md",
    "content": "\r\n# Molecular Representations\r\n\r\n\r\nEach loaded structure can be displayed using a variety of representations that can be combined to create complex molecular views. Multiple representation types are supported, including space-filling spheres for atoms (spacefill), cylinders and spheres for bonds and atoms (ball+stick), simple lines for bonds (line), secondary structure abstraction (cartoon), backbone atom trace (backbone). The appearance of the representations can be fine-tuned by parameters, for example, to change the quality. Most representations have a color and a radius parameter that can use data from the underlying structure. For instance, a representation can be colored uniformly or according to the element, residue or secondary structure type of the atoms from which the representation is derived. The size of representation objects, for example sphere and cylinder radii in a ball+stick representation, can be set similarly.\r\n\r\nCommon parameters are described in the {@link StructureRepresentationParameters} type definition.\r\n\r\n\r\n## axes\r\n\r\n- [axes](../class/src/representation/axes-representation.js~AxesRepresentation.html)\r\n\r\n\r\n## backbone\r\n\r\n- [backbone](../class/src/representation/backbone-representation.js~BackboneRepresentation.html)\r\n\r\nCylinders connect successive residues of unbroken chains by their main backbone atoms, which are **.CA** atoms in case of proteins and **C4'**/**C3'** atoms for RNA/DNA, respectively. The main backbone atoms are displayed as spheres.\r\n\r\n* *aspectRatio*: ...\r\n* *radiusSegments*: ...\r\n* *sphereDetail*: ...\r\n\r\n\r\n## ball+stick\r\n\r\n- [ball+stick](../class/src/representation/ballandstick-representation.js~BallAndStickRepresentation.html)\r\n\r\nAtoms are displayed as spheres (balls) and bonds as cylinders (sticks).\r\n\r\n*   *aspectRatio*: A number between 1.0 and 10.0, defining how much bigger the sphere radius is compared to the cylinder radius.\r\n*   *radiusSegments*: An integer between 3 and 25, defining the number of segments used to create a cylinder. Only has an effect when ray-casting of geometric primitives is unavailable or switched of via the *impostor* preference.\r\n*   *sphereDetail*: See *spacefill* representation\r\n\r\n\r\n## base\r\n\r\n- [base](../class/src/representation/base-representation.js~BaseRepresentation.html)\r\n\r\nSimplified display of RNA/DNA nucleotides, best used in conjunction with a [cartoon](#cartoon) representation. Here, a stick is drawn connecting the sugar backbone with a nitrogen in the base (**.N1** in case of adenine or guanine, **.N3** in case of thymine or cytosine).\r\n\r\n* *aspectRatio*: ...\r\n* *radiusSegments*: ...\r\n* *sphereDetail*: ...\r\n\r\n\r\n## cartoon\r\n\r\n- [cartoon](../class/src/representation/cartoon-representation.js~CartoonRepresentation.html)\r\n\r\nThe main backbone atoms (see [backbone](#backbone)) of successive residues in unbroken chains are connected by a smooth trace. The trace is expanded perpendicular to its tangent with an elliptical cross-section. The major axis points from **.CA** in the direction of the **.O** in case of proteins and from the **C1'**/**C3'** to **C2'**/**O4'** for RNA/DNA, respectively.\r\n\r\n* *aspectRatio*: ...\r\n* *subdiv*: ...\r\n* *radialSegments*: ...\r\n* *tension*: ...\r\n* *capped*: ...\r\n* *wireframe*: ...\r\n* *arrows*: ... (in development)\r\n\r\n\r\n## contact\r\n\r\n- [contact](../class/src/representation/contact-representation.js~ContactRepresentation.html)\r\n\r\n*CAUTION* This feature is only for preview. It is still under development and has not been thoroughly tested. Bugs and other surprises are likely.\r\n\r\nWorks currently only for proteins. The angle criterion has currently little meaning.\r\n\r\nDisplays cylinders between supposedly contacting atoms.\r\n\r\n* *contactType*\r\n\t* *polar*: ...\r\n\t* *polar backbone*: ...\r\n* *maxDistance*: ...\r\n* *maxAngle*: ...\r\n\r\n\r\n## distance\r\n\r\n- [distance](../class/src/representation/distance-representation.js~DistanceRepresentation.html)\r\n\r\nDisplays the distance between pairs of atoms.\r\n\r\n\r\n## helixorient\r\n\r\n- [helixorient](../class/src/representation/helixorient-representation.js~HelixorientRepresentation.html)\r\n\r\nDisplays various helix-related values...\r\n\r\n\r\n## hyperball\r\n\r\n- [hyperball](../class/src/representation/hyperball-representation.js~HyperballRepresentation.html)\r\n\r\nA derivate of the [ball+stick](#ball+stick) representation (pioneered by [HyperBalls project](http://sourceforge.net/projects/hyperballs/)) in which atoms are smoothly connected by an elliptic hyperboloid.\r\n\r\n\r\n## label\r\n\r\n- [label](../class/src/representation/label-representation.js~LabelRepresentation.html)\r\n\r\nDisplays a label near the corresponding atom.\r\n\r\n* *labelType*: atom name, residue name, residue name + no or residue no\r\n* *font*: ...\r\n* *antialias*: ...\r\n\r\n\r\n## licorice\r\n\r\n- [licorice](../class/src/representation/licorice-representation.js~LicoriceRepresentation.html)\r\n\r\nA variant of the [ball+stick](#ball+stick) representation where balls and sticks have the same radius, that is the *aspectRatio* parameter is fixed to 1.0.\r\n\r\n\r\n## line\r\n\r\n- [line](../class/src/representation/line-representation.js~LineRepresentation.html)\r\n\r\nBonds are displayed by a flat, unshaded line.\r\n\r\n\r\n## point\r\n\r\n- [point](../class/src/representation/point-representation.js~PointRepresentation.html)\r\n\r\nAtoms are displayed by textured points.\r\n\r\n\r\n## ribbon\r\n\r\n- [ribbon](../class/src/representation/ribbon-representation.js~RibbonRepresentation.html)\r\n\r\nA thin ribbon is displayed along the main backbone trace.\r\n\r\n\r\n## rocket\r\n\r\n- [rocket](../class/src/representation/rocket-representation.js~RocketRepresentation.html)\r\n\r\n\r\n## rope\r\n\r\n- [rope](../class/src/representation/rope-representation.js~RopeRepresentation.html)\r\n\r\nA rope-like protein fold abstraction well suited for coarse-grained structures. In this representation a tube follows the center points of local axes as defined by [helixorient](#helixorient). The result is similar to what is shown by the [Bendix tool](http://sbcb.bioch.ox.ac.uk/Bendix/).\r\n\r\n* *subdiv*: ...\r\n* *radialSegments*: ...\r\n* *tension*: ...\r\n* *capped*: ...\r\n* *wireframe*: ...\r\n* *smooth*: ...\r\n\r\n\r\n## spacefill\r\n\r\n- [spacefill](../class/src/representation/spacefill-representation.js~SpacefillRepresentation.html)\r\n\r\nAtoms are displayed as a set of space-filling spheres.\r\n\r\n* *sphereDetail*: An integer between 0 and 3, where 0 means low and 3 very high geometric detail. Only has an effect when ray-casting of geometric primitives is unavailable or switched of via the *impostor* preference.\r\n\r\n\r\n## surface\r\n\r\n- [surface](../class/src/representation/molecularsurface-representation.js~MolecularSurfaceRepresentation.html)\r\n\r\nDisplays the molecular surface and its variants.\r\n\r\n* *surfaceType*\r\n\t* *vws*: van der Waals surface\r\n\t* *sas*: solvent accessible surface\r\n\t* *ms*: molecular surface\r\n\t* *ses*: solvent excluded surface\r\n\t* *av*: high quality molecular surface\r\n* *probeRadius*:\r\n* *scaleFactor*: (just for debugging)\r\n\r\n\r\n## trace\r\n\r\n- [trace](../class/src/representation/trace-representation.js~TraceRepresentation.html)\r\n\r\nA flat, unshaded line is displayed along the main backbone trace.\r\n\r\n\r\n## tube\r\n\r\n- [tube](../class/src/representation/tube-representation.js~TubeRepresentation.html)\r\n\r\nEssentially like [cartoon](#cartoon) but with the *aspectRatio* fixed at a value of 1.0.\r\n\r\n\r\n## unitcell\r\n\r\n- [unitcell](../class/src/representation/unitcell-representation.js~UnitcellRepresentation.html)\r\n\r\nDraws the corners and edges of a crystallographic unitcell.\r\n\r\n\r\n## validation\r\n\r\n- [validation](../class/src/representation/validation-representation.js~ValidationRepresentation.html)\r\n\r\nDraws clashes given in a wwPDB validation report.\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\scripting.md",
    "name": "./doc/usage/scripting.md",
    "content": "\r\n# Scripting\r\n\r\nScripts are written in JavaScript and can be loaded as files that have the extension **.ngl** or **.js**.\r\n\r\n## Example\r\n\r\nLoad the structure of PDB entry *1CRN* from [RCSB](http://www.rcsb.org/), add a cartoon representation and center the view on the structure.\r\n\r\n```\r\nstage.loadFile(\"rcsb://1CRN\").then(function (o) {\r\n  o.addRepresentation(\"cartoon\");\r\n  o.autoView();\r\n});\r\n```\r\nHere, `o` is a `StructureComponent` instance.\r\n\r\n\r\n## Variables\r\n\r\nThe following variables are available in a scripting context.\r\n\r\n```\r\nstage  // the stage object\r\n__name__  // the name of the script file\r\n__path__  // the full path of the script file\r\n__dir__  // the directory to the script file\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\selection-language.md",
    "name": "./doc/usage/selection-language.md",
    "content": "\r\n# Selection Language\r\n\r\nSelections (or 'Sele' for short) strings can be input at various places in the user interface or when scripting. They are used to limit which atoms/residues are shown in a [molecular representation]{@tutorial molecular-representations} or what atoms are loaded from a trajectory.\r\n\r\n\r\n## Example\r\n\r\nSelect the side-chain and C-alpha atoms plus the backbone nitrogen in case of proline. `not backbone or .CA or (PRO and .N)` This selection is useful to display the sidechains together with a backbone trace. Hence there is also the keyword *sidechainAttached* for it.\r\n\r\n\r\n## Language\r\n\r\n### Keywords\r\n\r\n* *all*, *****\r\n* *sidechain*\r\n* *sidechainAttached* (`not backbone or .CA or (PRO and .N)`)\r\n* *backbone*\r\n* *protein*\r\n* *nucleic*\r\n* *rna*\r\n* *dna*\r\n* *hetero*\r\n* *ligand* (`( not polymer or hetero ) and not ( water or ion )`)\r\n* *ion*\r\n* *saccharide*/*sugar*\r\n* *polymer*\r\n* *water*\r\n* *hydrogen*\r\n* *helix*\r\n* *sheet*\r\n* *turn* (`not helix and not sheet`)\r\n* *small* (`Gly or Ala or Ser`)\r\n* *nucleophilic* (`Ser or Thr or Cys`)\r\n* *hydrophobic* (`Ala or Val or Leu or Ile or Met or Pro or Phe or Trp`)\r\n* *aromatic* (`Phe or Tyr or Trp or His`)\r\n* *amid* (`Asn or Gln`)\r\n* *acidic* (`Asp or Glu`)\r\n* *basic* (`His or Lys or Arg`)\r\n* *charged* (`Asp or Glu or His or Lys or Arg`)\r\n* *polar* (`Asp or Cys or Gly or Glu or His or Lys or Arg or Asn or Gln or Ser or Thr or Tyr`)\r\n* *nonpolar* (`Ala or Ile or Leu or Met or Phe or Pro or Val or Trp`)\r\n* *cyclic* (`His or Phe or Pro or Trp or Tyr`)\r\n* *aliphatic* (`Ala or Gly or Ile or Leu or Val`)\r\n* *bonded* (all atoms with at least one bond)\r\n* *ring* (all atoms within rings)\r\n\r\n\r\n### Expressions\r\n\r\n* residue number: *1*, *2*, *100*\r\n* residue number range: *3-40* (Note that around the dash **-** no spaces are allowed)\r\n* chain name: **:A**\r\n* atom name: **.CA**, **.C**, **.N**, ...\r\n* model: **/0**, **/1**, ...\r\n* residue name: *ALA*, *GLU*, *SOL*, *DMPC*, ...\r\n* numeric residue name: *[032]*, *[1AB]*, ...\r\n* list of residue names: *[ALA,GLU,MET]*, *[ARG,LYS]*, ...\r\n* element name: **_H**, **_C**, **_O**, ...\r\n* alternate location: **%A**, **%B**, ... or **%** for non-alternate location atoms\r\n* insertion code: **^A**, **^B**, ... or **^** for residues with no insertion code\r\n\r\nSome of these expressions can be combined (in this order) - residue numer (range), insertion code, chain name, atom name, alternate location, model - like this\r\n\r\n```\r\n// select C-alpha atoms of residue 10 with insertion code A\r\n// from chain F in model 0 at alternate location C\r\n10^A:F.CA%C/0\r\n```\r\n\r\nwhich is the same as\r\n\r\n```\r\n10 and ^A and :F and .CA and %C and /0\r\n```\r\n\r\nSingle expressions may be left out as long as the order (see above) is kept, for example:\r\n\r\n```\r\n:A/0 # select chain A from model 0\r\n```\r\n\r\n### Atomindex\r\n\r\nA list of atom indices can be given as a comma seperated list (no spaces in between) prefixed with the `@` character.\r\n\r\n```\r\n@0,1,4,5,11,23,42\r\n```\r\n\r\n### Logical operators (in order of binding strength)\r\n\r\n* *NOT*\r\n* *AND*\r\n* *OR*\r\n\r\nAdditionally, parentheses *()* can be used for grouping: `:A and ( 1 or 10 or 100 ) # select residues 1, 10 and 100 from chain A`\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\structure-data.md",
    "name": "./doc/usage/structure-data.md",
    "content": "\r\n# Structure data\r\n\r\nMolecular data is stored in objects of the [Structure](../class/src/structure/structure.js~Structure.html) class. Structure objects provide the common model/chain/residue/atom hierarchy.\r\n\r\n\r\n## Proxies\r\n\r\nThe data in each level of the hierarchy can be efficiently and conveniently accessed through proxy objects.\r\n\r\n```\r\n// Get an AtomProxy object for atom with index 10\r\nstage.loadFile(\"rcsb://1crn\").then(function(component) {\r\n  var atomProxy = component.structure.getAtomProxy(10)\r\n  console.log(atomProxy.qualifiedName())\r\n});\r\n```\r\n\r\n\r\n## Iterators\r\n\r\nFor each level of the hierarchy an iterator is available.\r\n\r\n```\r\n// Calculate B-factor statistics\r\nstage.loadFile(\"rcsb://1crn\").then(function(component) {\r\n  var bfactorSum = 0\r\n  var bfactorMin = +Infinity\r\n  var bfactorMax = -Infinity\r\n  component.structure.eachAtom(function(atom) {\r\n    bfactorSum += atom.bfactor;\r\n    if (bfactorMin > atom.bfactor) bfactorMin = atom.bfactor\r\n    if (bfactorMax < atom.bfactor) bfactorMax = atom.bfactor\r\n  });\r\n  var bfactorAvg = bfactorSum / component.structure.atomCount\r\n  console.log(bfactorSum, bfactorMin, bfactorMax, bfactorAvg)\r\n});\r\n\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\volume-representations.md",
    "name": "./doc/usage/volume-representations.md",
    "content": "\r\n# Volume Representations\r\n\r\nFor volumetric data and (when applicable) for surface data\r\n\r\n\r\n## Surface\r\n\r\nShow triangulation of volume data at a given isolevel or direct display of a surface mesh.\r\n\r\n- [surface](../class/src/representation/surface-representation.js~SurfaceRepresentation.html)\r\n\r\n\r\n## Dot\r\n\r\nRender each cell of a volume (optionally filtered given threshold values) as a dot or show the vertices of a surface mesh.\r\n\r\n- [dot](../class/src/representation/dot-representation.js~DotRepresentation.html)\r\n\r\n\r\n## Slice\r\n\r\nRender a slice of a volume colored by the value of each cell closest to each point on the slice.\r\n\r\n- [slice](../class/src/representation/slice-representation.js~SliceRepresentation.html)\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\doc\\usage\\snippets.md",
    "name": "./doc/usage/snippets.md",
    "content": "# Usage\r\n\r\nA collection of NGL snippets\r\n\r\n\r\n## Implementing custom default representations\r\n\r\nStart by creating a function that adds the wanted representations to a component. See also {@ StructureComponent.addRepresentation}.\r\n\r\n```\r\nfunction defaultStructureRepresentation( component ){\r\n\t// bail out if the component does not contain a structure\r\n\tif( component.type !== \"structure\" ) return;\r\n\t// add three representations\r\n\tcomponent.addRepresentation( \"cartoon\", {\r\n\t\taspectRatio: 3.0,\r\n\t\tscale: 1.5\r\n\t} );\r\n\tcomponent.addRepresentation( \"licorice\", {\r\n\t\tsele: \"hetero and not ( water or ion )\",\r\n\t\tmultipleBond: true\r\n\t} );\r\n\tcomponent.addRepresentation( \"spacefill\", {\r\n\t\tsele: \"water or ion\",\r\n\t\tscale: 0.5\r\n\t} );\r\n}\r\n```\r\n\r\nPass that function as a callback whenever you load a structure file via {@link Stage#loadFile}.\r\n\r\n```\r\nstage.loadFile( \"rcsb://1crn\" ).then( defaultStructureRepresentation );\r\nstage.loadFile( \"rcsb://4hhb\" ).then( defaultStructureRepresentation );\r\n```\r\n\r\nNote that the same strategy works for surface and volume files loaded into a {@link SurfaceComponent}.\r\n\r\n\r\n## Distance-based selection\r\n\r\nGet a selection of atoms that are within a certain distance of another selection.\r\n\r\n```\r\nstage.loadFile( \"rcsb://3pqr\" ).then( function( o ){\r\n    // get all atoms within 5 Angstrom of retinal\r\n    var selection = new NGL.Selection( \"RET\" );\r\n    var radius = 5;\r\n    var atomSet = o.structure.getAtomSetWithinSelection( selection, radius );\r\n    // expand selection to complete groups\r\n    var atomSet2 = o.structure.getAtomSetWithinGroup( atomSet );\r\n    o.addRepresentation( \"licorice\", { sele: atomSet2.toSeleString() } );\r\n    o.addRepresentation( \"cartoon\" );\r\n    o.autoView();\r\n} );\r\n```\r\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "D:\\nglLib\\CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# Change Log\r\nAll notable changes to this project will be documented in this file, following the suggestions of [Keep a CHANGELOG](http://keepachangelog.com/). This project adheres to [Semantic Versioning](http://semver.org/).\r\n\r\n\r\n## [Unreleased]\r\n### Added\r\n- contour option for volume surfaces (electron density maps)\r\n- buble, for transpiling some ES2015 features (e.g. classes, arrow functions, ...)\r\n- volume slice representation including interpolation support\r\n- xplor/cns volume file parser\r\n- `colorVolume` parameter for surface representation of volume data\r\n- `voxelSize` parameter for volume file parser\r\n- support for non orthogonal cell in cube file parser\r\n- dsn6/brix volume file parser\r\n- psf topology/structure file parser\r\n- wwPDB validation report xml parser, representation and colorschemes\r\n- support for picking Shape objects, Volume slices, Contact bonds\r\n- scroll mouse behavior to change far/near clipping and fog\r\n- label primitive for Shape class\r\n- support for reversing color schemes with `colorReverse` parameter\r\n- independent component movement via `.setPosition`, `.setRotation`, `.setScale`, `.setTransform`\r\n- `bonded` and `ring` selection language keywords\r\n- resname list to selection language, `[ALA,GLU]`\r\n\r\n### Changed\r\n- renamed `volume` parameter in molecular surface representation to `colorVolume`\r\n- renamed colormaker classes from colorMaker to colormaker, i.e. removed camel case\r\n- renamed ColormakerRegistry.getTypes to .getSchemes\r\n- colormaker subclasses now auto-register with ColormakerRegistry\r\n- refactored buffer classes to use a data object as input\r\n- refactored picking to be more general\r\n- replaced PickingData with PickingProxy\r\n- updated three.js to r85\r\n- updated chroma.js to 1.3.3\r\n- replaced utils/bitset with utils/bitarray\r\n- tweaked aminoacid keywords in selection language to follow rasmol/jmol, vmd\r\n\r\n### Removed\r\n- stage/component.centerView method, use .autoView instead\r\n- GidPool, picking handled by Picker objects\r\n- deprecated use of `#` for element selection, use `_` instead\r\n\r\n\r\n## [v0.9.3] - 2016-10-14\r\n### Changed\r\n- increased light distance from camera, to fix unlit rendering\r\n- remove double quotes from atomnames in chemComp cif parser\r\n\r\n\r\n## [v0.9.2] - 2016-10-06\r\n### Changed\r\n- fix, moved polyfills back inside the bundle\r\n\r\n\r\n## [v0.9.1] - 2016-10-06\r\n### Changed\r\n- removed (wrongly added) ngl2.js from dist folder\r\n- fixed chemComp cif parser not passing chainid\r\n\r\n\r\n## [v0.9.0] - 2016-10-05\r\n### Added\r\n- lazy representation parameter that only builds & updates the representation when visible\r\n- chainname based color scheme\r\n- BondHash class to quickly get atoms connected to an atom\r\n- SpatialHash class to quickly get neighboring atoms/points\r\n- XmlParser parameter to use the browser's DOMParser\r\n- attachment (top, middle, bottom; left, center, right) for LabelRepresentation/TextBuffer\r\n- border color and width for LabelRepresentation/TextBuffer\r\n- colored background rectangle for LabelRepresentation/TextBuffer\r\n- \"offset\" style rendering of double/triple bonds (@fredludlow)\r\n- PubchemDatasource to load cid as sdf, pubchem://16490\r\n- basic entity support (type, description, chain mapping; mmcif, mmtf)\r\n- entitytype, moleculetype, chainid, polymer color schemes\r\n- ShaderRegistry, DecompressorRegistry\r\n- box display for \"axes\" representation\r\n\r\n### Changed\r\n- ResidueindexColorMaker colorscale domain on a per chain basis\r\n- ChainindexColorMaker colorscale domain on a per model basis\r\n- Fixed, initial parameters for a Buffer not taken into account\r\n- ignore bonds that are defined multiple times in PDB parser\r\n- updated mmtf lib to v1.0\r\n- use npm as the build system\r\n- complete list of ion and saccharide group names\r\n\r\n### Removed\r\n- gulp as the build system\r\n\r\n\r\n## [v0.8] - 2016-07-22\r\n### Added\r\n- gulp build scripts\r\n- mmtf v0.2 support\r\n- support for rendering double/triple bonds, enable via `multipleBond` Representation parameter (@fredludlow, @arose)\r\n- stage.clicked signal (renamed from .onPicking)\r\n- stage.hovered signal\r\n- parsing of \"chem comp\" cif files\r\n- experimental \"axes\" representation showing the principal axes of an atom selection\r\n- added cone, arrow & ellipsoid buffers\r\n- added Shape class as a simple way to add custom shapes to the scene\r\n\r\n### Changed\r\n- reorganized everything to use es6 modules\r\n- read bondOrder from 'pdbx_value_order' in mmcif files\r\n- interpret 'CONECT 1529 1528 1528' as double bond in pdb files\r\n- `side` Buffer/Representation parameter changed: THREE.FrontSide => \"front\", THREE.BackSide => \"back\", THREE.DoubleSide => \"double\"\r\n- support for negative resno values in selections: \"-5:A\", \"-12--8\", \"-12-0\"\r\n- use chemical component type (available in mmtf) for determining molecule type\r\n- `.get/setOrientation` return/argument changed\r\n- enable SDF font as the default TextBuffer class only on Chrome\r\n- support for building using three-jsnext\r\n- renamed `radiusSegments` parameter to `radialSegments`\r\n- WebWorkers (for building surfaces) no longer need to load the main script file\r\n- `NGL.GET` renamed to `NGL.getQuery`\r\n\r\n### Removed\r\n- python-based build scripts\r\n- closure-compiler\r\n- stage.signals.onPicking (renamed to .clicked)\r\n- stage.signals.atom/bond/volume/nothingPicked, use .clicked instead\r\n- `NGL.mainScriptFilePath` no longer needed\r\n- `NGL.useWorker`, use \"useWorker\" representation parameter\r\n\r\n\r\n## [v0.7.1a] - 2016-06-02\r\n### Changed\r\n- fixed version in builds\r\n\r\n\r\n## [v0.7.1] - 2016-06-02\r\n### Added\r\n- orthographic camera mode\r\n- `backgroundColor` parameter for `Stage`\r\n- x/y/z offset parameters for labels (TextBuffer)\r\n- `OX1` atoms are recognized as part of the protein backbone\r\n- `stage.makeImage` now increments the task counter\r\n- added `.isIdentity` method to test if an `Assembly` is an identity transformation over all chains\r\n- embedded-dev build target (@sbliven)\r\n- support for responseType = \"json\" to efficiently load json data\r\n\r\n### Changed\r\n- there is no longer a fake unitcell created when no space group information is available\r\n- the query string is removed from urls before the determining file info (e.g. name, extension)\r\n- fixed labelText param not working in LabelRepresentation\r\n- enable SDF font as the default only on Chrome (fixes labels not shown on some OS/Browser)\r\n- ignore 'given' ncs operators\r\n- ensure that resname is upper case\r\n\r\n### Removed\r\n- `stage.setTheme` removed (use new `backgroundColor` parameter), themes now part of GUI code\r\n- `NGL.Preferences` is now part of the GUI code and removed from `NGL.Stage`. Setting `overwritePreferences: true` when instantiating an `NGL.Stage` object is not necessary anymore.\r\n- removed .requestVisibility method and signal (too GUI specific, if needed, should be handled there)\r\n\r\n\r\n## [v0.7] - 2016-05-08\r\n### Added\r\n- Store and Proxy classes for memory efficiency\r\n- MMTF, DXBIN, DCD files format parsers\r\n- 'unitcell' representation\r\n- stage.makeImage (returns Promise)\r\n- take NCS operations into account when creating unitcell & supercell assemblies\r\n- added multi sample antialias rendering\r\n- added support for spinning around an axis\r\n- use bitsets for storing selections of atoms\r\n- Assembly and AssemblyPart classes\r\n- stage.toggleFullscreen method\r\n- read occupancy data when available (mmCIF, pdb, mmtf)\r\n- occupancy color scheme\r\n- alternate location support in selections, e.g. %B\r\n- read insertion codes when available (mmCIF, pdb, mmtf)\r\n- insertion code support in selections, e.g. ^A\r\n- numeric residue name support in selections, e.g. [032]\r\n- Queue class to handle async tasks\r\n\r\n### Changed\r\n- fixed transformation matrix in mrc/ccp4 parser\r\n- optimized near clipping\r\n- Fiber class remanamed to Polymer\r\n- more consistent fog\r\n- use workers more sparsely due to the large overhead of creating them\r\n- create font SDF on demand, remove asset dependency\r\n- integrated three.js lighting into custom shaders\r\n- MIGRATION: chainname read from `auth_asym_id` instead of from `label_asym_id` field\r\n- DOC: clarified apache configuration for deployment\r\n- FIX: cif parser, ignore non-displayable bonds between symmetry mates\r\n- FIX: cif parser, struct_conn bonds not added for multiple altloc atoms\r\n- LIB: updated signals.js\r\n- LIB: updated promise.js\r\n- LIB: updated three.js\r\n- LIB: updated pako.js to pako_inflate.js (no deflation support needed)\r\n- CODE: support loading of Blob objects in addition to File objects\r\n- CODE: tweaked DistanceRepresentation visibility params\r\n\r\n### Removed\r\n- zip, lzma, bzip2 decompression\r\n- removed async.js\r\n- mdsrv related code and documentation\r\n- stage.exportImage (makes image and triggers download), use stage.makeImage\r\n\r\n\r\n## [v0.6] - 2015-10-12\r\n### Added\r\n- MIGRATION: `Stage.loadFile` signature changed, now returns a `Promise` and does not accept callbacks\r\n- MIGRATION: moved trajectory server into its own repository: [MDSrv](https://github.com/arose/mdsrv/)\r\n- ADD: Support for MOL2 and SDF files\r\n- ADD: Support for DX files\r\n- ADD: Support for PQR files\r\n- ADD: `ExampleRegistry` singleton\r\n- ADD: `PluginRegistry` singleton\r\n- ADD: `Datasource` class to use instead of hard-coded paths\r\n- ADD: `GidPool`\r\n- ADD: simple xml parser\r\n- ADD: APBS plugin to load PQR and DX file, simple GUI\r\n- ADD: bond and surface picking\r\n- ADD: User-defined color schemes (API)\r\n- GUI: `VirtualList` and `VirtualTable`\r\n- GUI: re-sizable sidebar (contents still need to be made responsive)\r\n- WIP: scripting API\r\n\r\n### Changed\r\n- EXAMPLES: general fixes and enhancements\r\n- DOC: moved installation and development information into the README\r\n- GUI/DOC: Higher color contrast for GUI and documentation pages\r\n- CODE: qunit updated\r\n- CODE: moved logical units of code into their own files\r\n- CODE: speeded up secondary structure assignment from PDB/mmCIF files; fixed bugs leading to wrong assignment\r\n- CODE: element color scheme now uses colorValue parameter to color carbon elements\r\n- CODE: script and assets paths are now configurable\r\n- CODE: more forgiving pdb parsing wrt to model records\r\n- CODE: helper function for re-ordering atoms\r\n- CODE: enhancements to handling Web Workers (`WorkerPool`, lazy Worker creation)\r\n- CODE: enhancements to volume triangulation (limit to given box, skip empty parts)\r\n- CODE: all `*Buffer` classes now inherit from `Buffer` and share common code\r\n- CODE: BufferAttributes can be re-used or grown\r\n- CODE: moved Buffer-specific code out of Representation class\r\n- CODE: molecular surface enhancements (color by atom, filter by atom)\r\n- CODE: nicer clipping of meshes and impostors (unlit interior to make them appear solid)\r\n- CODE: optimized kdtree building\r\n- CODE: clearer atomnames handling for fiber creation\r\n- CODE: Color handling code refactored exposing more parameters\r\n- CODE: Basic support for async creation of representations (so far used for molecular surfaces and volume triangulation)\r\n- CODE: chunked data loading and parsing via streamer class\r\n- CODE: faster autobonding of large residues (e.g. hydrated lipids)\r\n- CODE: WebWorker support while using development and build files\r\n- CODE: WebWorker used for decompression, parsing and surface generation\r\n- FIX: Issue #7\r\n- FIX: residues at the end of fibers may not require all backbone atoms\r\n- FIX: standard compatible atom names when writing pdb files\r\n- FIX: origin coordinates not used/read from mrc header\r\n\r\n### Removed\r\n- DEL: removed FragFit plugins\r\n\r\n\r\n## v0.5 - 2015-30-04\r\n### Added\r\n- Initial release\r\n\r\n\r\n[Unreleased]: https://github.com/arose/ngl/compare/v0.9.3...HEAD\r\n[v0.9.3]: https://github.com/arose/ngl/compare/v0.9.2...v0.9.3\r\n[v0.9.2]: https://github.com/arose/ngl/compare/v0.9.1...v0.9.2\r\n[v0.9.1]: https://github.com/arose/ngl/compare/v0.9.0...v0.9.1\r\n[v0.9.0]: https://github.com/arose/ngl/compare/v0.8...v0.9.0\r\n[v0.8]: https://github.com/arose/ngl/compare/v0.7.1a...v0.8\r\n[v0.7.1a]: https://github.com/arose/ngl/compare/v0.7.1...v0.7.1a\r\n[v0.7.1]: https://github.com/arose/ngl/compare/v0.7...v0.7.1\r\n[v0.7]: https://github.com/arose/ngl/compare/v0.6...v0.7\r\n[v0.6]: https://github.com/arose/ngl/compare/v0.5...v0.6\r\n",
    "static": true,
    "access": "public"
  }
]