/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kisti.osp.icecap.model;

import com.liferay.portal.LocaleException;
import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the DataEntry service. Represents a row in the &quot;icecap_DataEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.kisti.osp.icecap.model.impl.DataEntryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.kisti.osp.icecap.model.impl.DataEntryImpl}.
 * </p>
 *
 * @author Young-K. Suh and Jerry H. Seo
 * @see DataEntry
 * @see com.kisti.osp.icecap.model.impl.DataEntryImpl
 * @see com.kisti.osp.icecap.model.impl.DataEntryModelImpl
 * @generated
 */
public interface DataEntryModel extends BaseModel<DataEntry> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a data entry model instance should use the {@link DataEntry} interface instead.
	 */

	/**
	 * Returns the primary key of this data entry.
	 *
	 * @return the primary key of this data entry
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this data entry.
	 *
	 * @param primaryKey the primary key of this data entry
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the entry ID of this data entry.
	 *
	 * @return the entry ID of this data entry
	 */
	public long getEntryId();

	/**
	 * Sets the entry ID of this data entry.
	 *
	 * @param entryId the entry ID of this data entry
	 */
	public void setEntryId(long entryId);

	/**
	 * Returns the collection ID of this data entry.
	 *
	 * @return the collection ID of this data entry
	 */
	public long getCollectionId();

	/**
	 * Sets the collection ID of this data entry.
	 *
	 * @param collectionId the collection ID of this data entry
	 */
	public void setCollectionId(long collectionId);

	/**
	 * Returns the group ID of this data entry.
	 *
	 * @return the group ID of this data entry
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this data entry.
	 *
	 * @param groupId the group ID of this data entry
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this data entry.
	 *
	 * @return the company ID of this data entry
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this data entry.
	 *
	 * @param companyId the company ID of this data entry
	 */
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this data entry.
	 *
	 * @return the user ID of this data entry
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this data entry.
	 *
	 * @param userId the user ID of this data entry
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this data entry.
	 *
	 * @return the user uuid of this data entry
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this data entry.
	 *
	 * @param userUuid the user uuid of this data entry
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the create date of this data entry.
	 *
	 * @return the create date of this data entry
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this data entry.
	 *
	 * @param createDate the create date of this data entry
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the comments of this data entry.
	 *
	 * @return the comments of this data entry
	 */
	public String getComments();

	/**
	 * Returns the localized comments of this data entry in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized comments of this data entry
	 */
	@AutoEscape
	public String getComments(Locale locale);

	/**
	 * Returns the localized comments of this data entry in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized comments of this data entry. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getComments(Locale locale, boolean useDefault);

	/**
	 * Returns the localized comments of this data entry in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized comments of this data entry
	 */
	@AutoEscape
	public String getComments(String languageId);

	/**
	 * Returns the localized comments of this data entry in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized comments of this data entry
	 */
	@AutoEscape
	public String getComments(String languageId, boolean useDefault);

	@AutoEscape
	public String getCommentsCurrentLanguageId();

	@AutoEscape
	public String getCommentsCurrentValue();

	/**
	 * Returns a map of the locales and localized commentses of this data entry.
	 *
	 * @return the locales and localized commentses of this data entry
	 */
	public Map<Locale, String> getCommentsMap();

	/**
	 * Sets the comments of this data entry.
	 *
	 * @param comments the comments of this data entry
	 */
	public void setComments(String comments);

	/**
	 * Sets the localized comments of this data entry in the language.
	 *
	 * @param comments the localized comments of this data entry
	 * @param locale the locale of the language
	 */
	public void setComments(String comments, Locale locale);

	/**
	 * Sets the localized comments of this data entry in the language, and sets the default locale.
	 *
	 * @param comments the localized comments of this data entry
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setComments(String comments, Locale locale, Locale defaultLocale);

	public void setCommentsCurrentLanguageId(String languageId);

	/**
	 * Sets the localized commentses of this data entry from the map of locales and localized commentses.
	 *
	 * @param commentsMap the locales and localized commentses of this data entry
	 */
	public void setCommentsMap(Map<Locale, String> commentsMap);

	/**
	 * Sets the localized commentses of this data entry from the map of locales and localized commentses, and sets the default locale.
	 *
	 * @param commentsMap the locales and localized commentses of this data entry
	 * @param defaultLocale the default locale
	 */
	public void setCommentsMap(Map<Locale, String> commentsMap,
		Locale defaultLocale);

	/**
	 * Returns the path of this data entry.
	 *
	 * @return the path of this data entry
	 */
	@AutoEscape
	public String getPath();

	/**
	 * Sets the path of this data entry.
	 *
	 * @param path the path of this data entry
	 */
	public void setPath(String path);

	/**
	 * Returns the simulation subject ID of this data entry.
	 *
	 * @return the simulation subject ID of this data entry
	 */
	public long getSimulationSubjectId();

	/**
	 * Sets the simulation subject ID of this data entry.
	 *
	 * @param simulationSubjectId the simulation subject ID of this data entry
	 */
	public void setSimulationSubjectId(long simulationSubjectId);

	/**
	 * Returns the production time of this data entry.
	 *
	 * @return the production time of this data entry
	 */
	public long getProductionTime();

	/**
	 * Sets the production time of this data entry.
	 *
	 * @param productionTime the production time of this data entry
	 */
	public void setProductionTime(long productionTime);

	/**
	 * Returns the view count of this data entry.
	 *
	 * @return the view count of this data entry
	 */
	public long getViewCount();

	/**
	 * Sets the view count of this data entry.
	 *
	 * @param viewCount the view count of this data entry
	 */
	public void setViewCount(long viewCount);

	/**
	 * Returns the download count of this data entry.
	 *
	 * @return the download count of this data entry
	 */
	public long getDownloadCount();

	/**
	 * Sets the download count of this data entry.
	 *
	 * @param downloadCount the download count of this data entry
	 */
	public void setDownloadCount(long downloadCount);

	/**
	 * Returns the last accessed date of this data entry.
	 *
	 * @return the last accessed date of this data entry
	 */
	public Date getLastAccessedDate();

	/**
	 * Sets the last accessed date of this data entry.
	 *
	 * @param lastAccessedDate the last accessed date of this data entry
	 */
	public void setLastAccessedDate(Date lastAccessedDate);

	/**
	 * Returns the file entry ID of this data entry.
	 *
	 * @return the file entry ID of this data entry
	 */
	public long getFileEntryId();

	/**
	 * Sets the file entry ID of this data entry.
	 *
	 * @param fileEntryId the file entry ID of this data entry
	 */
	public void setFileEntryId(long fileEntryId);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public String[] getAvailableLanguageIds();

	public String getDefaultLanguageId();

	public void prepareLocalizedFieldsForImport() throws LocaleException;

	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(com.kisti.osp.icecap.model.DataEntry dataEntry);

	@Override
	public int hashCode();

	@Override
	public CacheModel<com.kisti.osp.icecap.model.DataEntry> toCacheModel();

	@Override
	public com.kisti.osp.icecap.model.DataEntry toEscapedModel();

	@Override
	public com.kisti.osp.icecap.model.DataEntry toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}