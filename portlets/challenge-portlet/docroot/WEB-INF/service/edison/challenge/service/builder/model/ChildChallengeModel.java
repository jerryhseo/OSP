/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package edison.challenge.service.builder.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ChildChallenge service. Represents a row in the &quot;edison_ChildChallenge&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link edison.challenge.service.builder.model.impl.ChildChallengeModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link edison.challenge.service.builder.model.impl.ChildChallengeImpl}.
 * </p>
 *
 * @author kyj
 * @see ChildChallenge
 * @see edison.challenge.service.builder.model.impl.ChildChallengeImpl
 * @see edison.challenge.service.builder.model.impl.ChildChallengeModelImpl
 * @generated
 */
public interface ChildChallengeModel extends BaseModel<ChildChallenge> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a child challenge model instance should use the {@link ChildChallenge} interface instead.
	 */

	/**
	 * Returns the primary key of this child challenge.
	 *
	 * @return the primary key of this child challenge
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this child challenge.
	 *
	 * @param primaryKey the primary key of this child challenge
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the childid of this child challenge.
	 *
	 * @return the childid of this child challenge
	 */
	public long getChildid();

	/**
	 * Sets the childid of this child challenge.
	 *
	 * @param childid the childid of this child challenge
	 */
	public void setChildid(long childid);

	/**
	 * Returns the number of this child challenge.
	 *
	 * @return the number of this child challenge
	 */
	public int getNumber();

	/**
	 * Sets the number of this child challenge.
	 *
	 * @param number the number of this child challenge
	 */
	public void setNumber(int number);

	/**
	 * Returns the presentation day of this child challenge.
	 *
	 * @return the presentation day of this child challenge
	 */
	public Date getPresentationDay();

	/**
	 * Sets the presentation day of this child challenge.
	 *
	 * @param presentationDay the presentation day of this child challenge
	 */
	public void setPresentationDay(Date presentationDay);

	/**
	 * Returns the paper start day of this child challenge.
	 *
	 * @return the paper start day of this child challenge
	 */
	public Date getPaperStartDay();

	/**
	 * Sets the paper start day of this child challenge.
	 *
	 * @param paperStartDay the paper start day of this child challenge
	 */
	public void setPaperStartDay(Date paperStartDay);

	/**
	 * Returns the paper end day of this child challenge.
	 *
	 * @return the paper end day of this child challenge
	 */
	public Date getPaperEndDay();

	/**
	 * Sets the paper end day of this child challenge.
	 *
	 * @param paperEndDay the paper end day of this child challenge
	 */
	public void setPaperEndDay(Date paperEndDay);

	/**
	 * Returns the evaluation start day of this child challenge.
	 *
	 * @return the evaluation start day of this child challenge
	 */
	public Date getEvaluationStartDay();

	/**
	 * Sets the evaluation start day of this child challenge.
	 *
	 * @param evaluationStartDay the evaluation start day of this child challenge
	 */
	public void setEvaluationStartDay(Date evaluationStartDay);

	/**
	 * Returns the evaluation end day of this child challenge.
	 *
	 * @return the evaluation end day of this child challenge
	 */
	public Date getEvaluationEndDay();

	/**
	 * Sets the evaluation end day of this child challenge.
	 *
	 * @param evaluationEndDay the evaluation end day of this child challenge
	 */
	public void setEvaluationEndDay(Date evaluationEndDay);

	/**
	 * Returns the challenge start day of this child challenge.
	 *
	 * @return the challenge start day of this child challenge
	 */
	public Date getChallengeStartDay();

	/**
	 * Sets the challenge start day of this child challenge.
	 *
	 * @param challengeStartDay the challenge start day of this child challenge
	 */
	public void setChallengeStartDay(Date challengeStartDay);

	/**
	 * Returns the challenge end day of this child challenge.
	 *
	 * @return the challenge end day of this child challenge
	 */
	public Date getChallengeEndDay();

	/**
	 * Sets the challenge end day of this child challenge.
	 *
	 * @param challengeEndDay the challenge end day of this child challenge
	 */
	public void setChallengeEndDay(Date challengeEndDay);

	/**
	 * Returns the status of this child challenge.
	 *
	 * @return the status of this child challenge
	 */
	@AutoEscape
	public String getStatus();

	/**
	 * Sets the status of this child challenge.
	 *
	 * @param status the status of this child challenge
	 */
	public void setStatus(String status);

	/**
	 * Returns the challengeid of this child challenge.
	 *
	 * @return the challengeid of this child challenge
	 */
	public long getChallengeid();

	/**
	 * Sets the challengeid of this child challenge.
	 *
	 * @param challengeid the challengeid of this child challenge
	 */
	public void setChallengeid(long challengeid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(
		edison.challenge.service.builder.model.ChildChallenge childChallenge);

	@Override
	public int hashCode();

	@Override
	public CacheModel<edison.challenge.service.builder.model.ChildChallenge> toCacheModel();

	@Override
	public edison.challenge.service.builder.model.ChildChallenge toEscapedModel();

	@Override
	public edison.challenge.service.builder.model.ChildChallenge toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}